if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

/** @license React v16.9.0
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

            ;

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.React = factory());
}(this, (function () { 'use strict';

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.9.0';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
// TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be converted to ReactError during
// build, and in production they will be minified.

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be converted to ReactError during
// build, and in production they will be minified.

function ReactError(error) {
  error.name = 'Invariant Violation';
  return error;
}

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }
    if (condition) {
      return;
    }
    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format);

      // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610
      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};
{
  Object.freeze(emptyObject);
}

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  // If a component has string refs, we will assign a different object later.
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  (function () {
    if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
      {
        throw ReactError(Error('setState(...): takes an object of state variables to update or a function which returns an object of state variables.'));
      }
    }
  })();
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;

/**
 * Convenience component with default shallow equality check for sCU.
 */
function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  // If a component has string refs, we will assign a different object later.
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
objectAssign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };
  {
    Object.seal(refObject);
  }
  return refObject;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  suspense: null
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';
  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');
    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);
        if (match) {
          var pathBeforeSlash = match[1];
          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }
    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }
  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

var Resolved = 1;


function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }
  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }
  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';
    case REACT_PORTAL_TYPE:
      return 'Portal';
    case REACT_PROFILER_TYPE:
      return 'Profiler';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_SUSPENSE_TYPE:
      return 'Suspense';
    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }
  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';
      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';
      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');
      case REACT_MEMO_TYPE:
        return getComponentName(type.type);
      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);
          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }
          break;
        }
    }
  }
  return null;
}

var ReactDebugCurrentFrame = {};

var currentlyValidatingElement = null;

function setCurrentlyValidatingElement(element) {
  {
    currentlyValidatingElement = element;
  }
}

{
  // Stack implementation injected by the current renderer.
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = '';

    // Add an extra top frame while an element is being validated
    if (currentlyValidatingElement) {
      var name = getComponentName(currentlyValidatingElement.type);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
    }

    // Delegate to the injected renderer-specific implementation
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */

var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: objectAssign
};

{
  objectAssign(ReactSharedInternals, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();
    // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown = void 0;
var specialPropRefWarningShown = void 0;

function hasValidRef(config) {
  {
    if (hasOwnProperty$1.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty$1.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */


/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */
function jsxDEV(type, config, maybeKey, source, self) {
  var propName = void 0;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;

  if (hasValidRef(config)) {
    ref = config.ref;
  }

  if (hasValidKey(config)) {
    key = '' + config.key;
  }

  // Remaining properties are added to a new props object
  for (propName in config) {
    if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
      props[propName] = config[propName];
    }
  }

  // intentionally not checking if key was set above
  // this key is higher priority as it's static
  if (maybeKey !== undefined) {
    key = '' + maybeKey;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  if (key || ref) {
    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
    if (key) {
      defineKeyPropWarningGetter(props, displayName);
    }
    if (ref) {
      defineRefPropWarningGetter(props, displayName);
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName = void 0;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }
      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  (function () {
    if (!!(element === null || element === undefined)) {
      {
        throw ReactError(Error('React.cloneElement(...): The argument must be a React element, but you passed ' + element + '.'));
      }
    }
  })();

  var propName = void 0;

  // Original props are copied
  var props = objectAssign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps = void 0;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;
      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }
    }
  }

  if (invokeCallback) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child = void 0;
  var nextName = void 0;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step = void 0;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      (function () {
        {
          {
            throw ReactError(Error('Objects are not valid as a React child (found: ' + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ').' + addendum));
          }
        }
      })();
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
      return c;
    });
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children) {
  return traverseAllChildren(children, function () {
    return null;
  }, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
    return child;
  });
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  (function () {
    if (!isValidElement(children)) {
      {
        throw ReactError(Error('React.Children.only expected to receive a single React element child.'));
      }
    }
  })();
  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };

  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };

  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    };
    // $FlowFixMe: Flow complains about not setting a value, which is intentional here
    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;
            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }
          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;
            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }
          return context.Consumer;
        }
      }
    });
    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function lazy(ctor) {
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _ctor: ctor,
    // React uses these fields to store the result.
    _status: -1,
    _result: null
  };

  {
    // In production, this would just set it on the object.
    var defaultProps = void 0;
    var propTypes = void 0;
    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          defaultProps = newDefaultProps;
          // Match production behavior more closely:
          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          propTypes = newPropTypes;
          // Match production behavior more closely:
          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      !(
      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
    }

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE);
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }
  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;
  (function () {
    if (!(dispatcher !== null)) {
      {
        throw ReactError(Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.'));
      }
    }
  })();
  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();
  {
    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0;

    // TODO: add a more generic warning for invalid values.
    if (Context._context !== undefined) {
      var realContext = Context._context;
      // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.
      if (realContext.Consumer === Context) {
        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }
  return dispatcher.useContext(Context, unstable_observedBits);
}

function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}

function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}

function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}

function useEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, inputs);
}

function useLayoutEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, inputs);
}

function useCallback(callback, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, inputs);
}

function useMemo(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, inputs);
}

function useImperativeHandle(ref, create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, inputs);
}

function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

var emptyObject$1 = {};

function useResponder(responder, listenerProps) {
  var dispatcher = resolveDispatcher();
  {
    if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {
      warning$1(false, 'useResponder: invalid first argument. Expected an event responder, but instead got %s', responder);
      return;
    }
  }
  return dispatcher.useResponder(responder, listenerProps || emptyObject$1);
}

// Within the scope of the callback, mark all updates as being allowed to suspend.
function withSuspenseConfig(scope, config) {
  var previousConfig = ReactCurrentBatchConfig.suspense;
  ReactCurrentBatchConfig.suspense = config === undefined ? null : config;
  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.suspense = previousConfig;
  }
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning$1 = function() {};

{
  var ReactPropTypesSecret = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};

  printWarning$1 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$1(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );

        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$1(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

var checkPropTypes_1 = checkPropTypes;

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

var propTypesMisspellWarningShown = void 0;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';
  }

  setCurrentlyValidatingElement(element);
  {
    warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
  }
  setCurrentlyValidatingElement(null);
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step = void 0;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var type = element.type;
  if (type === null || type === undefined || typeof type === 'string') {
    return;
  }
  var name = getComponentName(type);
  var propTypes = void 0;
  if (typeof type === 'function') {
    propTypes = type.propTypes;
  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
  // Note: Memo only checks outer props here.
  // Inner props are checked in the reconciler.
  type.$$typeof === REACT_MEMO_TYPE)) {
    propTypes = type.propTypes;
  } else {
    return;
  }
  if (propTypes) {
    setCurrentlyValidatingElement(element);
    checkPropTypes_1(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
    setCurrentlyValidatingElement(null);
  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }
  if (typeof type.getDefaultProps === 'function') {
    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  setCurrentlyValidatingElement(fragment);

  var keys = Object.keys(fragment.props);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== 'children' && key !== 'key') {
      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
      break;
    }
  }

  if (fragment.ref !== null) {
    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
  }

  setCurrentlyValidatingElement(null);
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  var validType = isValidElementType(type);

  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(source);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString = void 0;
    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = jsxDEV(type, props, key, source, self);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    var children = props.children;
    if (children !== undefined) {
      if (isStaticChildren) {
        for (var i = 0; i < children.length; i++) {
          validateChildKeys(children[i], type);
        }
      } else {
        validateChildKeys(children, type);
      }
    }
  }

  if (props.key !== undefined) {
    warning$1(false, 'React.jsx: Spreading a key to JSX is a deprecated pattern. ' + 'Explicitly pass a key after spreading props in your JSX call. ' + 'E.g. <ComponentName {...props} key={key} />');
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

// These two functions exist to still get child warnings in dev
// even with the prod transform. This means that jsxDEV is purely
// opt-in behavior for better messages but that we won't stop
// giving you warnings if you use production apis.
function jsxWithValidationStatic(type, props, key) {
  return jsxWithValidation(type, props, key, true);
}

function jsxWithValidationDynamic(type, props, key) {
  return jsxWithValidation(type, props, key, false);
}

function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type);

  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString = void 0;
    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;
  // Legacy hook: remove it
  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

var enableSchedulerDebugging = false;
var enableIsInputPending = false;
var requestIdleCallbackBeforeFirstFrame = false;
var requestTimerEventBeforeFirstFrame = false;
var enableMessageLoopImplementation = false;

// The DOM Scheduler implementation is similar to requestIdleCallback. It
// works by scheduling a requestAnimationFrame, storing the time for the start
// of the frame, then scheduling a postMessage which gets scheduled after paint.
// Within the postMessage handler do as much work as possible until time + frame
// rate. By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

var requestHostCallback = void 0;

var requestHostTimeout = void 0;
var cancelHostTimeout = void 0;
var shouldYieldToHost = void 0;
var requestPaint = void 0;
var getCurrentTime = void 0;
var forceFrameRate = void 0;

if (
// If Scheduler runs in a non-DOM environment, it falls back to a naive
// implementation using setTimeout.
typeof window === 'undefined' ||
// Check if MessageChannel is supported, too.
typeof MessageChannel !== 'function') {
  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
  // fallback to a naive implementation.
  var _callback = null;
  var _timeoutID = null;
  var _flushCallback = function () {
    if (_callback !== null) {
      try {
        var currentTime = getCurrentTime();
        var hasRemainingTime = true;
        _callback(hasRemainingTime, currentTime);
        _callback = null;
      } catch (e) {
        setTimeout(_flushCallback, 0);
        throw e;
      }
    }
  };
  getCurrentTime = function () {
    return Date.now();
  };
  requestHostCallback = function (cb) {
    if (_callback !== null) {
      // Protect against re-entrancy.
      setTimeout(requestHostCallback, 0, cb);
    } else {
      _callback = cb;
      setTimeout(_flushCallback, 0);
    }
  };
  requestHostTimeout = function (cb, ms) {
    _timeoutID = setTimeout(cb, ms);
  };
  cancelHostTimeout = function () {
    clearTimeout(_timeoutID);
  };
  shouldYieldToHost = function () {
    return false;
  };
  requestPaint = forceFrameRate = function () {};
} else {
  // Capture local references to native APIs, in case a polyfill overrides them.
  var performance = window.performance;
  var _Date = window.Date;
  var _setTimeout = window.setTimeout;
  var _clearTimeout = window.clearTimeout;
  var requestAnimationFrame = window.requestAnimationFrame;
  var cancelAnimationFrame = window.cancelAnimationFrame;
  var requestIdleCallback = window.requestIdleCallback;

  if (typeof console !== 'undefined') {
    // TODO: Remove fb.me link
    if (typeof requestAnimationFrame !== 'function') {
      console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
    if (typeof cancelAnimationFrame !== 'function') {
      console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
  }

  var requestIdleCallbackBeforeFirstFrame$1 = requestIdleCallbackBeforeFirstFrame && typeof requestIdleCallback === 'function' && typeof cancelIdleCallback === 'function';

  getCurrentTime = typeof performance === 'object' && typeof performance.now === 'function' ? function () {
    return performance.now();
  } : function () {
    return _Date.now();
  };

  var isRAFLoopRunning = false;
  var isMessageLoopRunning = false;
  var scheduledHostCallback = null;
  var rAFTimeoutID = -1;
  var taskTimeoutID = -1;

  var frameLength = enableMessageLoopImplementation ? // We won't attempt to align with the vsync. Instead we'll yield multiple
  // times per frame, often enough to keep it responsive even at really
  // high frame rates > 120.
  5 : // Use a heuristic to measure the frame rate and yield at the end of the
  // frame. We start out assuming that we run at 30fps but then the
  // heuristic tracking will adjust this value to a faster fps if we get
  // more frequent animation frames.
  33.33;

  var prevRAFTime = -1;
  var prevRAFInterval = -1;
  var frameDeadline = 0;

  var fpsLocked = false;

  // TODO: Make this configurable
  // TODO: Adjust this based on priority?
  var maxFrameLength = 300;
  var needsPaint = false;

  if (enableIsInputPending && navigator !== undefined && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined) {
    var scheduling = navigator.scheduling;
    shouldYieldToHost = function () {
      var currentTime = getCurrentTime();
      if (currentTime >= frameDeadline) {
        // There's no time left in the frame. We may want to yield control of
        // the main thread, so the browser can perform high priority tasks. The
        // main ones are painting and user input. If there's a pending paint or
        // a pending input, then we should yield. But if there's neither, then
        // we can yield less often while remaining responsive. We'll eventually
        // yield regardless, since there could be a pending paint that wasn't
        // accompanied by a call to `requestPaint`, or other main thread tasks
        // like network events.
        if (needsPaint || scheduling.isInputPending()) {
          // There is either a pending paint or a pending input.
          return true;
        }
        // There's no pending input. Only yield if we've reached the max
        // frame length.
        return currentTime >= frameDeadline + maxFrameLength;
      } else {
        // There's still time left in the frame.
        return false;
      }
    };

    requestPaint = function () {
      needsPaint = true;
    };
  } else {
    // `isInputPending` is not available. Since we have no way of knowing if
    // there's pending input, always yield at the end of the frame.
    shouldYieldToHost = function () {
      return getCurrentTime() >= frameDeadline;
    };

    // Since we yield every frame regardless, `requestPaint` has no effect.
    requestPaint = function () {};
  }

  forceFrameRate = function (fps) {
    if (fps < 0 || fps > 125) {
      console.error('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');
      return;
    }
    if (fps > 0) {
      frameLength = Math.floor(1000 / fps);
      fpsLocked = true;
    } else {
      // reset the framerate
      frameLength = 33.33;
      fpsLocked = false;
    }
  };

  var performWorkUntilDeadline = function () {
    if (enableMessageLoopImplementation) {
      if (scheduledHostCallback !== null) {
        var currentTime = getCurrentTime();
        // Yield after `frameLength` ms, regardless of where we are in the vsync
        // cycle. This means there's always time remaining at the beginning of
        // the message event.
        frameDeadline = currentTime + frameLength;
        var hasTimeRemaining = true;
        try {
          var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
          if (!hasMoreWork) {
            isMessageLoopRunning = false;
            scheduledHostCallback = null;
          } else {
            // If there's more work, schedule the next message event at the end
            // of the preceding one.
            port.postMessage(null);
          }
        } catch (error) {
          // If a scheduler task throws, exit the current browser task so the
          // error can be observed.
          port.postMessage(null);
          throw error;
        }
      }
      // Yielding to the browser will give it a chance to paint, so we can
      // reset this.
      needsPaint = false;
    } else {
      if (scheduledHostCallback !== null) {
        var _currentTime = getCurrentTime();
        var _hasTimeRemaining = frameDeadline - _currentTime > 0;
        try {
          var _hasMoreWork = scheduledHostCallback(_hasTimeRemaining, _currentTime);
          if (!_hasMoreWork) {
            scheduledHostCallback = null;
          }
        } catch (error) {
          // If a scheduler task throws, exit the current browser task so the
          // error can be observed, and post a new task as soon as possible
          // so we can continue where we left off.
          port.postMessage(null);
          throw error;
        }
      }
      // Yielding to the browser will give it a chance to paint, so we can
      // reset this.
      needsPaint = false;
    }
  };

  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  var onAnimationFrame = function (rAFTime) {
    if (scheduledHostCallback === null) {
      // No scheduled work. Exit.
      prevRAFTime = -1;
      prevRAFInterval = -1;
      isRAFLoopRunning = false;
      return;
    }

    // Eagerly schedule the next animation callback at the beginning of the
    // frame. If the scheduler queue is not empty at the end of the frame, it
    // will continue flushing inside that callback. If the queue *is* empty,
    // then it will exit immediately. Posting the callback at the start of the
    // frame ensures it's fired within the earliest possible frame. If we
    // waited until the end of the frame to post the callback, we risk the
    // browser skipping a frame and not firing the callback until the frame
    // after that.
    isRAFLoopRunning = true;
    requestAnimationFrame(function (nextRAFTime) {
      _clearTimeout(rAFTimeoutID);
      onAnimationFrame(nextRAFTime);
    });

    // requestAnimationFrame is throttled when the tab is backgrounded. We
    // don't want to stop working entirely. So we'll fallback to a timeout loop.
    // TODO: Need a better heuristic for backgrounded work.
    var onTimeout = function () {
      frameDeadline = getCurrentTime() + frameLength / 2;
      performWorkUntilDeadline();
      rAFTimeoutID = _setTimeout(onTimeout, frameLength * 3);
    };
    rAFTimeoutID = _setTimeout(onTimeout, frameLength * 3);

    if (prevRAFTime !== -1 &&
    // Make sure this rAF time is different from the previous one. This check
    // could fail if two rAFs fire in the same frame.
    rAFTime - prevRAFTime > 0.1) {
      var rAFInterval = rAFTime - prevRAFTime;
      if (!fpsLocked && prevRAFInterval !== -1) {
        // We've observed two consecutive frame intervals. We'll use this to
        // dynamically adjust the frame rate.
        //
        // If one frame goes long, then the next one can be short to catch up.
        // If two frames are short in a row, then that's an indication that we
        // actually have a higher frame rate than what we're currently
        // optimizing. For example, if we're running on 120hz display or 90hz VR
        // display. Take the max of the two in case one of them was an anomaly
        // due to missed frame deadlines.
        if (rAFInterval < frameLength && prevRAFInterval < frameLength) {
          frameLength = rAFInterval < prevRAFInterval ? prevRAFInterval : rAFInterval;
          if (frameLength < 8.33) {
            // Defensive coding. We don't support higher frame rates than 120hz.
            // If the calculated frame length gets lower than 8, it is probably
            // a bug.
            frameLength = 8.33;
          }
        }
      }
      prevRAFInterval = rAFInterval;
    }
    prevRAFTime = rAFTime;
    frameDeadline = rAFTime + frameLength;

    // We use the postMessage trick to defer idle work until after the repaint.
    port.postMessage(null);
  };

  requestHostCallback = function (callback) {
    scheduledHostCallback = callback;
    if (enableMessageLoopImplementation) {
      if (!isMessageLoopRunning) {
        isMessageLoopRunning = true;
        port.postMessage(null);
      }
    } else {
      if (!isRAFLoopRunning) {
        // Start a rAF loop.
        isRAFLoopRunning = true;
        requestAnimationFrame(function (rAFTime) {
          if (requestIdleCallbackBeforeFirstFrame$1) {
            cancelIdleCallback(idleCallbackID);
          }
          if (requestTimerEventBeforeFirstFrame) {
            _clearTimeout(idleTimeoutID);
          }
          onAnimationFrame(rAFTime);
        });

        // If we just missed the last vsync, the next rAF might not happen for
        // another frame. To claim as much idle time as possible, post a
        // callback with `requestIdleCallback`, which should fire if there's
        // idle time left in the frame.
        //
        // This should only be an issue for the first rAF in the loop;
        // subsequent rAFs are scheduled at the beginning of the
        // preceding frame.
        var idleCallbackID = void 0;
        if (requestIdleCallbackBeforeFirstFrame$1) {
          idleCallbackID = requestIdleCallback(function onIdleCallbackBeforeFirstFrame() {
            if (requestTimerEventBeforeFirstFrame) {
              _clearTimeout(idleTimeoutID);
            }
            frameDeadline = getCurrentTime() + frameLength;
            performWorkUntilDeadline();
          });
        }
        // Alternate strategy to address the same problem. Scheduler a timer
        // with no delay. If this fires before the rAF, that likely indicates
        // that there's idle time before the next vsync. This isn't always the
        // case, but we'll be aggressive and assume it is, as a trade off to
        // prevent idle periods.
        var idleTimeoutID = void 0;
        if (requestTimerEventBeforeFirstFrame) {
          idleTimeoutID = _setTimeout(function onTimerEventBeforeFirstFrame() {
            if (requestIdleCallbackBeforeFirstFrame$1) {
              cancelIdleCallback(idleCallbackID);
            }
            frameDeadline = getCurrentTime() + frameLength;
            performWorkUntilDeadline();
          }, 0);
        }
      }
    }
  };

  requestHostTimeout = function (callback, ms) {
    taskTimeoutID = _setTimeout(function () {
      callback(getCurrentTime());
    }, ms);
  };

  cancelHostTimeout = function () {
    _clearTimeout(taskTimeoutID);
    taskTimeoutID = -1;
  };
}

/* eslint-disable no-var */

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var maxSigned31BitInt = 1073741823;

// Times out immediately
var IMMEDIATE_PRIORITY_TIMEOUT = -1;
// Eventually times out
var USER_BLOCKING_PRIORITY = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000;
// Never times out
var IDLE_PRIORITY = maxSigned31BitInt;

// Tasks are stored as a circular, doubly linked list.
var firstTask = null;
var firstDelayedTask = null;

// Pausing the scheduler is useful for debugging.
var isSchedulerPaused = false;

var currentTask = null;
var currentPriorityLevel = NormalPriority;

// This is set while performing work, to prevent re-entrancy.
var isPerformingWork = false;

var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false;

function scheduler_flushTaskAtPriority_Immediate(callback, didTimeout) {
  return callback(didTimeout);
}
function scheduler_flushTaskAtPriority_UserBlocking(callback, didTimeout) {
  return callback(didTimeout);
}
function scheduler_flushTaskAtPriority_Normal(callback, didTimeout) {
  return callback(didTimeout);
}
function scheduler_flushTaskAtPriority_Low(callback, didTimeout) {
  return callback(didTimeout);
}
function scheduler_flushTaskAtPriority_Idle(callback, didTimeout) {
  return callback(didTimeout);
}

function flushTask(task, currentTime) {
  // Remove the task from the list before calling the callback. That way the
  // list is in a consistent state even if the callback throws.
  var next = task.next;
  if (next === task) {
    // This is the only scheduled task. Clear the list.
    firstTask = null;
  } else {
    // Remove the task from its position in the list.
    if (task === firstTask) {
      firstTask = next;
    }
    var previous = task.previous;
    previous.next = next;
    next.previous = previous;
  }
  task.next = task.previous = null;

  // Now it's safe to execute the task.
  var callback = task.callback;
  var previousPriorityLevel = currentPriorityLevel;
  var previousTask = currentTask;
  currentPriorityLevel = task.priorityLevel;
  currentTask = task;
  var continuationCallback;
  try {
    var didUserCallbackTimeout = task.expirationTime <= currentTime;
    // Add an extra function to the callstack. Profiling tools can use this
    // to infer the priority of work that appears higher in the stack.
    switch (currentPriorityLevel) {
      case ImmediatePriority:
        continuationCallback = scheduler_flushTaskAtPriority_Immediate(callback, didUserCallbackTimeout);
        break;
      case UserBlockingPriority:
        continuationCallback = scheduler_flushTaskAtPriority_UserBlocking(callback, didUserCallbackTimeout);
        break;
      case NormalPriority:
        continuationCallback = scheduler_flushTaskAtPriority_Normal(callback, didUserCallbackTimeout);
        break;
      case LowPriority:
        continuationCallback = scheduler_flushTaskAtPriority_Low(callback, didUserCallbackTimeout);
        break;
      case IdlePriority:
        continuationCallback = scheduler_flushTaskAtPriority_Idle(callback, didUserCallbackTimeout);
        break;
    }
  } catch (error) {
    throw error;
  } finally {
    currentPriorityLevel = previousPriorityLevel;
    currentTask = previousTask;
  }

  // A callback may return a continuation. The continuation should be scheduled
  // with the same priority and expiration as the just-finished callback.
  if (typeof continuationCallback === 'function') {
    var expirationTime = task.expirationTime;
    var continuationTask = task;
    continuationTask.callback = continuationCallback;

    // Insert the new callback into the list, sorted by its timeout. This is
    // almost the same as the code in `scheduleCallback`, except the callback
    // is inserted into the list *before* callbacks of equal timeout instead
    // of after.
    if (firstTask === null) {
      // This is the first callback in the list.
      firstTask = continuationTask.next = continuationTask.previous = continuationTask;
    } else {
      var nextAfterContinuation = null;
      var t = firstTask;
      do {
        if (expirationTime <= t.expirationTime) {
          // This task times out at or after the continuation. We will insert
          // the continuation *before* this task.
          nextAfterContinuation = t;
          break;
        }
        t = t.next;
      } while (t !== firstTask);
      if (nextAfterContinuation === null) {
        // No equal or lower priority task was found, which means the new task
        // is the lowest priority task in the list.
        nextAfterContinuation = firstTask;
      } else if (nextAfterContinuation === firstTask) {
        // The new task is the highest priority task in the list.
        firstTask = continuationTask;
      }

      var _previous = nextAfterContinuation.previous;
      _previous.next = nextAfterContinuation.previous = continuationTask;
      continuationTask.next = nextAfterContinuation;
      continuationTask.previous = _previous;
    }
  }
}

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  if (firstDelayedTask !== null && firstDelayedTask.startTime <= currentTime) {
    do {
      var task = firstDelayedTask;
      var next = task.next;
      if (task === next) {
        firstDelayedTask = null;
      } else {
        firstDelayedTask = next;
        var previous = task.previous;
        previous.next = next;
        next.previous = previous;
      }
      task.next = task.previous = null;
      insertScheduledTask(task, task.expirationTime);
    } while (firstDelayedTask !== null && firstDelayedTask.startTime <= currentTime);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (firstTask !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else if (firstDelayedTask !== null) {
      requestHostTimeout(handleTimeout, firstDelayedTask.startTime - currentTime);
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {
  // Exit right away if we're currently paused
  if (enableSchedulerDebugging && isSchedulerPaused) {
    return;
  }

  // We'll need a host callback the next time work is scheduled.
  isHostCallbackScheduled = false;
  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  var currentTime = initialTime;
  advanceTimers(currentTime);

  isPerformingWork = true;
  try {
    if (!hasTimeRemaining) {
      // Flush all the expired callbacks without yielding.
      // TODO: Split flushWork into two separate functions instead of using
      // a boolean argument?
      while (firstTask !== null && firstTask.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused)) {
        flushTask(firstTask, currentTime);
        currentTime = getCurrentTime();
        advanceTimers(currentTime);
      }
    } else {
      // Keep flushing callbacks until we run out of time in the frame.
      if (firstTask !== null) {
        do {
          flushTask(firstTask, currentTime);
          currentTime = getCurrentTime();
          advanceTimers(currentTime);
        } while (firstTask !== null && !shouldYieldToHost() && !(enableSchedulerDebugging && isSchedulerPaused));
      }
    }
    // Return whether there's additional work
    if (firstTask !== null) {
      return true;
    } else {
      if (firstDelayedTask !== null) {
        requestHostTimeout(handleTimeout, firstDelayedTask.startTime - currentTime);
      }
      return false;
    }
  } finally {
    isPerformingWork = false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;
    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;
  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;
    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function timeoutForPriorityLevel(priorityLevel) {
  switch (priorityLevel) {
    case ImmediatePriority:
      return IMMEDIATE_PRIORITY_TIMEOUT;
    case UserBlockingPriority:
      return USER_BLOCKING_PRIORITY;
    case IdlePriority:
      return IDLE_PRIORITY;
    case LowPriority:
      return LOW_PRIORITY_TIMEOUT;
    case NormalPriority:
    default:
      return NORMAL_PRIORITY_TIMEOUT;
  }
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = getCurrentTime();

  var startTime;
  var timeout;
  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;
    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }
    timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);
  } else {
    timeout = timeoutForPriorityLevel(priorityLevel);
    startTime = currentTime;
  }

  var expirationTime = startTime + timeout;

  var newTask = {
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    next: null,
    previous: null
  };

  if (startTime > currentTime) {
    // This is a delayed task.
    insertDelayedTask(newTask, startTime);
    if (firstTask === null && firstDelayedTask === newTask) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      }
      // Schedule a timeout.
      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    insertScheduledTask(newTask, expirationTime);
    // Schedule a host callback, if needed. If we're already performing work,
    // wait until the next time we yield.
    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function insertScheduledTask(newTask, expirationTime) {
  // Insert the new task into the list, ordered first by its timeout, then by
  // insertion. So the new task is inserted after any other task the
  // same timeout
  if (firstTask === null) {
    // This is the first task in the list.
    firstTask = newTask.next = newTask.previous = newTask;
  } else {
    var next = null;
    var task = firstTask;
    do {
      if (expirationTime < task.expirationTime) {
        // The new task times out before this one.
        next = task;
        break;
      }
      task = task.next;
    } while (task !== firstTask);

    if (next === null) {
      // No task with a later timeout was found, which means the new task has
      // the latest timeout in the list.
      next = firstTask;
    } else if (next === firstTask) {
      // The new task has the earliest expiration in the entire list.
      firstTask = newTask;
    }

    var previous = next.previous;
    previous.next = next.previous = newTask;
    newTask.next = next;
    newTask.previous = previous;
  }
}

function insertDelayedTask(newTask, startTime) {
  // Insert the new task into the list, ordered by its start time.
  if (firstDelayedTask === null) {
    // This is the first task in the list.
    firstDelayedTask = newTask.next = newTask.previous = newTask;
  } else {
    var next = null;
    var task = firstDelayedTask;
    do {
      if (startTime < task.startTime) {
        // The new task times out before this one.
        next = task;
        break;
      }
      task = task.next;
    } while (task !== firstDelayedTask);

    if (next === null) {
      // No task with a later timeout was found, which means the new task has
      // the latest timeout in the list.
      next = firstDelayedTask;
    } else if (next === firstDelayedTask) {
      // The new task has the earliest expiration in the entire list.
      firstDelayedTask = newTask;
    }

    var previous = next.previous;
    previous.next = next.previous = newTask;
    newTask.next = next;
    newTask.previous = previous;
  }
}

function unstable_pauseExecution() {
  isSchedulerPaused = true;
}

function unstable_continueExecution() {
  isSchedulerPaused = false;
  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return firstTask;
}

function unstable_cancelCallback(task) {
  var next = task.next;
  if (next === null) {
    // Already cancelled.
    return;
  }

  if (task === next) {
    if (task === firstTask) {
      firstTask = null;
    } else if (task === firstDelayedTask) {
      firstDelayedTask = null;
    }
  } else {
    if (task === firstTask) {
      firstTask = next;
    } else if (task === firstDelayedTask) {
      firstDelayedTask = next;
    }
    var previous = task.previous;
    previous.next = next;
    next.previous = previous;
  }

  task.next = task.previous = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

function unstable_shouldYield() {
  var currentTime = getCurrentTime();
  advanceTimers(currentTime);
  return currentTask !== null && firstTask !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();
}

var unstable_requestPaint = requestPaint;



var Scheduler = Object.freeze({
	unstable_ImmediatePriority: ImmediatePriority,
	unstable_UserBlockingPriority: UserBlockingPriority,
	unstable_NormalPriority: NormalPriority,
	unstable_IdlePriority: IdlePriority,
	unstable_LowPriority: LowPriority,
	unstable_runWithPriority: unstable_runWithPriority,
	unstable_next: unstable_next,
	unstable_scheduleCallback: unstable_scheduleCallback,
	unstable_cancelCallback: unstable_cancelCallback,
	unstable_wrapCallback: unstable_wrapCallback,
	unstable_getCurrentPriorityLevel: unstable_getCurrentPriorityLevel,
	unstable_shouldYield: unstable_shouldYield,
	unstable_requestPaint: unstable_requestPaint,
	unstable_continueExecution: unstable_continueExecution,
	unstable_pauseExecution: unstable_pauseExecution,
	unstable_getFirstCallbackNode: unstable_getFirstCallbackNode,
	get unstable_now () { return getCurrentTime; },
	get unstable_forceFrameRate () { return forceFrameRate; }
});

// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:


// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.


// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


// Gather advanced timing metrics for Profiler subtrees.


// Trace which interactions trigger each commit.
var enableSchedulerTracing = true;

// Only used in www builds.
 // TODO: true? Here it might just be false.

// Only used in www builds.


// Only used in www builds.


// Disable javascript: URL strings in href for XSS protection.


// React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties


// These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.




// See https://github.com/react-native-community/discussions-and-proposals/issues/72 for more information
// This is a flag so we can fix warnings in RN core before turning it on


// Experimental React Flare event system and event components support.
var enableFlareAPI = false;

// Experimental Host Component support.
var enableFundamentalAPI = false;

// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107
var enableJSXTransformAPI = false;

// We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a sync mode compatible version

// Temporary flag to revert the fix in #15650


// For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.


// Changes priority of some events like mousemove to user-blocking priority,
// but without making them discrete. The flag exists in case it causes
// starvation problems.


// Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.


// Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

var DEFAULT_THREAD_ID = 0;

// Counters used to generate unique IDs.
var interactionIDCounter = 0;
var threadIDCounter = 0;

// Set of currently traced interactions.
// Interactions "stack"–
// Meaning that newly traced interactions are appended to the previously active set.
// When an interaction goes out of scope, the previous set (if any) is restored.
var interactionsRef = null;

// Listener(s) to notify when interactions begin and end.
var subscriberRef = null;

if (enableSchedulerTracing) {
  interactionsRef = {
    current: new Set()
  };
  subscriberRef = {
    current: null
  };
}

function unstable_clear(callback) {
  if (!enableSchedulerTracing) {
    return callback();
  }

  var prevInteractions = interactionsRef.current;
  interactionsRef.current = new Set();

  try {
    return callback();
  } finally {
    interactionsRef.current = prevInteractions;
  }
}

function unstable_getCurrent() {
  if (!enableSchedulerTracing) {
    return null;
  } else {
    return interactionsRef.current;
  }
}

function unstable_getThreadID() {
  return ++threadIDCounter;
}

function unstable_trace(name, timestamp, callback) {
  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback();
  }

  var interaction = {
    __count: 1,
    id: interactionIDCounter++,
    name: name,
    timestamp: timestamp
  };

  var prevInteractions = interactionsRef.current;

  // Traced interactions should stack/accumulate.
  // To do that, clone the current interactions.
  // The previous set will be restored upon completion.
  var interactions = new Set(prevInteractions);
  interactions.add(interaction);
  interactionsRef.current = interactions;

  var subscriber = subscriberRef.current;
  var returnValue = void 0;

  try {
    if (subscriber !== null) {
      subscriber.onInteractionTraced(interaction);
    }
  } finally {
    try {
      if (subscriber !== null) {
        subscriber.onWorkStarted(interactions, threadID);
      }
    } finally {
      try {
        returnValue = callback();
      } finally {
        interactionsRef.current = prevInteractions;

        try {
          if (subscriber !== null) {
            subscriber.onWorkStopped(interactions, threadID);
          }
        } finally {
          interaction.__count--;

          // If no async work was scheduled for this interaction,
          // Notify subscribers that it's completed.
          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        }
      }
    }
  }

  return returnValue;
}

function unstable_wrap(callback) {
  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback;
  }

  var wrappedInteractions = interactionsRef.current;

  var subscriber = subscriberRef.current;
  if (subscriber !== null) {
    subscriber.onWorkScheduled(wrappedInteractions, threadID);
  }

  // Update the pending async work count for the current interactions.
  // Update after calling subscribers in case of error.
  wrappedInteractions.forEach(function (interaction) {
    interaction.__count++;
  });

  var hasRun = false;

  function wrapped() {
    var prevInteractions = interactionsRef.current;
    interactionsRef.current = wrappedInteractions;

    subscriber = subscriberRef.current;

    try {
      var returnValue = void 0;

      try {
        if (subscriber !== null) {
          subscriber.onWorkStarted(wrappedInteractions, threadID);
        }
      } finally {
        try {
          returnValue = callback.apply(undefined, arguments);
        } finally {
          interactionsRef.current = prevInteractions;

          if (subscriber !== null) {
            subscriber.onWorkStopped(wrappedInteractions, threadID);
          }
        }
      }

      return returnValue;
    } finally {
      if (!hasRun) {
        // We only expect a wrapped function to be executed once,
        // But in the event that it's executed more than once–
        // Only decrement the outstanding interaction counts once.
        hasRun = true;

        // Update pending async counts for all wrapped interactions.
        // If this was the last scheduled async work for any of them,
        // Mark them as completed.
        wrappedInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        });
      }
    }
  }

  wrapped.cancel = function cancel() {
    subscriber = subscriberRef.current;

    try {
      if (subscriber !== null) {
        subscriber.onWorkCanceled(wrappedInteractions, threadID);
      }
    } finally {
      // Update pending async counts for all wrapped interactions.
      // If this was the last scheduled async work for any of them,
      // Mark them as completed.
      wrappedInteractions.forEach(function (interaction) {
        interaction.__count--;

        if (subscriber && interaction.__count === 0) {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        }
      });
    }
  };

  return wrapped;
}

var subscribers = null;
if (enableSchedulerTracing) {
  subscribers = new Set();
}

function unstable_subscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      subscriberRef.current = {
        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
        onInteractionTraced: onInteractionTraced,
        onWorkCanceled: onWorkCanceled,
        onWorkScheduled: onWorkScheduled,
        onWorkStarted: onWorkStarted,
        onWorkStopped: onWorkStopped
      };
    }
  }
}

function unstable_unsubscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.delete(subscriber);

    if (subscribers.size === 0) {
      subscriberRef.current = null;
    }
  }
}

function onInteractionTraced(interaction) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionTraced(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onInteractionScheduledWorkCompleted(interaction) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionScheduledWorkCompleted(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkScheduled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkScheduled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStarted(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStarted(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStopped(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStopped(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkCanceled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkCanceled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}



var SchedulerTracing = Object.freeze({
	get __interactionsRef () { return interactionsRef; },
	get __subscriberRef () { return subscriberRef; },
	unstable_clear: unstable_clear,
	unstable_getCurrent: unstable_getCurrent,
	unstable_getThreadID: unstable_getThreadID,
	unstable_trace: unstable_trace,
	unstable_wrap: unstable_wrap,
	unstable_subscribe: unstable_subscribe,
	unstable_unsubscribe: unstable_unsubscribe
});

var ReactSharedInternals$2 = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: objectAssign
};

{
  objectAssign(ReactSharedInternals$2, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

// Re-export the schedule API(s) for UMD bundles.
// This avoids introducing a dependency on a new UMD global in a minor update,
// Since that would be a breaking change (e.g. for all existing CodeSandboxes).
// This re-export is only required for UMD bundles;
// CJS bundles use the shared NPM package.
objectAssign(ReactSharedInternals$2, {
  Scheduler: Scheduler,
  SchedulerTracing: SchedulerTracing
});

var hasBadMapPolyfill = void 0;

{
  hasBadMapPolyfill = false;
  try {
    var frozenObject = Object.freeze({});
    var testMap = new Map([[frozenObject, null]]);
    var testSet = new Set([frozenObject]);
    // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.
    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

function createFundamentalComponent(impl) {
  // We use responder as a Map key later on. When we have a bad
  // polyfill, then we can't use it as a key as the polyfill tries
  // to add a property to the object.
  if (true && !hasBadMapPolyfill) {
    Object.freeze(impl);
  }
  var fundamantalComponent = {
    $$typeof: REACT_FUNDAMENTAL_TYPE,
    impl: impl
  };
  {
    Object.freeze(fundamantalComponent);
  }
  return fundamantalComponent;
}

function createEventResponder(displayName, responderConfig) {
  var getInitialState = responderConfig.getInitialState,
      onEvent = responderConfig.onEvent,
      onMount = responderConfig.onMount,
      onUnmount = responderConfig.onUnmount,
      onOwnershipChange = responderConfig.onOwnershipChange,
      onRootEvent = responderConfig.onRootEvent,
      rootEventTypes = responderConfig.rootEventTypes,
      targetEventTypes = responderConfig.targetEventTypes;

  var eventResponder = {
    $$typeof: REACT_RESPONDER_TYPE,
    displayName: displayName,
    getInitialState: getInitialState || null,
    onEvent: onEvent || null,
    onMount: onMount || null,
    onOwnershipChange: onOwnershipChange || null,
    onRootEvent: onRootEvent || null,
    onUnmount: onUnmount || null,
    rootEventTypes: rootEventTypes || null,
    targetEventTypes: targetEventTypes || null
  };
  // We use responder as a Map key later on. When we have a bad
  // polyfill, then we can't use it as a key as the polyfill tries
  // to add a property to the object.
  if (true && !hasBadMapPolyfill) {
    Object.freeze(eventResponder);
  }
  return eventResponder;
}

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,

  createContext: createContext,
  forwardRef: forwardRef,
  lazy: lazy,
  memo: memo,

  useCallback: useCallback,
  useContext: useContext,
  useEffect: useEffect,
  useImperativeHandle: useImperativeHandle,
  useDebugValue: useDebugValue,
  useLayoutEffect: useLayoutEffect,
  useMemo: useMemo,
  useReducer: useReducer,
  useRef: useRef,
  useState: useState,

  Fragment: REACT_FRAGMENT_TYPE,
  Profiler: REACT_PROFILER_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  Suspense: REACT_SUSPENSE_TYPE,
  unstable_SuspenseList: REACT_SUSPENSE_LIST_TYPE,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  unstable_withSuspenseConfig: withSuspenseConfig,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals$2
};

if (enableFlareAPI) {
  React.unstable_useResponder = useResponder;
  React.unstable_createResponder = createEventResponder;
}

if (enableFundamentalAPI) {
  React.unstable_createFundamental = createFundamentalComponent;
}

// Note: some APIs are added with feature flags.
// Make sure that stable builds for open source
// don't modify the React object to avoid deopts.
// Also let's not expose their names in stable builds.

if (enableJSXTransformAPI) {
  {
    React.jsxDEV = jsxWithValidation;
    React.jsx = jsxWithValidationDynamic;
    React.jsxs = jsxWithValidationStatic;
  }
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3.default || React$3;

return react;

})));

/** @license React v16.9.0
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

            ;

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) :
	typeof define === 'function' && define.amd ? define(['react'], factory) :
	(global.ReactDOM = factory(global.React));
}(this, (function (React) { 'use strict';

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be converted to ReactError during
// build, and in production they will be minified.

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be converted to ReactError during
// build, and in production they will be minified.

function ReactError(error) {
  error.name = 'Invariant Violation';
  return error;
}

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

(function () {
  if (!React) {
    {
      throw ReactError(Error('ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.'));
    }
  }
})();

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    (function () {
      if (!(pluginIndex > -1)) {
        {
          throw ReactError(Error('EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `' + pluginName + '`.'));
        }
      }
    })();
    if (plugins[pluginIndex]) {
      continue;
    }
    (function () {
      if (!pluginModule.extractEvents) {
        {
          throw ReactError(Error('EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `' + pluginName + '` does not.'));
        }
      }
    })();
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      (function () {
        if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {
          {
            throw ReactError(Error('EventPluginRegistry: Failed to publish event `' + eventName + '` for plugin `' + pluginName + '`.'));
          }
        }
      })();
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  (function () {
    if (!!eventNameDispatchConfigs.hasOwnProperty(eventName)) {
      {
        throw ReactError(Error('EventPluginHub: More than one plugin attempted to publish the same event name, `' + eventName + '`.'));
      }
    }
  })();
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  (function () {
    if (!!registrationNameModules[registrationName]) {
      {
        throw ReactError(Error('EventPluginHub: More than one plugin attempted to publish the same registration name, `' + registrationName + '`.'));
      }
    }
  })();
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  (function () {
    if (!!eventPluginOrder) {
      {
        throw ReactError(Error('EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.'));
      }
    }
  })();
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      (function () {
        if (!!namesToPlugins[pluginName]) {
          {
            throw ReactError(Error('EventPluginRegistry: Cannot inject two different event plugins using the same name, `' + pluginName + '`.'));
          }
        }
      })();
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      (function () {
        if (!(typeof document !== 'undefined')) {
          {
            throw ReactError(Error('The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.'));
          }
        }
      })();
      var evt = document.createEvent('Event');

      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.
      var windowEvent = window.event;

      // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688
      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);

        // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.
        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }

        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {
              // Ignore.
            }
          }
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        this.onError(error);
      }

      // Remove our event listeners
      window.removeEventListener('error', handleWindowError);
    };

    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

// Used by Fiber to simulate a try-catch.
var hasError = false;
var caughtError = null;

// Used by event system to capture/rethrow the first error.
var hasRethrowError = false;
var rethrowError = null;

var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};

/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */
function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}

/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */
function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);
  if (hasError) {
    var error = clearCaughtError();
    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}

/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */
function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}

function hasCaughtError() {
  return hasError;
}

function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    (function () {
      {
        {
          throw ReactError(Error('clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
  }
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }
    if (condition) {
      return;
    }
    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format);

      // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610
      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
  getInstanceFromNode = getInstanceFromNodeImpl;
  getNodeFromInstance = getNodeFromInstanceImpl;
  {
    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
  }
}

var validateEventDispatches = void 0;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  (function () {
    if (!(next != null)) {
      {
        throw ReactError(Error('accumulateInto(...): Accumulated items must not be null or undefined.'));
      }
    }
  })();

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function (event) {
  if (event) {
    executeDispatchesInOrder(event);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e);
};

function runEventsInBatch(events) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  }

  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  (function () {
    if (!!eventQueue) {
      {
        throw ReactError(Error('processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.'));
      }
    }
  })();
  // This would be a good time to rethrow if any of the event handlers threw.
  rethrowCaughtError();
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener = void 0;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  (function () {
    if (!(!listener || typeof listener === 'function')) {
      {
        throw ReactError(Error('Expected `' + registrationName + '` listener to be a function, instead got a value of `' + typeof listener + '` type.'));
      }
    }
  })();
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = null;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventsInBatch(events);
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedSuspenseComponent = 18;
var SuspenseListComponent = 19;
var FundamentalComponent = 20;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  while (!node[internalInstanceKey]) {
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }

  return null;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  (function () {
    {
      {
        throw ReactError(Error('getNodeFromInstance: Invalid argument.'));
      }
    }
  })();
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

function getParent(inst) {
  do {
    inst = inst.return;
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */


/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i = void 0;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}



function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

// Do not use the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)

function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}

function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */
var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

// List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */

var root = null;
var startText = null;
var fallbackText = null;

function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}

function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}

function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start = void 0;
  var startValue = startText;
  var startLength = startValue.length;
  var end = void 0;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}

function getText() {
  if ('value' in root) {
    return root.value;
  }
  return root.textContent;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var _assign = ReactInternals.assign;

/* eslint valid-typeof: 0 */

var EVENT_POOL_SIZE = 10;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: function () {
    return null;
  },
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
}

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
    delete this.isDefaultPrevented;
    delete this.isPropagationStopped;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = functionThatReturnsTrue;
  } else {
    this.isDefaultPrevented = functionThatReturnsFalse;
  }
  this.isPropagationStopped = functionThatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = functionThatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = functionThatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = functionThatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: functionThatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    this.dispatchConfig = null;
    this._targetInst = null;
    this.nativeEvent = null;
    this.isDefaultPrevented = functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    this._dispatchListeners = null;
    this._dispatchInstances = null;
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 */
SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }
  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);

  return Class;
};

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  (function () {
    if (!(event instanceof EventConstructor)) {
      {
        throw ReactError(Error('Trying to release an event instance into a pool of a different type.'));
      }
    }
  })();
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var SyntheticCompositionEvent = SyntheticEvent.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var SyntheticInputEvent = SyntheticEvent.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode;

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes.compositionStart;
    case TOP_COMPOSITION_END:
      return eventTypes.compositionEnd;
    case TOP_COMPOSITION_UPDATE:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType = void 0;
  var fallbackData = void 0;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);
    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case TOP_COMPOSITION_END:
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars = void 0;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

// Use to restore controlled state after a change event has fired.

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  (function () {
    if (!(typeof restoreImpl === 'function')) {
      {
        throw ReactError(Error('setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  restoreImpl(internalInstance.stateNode, internalInstance.type, props);
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var enableUserTimingAPI = true;

// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
var debugRenderPhaseSideEffects = false;

// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:
var debugRenderPhaseSideEffectsForStrictMode = true;

// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.
var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
var warnAboutDeprecatedLifecycles = true;

// Gather advanced timing metrics for Profiler subtrees.
var enableProfilerTimer = true;

// Trace which interactions trigger each commit.
var enableSchedulerTracing = true;

// Only used in www builds.
var enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.

// Only used in www builds.


// Only used in www builds.


// Disable javascript: URL strings in href for XSS protection.
var disableJavaScriptURLs = false;

// React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties
var disableInputAttributeSyncing = false;

// These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
var enableStableConcurrentModeAPIs = false;

var warnAboutShorthandPropertyCollision = false;

// See https://github.com/react-native-community/discussions-and-proposals/issues/72 for more information
// This is a flag so we can fix warnings in RN core before turning it on


// Experimental React Flare event system and event components support.
var enableFlareAPI = false;

// Experimental Host Component support.
var enableFundamentalAPI = false;

// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107


// We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a sync mode compatible version
var warnAboutUnmockedScheduler = false;
// Temporary flag to revert the fix in #15650
var revertPassiveEffectsChange = false;

// For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.
var flushSuspenseFallbacksInTests = true;

// Changes priority of some events like mousemove to user-blocking priority,
// but without making them discrete. The flag exists in case it causes
// starvation problems.
var enableUserBlockingEvents = false;

// Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
var enableSuspenseCallback = false;

// Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md
var warnAboutDefaultPropsOnFunctionComponents = false;

var disableLegacyContext = false;

var disableSchedulerTimeoutBasedOnReactExpirationTime = false;

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};
var discreteUpdatesImpl = function (fn, a, b, c) {
  return fn(a, b, c);
};
var flushDiscreteUpdatesImpl = function () {};
var batchedEventUpdatesImpl = batchedUpdatesImpl;

var isInsideEventHandler = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();
  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    flushDiscreteUpdatesImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, bookkeeping) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }
  isInsideEventHandler = true;
  try {
    return batchedUpdatesImpl(fn, bookkeeping);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
}

function batchedEventUpdates(fn, a, b) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }
  isInsideEventHandler = true;
  try {
    return batchedEventUpdatesImpl(fn, a, b);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
}

function discreteUpdates(fn, a, b, c) {
  var prevIsInsideEventHandler = isInsideEventHandler;
  isInsideEventHandler = true;
  try {
    return discreteUpdatesImpl(fn, a, b, c);
  } finally {
    isInsideEventHandler = prevIsInsideEventHandler;
    if (!isInsideEventHandler) {
      finishEventHandler();
    }
  }
}

var lastFlushedEventTimeStamp = 0;
function flushDiscreteUpdatesIfNeeded(timeStamp) {
  // event.timeStamp isn't overly reliable due to inconsistencies in
  // how different browsers have historically provided the time stamp.
  // Some browsers provide high-resolution time stamps for all events,
  // some provide low-resolution time stamps for all events. FF < 52
  // even mixes both time stamps together. Some browsers even report
  // negative time stamps or time stamps that are 0 (iOS9) in some cases.
  // Given we are only comparing two time stamps with equality (!==),
  // we are safe from the resolution differences. If the time stamp is 0
  // we bail-out of preventing the flush, which can affect semantics,
  // such as if an earlier flush removes or adds event listeners that
  // are fired in the subsequent flush. However, this is the same
  // behaviour as we had before this change, so the risks are low.
  if (!isInsideEventHandler && (!enableFlareAPI || timeStamp === 0 || lastFlushedEventTimeStamp !== timeStamp)) {
    lastFlushedEventTimeStamp = timeStamp;
    flushDiscreteUpdatesImpl();
  }
}

function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  discreteUpdatesImpl = _discreteUpdatesImpl;
  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
}

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }
  var get = descriptor.get,
      set = descriptor.set;

  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  });
  // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768
  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

// Prevent newer renderers from RTE when used with older react package versions.
// Current owner and dispatcher used to share the same ref,
// but PR #14548 split them out to better support the react-debug-tools package.
if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
  ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  };
}
if (!ReactSharedInternals.hasOwnProperty('ReactCurrentBatchConfig')) {
  ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  };
}

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';
  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');
    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);
        if (match) {
          var pathBeforeSlash = match[1];
          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }
    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }
  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
// TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }
  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }
  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';
    case REACT_PORTAL_TYPE:
      return 'Portal';
    case REACT_PROFILER_TYPE:
      return 'Profiler';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_SUSPENSE_TYPE:
      return 'Suspense';
    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }
  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';
      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';
      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');
      case REACT_MEMO_TYPE:
        return getComponentName(type.type);
      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);
          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }
          break;
        }
    }
  }
  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function describeFiber(fiber) {
  switch (fiber.tag) {
    case HostRoot:
    case HostPortal:
    case HostText:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
      return '';
    default:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber.type);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner.type);
      }
      return describeComponentFrame(name, source, ownerName);
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    node = node.return;
  } while (node);
  return info;
}

var current = null;
var phase = null;

function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }
    var owner = current._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner.type);
    }
  }
  return null;
}

function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackByFiberInDevAndProd(current);
  }
  return '';
}

function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    phase = null;
  }
}

function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
    current = fiber;
    phase = null;
  }
}

function setCurrentPhase(lifeCyclePhase) {
  {
    phase = lifeCyclePhase;
  }
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();
    // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0;

// A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.
var STRING = 1;

// A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.
var BOOLEANISH_STRING = 2;

// A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
var BOOLEAN = 3;

// An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.
var OVERLOADED_BOOLEAN = 4;

// An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.
var NUMERIC = 5;

// An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.
var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }
  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning$1(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }
  return false;
}

function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }
  switch (typeof value) {
    case 'function':
    // $FlowIssue symbol is perfectly valid here
    case 'symbol':
      // eslint-disable-line
      return true;
    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }
        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }
    default:
      return false;
  }
}

function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }
  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;
      case OVERLOADED_BOOLEAN:
        return value === false;
      case NUMERIC:
        return isNaN(value);
      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }
  return false;
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
}

// When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.
var properties = {};

// These props are reserved by React. They shouldn't be written to the DOM.
['children', 'dangerouslySetInnerHTML',
// TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.
[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];

  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.
['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are HTML boolean attributes.
['allowFullScreen', 'async',
// Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
// Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.
['checked',
// Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.
['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are HTML attributes that must be positive numbers.
['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These are HTML attributes that must be numbers.
['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

// This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.
['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false);
} // sanitizeURL
);

// String SVG attributes with the xlink namespace.
['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false);
} // sanitizeURL
);

// String SVG attributes with the xml namespace.
['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false);
} // sanitizeURL
);

// These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.
['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
} // sanitizeURL
);

// These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.
var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true);

['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true);
} // sanitizeURL
);

var ReactDebugCurrentFrame$1 = null;
{
  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
}

// A javascript: URL can contain leading C0 control or \u0020 SPACE,
// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */
var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;

var didWarn = false;

function sanitizeURL(url) {
  if (disableJavaScriptURLs) {
    (function () {
      if (!!isJavaScriptProtocol.test(url)) {
        {
          throw ReactError(Error('React has blocked a javascript: URL as a security precaution.' + (ReactDebugCurrentFrame$1.getStackAddendum())));
        }
      }
    })();
  } else if (true && !didWarn && isJavaScriptProtocol.test(url)) {
    didWarn = true;
    warning$1(false, 'A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
  }
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;

      return node[propertyName];
    } else {
      if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;

      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);
          if (value === '') {
            return true;
          }
          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }
          if (value === '' + expected) {
            return expected;
          }
          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }
        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        }
        // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.
        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);
  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }
  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }
  // If the prop isn't in the special list, treat it as a simple attribute.
  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;
      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName, '' + value);
      }
    }
    return;
  }
  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;

      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }
    return;
  }
  // The rest are treated as attributes with special cases.
  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;

    var attributeValue = void 0;
    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = '' + value;
      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue);
      }
    }
    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  return '' + value;
}

function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;
    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

{
  var ReactPropTypesSecret = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );

        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

var checkPropTypes_1 = checkPropTypes;

var ReactDebugCurrentFrame$2 = null;

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;

  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
    checkPropTypes_1(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$2.getStackAddendum);
  };
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}

function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}

function updateWrapper(element, props) {
  var node = element;
  {
    var _controlled = isControlled(props);

    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);

  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' ||
      // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the value attribute, React only assigns a new value
    // whenever the defaultValue React prop has changed. When not present,
    // React does nothing
    if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  } else {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the attribute is directly
    // controllable from the defaultValue React property. It needs to be
    // updated as new props come in.
    if (props.defaultChecked == null) {
      node.removeAttribute('checked');
    } else {
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}

function postMountWrapper(element, props, isHydrating) {
  var node = element;

  // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.
  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset';

    // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872
    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var _initialValue = toString(node._wrapperState.initialValue);

    // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.
    if (!isHydrating) {
      if (disableInputAttributeSyncing) {
        var value = getToStringValue(props.value);

        // When not syncing the value attribute, the value property points
        // directly to the React prop. Only assign it if it exists.
        if (value != null) {
          // Always assign on buttons so that it is possible to assign an
          // empty string to clear button text.
          //
          // Otherwise, do not re-assign the value property if is empty. This
          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
          // prematurely marking required inputs as invalid. Equality is compared
          // to the current value in case the browser provided value is not an
          // empty string.
          if (isButton || value !== node.value) {
            node.value = toString(value);
          }
        }
      } else {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (_initialValue !== node.value) {
          node.value = _initialValue;
        }
      }
    }

    if (disableInputAttributeSyncing) {
      // When not syncing the value attribute, assign the value attribute
      // directly from the defaultValue React property (when present)
      var defaultValue = getToStringValue(props.defaultValue);
      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    } else {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = _initialValue;
    }
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the checked property
    // never gets assigned. It must be manually set. We don't want
    // to do this when hydrating so that existing user input isn't
    // modified
    if (!isHydrating) {
      updateChecked(element, props);
    }

    // Only assign the checked attribute if it is defined. This saves
    // a DOM write when controlling the checked attribute isn't needed
    // (text inputs, submit/reset)
    if (props.hasOwnProperty('defaultChecked')) {
      node.defaultChecked = !node.defaultChecked;
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      (function () {
        if (!otherProps) {
          {
            throw ReactError(Error('ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.'));
          }
        }
      })();

      // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set
      updateValueIfChanged(otherNode);

      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

// In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253
function setDefaultValue(node, type, value) {
  if (
  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  if (!disableInputAttributeSyncing) {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc = void 0,
        handleEventFunc = void 0;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var SyntheticUIEvent = SyntheticEvent.extend({
  view: null,
  detail: null
});

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.
/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

var previousScreenX = 0;
var previousScreenY = 0;
// Use flags to signal movementX/Y has already been set
var isMovementXSet = false;
var isMovementYSet = false;

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    var screenX = previousScreenX;
    previousScreenX = event.screenX;

    if (!isMovementXSet) {
      isMovementXSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenX - screenX : 0;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    }

    var screenY = previousScreenY;
    previousScreenY = event.screenY;

    if (!isMovementYSet) {
      isMovementYSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenY - screenY : 0;
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */
var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tangentialPressure: null,
  tiltX: null,
  tiltY: null,
  twist: null,
  pointerType: null,
  isPrimary: null
});

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win = void 0;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from = void 0;
    var to = void 0;
    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface = void 0,
        leaveEventType = void 0,
        enterEventType = void 0,
        eventTypePrefix = void 0;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$2.mouseLeave;
      enterEventType = eventTypes$2.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$2.pointerLeave;
      enterEventType = eventTypes$2.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

var ReactInternals$1 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var _ReactInternals$Sched = ReactInternals$1.Scheduler;
var unstable_cancelCallback = _ReactInternals$Sched.unstable_cancelCallback;
var unstable_now = _ReactInternals$Sched.unstable_now;
var unstable_scheduleCallback = _ReactInternals$Sched.unstable_scheduleCallback;
var unstable_shouldYield = _ReactInternals$Sched.unstable_shouldYield;
var unstable_requestPaint = _ReactInternals$Sched.unstable_requestPaint;
var unstable_getFirstCallbackNode = _ReactInternals$Sched.unstable_getFirstCallbackNode;
var unstable_runWithPriority = _ReactInternals$Sched.unstable_runWithPriority;
var unstable_next = _ReactInternals$Sched.unstable_next;
var unstable_continueExecution = _ReactInternals$Sched.unstable_continueExecution;
var unstable_pauseExecution = _ReactInternals$Sched.unstable_pauseExecution;
var unstable_getCurrentPriorityLevel = _ReactInternals$Sched.unstable_getCurrentPriorityLevel;
var unstable_ImmediatePriority = _ReactInternals$Sched.unstable_ImmediatePriority;
var unstable_UserBlockingPriority = _ReactInternals$Sched.unstable_UserBlockingPriority;
var unstable_NormalPriority = _ReactInternals$Sched.unstable_NormalPriority;
var unstable_LowPriority = _ReactInternals$Sched.unstable_LowPriority;
var unstable_IdlePriority = _ReactInternals$Sched.unstable_IdlePriority;
var unstable_forceFrameRate = _ReactInternals$Sched.unstable_forceFrameRate;
var unstable_flushAllWithoutAsserting = _ReactInternals$Sched.unstable_flushAllWithoutAsserting;

var PLUGIN_EVENT_SYSTEM = 1;
var RESPONDER_EVENT_SYSTEM = 1 << 1;
var IS_PASSIVE = 1 << 2;
var IS_ACTIVE = 1 << 3;
var PASSIVE_NOT_SUPPORTED = 1 << 4;

function createResponderListener(responder, props) {
  var eventResponderListener = {
    responder: responder,
    props: props
  };
  {
    Object.freeze(eventResponderListener);
  }
  return eventResponderListener;
}

function isFiberSuspenseAndTimedOut(fiber) {
  return fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
}

function getSuspenseFallbackChild(fiber) {
  return fiber.child.sibling.child;
}





function createResponderInstance(responder, responderProps, responderState, target, fiber) {
  return {
    fiber: fiber,
    props: responderProps,
    responder: responder,
    rootEventTypes: null,
    state: responderState,
    target: target
  };
}

var DiscreteEvent = 0;
var UserBlockingEvent = 1;
var ContinuousEvent = 2;

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var UserBlockingPriority$1 = unstable_UserBlockingPriority;
var runWithPriority$1 = unstable_runWithPriority;


var listenToResponderEventTypesImpl = void 0;

function setListenToResponderEventTypes(_listenToResponderEventTypesImpl) {
  listenToResponderEventTypesImpl = _listenToResponderEventTypesImpl;
}

var activeTimeouts = new Map();
var rootEventTypesToEventResponderInstances = new Map();
var ownershipChangeListeners = new Set();

var globalOwner = null;

var currentTimeStamp = 0;
var currentTimers = new Map();
var currentInstance = null;
var currentEventQueue = null;
var currentEventQueuePriority = ContinuousEvent;
var currentTimerIDCounter = 0;
var currentDocument = null;

var eventResponderContext = {
  dispatchEvent: function (eventValue, eventListener, eventPriority) {
    validateResponderContext();
    validateEventValue(eventValue);
    if (eventPriority < currentEventQueuePriority) {
      currentEventQueuePriority = eventPriority;
    }
    currentEventQueue.push(createEventQueueItem(eventValue, eventListener));
  },
  isTargetWithinResponder: function (target) {
    validateResponderContext();
    if (target != null) {
      var fiber = getClosestInstanceFromNode(target);
      var responderFiber = currentInstance.fiber;

      while (fiber !== null) {
        if (fiber === responderFiber || fiber.alternate === responderFiber) {
          return true;
        }
        fiber = fiber.return;
      }
    }
    return false;
  },
  isTargetWithinResponderScope: function (target) {
    validateResponderContext();
    var componentInstance = currentInstance;
    var responder = componentInstance.responder;

    if (target != null) {
      var fiber = getClosestInstanceFromNode(target);
      var responderFiber = currentInstance.fiber;

      while (fiber !== null) {
        if (fiber === responderFiber || fiber.alternate === responderFiber) {
          return true;
        }
        if (doesFiberHaveResponder(fiber, responder)) {
          return false;
        }
        fiber = fiber.return;
      }
    }
    return false;
  },
  isTargetWithinNode: function (childTarget, parentTarget) {
    validateResponderContext();
    var childFiber = getClosestInstanceFromNode(childTarget);
    var parentFiber = getClosestInstanceFromNode(parentTarget);
    var parentAlternateFiber = parentFiber.alternate;

    var node = childFiber;
    while (node !== null) {
      if (node === parentFiber || node === parentAlternateFiber) {
        return true;
      }
      node = node.return;
    }
    return false;
  },
  addRootEventTypes: function (rootEventTypes) {
    validateResponderContext();
    var activeDocument = getActiveDocument();
    listenToResponderEventTypesImpl(rootEventTypes, activeDocument);
    for (var i = 0; i < rootEventTypes.length; i++) {
      var rootEventType = rootEventTypes[i];
      var eventResponderInstance = currentInstance;
      registerRootEventType(rootEventType, eventResponderInstance);
    }
  },
  removeRootEventTypes: function (rootEventTypes) {
    validateResponderContext();
    for (var i = 0; i < rootEventTypes.length; i++) {
      var rootEventType = rootEventTypes[i];
      var rootEventResponders = rootEventTypesToEventResponderInstances.get(rootEventType);
      var rootEventTypesSet = currentInstance.rootEventTypes;
      if (rootEventTypesSet !== null) {
        rootEventTypesSet.delete(rootEventType);
      }
      if (rootEventResponders !== undefined) {
        rootEventResponders.delete(currentInstance);
      }
    }
  },
  hasOwnership: function () {
    validateResponderContext();
    return globalOwner === currentInstance;
  },
  requestGlobalOwnership: function () {
    validateResponderContext();
    if (globalOwner !== null) {
      return false;
    }
    globalOwner = currentInstance;
    triggerOwnershipListeners();
    return true;
  },
  releaseOwnership: function () {
    validateResponderContext();
    return releaseOwnershipForEventResponderInstance(currentInstance);
  },
  setTimeout: function (func, delay) {
    validateResponderContext();
    if (currentTimers === null) {
      currentTimers = new Map();
    }
    var timeout = currentTimers.get(delay);

    var timerId = currentTimerIDCounter++;
    if (timeout === undefined) {
      var _timers = new Map();
      var _id = setTimeout(function () {
        processTimers(_timers, delay);
      }, delay);
      timeout = {
        id: _id,
        timers: _timers
      };
      currentTimers.set(delay, timeout);
    }
    timeout.timers.set(timerId, {
      instance: currentInstance,
      func: func,
      id: timerId,
      timeStamp: currentTimeStamp
    });
    activeTimeouts.set(timerId, timeout);
    return timerId;
  },
  clearTimeout: function (timerId) {
    validateResponderContext();
    var timeout = activeTimeouts.get(timerId);

    if (timeout !== undefined) {
      var _timers2 = timeout.timers;
      _timers2.delete(timerId);
      if (_timers2.size === 0) {
        clearTimeout(timeout.id);
      }
    }
  },
  getFocusableElementsInScope: function (deep) {
    validateResponderContext();
    var focusableElements = [];
    var eventResponderInstance = currentInstance;
    var currentResponder = eventResponderInstance.responder;
    var focusScopeFiber = eventResponderInstance.fiber;
    if (deep) {
      var deepNode = focusScopeFiber.return;
      while (deepNode !== null) {
        if (doesFiberHaveResponder(deepNode, currentResponder)) {
          focusScopeFiber = deepNode;
        }
        deepNode = deepNode.return;
      }
    }
    var child = focusScopeFiber.child;

    if (child !== null) {
      collectFocusableElements(child, focusableElements);
    }
    return focusableElements;
  },

  getActiveDocument: getActiveDocument,
  objectAssign: _assign,
  getTimeStamp: function () {
    validateResponderContext();
    return currentTimeStamp;
  },
  isTargetWithinHostComponent: function (target, elementType) {
    validateResponderContext();
    var fiber = getClosestInstanceFromNode(target);

    while (fiber !== null) {
      if (fiber.tag === HostComponent && fiber.type === elementType) {
        return true;
      }
      fiber = fiber.return;
    }
    return false;
  },

  enqueueStateRestore: enqueueStateRestore
};

function validateEventValue(eventValue) {
  if (typeof eventValue === 'object' && eventValue !== null) {
    var target = eventValue.target,
        type = eventValue.type,
        _timeStamp = eventValue.timeStamp;


    if (target == null || type == null || _timeStamp == null) {
      throw new Error('context.dispatchEvent: "target", "timeStamp", and "type" fields on event object are required.');
    }
    var showWarning = function (name) {
      {
        warning$1(false, '%s is not available on event objects created from event responder modules (React Flare). ' + 'Try wrapping in a conditional, i.e. `if (event.type !== "press") { event.%s }`', name, name);
      }
    };
    eventValue.preventDefault = function () {
      {
        showWarning('preventDefault()');
      }
    };
    eventValue.stopPropagation = function () {
      {
        showWarning('stopPropagation()');
      }
    };
    eventValue.isDefaultPrevented = function () {
      {
        showWarning('isDefaultPrevented()');
      }
    };
    eventValue.isPropagationStopped = function () {
      {
        showWarning('isPropagationStopped()');
      }
    };
    // $FlowFixMe: we don't need value, Flow thinks we do
    Object.defineProperty(eventValue, 'nativeEvent', {
      get: function () {
        {
          showWarning('nativeEvent');
        }
      }
    });
  }
}

function collectFocusableElements(node, focusableElements) {
  if (isFiberSuspenseAndTimedOut(node)) {
    var fallbackChild = getSuspenseFallbackChild(node);
    if (fallbackChild !== null) {
      collectFocusableElements(fallbackChild, focusableElements);
    }
  } else {
    if (isFiberHostComponentFocusable(node)) {
      focusableElements.push(node.stateNode);
    } else {
      var child = node.child;

      if (child !== null) {
        collectFocusableElements(child, focusableElements);
      }
    }
  }
  var sibling = node.sibling;

  if (sibling !== null) {
    collectFocusableElements(sibling, focusableElements);
  }
}

function createEventQueueItem(value, listener) {
  return {
    value: value,
    listener: listener
  };
}

function doesFiberHaveResponder(fiber, responder) {
  if (fiber.tag === HostComponent) {
    var dependencies = fiber.dependencies;
    if (dependencies !== null) {
      var respondersMap = dependencies.responders;
      if (respondersMap !== null && respondersMap.has(responder)) {
        return true;
      }
    }
  }
  return false;
}

function getActiveDocument() {
  return currentDocument;
}

function releaseOwnershipForEventResponderInstance(eventResponderInstance) {
  if (globalOwner === eventResponderInstance) {
    globalOwner = null;
    triggerOwnershipListeners();
    return true;
  }
  return false;
}

function isFiberHostComponentFocusable(fiber) {
  if (fiber.tag !== HostComponent) {
    return false;
  }
  var type = fiber.type,
      memoizedProps = fiber.memoizedProps;

  if (memoizedProps.tabIndex === -1 || memoizedProps.disabled) {
    return false;
  }
  if (memoizedProps.tabIndex === 0 || memoizedProps.contentEditable === true) {
    return true;
  }
  if (type === 'a' || type === 'area') {
    return !!memoizedProps.href && memoizedProps.rel !== 'ignore';
  }
  if (type === 'input') {
    return memoizedProps.type !== 'hidden' && memoizedProps.type !== 'file';
  }
  return type === 'button' || type === 'textarea' || type === 'object' || type === 'select' || type === 'iframe' || type === 'embed';
}

function processTimers(timers, delay) {
  var timersArr = Array.from(timers.values());
  currentEventQueuePriority = ContinuousEvent;
  try {
    for (var i = 0; i < timersArr.length; i++) {
      var _timersArr$i = timersArr[i],
          _instance = _timersArr$i.instance,
          _func = _timersArr$i.func,
          _id2 = _timersArr$i.id,
          _timeStamp2 = _timersArr$i.timeStamp;

      currentInstance = _instance;
      currentEventQueue = [];
      currentTimeStamp = _timeStamp2 + delay;
      try {
        _func();
      } finally {
        activeTimeouts.delete(_id2);
      }
    }
    processEventQueue();
  } finally {
    currentTimers = null;
    currentInstance = null;
    currentEventQueue = null;
    currentTimeStamp = 0;
  }
}

function createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, passive, passiveSupported) {
  var _ref = nativeEvent,
      pointerType = _ref.pointerType;

  var eventPointerType = '';
  var pointerId = null;

  if (pointerType !== undefined) {
    eventPointerType = pointerType;
    pointerId = nativeEvent.pointerId;
  } else if (nativeEvent.key !== undefined) {
    eventPointerType = 'keyboard';
  } else if (nativeEvent.button !== undefined) {
    eventPointerType = 'mouse';
  } else if (nativeEvent.changedTouches !== undefined) {
    eventPointerType = 'touch';
  }

  return {
    nativeEvent: nativeEvent,
    passive: passive,
    passiveSupported: passiveSupported,
    pointerId: pointerId,
    pointerType: eventPointerType,
    responderTarget: null,
    target: nativeEventTarget,
    type: topLevelType
  };
}

function processEvents(eventQueue) {
  for (var i = 0, length = eventQueue.length; i < length; i++) {
    var _eventQueue$i = eventQueue[i],
        _value = _eventQueue$i.value,
        _listener = _eventQueue$i.listener;

    var type = typeof _value === 'object' && _value !== null ? _value.type : '';
    invokeGuardedCallbackAndCatchFirstError(type, _listener, undefined, _value);
  }
}

function processEventQueue() {
  var eventQueue = currentEventQueue;
  if (eventQueue.length === 0) {
    return;
  }
  switch (currentEventQueuePriority) {
    case DiscreteEvent:
      {
        flushDiscreteUpdatesIfNeeded(currentTimeStamp);
        discreteUpdates(function () {
          batchedEventUpdates(processEvents, eventQueue);
        });
        break;
      }
    case UserBlockingEvent:
      {
        if (enableUserBlockingEvents) {
          runWithPriority$1(UserBlockingPriority$1, batchedEventUpdates.bind(null, processEvents, eventQueue));
        } else {
          batchedEventUpdates(processEvents, eventQueue);
        }
        break;
      }
    case ContinuousEvent:
      {
        batchedEventUpdates(processEvents, eventQueue);
        break;
      }
  }
}

function responderEventTypesContainType(eventTypes, type) {
  for (var i = 0, len = eventTypes.length; i < len; i++) {
    if (eventTypes[i] === type) {
      return true;
    }
  }
  return false;
}

function validateResponderTargetEventTypes(eventType, responder) {
  var targetEventTypes = responder.targetEventTypes;
  // Validate the target event type exists on the responder

  if (targetEventTypes !== null) {
    return responderEventTypesContainType(targetEventTypes, eventType);
  }
  return false;
}

function validateOwnership(responderInstance) {
  return globalOwner === null || globalOwner === responderInstance;
}

function traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var isPassiveEvent = (eventSystemFlags & IS_PASSIVE) !== 0;
  var isPassiveSupported = (eventSystemFlags & PASSIVE_NOT_SUPPORTED) === 0;
  var isPassive = isPassiveEvent || !isPassiveSupported;
  var eventType = isPassive ? topLevelType : topLevelType + '_active';

  // Trigger event responders in this order:
  // - Bubble target responder phase
  // - Root responder phase

  var visitedResponders = new Set();
  var responderEvent = createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, isPassiveEvent, isPassiveSupported);
  var node = targetFiber;
  while (node !== null) {
    var _node = node,
        dependencies = _node.dependencies,
        tag = _node.tag;

    if (tag === HostComponent && dependencies !== null) {
      var respondersMap = dependencies.responders;
      if (respondersMap !== null) {
        var responderInstances = Array.from(respondersMap.values());
        for (var i = 0, length = responderInstances.length; i < length; i++) {
          var responderInstance = responderInstances[i];

          if (validateOwnership(responderInstance)) {
            var props = responderInstance.props,
                responder = responderInstance.responder,
                state = responderInstance.state,
                target = responderInstance.target;

            if (!visitedResponders.has(responder) && validateResponderTargetEventTypes(eventType, responder)) {
              visitedResponders.add(responder);
              var onEvent = responder.onEvent;
              if (onEvent !== null) {
                currentInstance = responderInstance;
                responderEvent.responderTarget = target;
                onEvent(responderEvent, eventResponderContext, props, state);
              }
            }
          }
        }
      }
    }
    node = node.return;
  }
  // Root phase
  var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(eventType);
  if (rootEventResponderInstances !== undefined) {
    var _responderInstances = Array.from(rootEventResponderInstances);

    for (var _i = 0; _i < _responderInstances.length; _i++) {
      var _responderInstance = _responderInstances[_i];
      if (!validateOwnership(_responderInstance)) {
        continue;
      }
      var _props = _responderInstance.props,
          _responder = _responderInstance.responder,
          _state = _responderInstance.state,
          _target = _responderInstance.target;

      var onRootEvent = _responder.onRootEvent;
      if (onRootEvent !== null) {
        currentInstance = _responderInstance;
        responderEvent.responderTarget = _target;
        onRootEvent(responderEvent, eventResponderContext, _props, _state);
      }
    }
  }
}

function triggerOwnershipListeners() {
  var listeningInstances = Array.from(ownershipChangeListeners);
  var previousInstance = currentInstance;
  var previousEventQueuePriority = currentEventQueuePriority;
  var previousEventQueue = currentEventQueue;
  try {
    for (var i = 0; i < listeningInstances.length; i++) {
      var _instance2 = listeningInstances[i];
      var props = _instance2.props,
          responder = _instance2.responder,
          state = _instance2.state;

      currentInstance = _instance2;
      currentEventQueuePriority = ContinuousEvent;
      currentEventQueue = [];
      var onOwnershipChange = responder.onOwnershipChange;
      if (onOwnershipChange !== null) {
        onOwnershipChange(eventResponderContext, props, state);
      }
    }
    processEventQueue();
  } finally {
    currentInstance = previousInstance;
    currentEventQueue = previousEventQueue;
    currentEventQueuePriority = previousEventQueuePriority;
  }
}

function mountEventResponder(responder, responderInstance, props, state) {
  if (responder.onOwnershipChange !== null) {
    ownershipChangeListeners.add(responderInstance);
  }
  var onMount = responder.onMount;
  if (onMount !== null) {
    currentEventQueuePriority = ContinuousEvent;
    currentInstance = responderInstance;
    currentEventQueue = [];
    try {
      onMount(eventResponderContext, props, state);
      processEventQueue();
    } finally {
      currentEventQueue = null;
      currentInstance = null;
      currentTimers = null;
    }
  }
}

function unmountEventResponder(responderInstance) {
  var responder = responderInstance.responder;
  var onUnmount = responder.onUnmount;
  if (onUnmount !== null) {
    var props = responderInstance.props,
        state = responderInstance.state;

    currentEventQueue = [];
    currentEventQueuePriority = ContinuousEvent;
    currentInstance = responderInstance;
    try {
      onUnmount(eventResponderContext, props, state);
      processEventQueue();
    } finally {
      currentEventQueue = null;
      currentInstance = null;
      currentTimers = null;
    }
  }
  releaseOwnershipForEventResponderInstance(responderInstance);
  if (responder.onOwnershipChange !== null) {
    ownershipChangeListeners.delete(responderInstance);
  }
  var rootEventTypesSet = responderInstance.rootEventTypes;
  if (rootEventTypesSet !== null) {
    var rootEventTypes = Array.from(rootEventTypesSet);

    for (var i = 0; i < rootEventTypes.length; i++) {
      var topLevelEventType = rootEventTypes[i];
      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(topLevelEventType);
      if (rootEventResponderInstances !== undefined) {
        rootEventResponderInstances.delete(responderInstance);
      }
    }
  }
}

function validateResponderContext() {
  (function () {
    if (!(currentInstance !== null)) {
      {
        throw ReactError(Error('An event responder context was used outside of an event cycle. Use context.setTimeout() to use asynchronous responder context outside of event cycle .'));
      }
    }
  })();
}

function dispatchEventForResponderEventSystem(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
  if (enableFlareAPI) {
    var previousEventQueue = currentEventQueue;
    var previousInstance = currentInstance;
    var previousTimers = currentTimers;
    var previousTimeStamp = currentTimeStamp;
    var previousDocument = currentDocument;
    var previousEventQueuePriority = currentEventQueuePriority;
    currentTimers = null;
    currentEventQueue = [];
    currentEventQueuePriority = ContinuousEvent;
    // nodeType 9 is DOCUMENT_NODE
    currentDocument = nativeEventTarget.nodeType === 9 ? nativeEventTarget : nativeEventTarget.ownerDocument;
    // We might want to control timeStamp another way here
    currentTimeStamp = nativeEvent.timeStamp;
    try {
      traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags);
      processEventQueue();
    } finally {
      currentTimers = previousTimers;
      currentInstance = previousInstance;
      currentEventQueue = previousEventQueue;
      currentTimeStamp = previousTimeStamp;
      currentDocument = previousDocument;
      currentEventQueuePriority = previousEventQueuePriority;
    }
  }
}

function addRootEventTypesForResponderInstance(responderInstance, rootEventTypes) {
  for (var i = 0; i < rootEventTypes.length; i++) {
    var rootEventType = rootEventTypes[i];
    registerRootEventType(rootEventType, responderInstance);
  }
}

function registerRootEventType(rootEventType, eventResponderInstance) {
  var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(rootEventType);
  if (rootEventResponderInstances === undefined) {
    rootEventResponderInstances = new Set();
    rootEventTypesToEventResponderInstances.set(rootEventType, rootEventResponderInstances);
  }
  var rootEventTypesSet = eventResponderInstance.rootEventTypes;
  if (rootEventTypesSet === null) {
    rootEventTypesSet = eventResponderInstance.rootEventTypes = new Set();
  }
  (function () {
    if (!!rootEventTypesSet.has(rootEventType)) {
      {
        throw ReactError(Error('addRootEventTypes() found a duplicate root event type of "' + rootEventType + '". This might be because the event type exists in the event responder "rootEventTypes" array or because of a previous addRootEventTypes() using this root event type.'));
      }
    }
  })();
  rootEventTypesSet.add(rootEventType);
  rootEventResponderInstances.add(eventResponderInstance);
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect = /*              */0;
var PerformedWork = /*         */1;

// You can change the rest (and add more).
var Placement = /*             */2;
var Update = /*                */4;
var PlacementAndUpdate = /*    */6;
var Deletion = /*              */8;
var ContentReset = /*          */16;
var Callback = /*              */32;
var DidCapture = /*            */64;
var Ref = /*                   */128;
var Snapshot = /*              */256;
var Passive = /*               */512;

// Passive & Update & Callback & Ref & Snapshot
var LifecycleEffectMask = /*   */932;

// Union of all host effects
var HostEffectMask = /*        */1023;

var Incomplete = /*            */1024;
var ShouldCapture = /*         */2048;

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node.return) {
      node = node.return;
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node.return) {
      node = node.return;
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner$1.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  (function () {
    if (!(isFiberMountedImpl(fiber) === MOUNTED)) {
      {
        throw ReactError(Error('Unable to find node on an unmounted component.'));
      }
    }
  })();
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    (function () {
      if (!(state !== UNMOUNTED)) {
        {
          throw ReactError(Error('Unable to find node on an unmounted component.'));
        }
      }
    })();
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a.return;
    if (parentA === null) {
      // We're at the root.
      break;
    }
    var parentB = parentA.alternate;
    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;
      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      }
      // If there's no parent, we're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      (function () {
        {
          {
            throw ReactError(Error('Unable to find node on an unmounted component.'));
          }
        }
      })();
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        (function () {
          if (!didFindChild) {
            {
              throw ReactError(Error('Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.'));
            }
          }
        })();
      }
    }

    (function () {
      if (!(a.alternate === b)) {
        {
          throw ReactError(Error('Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  (function () {
    if (!(a.tag === HostRoot)) {
      {
        throw ReactError(Error('Unable to find node on an unmounted component.'));
      }
    }
  })();
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText || node.tag === FundamentalComponent) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}

function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}

function addEventCaptureListenerWithPassiveFlag(element, eventType, listener, passive) {
  element.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var SyntheticAnimationEvent = SyntheticEvent.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var SyntheticClipboardEvent = SyntheticEvent.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode = void 0;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.
  if (charCode === 10) {
    charCode = 13;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var SyntheticTransitionEvent = SyntheticEvent.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },

  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var eventTuples = [
// Discrete events
[TOP_BLUR, 'blur', DiscreteEvent], [TOP_CANCEL, 'cancel', DiscreteEvent], [TOP_CLICK, 'click', DiscreteEvent], [TOP_CLOSE, 'close', DiscreteEvent], [TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent], [TOP_COPY, 'copy', DiscreteEvent], [TOP_CUT, 'cut', DiscreteEvent], [TOP_AUX_CLICK, 'auxClick', DiscreteEvent], [TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent], [TOP_DRAG_END, 'dragEnd', DiscreteEvent], [TOP_DRAG_START, 'dragStart', DiscreteEvent], [TOP_DROP, 'drop', DiscreteEvent], [TOP_FOCUS, 'focus', DiscreteEvent], [TOP_INPUT, 'input', DiscreteEvent], [TOP_INVALID, 'invalid', DiscreteEvent], [TOP_KEY_DOWN, 'keyDown', DiscreteEvent], [TOP_KEY_PRESS, 'keyPress', DiscreteEvent], [TOP_KEY_UP, 'keyUp', DiscreteEvent], [TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent], [TOP_MOUSE_UP, 'mouseUp', DiscreteEvent], [TOP_PASTE, 'paste', DiscreteEvent], [TOP_PAUSE, 'pause', DiscreteEvent], [TOP_PLAY, 'play', DiscreteEvent], [TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent], [TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent], [TOP_POINTER_UP, 'pointerUp', DiscreteEvent], [TOP_RATE_CHANGE, 'rateChange', DiscreteEvent], [TOP_RESET, 'reset', DiscreteEvent], [TOP_SEEKED, 'seeked', DiscreteEvent], [TOP_SUBMIT, 'submit', DiscreteEvent], [TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent], [TOP_TOUCH_END, 'touchEnd', DiscreteEvent], [TOP_TOUCH_START, 'touchStart', DiscreteEvent], [TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent],

// User-blocking events
[TOP_DRAG, 'drag', UserBlockingEvent], [TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent], [TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent], [TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent], [TOP_DRAG_OVER, 'dragOver', UserBlockingEvent], [TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent], [TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent], [TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent], [TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent], [TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent], [TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent], [TOP_SCROLL, 'scroll', UserBlockingEvent], [TOP_TOGGLE, 'toggle', UserBlockingEvent], [TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent], [TOP_WHEEL, 'wheel', UserBlockingEvent],

// Continuous events
[TOP_ABORT, 'abort', ContinuousEvent], [TOP_ANIMATION_END, 'animationEnd', ContinuousEvent], [TOP_ANIMATION_ITERATION, 'animationIteration', ContinuousEvent], [TOP_ANIMATION_START, 'animationStart', ContinuousEvent], [TOP_CAN_PLAY, 'canPlay', ContinuousEvent], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough', ContinuousEvent], [TOP_DURATION_CHANGE, 'durationChange', ContinuousEvent], [TOP_EMPTIED, 'emptied', ContinuousEvent], [TOP_ENCRYPTED, 'encrypted', ContinuousEvent], [TOP_ENDED, 'ended', ContinuousEvent], [TOP_ERROR, 'error', ContinuousEvent], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', ContinuousEvent], [TOP_LOAD, 'load', ContinuousEvent], [TOP_LOADED_DATA, 'loadedData', ContinuousEvent], [TOP_LOADED_METADATA, 'loadedMetadata', ContinuousEvent], [TOP_LOAD_START, 'loadStart', ContinuousEvent], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', ContinuousEvent], [TOP_PLAYING, 'playing', ContinuousEvent], [TOP_PROGRESS, 'progress', ContinuousEvent], [TOP_SEEKING, 'seeking', ContinuousEvent], [TOP_STALLED, 'stalled', ContinuousEvent], [TOP_SUSPEND, 'suspend', ContinuousEvent], [TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent], [TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent], [TOP_WAITING, 'waiting', ContinuousEvent]];

var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};

for (var i = 0; i < eventTuples.length; i++) {
  var eventTuple = eventTuples[i];
  var topEvent = eventTuple[0];
  var event = eventTuple[1];
  var eventPriority = eventTuple[2];

  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;

  var config = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    eventPriority: eventPriority
  };
  eventTypes$4[event] = config;
  topLevelEventsToDispatchConfig[topEvent] = config;
}

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  getEventPriority: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined ? config.eventPriority : ContinuousEvent;
  },


  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor = void 0;
    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;
      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case TOP_AUX_CLICK:
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP:
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;
      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;
      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;
      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;
      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;
      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;
      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var passiveBrowserEventsSupported = false;

// Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
if (enableFlareAPI && canUseDOM) {
  try {
    var options = {};
    // $FlowFixMe: Ignore Flow complaining about needing a value
    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var UserBlockingPriority = unstable_UserBlockingPriority;
var runWithPriority = unstable_runWithPriority;
var getEventPriority = SimpleEventPlugin.getEventPriority;


var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst.return) {
    inst = inst.return;
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      var _ancestors = bookKeeping.ancestors;
      _ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    var eventTarget = getEventTarget(bookKeeping.nativeEvent);
    var _topLevelType = bookKeeping.topLevelType;
    var _nativeEvent = bookKeeping.nativeEvent;

    runExtractedPluginEventsInBatch(_topLevelType, targetInst, _nativeEvent, eventTarget);
  }
}

// TODO: can we stop exporting these?
var _enabled = true;

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

function trapBubbledEvent(topLevelType, element) {
  trapEventForPluginEventSystem(element, topLevelType, false);
}

function trapCapturedEvent(topLevelType, element) {
  trapEventForPluginEventSystem(element, topLevelType, true);
}

function trapEventForResponderEventSystem(element, topLevelType, passive) {
  if (enableFlareAPI) {
    var rawEventName = getRawEventName(topLevelType);
    var eventFlags = RESPONDER_EVENT_SYSTEM;

    // If passive option is not supported, then the event will be
    // active and not passive, but we flag it as using not being
    // supported too. This way the responder event plugins know,
    // and can provide polyfills if needed.
    if (passive) {
      if (passiveBrowserEventsSupported) {
        eventFlags |= IS_PASSIVE;
      } else {
        eventFlags |= IS_ACTIVE;
        eventFlags |= PASSIVE_NOT_SUPPORTED;
        passive = false;
      }
    } else {
      eventFlags |= IS_ACTIVE;
    }
    // Check if interactive and wrap in discreteUpdates
    var listener = dispatchEvent.bind(null, topLevelType, eventFlags);
    if (passiveBrowserEventsSupported) {
      addEventCaptureListenerWithPassiveFlag(element, rawEventName, listener, passive);
    } else {
      addEventCaptureListener(element, rawEventName, listener);
    }
  }
}

function trapEventForPluginEventSystem(element, topLevelType, capture) {
  var listener = void 0;
  switch (getEventPriority(topLevelType)) {
    case DiscreteEvent:
      listener = dispatchDiscreteEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;
    case UserBlockingEvent:
      listener = dispatchUserBlockingUpdate.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;
    case ContinuousEvent:
    default:
      listener = dispatchEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;
  }

  var rawEventName = getRawEventName(topLevelType);
  if (capture) {
    addEventCaptureListener(element, rawEventName, listener);
  } else {
    addEventBubbleListener(element, rawEventName, listener);
  }
}

function dispatchDiscreteEvent(topLevelType, eventSystemFlags, nativeEvent) {
  flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
  discreteUpdates(dispatchEvent, topLevelType, eventSystemFlags, nativeEvent);
}

function dispatchUserBlockingUpdate(topLevelType, eventSystemFlags, nativeEvent) {
  if (enableUserBlockingEvents) {
    runWithPriority(UserBlockingPriority, dispatchEvent.bind(null, topLevelType, eventSystemFlags, nativeEvent));
  } else {
    dispatchEvent(topLevelType, eventSystemFlags, nativeEvent);
  }
}

function dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst) {
  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedEventUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

function dispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
  if (!_enabled) {
    return;
  }
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  if (enableFlareAPI) {
    if (eventSystemFlags === PLUGIN_EVENT_SYSTEM) {
      dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
    } else {
      // React Flare event system
      dispatchEventForResponderEventSystem(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
    }
  } else {
    dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
  }
}

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
var elementListeningSets = new PossiblyWeakMap();

function getListeningSetForElement(element) {
  var listeningSet = elementListeningSets.get(element);
  if (listeningSet === undefined) {
    listeningSet = new Set();
    elementListeningSets.set(element, listeningSet);
  }
  return listeningSet;
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */
function listenTo(registrationName, mountAt) {
  var listeningSet = getListeningSetForElement(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!listeningSet.has(dependency)) {
      switch (dependency) {
        case TOP_SCROLL:
          trapCapturedEvent(TOP_SCROLL, mountAt);
          break;
        case TOP_FOCUS:
        case TOP_BLUR:
          trapCapturedEvent(TOP_FOCUS, mountAt);
          trapCapturedEvent(TOP_BLUR, mountAt);
          // We set the flag for a single dependency later in this function,
          // but this ensures we mark both as attached rather than just one.
          listeningSet.add(TOP_BLUR);
          listeningSet.add(TOP_FOCUS);
          break;
        case TOP_CANCEL:
        case TOP_CLOSE:
          if (isEventSupported(getRawEventName(dependency))) {
            trapCapturedEvent(dependency, mountAt);
          }
          break;
        case TOP_INVALID:
        case TOP_SUBMIT:
        case TOP_RESET:
          // We listen to them on the target DOM elements.
          // Some of them bubble so we don't want them to fire twice.
          break;
        default:
          // By default, listen on the top level to all non-media events.
          // Media events don't bubble so adding the listener wouldn't do anything.
          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
          if (!isMediaEvent) {
            trapBubbledEvent(dependency, mountAt);
          }
          break;
      }
      listeningSet.add(dependency);
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var listeningSet = getListeningSetForElement(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!listeningSet.has(dependency)) {
      return false;
    }
  }
  return true;
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;

  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window;

  // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)
  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl

    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();
  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }
    element = getActiveElement(win.document);
  }
  return element;
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */
function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Get document associated with the event target.
 *
 * @param {object} nativeEventTarget
 * @return {Document}
 */
function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = getEventTargetDocument(nativeEventTarget);
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;
      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
      case TOP_DRAG_END:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection.injectEventPluginOrder(DOMEventPluginOrder);
setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

function endsWith(subject, search) {
  var length = subject.length;
  return subject.substring(length - search.length, length) === search;
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children. We'll warn if they are invalid
  // during validateProps() which runs for hydration too.
  // Note that this would throw on non-element objects.
  // Elements are stringified (which is normally irrelevant
  // but matters for <fbt>).
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    content += child;
    // Note: we don't warn about invalid children here.
    // Instead, this is done separately below so that
    // it happens during the hydration codepath too.
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  {
    // This mirrors the codepath above, but runs for hydration too.
    // Warn about invalid children here so that client and hydration are consistent.
    // TODO: this seems like it could cause a DEV-only throw for hydration
    // if children contains a non-element object. We should try to avoid that.
    if (typeof props.children === 'object' && props.children !== null) {
      React.Children.forEach(props.children, function (child) {
        if (child == null) {
          return;
        }
        if (typeof child === 'string' || typeof child === 'number') {
          return;
        }
        if (typeof child.type !== 'string') {
          return;
        }
        if (!didWarnInvalidChild) {
          didWarnInvalidChild = true;
          warning$1(false, 'Only strings and numbers are supported as <option> children.');
        }
      });
    }

    // TODO: Remove support for `selected` in <option>.
    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);
  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue$1 = void 0;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  (function () {
    if (!(props.dangerouslySetInnerHTML == null)) {
      {
        throw ReactError(Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.'));
      }
    }
  })();

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value;

  // Only bother fetching default value if we're going to use it
  if (initialValue == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      (function () {
        if (!(defaultValue == null)) {
          {
            throw ReactError(Error('If you supply `defaultValue` on a <textarea>, do not pass children.'));
          }
        }
      })();
      if (Array.isArray(children)) {
        (function () {
          if (!(children.length <= 1)) {
            {
              throw ReactError(Error('<textarea> can only have at most one child.'));
            }
          }
        })();
        children = children[0];
      }

      defaultValue = children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value);
    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }
  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */
function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name,
    // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}

/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */
function expandShorthandMap(styles) {
  var expanded = {};
  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];
    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }
  return expanded;
}

/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */
function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  if (!warnAboutShorthandPropertyCollision) {
    return;
  }

  if (!nextStyles) {
    return;
  }

  var expandedUpdates = expandShorthandMap(styleUpdates);
  var expandedStyles = expandShorthandMap(nextStyles);
  var warnedAbout = {};
  for (var key in expandedUpdates) {
    var originalKey = expandedUpdates[key];
    var correctOriginalKey = expandedStyles[key];
    if (correctOriginalKey && originalKey !== correctOriginalKey) {
      var warningKey = originalKey + ',' + correctOriginalKey;
      if (warnedAbout[warningKey]) {
        continue;
      }
      warnedAbout[warningKey] = true;
      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// TODO: We can remove this if we add invariantWithStack()
// or add stack by default to invariants where possible.
var HTML$1 = '__html';

var ReactDebugCurrentFrame$3 = null;
{
  ReactDebugCurrentFrame$3 = ReactSharedInternals.ReactDebugCurrentFrame;
}

function assertValidProps(tag, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    (function () {
      if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
        {
          throw ReactError(Error(tag + ' is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.' + (ReactDebugCurrentFrame$3.getStackAddendum())));
        }
      }
    })();
  }
  if (props.dangerouslySetInnerHTML != null) {
    (function () {
      if (!(props.children == null)) {
        {
          throw ReactError(Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.'));
        }
      }
    })();
    (function () {
      if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML)) {
        {
          throw ReactError(Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'));
        }
      }
    })();
  }
  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
  }
  (function () {
    if (!(props.style == null || typeof props.style === 'object')) {
      {
        throw ReactError(Error('The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.' + (ReactDebugCurrentFrame$3.getStackAddendum())));
      }
    }
  })();
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  } else if (invalidProps.length > 1) {
    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
    } else {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    // We can't rely on the event system being injected on the server.
    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
      if (registrationName != null) {
        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
        warnedProperties$1[name] = true;
        return true;
      }
      if (EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    }

    // Warn when passing the strings 'false' or 'true' into a boolean prop
    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  } else if (unknownProps.length > 1) {
    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE$1 = 'style';
var HTML = '__html';
var LISTENERS = 'listeners';

var HTML_NAMESPACE = Namespaces.html;


var warnedUnknownTags = void 0;
var suppressHydrationWarning = void 0;

var validatePropertiesInDevelopment = void 0;
var warnForTextDifference = void 0;
var warnForPropDifference = void 0;
var warnForExtraAttributes = void 0;
var warnForInvalidEventListener = void 0;
var canDiffStyleForHydrationWarning = void 0;

var normalizeMarkupForTextOrAttribute = void 0;
var normalizeHTML = void 0;

{
  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, /* canUseEventSystem */true);
  };

  // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807
  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We could have excluded it in the property list instead of
      // adding a special case here, but then it wouldn't be emitted
      // on server rendering (but we *do* want to emit it in SSR).
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE$1) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag = void 0;

  // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement = void 0;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239
      if (type === 'select') {
        var node = domElement;
        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props = void 0;
  switch (tag) {
    case 'iframe':
    case 'object':
    case 'embed':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps = void 0;
  var nextProps = void 0;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps);

  var propKey = void 0;
  var styleName = void 0;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE$1) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
    }
    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();
    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }
    return possibleStandardNames[lowerCasedName] || null;
  }
  return null;
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag = void 0;
  var extraAttributeNames = void 0;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
    case 'embed':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (true &&
    // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML] : undefined;
        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE$1) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');
          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;
        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);
            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true;
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(standardName);
            }
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

function listenToEventResponderEventTypes(eventTypes, element) {
  if (enableFlareAPI) {
    // Get the listening Set for this element. We use this to track
    // what events we're listening to.
    var listeningSet = getListeningSetForElement(element);

    // Go through each target event type of the event responder
    for (var i = 0, length = eventTypes.length; i < length; ++i) {
      var eventType = eventTypes[i];
      var isPassive = !endsWith(eventType, '_active');
      var eventKey = isPassive ? eventType + '_passive' : eventType;
      var targetEventType = isPassive ? eventType : eventType.substring(0, eventType.length - 7);
      if (!listeningSet.has(eventKey)) {
        trapEventForResponderEventSystem(element, targetEventType, isPassive);
        listeningSet.add(eventKey);
      }
    }
  }
}

// We can remove this once the event API is stable and out of a flag
if (enableFlareAPI) {
  setListenToResponderEventTypes(listenToEventResponderEventTypes);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var validateDOMNesting = function () {};
var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';
      case 'frameset':
        return tag === 'frame';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackInDev();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn$1[warnKey]) {
      return;
    }
    didWarn$1[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };
}

// Renderers that don't support persistence
// can re-export everything from this module.

function shim() {
  (function () {
    {
      {
        throw ReactError(Error('The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
}

// Persistence (when unsupported)
var supportsPersistence = false;
var cloneInstance = shim;
var cloneFundamentalInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;
var cloneHiddenInstance = shim;
var cloneHiddenTextInstance = shim;

var SUPPRESS_HYDRATION_WARNING = void 0;
{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';

var STYLE = 'style';

var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type = void 0;
  var namespace = void 0;
  var nodeType = rootContainerInstance.nodeType;
  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }
    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }
  {
    var validatedTag = type.toLowerCase();
    var _ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return { namespace: namespace, ancestorInfo: _ancestorInfo };
  }
  return namespace;
}

function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
  }
  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}

function getPublicInstance(instance) {
  return instance;
}

function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}

function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}

function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace = void 0;
  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);
    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
    parentNamespace = hostContextDev.namespace;
  }
  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}

function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}

function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;
    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }
  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}

function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}

function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}

function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }
  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}

var isPrimaryRenderer = true;
var warnsIfNotActing = true;
// This initialization code may run even on server environments
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.
var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1;

// -------------------
//     Mutation
// -------------------

var supportsMutation = true;

function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}

function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps(domElement, newProps);
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}

function resetTextContent(domElement) {
  setTextContent(domElement, '');
}

function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}

function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function appendChildToContainer(container, child) {
  var parentNode = void 0;
  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  }
  // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918
  var reactRootContainer = container._reactRootContainer;
  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}

function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}

function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}

function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}

function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance;
  // Delete all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.
  var depth = 0;
  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);
    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
      var data = nextNode.data;
      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          parentInstance.removeChild(nextNode);
          return;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
        depth++;
      }
    }
    node = nextNode;
  } while (node);
  // TODO: Warn, we didn't find the end comment boundary.
}

function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
  if (container.nodeType === COMMENT_NODE) {
    clearSuspenseBoundary(container.parentNode, suspenseInstance);
  } else if (container.nodeType === ELEMENT_NODE) {
    clearSuspenseBoundary(container, suspenseInstance);
  } else {
    // Document nodes should never contain suspense boundaries.
  }
}

function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;
  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}

function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}

function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}

function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
}

// -------------------
//     Hydration
// -------------------

var supportsHydration = true;

function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  }
  // This has now been refined to an element node.
  return instance;
}

function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a text node.
  return instance;
}

function canHydrateSuspenseInstance(instance) {
  if (instance.nodeType !== COMMENT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a suspense node.
  return instance;
}

function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}

function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}

function registerSuspenseInstanceRetry(instance, callback) {
  instance._reactRetry = callback;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;
    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }
    if (enableSuspenseServerRenderer) {
      if (nodeType === COMMENT_NODE) {
        break;
      }
      var nodeData = node.data;
      if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
        break;
      }
    }
  }
  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}

function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}

function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, instance);
  // TODO: Possibly defer this until the commit phase where all the events
  // get attached.
  updateFiberProps(instance, props);
  var parentNamespace = void 0;
  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}

function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}

function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling;
  // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.
  var depth = 0;
  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;
      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA) {
        depth++;
      }
    }
    node = node.nextSibling;
  }
  // TODO: Warn, we didn't find the end comment boundary.
  return null;
}

function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) {
      // TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}

function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else if (instance.nodeType === COMMENT_NODE) {
      // TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}

function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}

function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}



function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}

function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}

function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    // TODO: warnForInsertedHydratedSuspense(parentInstance);
  }
}

function mountResponderInstance(responder, responderInstance, responderProps, responderState, instance, rootContainerInstance) {
  // Listen to events
  var doc = rootContainerInstance.ownerDocument;
  var documentBody = doc.body || doc;
  var _ref = responder,
      rootEventTypes = _ref.rootEventTypes,
      targetEventTypes = _ref.targetEventTypes;

  if (targetEventTypes !== null) {
    listenToEventResponderEventTypes(targetEventTypes, documentBody);
  }
  if (rootEventTypes !== null) {
    addRootEventTypesForResponderInstance(responderInstance, rootEventTypes);
    listenToEventResponderEventTypes(rootEventTypes, documentBody);
  }
  mountEventResponder(responder, responderInstance, responderProps, responderState);
  return responderInstance;
}

function unmountResponderInstance(responderInstance) {
  if (enableFlareAPI) {
    // TODO stop listening to targetEventTypes
    unmountEventResponder(responderInstance);
  }
}

function getFundamentalComponentInstance(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var currentFiber = fundamentalInstance.currentFiber,
        impl = fundamentalInstance.impl,
        _props = fundamentalInstance.props,
        state = fundamentalInstance.state;

    var instance = impl.getInstance(null, _props, state);
    precacheFiberNode(currentFiber, instance);
    return instance;
  }
  // Because of the flag above, this gets around the Flow error;
  return null;
}

function mountFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        _props2 = fundamentalInstance.props,
        state = fundamentalInstance.state;

    var onMount = impl.onMount;
    if (onMount !== undefined) {
      onMount(null, instance, _props2, state);
    }
  }
}

function shouldUpdateFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        prevProps = fundamentalInstance.prevProps,
        _props3 = fundamentalInstance.props,
        state = fundamentalInstance.state;

    var shouldUpdate = impl.shouldUpdate;
    if (shouldUpdate !== undefined) {
      return shouldUpdate(null, prevProps, _props3, state);
    }
  }
  return true;
}

function updateFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        prevProps = fundamentalInstance.prevProps,
        _props4 = fundamentalInstance.props,
        state = fundamentalInstance.state;

    var onUpdate = impl.onUpdate;
    if (onUpdate !== undefined) {
      onUpdate(null, instance, prevProps, _props4, state);
    }
  }
}

function unmountFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        _props5 = fundamentalInstance.props,
        state = fundamentalInstance.state;

    var onUnmount = impl.onUnmount;
    if (onUnmount !== undefined) {
      onUnmount(null, instance, _props5, state);
    }
  }
}

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning) {
  var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning ? ' Warning: ' + warning : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning = didExpire ? 'Update expired; will flush synchronously' : null;
      endMark('(Waiting for async callback...)', '(Waiting for async callback...)', warning);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning = fiber.tag === SuspenseComponent || fiber.tag === DehydratedSuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy.type) || 'Unknown';
        warning = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning);
  }
}

function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}

function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];

var fiberStack = void 0;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warningWithoutStack$1(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warningWithoutStack$1(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext = void 0;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};
{
  Object.freeze(emptyContextObject);
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyContextObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }
    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  if (disableLegacyContext) {
    return;
  } else {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;
    if (!contextTypes) {
      return emptyContextObject;
    }

    // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};
    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes_1(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
    }

    // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.
    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  if (disableLegacyContext) {
    return false;
  } else {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  if (disableLegacyContext) {
    return false;
  } else {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  if (disableLegacyContext) {
    return;
  } else {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  if (disableLegacyContext) {
    return;
  } else {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  if (disableLegacyContext) {
    return;
  } else {
    (function () {
      if (!(contextStackCursor.current === emptyContextObject)) {
        {
          throw ReactError(Error('Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  if (disableLegacyContext) {
    return parentContext;
  } else {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes;

    // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.
    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentName(type) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;
          warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }
      return parentContext;
    }

    var childContext = void 0;
    {
      setCurrentPhase('getChildContext');
    }
    startPhaseTimer(fiber, 'getChildContext');
    childContext = instance.getChildContext();
    stopPhaseTimer();
    {
      setCurrentPhase(null);
    }
    for (var contextKey in childContext) {
      (function () {
        if (!(contextKey in childContextTypes)) {
          {
            throw ReactError(Error((getComponentName(type) || 'Unknown') + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
          }
        }
      })();
    }
    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes_1(childContextTypes, childContext, 'child context', name,
      // In practice, there is one case in which we won't get a stack. It's when
      // somebody calls unstable_renderSubtreeIntoContainer() and we process
      // context from the parent component instance. The stack will be missing
      // because it's outside of the reconciliation, and so the pointer has not
      // been set. This is rare and doesn't matter. We'll also remove that API.
      getCurrentFiberStackInDev);
    }

    return _assign({}, parentContext, childContext);
  }
}

function pushContextProvider(workInProgress) {
  if (disableLegacyContext) {
    return false;
  } else {
    var instance = workInProgress.stateNode;
    // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.
    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;

    // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  if (disableLegacyContext) {
    return;
  } else {
    var instance = workInProgress.stateNode;
    (function () {
      if (!instance) {
        {
          throw ReactError(Error('Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext;

      // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.
      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress);
      // Now push the new context and mark that it has changed.
      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    (function () {
      if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
        {
          throw ReactError(Error('Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();

    var node = fiber;
    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;
        case ClassComponent:
          {
            var Component = node.type;
            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }
            break;
          }
      }
      node = node.return;
    } while (node !== null);
    (function () {
      {
        {
          throw ReactError(Error('Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
  }
}

var LegacyRoot = 0;
var BatchedRoot = 1;
var ConcurrentRoot = 2;

var ReactInternals$2 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var _ReactInternals$Sched$1 = ReactInternals$2.SchedulerTracing;
var __interactionsRef = _ReactInternals$Sched$1.__interactionsRef;
var __subscriberRef = _ReactInternals$Sched$1.__subscriberRef;
var unstable_clear = _ReactInternals$Sched$1.unstable_clear;
var unstable_getCurrent = _ReactInternals$Sched$1.unstable_getCurrent;
var unstable_getThreadID = _ReactInternals$Sched$1.unstable_getThreadID;
var unstable_subscribe = _ReactInternals$Sched$1.unstable_subscribe;
var unstable_trace = _ReactInternals$Sched$1.unstable_trace;
var unstable_unsubscribe = _ReactInternals$Sched$1.unstable_unsubscribe;
var unstable_wrap = _ReactInternals$Sched$1.unstable_wrap;

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var Scheduler_runWithPriority = unstable_runWithPriority;
var Scheduler_scheduleCallback = unstable_scheduleCallback;
var Scheduler_cancelCallback = unstable_cancelCallback;
var Scheduler_shouldYield = unstable_shouldYield;
var Scheduler_requestPaint = unstable_requestPaint;
var Scheduler_now = unstable_now;
var Scheduler_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
var Scheduler_ImmediatePriority = unstable_ImmediatePriority;
var Scheduler_UserBlockingPriority = unstable_UserBlockingPriority;
var Scheduler_NormalPriority = unstable_NormalPriority;
var Scheduler_LowPriority = unstable_LowPriority;
var Scheduler_IdlePriority = unstable_IdlePriority;


if (enableSchedulerTracing) {
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  (function () {
    if (!(__interactionsRef != null && __interactionsRef.current != null)) {
      {
        throw ReactError(Error('It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling'));
      }
    }
  })();
}

var fakeCallbackNode = {};

// Except for NoPriority, these correspond to Scheduler priorities. We use
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.
var ImmediatePriority = 99;
var UserBlockingPriority$2 = 98;
var NormalPriority = 97;
var LowPriority = 96;
var IdlePriority = 95;
// NoPriority is the absence of priority. Also React-only.
var NoPriority = 90;

var shouldYield = Scheduler_shouldYield;
var requestPaint =
// Fall back gracefully if we're running an older version of Scheduler.
Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};

var syncQueue = null;
var immediateQueueCallbackNode = null;
var isFlushingSyncQueue = false;
var initialTimeMs = Scheduler_now();

// If the initial timestamp is reasonably small, use Scheduler's `now` directly.
// This will be the case for modern browsers that support `performance.now`. In
// older browsers, Scheduler falls back to `Date.now`, which returns a Unix
// timestamp. In that case, subtract the module initialization time to simulate
// the behavior of performance.now and keep our times small enough to fit
// within 32 bits.
// TODO: Consider lifting this into Scheduler.
var now = initialTimeMs < 10000 ? Scheduler_now : function () {
  return Scheduler_now() - initialTimeMs;
};

function getCurrentPriorityLevel() {
  switch (Scheduler_getCurrentPriorityLevel()) {
    case Scheduler_ImmediatePriority:
      return ImmediatePriority;
    case Scheduler_UserBlockingPriority:
      return UserBlockingPriority$2;
    case Scheduler_NormalPriority:
      return NormalPriority;
    case Scheduler_LowPriority:
      return LowPriority;
    case Scheduler_IdlePriority:
      return IdlePriority;
    default:
      (function () {
        {
          {
            throw ReactError(Error('Unknown priority level.'));
          }
        }
      })();
  }
}

function reactPriorityToSchedulerPriority(reactPriorityLevel) {
  switch (reactPriorityLevel) {
    case ImmediatePriority:
      return Scheduler_ImmediatePriority;
    case UserBlockingPriority$2:
      return Scheduler_UserBlockingPriority;
    case NormalPriority:
      return Scheduler_NormalPriority;
    case LowPriority:
      return Scheduler_LowPriority;
    case IdlePriority:
      return Scheduler_IdlePriority;
    default:
      (function () {
        {
          {
            throw ReactError(Error('Unknown priority level.'));
          }
        }
      })();
  }
}

function runWithPriority$2(reactPriorityLevel, fn) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_runWithPriority(priorityLevel, fn);
}

function scheduleCallback(reactPriorityLevel, callback, options) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_scheduleCallback(priorityLevel, callback, options);
}

function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback];
    // Flush the queue in the next tick, at the earliest.
    immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }
  return fakeCallbackNode;
}

function cancelCallback(callbackNode) {
  if (callbackNode !== fakeCallbackNode) {
    Scheduler_cancelCallback(callbackNode);
  }
}

function flushSyncCallbackQueue() {
  if (immediateQueueCallbackNode !== null) {
    Scheduler_cancelCallback(immediateQueueCallbackNode);
  }
  flushSyncCallbackQueueImpl();
}

function flushSyncCallbackQueueImpl() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrancy.
    isFlushingSyncQueue = true;
    var i = 0;
    try {
      var _isSync = true;
      var queue = syncQueue;
      runWithPriority$2(ImmediatePriority, function () {
        for (; i < queue.length; i++) {
          var callback = queue[i];
          do {
            callback = callback(_isSync);
          } while (callback !== null);
        }
      });
      syncQueue = null;
    } catch (error) {
      // If something throws, leave the remaining callbacks on the queue.
      if (syncQueue !== null) {
        syncQueue = syncQueue.slice(i + 1);
      }
      // Resume flushing in the next tick
      Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
      throw error;
    } finally {
      isFlushingSyncQueue = false;
    }
  }
}

var NoMode = 0;
var StrictMode = 1;
// TODO: Remove BatchedMode and ConcurrentMode by reading from the root
// tag instead
var BatchedMode = 2;
var ConcurrentMode = 4;
var ProfileMode = 8;

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

var NoWork = 0;
var Never = 1;
var Sync = MAX_SIGNED_31_BIT_INT;
var Batched = Sync - 1;

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = Batched - 1;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
}

function expirationTimeToMs(expirationTime) {
  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

// TODO: This corresponds to Scheduler's NormalPriority, not LowPriority. Update
// the names to reflect.
var LOW_PRIORITY_EXPIRATION = 5000;
var LOW_PRIORITY_BATCH_SIZE = 250;

function computeAsyncExpiration(currentTime) {
  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
}

function computeSuspenseExpiration(currentTime, timeoutMs) {
  // TODO: Should we warn if timeoutMs is lower than the normal pri expiration time?
  return computeExpirationBucket(currentTime, timeoutMs, LOW_PRIORITY_BATCH_SIZE);
}

// We intentionally set a higher expiration time for interactive updates in
// dev than in production.
//
// If the main thread is being blocked so long that you hit the expiration,
// it's a problem that could be solved with better scheduling.
//
// People will be more likely to notice this and fix it with the long
// expiration time in development.
//
// In production we opt for better UX at the risk of masking scheduling
// problems, by expiring fast.
var HIGH_PRIORITY_EXPIRATION = 500;
var HIGH_PRIORITY_BATCH_SIZE = 100;

function computeInteractiveExpiration(currentTime) {
  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
}

function inferPriorityFromExpirationTime(currentTime, expirationTime) {
  if (expirationTime === Sync) {
    return ImmediatePriority;
  }
  if (expirationTime === Never) {
    return IdlePriority;
  }
  var msUntil = expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);
  if (msUntil <= 0) {
    return ImmediatePriority;
  }
  if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {
    return UserBlockingPriority$2;
  }
  if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {
    return NormalPriority;
  }

  // TODO: Handle LowPriority

  // Assume anything lower has idle priority
  return IdlePriority;
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning$1 = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning$1.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;

    var node = fiber;
    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }
      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = [];

  // Tracks components we have already warned about.
  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' &&
    // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();
    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();
    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();
    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });

      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });

      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();
    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });

      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();
    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });

      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    }

    // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
      warningWithoutStack$1(false, 'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://fb.me/react-async-component-lifecycle-hooks for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
      warningWithoutStack$1(false, 'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-async-component-lifecycle-hooks for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
      warningWithoutStack$1(false, 'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-async-component-lifecycle-hooks for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      lowPriorityWarning$1(false, 'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-async-component-lifecycle-hooks for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      lowPriorityWarning$1(false, 'componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-async-component-lifecycle-hooks for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      lowPriorityWarning$1(false, 'componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-async-component-lifecycle-hooks for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map();

  // Tracks components we have already warned about.
  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }
      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);

      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-legacy-context', strictRootComponentStack, sortedNames);
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

// Resolves type to a family.


// Used by React Refresh runtime through DevTools Global Hook.


var resolveFamily = null;
// $FlowFixMe Flow gets confused by a WeakSet feature check below.
var failedBoundaries = null;

var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};

function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }
    var family = resolveFamily(type);
    if (family === undefined) {
      return type;
    }
    // Use the latest known implementation.
    return family.current;
  }
}

function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}

function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }
    var family = resolveFamily(type);
    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);
        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };
          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }
          return syntheticType;
        }
      }
      return type;
    }
    // Use the latest known implementation.
    return family.current;
  }
}

function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type;

    // If we got here, we know types aren't === equal.
    var needsCompareFamilies = false;

    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }
          break;
        }
      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }
          break;
        }
      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }
          break;
        }
      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }
          break;
        }
      default:
        return false;
    }

    // Check if both types have a family and it's the same one.
    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);
      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }
    return false;
  }
}

function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }
    if (typeof WeakSet !== 'function') {
      return;
    }
    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }
    failedBoundaries.add(fiber);
  }
}

var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }
    var _staleFamilies = update.staleFamilies,
        _updatedFamilies = update.updatedFamilies;

    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, _updatedFamilies, _staleFamilies);
    });
  }
};

var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }
    flushPassiveEffects();
    updateContainerAtExpirationTime(element, root, null, Sync, null);
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;


    var candidateType = null;
    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;
      case ForwardRef:
        candidateType = type.render;
        break;
      default:
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;
    if (candidateType !== null) {
      var family = resolveFamily(candidateType);
      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          needsRender = true;
        }
      }
    }
    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }
    if (needsRemount || needsRender) {
      scheduleWork(fiber, Sync);
    }
    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }
    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;


    var candidateType = null;
    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;
      case ForwardRef:
        candidateType = type.render;
        break;
      default:
        break;
    }

    var didMatch = false;
    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
    if (foundHostInstances) {
      return;
    }
    // If we didn't find any host children, fallback to closest host parent.
    var node = fiber;
    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;
        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;
        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }
      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }
      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;
    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode);
        // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === fiber) {
        return foundHostInstances;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
  return false;
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = _assign({}, baseProps);
    var defaultProps = Component.defaultProps;
    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
    return props;
  }
  return baseProps;
}

function readLazyComponentType(lazyComponent) {
  var status = lazyComponent._status;
  var result = lazyComponent._result;
  switch (status) {
    case Resolved:
      {
        var Component = result;
        return Component;
      }
    case Rejected:
      {
        var error = result;
        throw error;
      }
    case Pending:
      {
        var thenable = result;
        throw thenable;
      }
    default:
      {
        lazyComponent._status = Pending;
        var ctor = lazyComponent._ctor;
        var _thenable = ctor();
        _thenable.then(function (moduleObject) {
          if (lazyComponent._status === Pending) {
            var defaultExport = moduleObject.default;
            {
              if (defaultExport === undefined) {
                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            lazyComponent._status = Resolved;
            lazyComponent._result = defaultExport;
          }
        }, function (error) {
          if (lazyComponent._status === Pending) {
            lazyComponent._status = Rejected;
            lazyComponent._result = error;
          }
        });
        // Handle synchronous thenables.
        switch (lazyComponent._status) {
          case Resolved:
            return lazyComponent._result;
          case Rejected:
            throw lazyComponent._result;
        }
        lazyComponent._result = _thenable;
        throw _thenable;
      }
  }
}

var valueCursor = createCursor(null);

var rendererSigil = void 0;
{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastContextWithAllBitsObserved = null;

var isDisallowedContextReadInDEV = false;

function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;
  {
    isDisallowedContextReadInDEV = false;
  }
}

function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}

function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}

function pushProvider(providerFiber, nextValue) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(valueCursor, context._currentValue, providerFiber);

    context._currentValue = nextValue;
    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(valueCursor, context._currentValue2, providerFiber);

    context._currentValue2 = nextValue;
    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}

function popProvider(providerFiber) {
  var currentValue = valueCursor.current;

  pop(valueCursor, providerFiber);

  var context = providerFiber.type._context;
  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
  } else {
    context._currentValue2 = currentValue;
  }
}

function calculateChangedBits(context, newValue, oldValue) {
  if (is(oldValue, newValue)) {
    // No change
    return 0;
  } else {
    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

    {
      !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
    }
    return changedBits | 0;
  }
}

function scheduleWorkOnParentPath(parent, renderExpirationTime) {
  // Update the child expiration time of all the ancestors, including
  // the alternates.
  var node = parent;
  while (node !== null) {
    var alternate = node.alternate;
    if (node.childExpirationTime < renderExpirationTime) {
      node.childExpirationTime = renderExpirationTime;
      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
        alternate.childExpirationTime = renderExpirationTime;
      }
    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
      alternate.childExpirationTime = renderExpirationTime;
    } else {
      // Neither alternate was updated, which means the rest of the
      // ancestor path already has sufficient priority.
      break;
    }
    node = node.return;
  }
}

function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;
  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }
  while (fiber !== null) {
    var nextFiber = void 0;

    // Visit this fiber.
    var list = fiber.dependencies;
    if (list !== null) {
      nextFiber = fiber.child;

      var dependency = list.firstContext;
      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
          // Match! Schedule an update on this fiber.

          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var update = createUpdate(renderExpirationTime, null);
            update.tag = ForceUpdate;
            // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.
            enqueueUpdate(fiber, update);
          }

          if (fiber.expirationTime < renderExpirationTime) {
            fiber.expirationTime = renderExpirationTime;
          }
          var alternate = fiber.alternate;
          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
            alternate.expirationTime = renderExpirationTime;
          }

          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);

          // Mark the expiration time on the list, too.
          if (list.expirationTime < renderExpirationTime) {
            list.expirationTime = renderExpirationTime;
          }

          // Since we already found a match, we can stop traversing the
          // dependency list.
          break;
        }
        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedSuspenseComponent) {
      // If a dehydrated suspense component is in this subtree, we don't know
      // if it will have any context consumers in it. The best we can do is
      // mark it as having updates on its children.
      if (fiber.expirationTime < renderExpirationTime) {
        fiber.expirationTime = renderExpirationTime;
      }
      var _alternate = fiber.alternate;
      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
        _alternate.expirationTime = renderExpirationTime;
      }
      // This is intentionally passing this fiber as the parent
      // because we want to schedule this fiber as having work
      // on its children. We'll use the childExpirationTime on
      // this fiber to indicate that a context has changed.
      scheduleWorkOnParentPath(fiber, renderExpirationTime);
      nextFiber = fiber.sibling;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;
      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }
        var sibling = nextFiber.sibling;
        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        }
        // No more siblings. Traverse up.
        nextFiber = nextFiber.return;
      }
    }
    fiber = nextFiber;
  }
}

function prepareToReadContext(workInProgress, renderExpirationTime) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;

  var dependencies = workInProgress.dependencies;
  if (dependencies !== null) {
    var firstContext = dependencies.firstContext;
    if (firstContext !== null) {
      if (dependencies.expirationTime >= renderExpirationTime) {
        // Context list has a pending update. Mark that this fiber performed work.
        markWorkInProgressReceivedUpdate();
      }
      // Reset the work-in-progress list
      dependencies.firstContext = null;
    }
  }
}

function readContext(context, observedBits) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
  }

  if (lastContextWithAllBitsObserved === context) {
    // Nothing to do. We already observe everything in this context.
  } else if (observedBits === false || observedBits === 0) {
    // Do not observe any updates.
  } else {
    var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.
    if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
      // Observe all updates.
      lastContextWithAllBitsObserved = context;
      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
    } else {
      resolvedObservedBits = observedBits;
    }

    var contextItem = {
      context: context,
      observedBits: resolvedObservedBits,
      next: null
    };

    if (lastContextDependency === null) {
      (function () {
        if (!(currentlyRenderingFiber !== null)) {
          {
            throw ReactError(Error('Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().'));
          }
        }
      })();

      // This is the first dependency for this component. Create a new list.
      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        expirationTime: NoWork,
        firstContext: contextItem,
        responders: null
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }
  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which can be
// mutated and processed asynchronously before it is committed — a form of
// double buffering. If a work-in-progress render is discarded before finishing,
// we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3;

// Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.
var hasForceUpdate = false;

var didWarnUpdateInsideUpdate = void 0;
var currentlyProcessingQueue = void 0;

{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
  
}

function createUpdateQueue(baseState) {
  var queue = {
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,

    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,

    firstEffect: null,
    lastEffect: null,

    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime, suspenseConfig) {
  var update = {
    expirationTime: expirationTime,
    suspenseConfig: suspenseConfig,

    tag: UpdateState,
    payload: null,
    callback: null,

    next: null,
    nextEffect: null
  };
  {
    update.priority = getCurrentPriorityLevel();
  }
  return update;
}

function appendUpdateToQueue(queue, update) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
}

function enqueueUpdate(fiber, update) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1 = void 0;
  var queue2 = void 0;
  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;
    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;
    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {
        // Both owners have an update queue.
      }
    }
  }
  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update);
      appendUpdateToQueue(queue2, update);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update);
      // But we still need to update the `lastUpdate` pointer of queue2.
      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}

function enqueueCapturedUpdate(workInProgress, update) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;
  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  }

  // Append the update to the end of the list.
  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;
  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }
  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var _payload = update.payload;
        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }
          var nextState = _payload.call(instance, prevState, nextProps);
          {
            exitDisallowedContextReadInDEV();
          }
          return nextState;
        }
        // State object
        return _payload;
      }
    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough
    case UpdateState:
      {
        var _payload2 = update.payload;
        var partialState = void 0;
        if (typeof _payload2 === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload2.call(instance, prevState, nextProps);
            }
          }
          partialState = _payload2.call(instance, prevState, nextProps);
          {
            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload2;
        }
        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        }
        // Merge the partial state and the previous state.
        return _assign({}, prevState, partialState);
      }
    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }
  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;

  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  }

  // These values may change as we process the queue.
  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork;

  // Iterate through the list of updates to compute the result.
  var update = queue.firstUpdate;
  var resultState = newBaseState;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update;
        // Since this is the first update that was skipped, the current result
        // is the new base state.
        newBaseState = resultState;
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime < updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority.

      // Mark the event time of this update as relevant to this render pass.
      // TODO: This should ideally use the true event time of this update rather than
      // its priority which is a derived and not reverseable value.
      // TODO: We should skip this update if it was already committed but currently
      // we have no way of detecting the difference between a committed and suspended
      // update here.
      markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig);

      // Process it and compute a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;
      if (_callback !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    }
    // Continue to the next update.
    update = update.next;
  }

  // Separately, iterate though the list of captured updates.
  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;
  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;
    if (_updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update;
        // If this is the first update that was skipped, the current result is
        // the new base state.
        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime < _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback2 = update.callback;
      if (_callback2 !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }
    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }
  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }
  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate;

  // Set the remaining expiration time to be whatever is remaining in the queue.
  // This should be fine because the only two other things that contribute to
  // expiration time are props and context. We're already in the middle of the
  // begin phase by the time we start processing the queue, so we've already
  // dealt with the props. Context in components that specify
  // shouldComponentUpdate is tricky; but we'll have to account for
  // that regardless.
  workInProgress.expirationTime = newExpirationTime;
  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  (function () {
    if (!(typeof callback === 'function')) {
      {
        throw ReactError(Error('Invalid argument passed as callback. Expected a function. Instead received: ' + callback));
      }
    }
  })();
  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}

function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}

function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    }
    // Clear the list of captured updates.
    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  }

  // Commit the effects
  commitUpdateEffects(finishedQueue.firstEffect, instance);
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;

  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
}

function commitUpdateEffects(effect, instance) {
  while (effect !== null) {
    var _callback3 = effect.callback;
    if (_callback3 !== null) {
      effect.callback = null;
      callCallback(_callback3, instance);
    }
    effect = effect.nextEffect;
  }
}

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;


function requestCurrentSuspenseConfig() {
  return ReactCurrentBatchConfig.suspense;
}

var fakeInternalInstance = {};
var isArray$1 = Array.isArray;

// React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.
var emptyRefsObject = new React.Component().refs;

var didWarnAboutStateAssignmentForComponent = void 0;
var didWarnAboutUninitializedState = void 0;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
var didWarnAboutUndefinedDerivedState = void 0;
var warnOnUndefinedDerivedState = void 0;
var warnOnInvalidCallback$1 = void 0;
var didWarnAboutDirectlyAssigningPropsToState = void 0;
var didWarnAboutContextTypeAndContextTypes = void 0;
var didWarnAboutInvalidateContextType = void 0;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();

  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }
    var key = callerName + '_' + callback;
    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(type) || 'Component';
      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      (function () {
        {
          {
            throw ReactError(Error('_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).'));
          }
        }
      })();
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(ctor, partialState);
  }
  // Merge the partial state and the previous state.
  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState;

  // Once the update queue is empty, persist the derived state onto the
  // base state.
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTime();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);

    var update = createUpdate(expirationTime, suspenseConfig);
    update.payload = payload;
    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }
      update.callback = callback;
    }

    if (revertPassiveEffectsChange) {
      flushPassiveEffects();
    }
    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTime();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);

    var update = createUpdate(expirationTime, suspenseConfig);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }
      update.callback = callback;
    }

    if (revertPassiveEffectsChange) {
      flushPassiveEffects();
    }
    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTime();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);

    var update = createUpdate(expirationTime, suspenseConfig);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }
      update.callback = callback;
    }

    if (revertPassiveEffectsChange) {
      flushPassiveEffects();
    }
    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;
  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;
  {
    var name = getComponentName(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextType = !instance.contextType;
    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;

    if (disableLegacyContext) {
      if (ctor.childContextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy childContextTypes API which is no longer supported. ' + 'Use React.createContext() instead.', name);
      }
      if (ctor.contextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with static contextType instead.', name);
      }
    } else {
      var noInstanceContextTypes = !instance.contextTypes;
      !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);
        warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
    }
    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== newProps;
    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;
    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
    }
    if (typeof instance.getChildContext === 'function') {
      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance;
  // The instance needs access to the fiber so that it can schedule updates
  set(instance, workInProgress);
  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid =
      // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);

        var addendum = '';
        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }
        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else if (!disableLegacyContext) {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  }

  // Instantiate twice to help detect side-effects.
  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(ctor) || 'Component';
      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.
    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;
      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }
      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }
      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }
      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(ctor) || 'Component';
        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
        }
      }
    }
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.
  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }
  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }
  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }
  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress.type) || 'Component';
      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

// Invokes the mount life-cycles on a previously never rendered instance.
function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;

  var contextType = ctor.contextType;
  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else if (disableLegacyContext) {
    instance.context = emptyContextObject;
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentName(ctor) || 'Component';
      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);
        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  }

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance);
    // If we had additional state updates during this life-cycle, let's
    // process them now.
    updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;
  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else if (!disableLegacyContext) {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }
  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }
      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;

  return shouldUpdate;
}

// Invokes the update life-cycles and returns false if it shouldn't rerender.
function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);

  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;
  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else if (!disableLegacyContext) {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }
      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;

  return shouldUpdate;
}

var didWarnAboutMaps = void 0;
var didWarnAboutGenerators = void 0;
var didWarnAboutStringRefInStrictMode = void 0;
var ownerHasKeyUseWarning = void 0;
var ownerHasFunctionTypeWarning = void 0;
var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefInStrictMode = {};

  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    (function () {
      if (!(typeof child._store === 'object')) {
        {
          throw ReactError(Error('React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
  };
}

var isArray = Array.isArray;

function coerceRef(returnFiber, current$$1, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      if (returnFiber.mode & StrictMode) {
        var componentName = getComponentName(returnFiber.type) || 'Component';
        if (!didWarnAboutStringRefInStrictMode[componentName]) {
          warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));
          didWarnAboutStringRefInStrictMode[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        (function () {
          if (!(ownerFiber.tag === ClassComponent)) {
            {
              throw ReactError(Error('Function components cannot have refs. Did you mean to use React.forwardRef()?'));
            }
          }
        })();
        inst = ownerFiber.stateNode;
      }
      (function () {
        if (!inst) {
          {
            throw ReactError(Error('Missing owner for string ref ' + mixedRef + '. This error is likely caused by a bug in React. Please file an issue.'));
          }
        }
      })();
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
        return current$$1.ref;
      }
      var ref = function (value) {
        var refs = inst.refs;
        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = inst.refs = {};
        }
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      (function () {
        if (!(typeof mixedRef === 'string')) {
          {
            throw ReactError(Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.'));
          }
        }
      })();
      (function () {
        if (!element._owner) {
          {
            throw ReactError(Error('Element ref was specified as a string (' + mixedRef + ') but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.'));
          }
        }
      })();
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
    }
    (function () {
      {
        {
          throw ReactError(Error('Objects are not valid as a React child (found: ' + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + ').' + addendum));
        }
      }
    })();
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current$$1 = newFiber.alternate;
    if (current$$1 !== null) {
      var oldIndex = current$$1.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current$$1, element, expirationTime) {
    if (current$$1 !== null && (current$$1.elementType === element.type || (
    // Keep this check inline so it only runs on the false path:
    isCompatibleFamilyForHotReloading(current$$1, element)))) {
      // Move based on index
      var existing = useFiber(current$$1, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current$$1, element);
      existing.return = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current$$1, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current$$1, portal, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
    if (current$$1 === null || current$$1.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }
        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }
        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (_newFiber === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    (function () {
      if (!(typeof iteratorFn === 'function')) {
        {
          throw ReactError(Error('An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' &&
      // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
        didWarnAboutGenerators = true;
      }

      // Warn about using Maps as children
      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
        didWarnAboutMaps = true;
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    (function () {
      if (!(newChildren != null)) {
        {
          throw ReactError(Error('An iterable object provided no iterator.'));
        }
      }
    })();

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type || (
        // Keep this check inline so it only runs on the false path:
        isCompatibleFamilyForHotReloading(child, element))) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionComponent:
          {
            var Component = returnFiber.type;
            (function () {
              {
                {
                  throw ReactError(Error((Component.displayName || Component.name || 'Component') + '(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.'));
                }
              }
            })();
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);

function cloneChildFibers(current$$1, workInProgress) {
  (function () {
    if (!(current$$1 === null || workInProgress.child === current$$1.child)) {
      {
        throw ReactError(Error('Resuming work not yet implemented.'));
      }
    }
  })();

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild.return = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }
  newChild.sibling = null;
}

// Reset a workInProgress child set to prepare it for a second pass.
function resetChildFibers(workInProgress, renderExpirationTime) {
  var child = workInProgress.child;
  while (child !== null) {
    resetWorkInProgress(child, renderExpirationTime);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};

var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  (function () {
    if (!(c !== NO_CONTEXT)) {
      {
        throw ReactError(Error('Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber);
  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);

  // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.
  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance);
  // Now that we know this function doesn't throw, replace it.
  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

  // Don't push this Fiber's context unless it's unique.
  if (context === nextContext) {
    return;
  }

  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0;

// The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.
var SubtreeSuspenseContextMask = 1;

// Subtree Flags:

// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.
var InvisibleParentSuspenseContext = 1;

// Shallow Flags:

// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.
var ForceSuspenseFallback = 2;

var suspenseStackCursor = createCursor(DefaultSuspenseContext);

function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}

function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}

function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}

function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}

function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}

function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

// TODO: This is now an empty object. Should we switch this to a boolean?
// Alternatively we can make this use an effect tag similar to SuspenseList.


function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  var nextState = workInProgress.memoizedState;
  if (nextState !== null) {
    return false;
  }
  var props = workInProgress.memoizedProps;
  // In order to capture, the Suspense component must have a fallback prop.
  if (props.fallback === undefined) {
    return false;
  }
  // Regular boundaries always capture.
  if (props.unstable_avoidThisFallback !== true) {
    return true;
  }
  // If it's a boundary we should avoid, then we prefer to bubble up to the
  // parent boundary if it is currently invisible.
  if (hasInvisibleParent) {
    return false;
  }
  // If the parent is not able to handle it, we must handle it.
  return true;
}

function findFirstSuspended(row) {
  var node = row;
  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;
      if (state !== null) {
        return node;
      }
    } else if (node.tag === SuspenseListComponent &&
    // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.effectTag & DidCapture) !== NoEffect;
      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === row) {
      return null;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  return null;
}

var NoEffect$1 = /*             */0;
var UnmountSnapshot = /*      */2;
var UnmountMutation = /*      */4;
var MountMutation = /*        */8;
var UnmountLayout = /*        */16;
var MountLayout = /*          */32;
var MountPassive = /*         */64;
var UnmountPassive = /*       */128;

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;


var didWarnAboutMismatchedHooksForComponent = void 0;
{
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderExpirationTime$1 = NoWork;
// The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.
var currentlyRenderingFiber$1 = null;

// Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.
var currentHook = null;
var nextCurrentHook = null;
var firstWorkInProgressHook = null;
var workInProgressHook = null;
var nextWorkInProgressHook = null;

var remainingExpirationTime = NoWork;
var componentUpdateQueue = null;
var sideEffectTag = 0;

// Updates scheduled during render will trigger an immediate re-render at the
// end of the current pass. We can't store these updates on the normal queue,
// because if the work is aborted, they should be discarded. Because this is
// a relatively rare case, we also don't want to add an additional field to
// either the hook or queue object types. So we store them in a lazily create
// map of queue -> render-phase updates, which are discarded once the component
// completes without re-rendering.

// Whether an update was scheduled during the currently executing render pass.
var didScheduleRenderPhaseUpdate = false;
// Lazily created map of render-phase updates
var renderPhaseUpdates = null;
// Counter to prevent infinite loops.
var numberOfReRenders = 0;
var RE_RENDER_LIMIT = 25;

// In DEV, this is the name of the currently executing primitive hook
var currentHookNameInDev = null;

// In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.
var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1;

// In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.
var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;
      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      warning$1(false, '%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentName(currentlyRenderingFiber$1.type);
    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';

        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;

          var row = i + 1 + '. ' + oldHookName;

          // Extra space so second column lines up
          // lol @ IE not supporting String#repeat
          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';

          table += row;
        }

        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  (function () {
    {
      {
        throw ReactError(Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.'));
      }
    }
  })();
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }
    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, '[' + prevDeps.join(', ') + ']', '[' + nextDeps.join(', ') + ']');
    }
  }
  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (is(nextDeps[i], prevDeps[i])) {
      continue;
    }
    return false;
  }
  return true;
}

function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
  renderExpirationTime$1 = nextRenderExpirationTime;
  currentlyRenderingFiber$1 = workInProgress;
  nextCurrentHook = current !== null ? current.memoizedState : null;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1;
    // Used for hot reloading:
    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  }

  // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;

  // remainingExpirationTime = NoWork;
  // componentUpdateQueue = null;

  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;
  // sideEffectTag = 0;

  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because nextCurrentHook === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)

  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so nextCurrentHook would be null during updates and mounts.
  {
    if (nextCurrentHook !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, refOrContext);

  if (didScheduleRenderPhaseUpdate) {
    do {
      didScheduleRenderPhaseUpdate = false;
      numberOfReRenders += 1;

      // Start over from the beginning of the list
      nextCurrentHook = current !== null ? current.memoizedState : null;
      nextWorkInProgressHook = firstWorkInProgressHook;

      currentHook = null;
      workInProgressHook = null;
      componentUpdateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;

      children = Component(props, refOrContext);
    } while (didScheduleRenderPhaseUpdate);

    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  var renderedWork = currentlyRenderingFiber$1;

  renderedWork.memoizedState = firstWorkInProgressHook;
  renderedWork.expirationTime = remainingExpirationTime;
  renderedWork.updateQueue = componentUpdateQueue;
  renderedWork.effectTag |= sideEffectTag;

  {
    renderedWork._debugHookTypes = hookTypesDev;
  }

  // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;

  renderExpirationTime$1 = NoWork;
  currentlyRenderingFiber$1 = null;

  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0;

  // These were reset above
  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;

  (function () {
    if (!!didRenderTooFewHooks) {
      {
        throw ReactError(Error('Rendered fewer hooks than expected. This may be caused by an accidental early return statement.'));
      }
    }
  })();

  return children;
}

function bailoutHooks(current, workInProgress, expirationTime) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.effectTag &= ~(Passive | Update);
  if (current.expirationTime <= expirationTime) {
    current.expirationTime = NoWork;
  }
}

function resetHooks() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  // This is used to reset the state of this module when a component throws.
  // It's also called inside mountIndeterminateComponent if we determine the
  // component is a module-style component.
  renderExpirationTime$1 = NoWork;
  currentlyRenderingFiber$1 = null;

  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;

    currentHookNameInDev = null;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0;

  didScheduleRenderPhaseUpdate = false;
  renderPhaseUpdates = null;
  numberOfReRenders = 0;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,

    baseState: null,
    queue: null,
    baseUpdate: null,

    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    firstWorkInProgressHook = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }
  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;

    currentHook = nextCurrentHook;
    nextCurrentHook = currentHook !== null ? currentHook.next : null;
  } else {
    // Clone from the current hook.
    (function () {
      if (!(nextCurrentHook !== null)) {
        {
          throw ReactError(Error('Rendered more hooks than during the previous render.'));
        }
      }
    })();
    currentHook = nextCurrentHook;

    var newHook = {
      memoizedState: currentHook.memoizedState,

      baseState: currentHook.baseState,
      queue: currentHook.queue,
      baseUpdate: currentHook.baseUpdate,

      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      workInProgressHook = firstWorkInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }
    nextCurrentHook = currentHook.next;
  }
  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null
  };
}

function basicStateReducer(state, action) {
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState = void 0;
  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }
  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null,
  // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;
  (function () {
    if (!(queue !== null)) {
      {
        throw ReactError(Error('Should have a queue. This is likely a bug in React. Please file an issue.'));
      }
    }
  })();

  queue.lastRenderedReducer = reducer;

  if (numberOfReRenders > 0) {
    // This is a re-render. Apply the new render phase updates to the previous
    var _dispatch = queue.dispatch;
    if (renderPhaseUpdates !== null) {
      // Render phase updates are stored in a map of queue -> linked list
      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
      if (firstRenderPhaseUpdate !== undefined) {
        renderPhaseUpdates.delete(queue);
        var newState = hook.memoizedState;
        var update = firstRenderPhaseUpdate;
        do {
          // Process this render phase update. We don't have to check the
          // priority because it will always be the same as the current
          // render's.
          var _action = update.action;
          newState = reducer(newState, _action);
          update = update.next;
        } while (update !== null);

        // Mark that the fiber performed work, but only if the new state is
        // different from the current state.
        if (!is(newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = newState;
        // Don't persist the state accumulated from the render phase updates to
        // the base state unless the queue is empty.
        // TODO: Not sure if this is the desired semantics, but it's what we
        // do for gDSFP. I can't remember why.
        if (hook.baseUpdate === queue.last) {
          hook.baseState = newState;
        }

        queue.lastRenderedState = newState;

        return [newState, _dispatch];
      }
    }
    return [hook.memoizedState, _dispatch];
  }

  // The last update in the entire queue
  var last = queue.last;
  // The last update that is part of the base state.
  var baseUpdate = hook.baseUpdate;
  var baseState = hook.baseState;

  // Find the first unprocessed update.
  var first = void 0;
  if (baseUpdate !== null) {
    if (last !== null) {
      // For the first update, the queue is a circular linked list where
      // `queue.last.next = queue.first`. Once the first update commits, and
      // the `baseUpdate` is no longer empty, we can unravel the list.
      last.next = null;
    }
    first = baseUpdate.next;
  } else {
    first = last !== null ? last.next : null;
  }
  if (first !== null) {
    var _newState = baseState;
    var newBaseState = null;
    var newBaseUpdate = null;
    var prevUpdate = baseUpdate;
    var _update = first;
    var didSkip = false;
    do {
      var updateExpirationTime = _update.expirationTime;
      if (updateExpirationTime < renderExpirationTime$1) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        if (!didSkip) {
          didSkip = true;
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        }
        // Update the remaining priority in the queue.
        if (updateExpirationTime > remainingExpirationTime) {
          remainingExpirationTime = updateExpirationTime;
        }
      } else {
        // This update does have sufficient priority.

        // Mark the event time of this update as relevant to this render pass.
        // TODO: This should ideally use the true event time of this update rather than
        // its priority which is a derived and not reverseable value.
        // TODO: We should skip this update if it was already committed but currently
        // we have no way of detecting the difference between a committed and suspended
        // update here.
        markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig);

        // Process this update.
        if (_update.eagerReducer === reducer) {
          // If this update was processed eagerly, and its reducer matches the
          // current reducer, we can use the eagerly computed state.
          _newState = _update.eagerState;
        } else {
          var _action2 = _update.action;
          _newState = reducer(_newState, _action2);
        }
      }
      prevUpdate = _update;
      _update = _update.next;
    } while (_update !== null && _update !== first);

    if (!didSkip) {
      newBaseUpdate = prevUpdate;
      newBaseState = _newState;
    }

    // Mark that the fiber performed work, but only if the new state is
    // different from the current state.
    if (!is(_newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = _newState;
    hook.baseUpdate = newBaseUpdate;
    hook.baseState = newBaseState;

    queue.lastRenderedState = _newState;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();
  if (typeof initialState === 'function') {
    initialState = initialState();
  }
  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null,
  // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer, initialState);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };
  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var _lastEffect = componentUpdateQueue.lastEffect;
    if (_lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = _lastEffect.next;
      _lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }
  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();
  var ref = { current: initialValue };
  {
    Object.seal(ref);
  }
  hook.memoizedState = ref;
  return ref;
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
}

function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;
    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;
      if (areHookInputsEqual(nextDeps, prevDeps)) {
        pushEffect(NoEffect$1, create, destroy, nextDeps);
        return;
      }
    }
  }

  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }
  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function updateEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }
  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function mountLayoutEffect(create, deps) {
  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;
    var _inst = create();
    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;
    {
      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
    }
    var _inst2 = create();
    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  }

  // TODO: If deps are provided, should we skip comparing the ref itself?
  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;

  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  }

  // TODO: If deps are provided, should we skip comparing the ref itself?
  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;

  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {
  // This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;
  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];
      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;
  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];
      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function dispatchAction(fiber, queue, action) {
  (function () {
    if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
      {
        throw ReactError(Error('Too many re-renders. React limits the number of renders to prevent an infinite loop.'));
      }
    }
  })();

  {
    !(arguments.length <= 3) ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
  }

  var alternate = fiber.alternate;
  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdate = true;
    var update = {
      expirationTime: renderExpirationTime$1,
      suspenseConfig: null,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };
    {
      update.priority = getCurrentPriorityLevel();
    }
    if (renderPhaseUpdates === null) {
      renderPhaseUpdates = new Map();
    }
    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
    if (firstRenderPhaseUpdate === undefined) {
      renderPhaseUpdates.set(queue, update);
    } else {
      // Append the update to the end of the list.
      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
      while (lastRenderPhaseUpdate.next !== null) {
        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      }
      lastRenderPhaseUpdate.next = update;
    }
  } else {
    if (revertPassiveEffectsChange) {
      flushPassiveEffects();
    }

    var currentTime = requestCurrentTime();
    var _suspenseConfig = requestCurrentSuspenseConfig();
    var _expirationTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);

    var _update2 = {
      expirationTime: _expirationTime,
      suspenseConfig: _suspenseConfig,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };

    {
      _update2.priority = getCurrentPriorityLevel();
    }

    // Append the update to the end of the list.
    var _last = queue.last;
    if (_last === null) {
      // This is the first update. Create a circular list.
      _update2.next = _update2;
    } else {
      var first = _last.next;
      if (first !== null) {
        // Still circular.
        _update2.next = first;
      }
      _last.next = _update2;
    }
    queue.last = _update2;

    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var _lastRenderedReducer = queue.lastRenderedReducer;
      if (_lastRenderedReducer !== null) {
        var prevDispatcher = void 0;
        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }
        try {
          var currentState = queue.lastRenderedState;
          var _eagerState = _lastRenderedReducer(currentState, action);
          // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.
          _update2.eagerReducer = _lastRenderedReducer;
          _update2.eagerState = _eagerState;
          if (is(_eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            return;
          }
        } catch (error) {
          // Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }
    {
      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
      if ('undefined' !== typeof jest) {
        warnIfNotScopedWithMatchingAct(fiber);
        warnIfNotCurrentlyActingUpdatesInDev(fiber);
      }
    }
    scheduleWork(fiber, _expirationTime);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,

  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useResponder: throwInvalidHookError
};

var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;

{
  var warnInvalidContextAccess = function () {
    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      mountHookTypesDev();
      return createResponderListener(responder, props);
    }
  };

  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      updateHookTypesDev();
      return createResponderListener(responder, props);
    }
  };

  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      updateHookTypesDev();
      return createResponderListener(responder, props);
    }
  };

  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return createResponderListener(responder, props);
    }
  };

  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return createResponderListener(responder, props);
    }
  };
}

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var now$1 = unstable_now;


var commitTime = 0;
var profilerStartTime = -1;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }
  commitTime = now$1();
}

function startProfilerTimer(fiber) {
  if (!enableProfilerTimer) {
    return;
  }

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
  if (!enableProfilerTimer) {
    return;
  }

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;
    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }
    profilerStartTime = -1;
  }
}

// The deepest Fiber on the stack involved in a hydration context.
// This may have been an insertion or a hydration.
var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function reenterHydrationStateFromDehydratedSuspenseInstance(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var suspenseInstance = fiber.stateNode;
  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
  popToNextHostParent(fiber);
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;
      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion;

  // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.
  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag |= Placement;
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;
          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;
            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
            case SuspenseComponent:
              
              break;
          }
          break;
        }
      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;
          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;
            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;
            case SuspenseComponent:
              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
              break;
          }
          break;
        }
      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);
        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }
        return false;
      }
    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);
        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }
        return false;
      }
    case SuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
          if (suspenseInstance !== null) {
            // Downgrade the tag to a dehydrated component until we've hydrated it.
            fiber.tag = DehydratedSuspenseComponent;
            fiber.stateNode = suspenseInstance;
            return true;
          }
        }
        return false;
      }
    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }
  var nextInstance = nextHydratableInstance;
  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }
  var firstAttemptedInstance = nextInstance;
  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.
    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }
  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    (function () {
      {
        {
          throw ReactError(Error('Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
  // TODO: Type this specific to this type of component.
  fiber.updateQueue = updatePayload;
  // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.
  if (updatePayload !== null) {
    return true;
  }
  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    (function () {
      {
        {
          throw ReactError(Error('Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;
      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }
          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }
  return shouldUpdate;
}

function skipPastDehydratedSuspenseInstance(fiber) {
  if (!supportsHydration) {
    (function () {
      {
        {
          throw ReactError(Error('Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.'));
        }
      }
    })();
  }
  var suspenseInstance = fiber.stateNode;
  (function () {
    if (!suspenseInstance) {
      {
        throw ReactError(Error('Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
  nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;
  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== DehydratedSuspenseComponent) {
    parent = parent.return;
  }
  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }
  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }
  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type;

  // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.
  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;
    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);
  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;

var didReceiveUpdate = false;

var didWarnAboutBadClass = void 0;
var didWarnAboutModulePatternComponent = void 0;
var didWarnAboutContextTypeOnFunctionComponent = void 0;
var didWarnAboutGetDerivedStateOnFunctionComponent = void 0;
var didWarnAboutFunctionRefs = void 0;
var didWarnAboutReassigningProps = void 0;
var didWarnAboutMaxDuration = void 0;
var didWarnAboutRevealOrder = void 0;
var didWarnAboutTailOptions = void 0;
var didWarnAboutDefaultPropsOnFunctionComponent = void 0;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutMaxDuration = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
  didWarnAboutDefaultPropsOnFunctionComponent = {};
}

function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  if (current$$1 === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.

    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }
}

function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
  // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their their
  // identity matches.
  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
}

function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.

  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;
      if (innerPropTypes) {
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref;

  // The rest is a fork of updateFunctionComponent
  var nextChildren = void 0;
  prepareToReadContext(workInProgress, renderExpirationTime);
  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
      }
    }
    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  if (current$$1 === null) {
    var type = Component.type;
    if (isSimpleFunctionComponent(type) && Component.compare === null &&
    // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;
      {
        resolvedType = resolveFunctionForHotReloading(type);
      }
      // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.
      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;
      {
        validateFunctionComponentInDev(workInProgress, type);
      }
      return updateSimpleMemoComponent(current$$1, workInProgress, resolvedType, nextProps, updateExpirationTime, renderExpirationTime);
    }
    {
      var innerPropTypes = type.propTypes;
      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(type), getCurrentFiberStackInDev);
      }
    }
    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }
  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;
    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes_1(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentName(_type), getCurrentFiberStackInDev);
    }
  }
  var currentChild = current$$1.child; // This is always exactly one child
  if (updateExpirationTime < renderExpirationTime) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps;
    // Default to shallow comparison
    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;
    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    }
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.

  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;
      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        outerMemoType = refineResolvedLazyComponent(outerMemoType);
      }
      var outerPropTypes = outerMemoType && outerMemoType.propTypes;
      if (outerPropTypes) {
        checkPropTypes_1(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
      }
      // Inner propTypes will be validated in the function component path.
    }
  }
  if (current$$1 !== null) {
    var prevProps = current$$1.memoizedProps;
    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref && (
    // Prevent bailout if the implementation changed due to hot reload:
    workInProgress.type === current$$1.type)) {
      didReceiveUpdate = false;
      if (updateExpirationTime < renderExpirationTime) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    }
  }
  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
}

function updateFragment(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMode(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
  if (enableProfilerTimer) {
    workInProgress.effectTag |= Update;
  }
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markRef(current$$1, workInProgress) {
  var ref = workInProgress.ref;
  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;
      if (innerPropTypes) {
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var context = void 0;
  if (!disableLegacyContext) {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren = void 0;
  prepareToReadContext(workInProgress, renderExpirationTime);
  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
      }
    }
    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;
      if (innerPropTypes) {
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = void 0;
  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }
  prepareToReadContext(workInProgress, renderExpirationTime);

  var instance = workInProgress.stateNode;
  var shouldUpdate = void 0;
  if (instance === null) {
    if (current$$1 !== null) {
      // An class component without an instance only mounts if it suspended
      // inside a non- concurrent tree, in an inconsistent state. We want to
      // tree it like a new mount, even though an empty version of it already
      // committed. Disconnect the alternate pointers.
      current$$1.alternate = null;
      workInProgress.alternate = null;
      // Since this is conceptually a new fiber, schedule a Placement effect
      workInProgress.effectTag |= Placement;
    }
    // In the initial pass we might need to construct the instance.
    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    shouldUpdate = true;
  } else if (current$$1 === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  } else {
    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }
  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
  {
    var inst = workInProgress.stateNode;
    if (inst.props !== nextProps) {
      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
      didWarnAboutReassigningProps = true;
    }
  }
  return nextUnitOfWork;
}

function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current$$1, workInProgress);

  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  var instance = workInProgress.stateNode;

  // Rerender
  ReactCurrentOwner$3.current = workInProgress;
  var nextChildren = void 0;
  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopProfilerTimerIfRunning(workInProgress);
    }
  } else {
    {
      setCurrentPhase('render');
      nextChildren = instance.render();
      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }
      setCurrentPhase(null);
    }
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  if (current$$1 !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  }

  // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.
  workInProgress.memoizedState = instance.state;

  // The context might have changed so we need to recalculate it.
  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;
  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }
  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;
  (function () {
    if (!(updateQueue !== null)) {
      {
        throw ReactError(Error('If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState !== null ? prevState.element : null;
  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
  var nextState = workInProgress.memoizedState;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  var nextChildren = nextState.element;
  if (nextChildren === prevChildren) {
    // If the state is the same as before, that's a bailout because we had
    // no work that expires at this time.
    resetHydrationState();
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }
  var root = workInProgress.stateNode;
  if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
    // If we don't have any current children this might be the first pass.
    // We always try to hydrate. If this isn't a hydration pass there won't
    // be any children to hydrate which is effectively the same thing as
    // not hydrating.

    // This is a bit of a hack. We track the host root as a placement to
    // know that we're currently in a mounting state. That way isMounted
    // works as expected. We must reset this before committing.
    // TODO: Delete this when we delete isMounted and findDOMNode.
    workInProgress.effectTag |= Placement;

    // Ensure that children mount into this root without tracking
    // side-effects. This ensures that we don't store Placement effects on
    // nodes that will be hydrated.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // Otherwise reset hydration state in case we aborted and resumed another
    // root.
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    resetHydrationState();
  }
  return workInProgress.child;
}

function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;

  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current$$1, workInProgress);

  // Check the host config to see if the children are offscreen/hidden.
  if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(type, nextProps)) {
    if (enableSchedulerTracing) {
      markSpawnedWork(Never);
    }
    // Schedule this fiber to re-render at offscreen priority. Then bailout.
    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
    return null;
  }

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateHostText(current$$1, workInProgress) {
  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }
  // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.
  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
  if (_current !== null) {
    // An lazy component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null;
    // Since this is conceptually a new fiber, schedule a Placement effect
    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps;
  // We can't start a User Timing measurement with correct label yet.
  // Cancel and resume right after we know the tag.
  cancelWorkTimer(workInProgress);
  var Component = readLazyComponentType(elementType);
  // Store the unwrapped component in the type.
  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  startWorkTimer(workInProgress);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child = void 0;
  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }
        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }
    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }
        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }
    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }
        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }
    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;
            if (outerPropTypes) {
              checkPropTypes_1(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentName(Component), getCurrentFiberStackInDev);
            }
          }
        }
        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        updateExpirationTime, renderExpirationTime);
        break;
      }
    default:
      {
        var hint = '';
        {
          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
            hint = ' Did you wrap a component in React.lazy() more than once?';
          }
        }
        // This message intentionally doesn't mention ForwardRef or MemoComponent
        // because the fact that it's a separate type of work is an
        // implementation detail.
        (function () {
          {
            {
              throw ReactError(Error('Element type is invalid. Received a promise that resolves to: ' + Component + '. Lazy element type must resolve to a class or function.' + hint));
            }
          }
        })();
      }
  }
  return child;
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
  if (_current !== null) {
    // An incomplete component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null;
    // Since this is conceptually a new fiber, schedule a Placement effect
    workInProgress.effectTag |= Placement;
  }

  // Promote the fiber to a class and try rendering again.
  workInProgress.tag = ClassComponent;

  // The rest of this function is a fork of `updateClassComponent`

  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = void 0;
  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }
  prepareToReadContext(workInProgress, renderExpirationTime);

  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);

  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
  if (_current !== null) {
    // An indeterminate component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null;
    // Since this is conceptually a new fiber, schedule a Placement effect
    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps;
  var context = void 0;
  if (!disableLegacyContext) {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var value = void 0;

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner$3.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName = getComponentName(Component) || 'Unknown';
      if (!didWarnAboutModulePatternComponent[_componentName]) {
        warningWithoutStack$1(false, 'The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);
        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    }

    // Proceed under the assumption that this is a class instance
    workInProgress.tag = ClassComponent;

    // Throw out any hooks that were used.
    resetHooks();

    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = false;
    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
    }

    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderExpirationTime);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;
    {
      if (disableLegacyContext && Component.contextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with React.useContext() instead.', getComponentName(Component) || 'Unknown');
      }

      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        // Only double-render components with Hooks
        if (workInProgress.memoizedState !== null) {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
        }
      }
    }
    reconcileChildren(null, workInProgress, value, renderExpirationTime);
    {
      validateFunctionComponentInDev(workInProgress, Component);
    }
    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  if (Component) {
    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
  }
  if (workInProgress.ref !== null) {
    var info = '';
    var ownerName = getCurrentFiberOwnerNameInDevOrNull();
    if (ownerName) {
      info += '\n\nCheck the render method of `' + ownerName + '`.';
    }

    var warningKey = ownerName || workInProgress._debugID || '';
    var debugSource = workInProgress._debugSource;
    if (debugSource) {
      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
    }
    if (!didWarnAboutFunctionRefs[warningKey]) {
      didWarnAboutFunctionRefs[warningKey] = true;
      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
    }
  }

  if (warnAboutDefaultPropsOnFunctionComponents && Component.defaultProps !== undefined) {
    var componentName = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
      warningWithoutStack$1(false, '%s: Support for defaultProps will be removed from function components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);
      didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
    }
  }

  if (typeof Component.getDerivedStateFromProps === 'function') {
    var _componentName2 = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2]) {
      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', _componentName2);
      didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2] = true;
    }
  }

  if (typeof Component.contextType === 'object' && Component.contextType !== null) {
    var _componentName3 = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName3]) {
      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName3);
      didWarnAboutContextTypeOnFunctionComponent[_componentName3] = true;
    }
  }
}

// TODO: This is now an empty object. Should we just make it a boolean?
var SUSPENDED_MARKER = {};

function shouldRemainOnFallback(suspenseContext, current$$1, workInProgress) {
  // If the context is telling us that we should show a fallback, and we're not
  // already showing content, then we should show the fallback instead.
  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback) && (current$$1 === null || current$$1.memoizedState !== null);
}

function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
  var mode = workInProgress.mode;
  var nextProps = workInProgress.pendingProps;

  // This is used by DevTools to force a boundary to suspend.
  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.effectTag |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;

  var nextState = null;
  var nextDidTimeout = false;

  if ((workInProgress.effectTag & DidCapture) !== NoEffect || shouldRemainOnFallback(suspenseContext, current$$1, workInProgress)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    nextState = SUSPENDED_MARKER;
    nextDidTimeout = true;
    workInProgress.effectTag &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current$$1 === null || current$$1.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Boundaries without fallbacks or should be avoided are not considered since
      // they cannot handle preferred fallback states.
      if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);

  pushSuspenseContext(workInProgress, suspenseContext);

  {
    if ('maxDuration' in nextProps) {
      if (!didWarnAboutMaxDuration) {
        didWarnAboutMaxDuration = true;
        warning$1(false, 'maxDuration has been removed from React. ' + 'Remove the maxDuration prop.');
      }
    }
  }

  // This next part is a bit confusing. If the children timeout, we switch to
  // showing the fallback children in place of the "primary" children.
  // However, we don't want to delete the primary children because then their
  // state will be lost (both the React state and the host state, e.g.
  // uncontrolled form inputs). Instead we keep them mounted and hide them.
  // Both the fallback children AND the primary children are rendered at the
  // same time. Once the primary children are un-suspended, we can delete
  // the fallback children — don't need to preserve their state.
  //
  // The two sets of children are siblings in the host environment, but
  // semantically, for purposes of reconciliation, they are two separate sets.
  // So we store them using two fragment fibers.
  //
  // However, we want to avoid allocating extra fibers for every placeholder.
  // They're only necessary when the children time out, because that's the
  // only time when both sets are mounted.
  //
  // So, the extra fragment fibers are only used if the children time out.
  // Otherwise, we render the primary children directly. This requires some
  // custom reconciliation logic to preserve the state of the primary
  // children. It's essentially a very basic form of re-parenting.

  // `child` points to the child fiber. In the normal case, this is the first
  // fiber of the primary children set. In the timed-out case, it's a
  // a fragment fiber containing the primary children.
  var child = void 0;
  // `next` points to the next fiber React should render. In the normal case,
  // it's the same as `child`: the first fiber of the primary children set.
  // In the timed-out case, it's a fragment fiber containing the *fallback*
  // children -- we skip over the primary children entirely.
  var next = void 0;
  if (current$$1 === null) {
    if (enableSuspenseServerRenderer) {
      // If we're currently hydrating, try to hydrate this boundary.
      // But only if this has a fallback.
      if (nextProps.fallback !== undefined) {
        tryToClaimNextHydratableInstance(workInProgress);
        // This could've changed the tag if this was a dehydrated suspense component.
        if (workInProgress.tag === DehydratedSuspenseComponent) {
          popSuspenseContext(workInProgress);
          return updateDehydratedSuspenseComponent(null, workInProgress, renderExpirationTime);
        }
      }
    }

    // This is the initial mount. This branch is pretty simple because there's
    // no previous state that needs to be preserved.
    if (nextDidTimeout) {
      // Mount separate fragments for primary and fallback children.
      var nextFallbackChildren = nextProps.fallback;
      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
      primaryChildFragment.return = workInProgress;

      if ((workInProgress.mode & BatchedMode) === NoMode) {
        // Outside of batched mode, we commit the effects from the
        var progressedState = workInProgress.memoizedState;
        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
        primaryChildFragment.child = progressedPrimaryChild;
        var progressedChild = progressedPrimaryChild;
        while (progressedChild !== null) {
          progressedChild.return = primaryChildFragment;
          progressedChild = progressedChild.sibling;
        }
      }

      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
      fallbackChildFragment.return = workInProgress;
      primaryChildFragment.sibling = fallbackChildFragment;
      child = primaryChildFragment;
      // Skip the primary children, and continue working on the
      // fallback children.
      next = fallbackChildFragment;
    } else {
      // Mount the primary children without an intermediate fragment fiber.
      var nextPrimaryChildren = nextProps.children;
      child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
    }
  } else {
    // This is an update. This branch is more complicated because we need to
    // ensure the state of the primary children is preserved.
    var prevState = current$$1.memoizedState;
    var prevDidTimeout = prevState !== null;
    if (prevDidTimeout) {
      // The current tree already timed out. That means each child set is
      var currentPrimaryChildFragment = current$$1.child;
      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
      if (nextDidTimeout) {
        // Still timed out. Reuse the current primary children by cloning
        // its fragment. We're going to skip over these entirely.
        var _nextFallbackChildren = nextProps.fallback;
        var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);
        _primaryChildFragment.return = workInProgress;

        if ((workInProgress.mode & BatchedMode) === NoMode) {
          // Outside of batched mode, we commit the effects from the
          var _progressedState = workInProgress.memoizedState;
          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;
          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
            _primaryChildFragment.child = _progressedPrimaryChild;
            var _progressedChild = _progressedPrimaryChild;
            while (_progressedChild !== null) {
              _progressedChild.return = _primaryChildFragment;
              _progressedChild = _progressedChild.sibling;
            }
          }
        }

        // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.
        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var treeBaseDuration = 0;
          var hiddenChild = _primaryChildFragment.child;
          while (hiddenChild !== null) {
            treeBaseDuration += hiddenChild.treeBaseDuration;
            hiddenChild = hiddenChild.sibling;
          }
          _primaryChildFragment.treeBaseDuration = treeBaseDuration;
        }

        // Clone the fallback child fragment, too. These we'll continue
        // working on.
        var _fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);
        _fallbackChildFragment.return = workInProgress;
        _primaryChildFragment.sibling = _fallbackChildFragment;
        child = _primaryChildFragment;
        _primaryChildFragment.childExpirationTime = NoWork;
        // Skip the primary children, and continue working on the
        // fallback children.
        next = _fallbackChildFragment;
      } else {
        // No longer suspended. Switch back to showing the primary children,
        // and remove the intermediate fragment fiber.
        var _nextPrimaryChildren = nextProps.children;
        var currentPrimaryChild = currentPrimaryChildFragment.child;
        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime);

        // If this render doesn't suspend, we need to delete the fallback
        // children. Wait until the complete phase, after we've confirmed the
        // fallback is no longer needed.
        // TODO: Would it be better to store the fallback fragment on
        // the stateNode?

        // Continue rendering the children, like we normally do.
        child = next = primaryChild;
      }
    } else {
      // The current tree has not already timed out. That means the primary
      // children are not wrapped in a fragment fiber.
      var _currentPrimaryChild = current$$1.child;
      if (nextDidTimeout) {
        // Timed out. Wrap the children in a fragment fiber to keep them
        // separate from the fallback children.
        var _nextFallbackChildren2 = nextProps.fallback;
        var _primaryChildFragment2 = createFiberFromFragment(
        // It shouldn't matter what the pending props are because we aren't
        // going to render this fragment.
        null, mode, NoWork, null);
        _primaryChildFragment2.return = workInProgress;
        _primaryChildFragment2.child = _currentPrimaryChild;
        if (_currentPrimaryChild !== null) {
          _currentPrimaryChild.return = _primaryChildFragment2;
        }

        // Even though we're creating a new fiber, there are no new children,
        // because we're reusing an already mounted tree. So we don't need to
        // schedule a placement.
        // primaryChildFragment.effectTag |= Placement;

        if ((workInProgress.mode & BatchedMode) === NoMode) {
          // Outside of batched mode, we commit the effects from the
          var _progressedState2 = workInProgress.memoizedState;
          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;
          _primaryChildFragment2.child = _progressedPrimaryChild2;
          var _progressedChild2 = _progressedPrimaryChild2;
          while (_progressedChild2 !== null) {
            _progressedChild2.return = _primaryChildFragment2;
            _progressedChild2 = _progressedChild2.sibling;
          }
        }

        // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.
        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var _treeBaseDuration = 0;
          var _hiddenChild = _primaryChildFragment2.child;
          while (_hiddenChild !== null) {
            _treeBaseDuration += _hiddenChild.treeBaseDuration;
            _hiddenChild = _hiddenChild.sibling;
          }
          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
        }

        // Create a fragment from the fallback children, too.
        var _fallbackChildFragment2 = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);
        _fallbackChildFragment2.return = workInProgress;
        _primaryChildFragment2.sibling = _fallbackChildFragment2;
        _fallbackChildFragment2.effectTag |= Placement;
        child = _primaryChildFragment2;
        _primaryChildFragment2.childExpirationTime = NoWork;
        // Skip the primary children, and continue working on the
        // fallback children.
        next = _fallbackChildFragment2;
      } else {
        // Still haven't timed out.  Continue rendering the children, like we
        // normally do.
        var _nextPrimaryChildren2 = nextProps.children;
        next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
      }
    }
    workInProgress.stateNode = current$$1.stateNode;
  }

  workInProgress.memoizedState = nextState;
  workInProgress.child = child;
  return next;
}

function retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime) {
  // Detach from the current dehydrated boundary.
  current$$1.alternate = null;
  workInProgress.alternate = null;

  // Insert a deletion in the effect list.
  var returnFiber = workInProgress.return;
  (function () {
    if (!(returnFiber !== null)) {
      {
        throw ReactError(Error('Suspense boundaries are never on the root. This is probably a bug in React.'));
      }
    }
  })();
  var last = returnFiber.lastEffect;
  if (last !== null) {
    last.nextEffect = current$$1;
    returnFiber.lastEffect = current$$1;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
  }
  current$$1.nextEffect = null;
  current$$1.effectTag = Deletion;

  popSuspenseContext(workInProgress);

  // Upgrade this work in progress to a real Suspense component.
  workInProgress.tag = SuspenseComponent;
  workInProgress.stateNode = null;
  workInProgress.memoizedState = null;
  // This is now an insertion.
  workInProgress.effectTag |= Placement;
  // Retry as a real Suspense component.
  return updateSuspenseComponent(null, workInProgress, renderExpirationTime);
}

function updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
  pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
  var suspenseInstance = workInProgress.stateNode;
  if (current$$1 === null) {
    // During the first pass, we'll bail out and not drill into the children.
    // Instead, we'll leave the content in place and try to hydrate it later.
    if (isSuspenseInstanceFallback(suspenseInstance)) {
      // This is a client-only boundary. Since we won't get any content from the server
      // for this, we need to schedule that at a higher priority based on when it would
      // have timed out. In theory we could render it in this pass but it would have the
      // wrong priority associated with it and will prevent hydration of parent path.
      // Instead, we'll leave work left on it to render it in a separate commit.

      // TODO This time should be the time at which the server rendered response that is
      // a parent to this boundary was displayed. However, since we currently don't have
      // a protocol to transfer that time, we'll just estimate it by using the current
      // time. This will mean that Suspense timeouts are slightly shifted to later than
      // they should be.
      var serverDisplayTime = requestCurrentTime();
      // Schedule a normal pri update to render this content.
      workInProgress.expirationTime = computeAsyncExpiration(serverDisplayTime);
    } else {
      // We'll continue hydrating the rest at offscreen priority since we'll already
      // be showing the right content coming from the server, it is no rush.
      workInProgress.expirationTime = Never;
    }
    return null;
  }
  if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
    // Something suspended. Leave the existing children in place.
    // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?
    workInProgress.child = null;
    return null;
  }
  if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This boundary is in a permanent fallback state. In this case, we'll never
    // get an update and we'll never be able to hydrate the final content. Let's just try the
    // client side render instead.
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  }
  // We use childExpirationTime to indicate that a child might depend on context, so if
  // any context has changed, we need to treat is as if the input might have changed.
  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;
  if (didReceiveUpdate || hasContextChanged$$1) {
    // This boundary has changed since the first render. This means that we are now unable to
    // hydrate it. We might still be able to hydrate it using an earlier expiration time but
    // during this render we can't. Instead, we're going to delete the whole subtree and
    // instead inject a new real Suspense boundary to take its place, which may render content
    // or fallback. The real Suspense boundary will suspend for a while so we have some time
    // to ensure it can produce real content, but all state and pending events will be lost.
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  } else if (isSuspenseInstancePending(suspenseInstance)) {
    // This component is still pending more data from the server, so we can't hydrate its
    // content. We treat it as if this component suspended itself. It might seem as if
    // we could just try to render it client-side instead. However, this will perform a
    // lot of unnecessary work and is unlikely to complete since it often will suspend
    // on missing data anyway. Additionally, the server might be able to render more
    // than we can on the client yet. In that case we'd end up with more fallback states
    // on the client than if we just leave it alone. If the server times out or errors
    // these should update this boundary to the permanent Fallback state instead.
    // Mark it as having captured (i.e. suspended).
    workInProgress.effectTag |= DidCapture;
    // Leave the children in place. I.e. empty.
    workInProgress.child = null;
    // Register a callback to retry this boundary once the server has sent the result.
    registerSuspenseInstanceRetry(suspenseInstance, retryTimedOutBoundary.bind(null, current$$1));
    return null;
  } else {
    // This is the first attempt.
    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);
    var nextProps = workInProgress.pendingProps;
    var nextChildren = nextProps.children;
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    return workInProgress.child;
  }
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderExpirationTime) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;
  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;
      if (state !== null) {
        if (node.expirationTime < renderExpirationTime) {
          node.expirationTime = renderExpirationTime;
        }
        var alternate = node.alternate;
        if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
          alternate.expirationTime = renderExpirationTime;
        }
        scheduleWorkOnParentPath(node.return, renderExpirationTime);
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === workInProgress) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;
  while (row !== null) {
    var currentRow = row.alternate;
    // New rows can't be content rows.
    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }
    row = row.sibling;
  }
  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;
      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
              break;
            }
          case 'forward':
          case 'backward':
            {
              warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
              break;
            }
          default:
            warning$1(false, '"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
            break;
        }
      } else {
        warning$1(false, '%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;
        warning$1(false, '"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;
        warning$1(false, '<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isArray = Array.isArray(childSlot);
    var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';
    if (isArray || isIterable) {
      var type = isArray ? 'array' : 'iterable';
      warning$1(false, 'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);
      return false;
    }
  }
  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);
          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;
            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }
              _i++;
            }
          }
        } else {
          warning$1(false, 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
  var renderState = workInProgress.memoizedState;
  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailExpiration = 0;
    renderState.tailMode = tailMode;
  }
}

// This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.
function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;

  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);

  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);

  var suspenseContext = suspenseStackCursor.current;

  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.effectTag |= DidCapture;
  } else {
    var didSuspendBefore = current$$1 !== null && (current$$1.effectTag & DidCapture) !== NoEffect;
    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderExpirationTime);
    }
    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }
  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & BatchedMode) === NoMode) {
    // Outside of batched mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail = void 0;
          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode);
          break;
        }
      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;
          while (row !== null) {
            var currentRow = row.alternate;
            // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }
            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          }
          // TODO: If workInProgress.child is null, we can continue on the tail immediately.
          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode);
          break;
        }
      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined);
          break;
        }
      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }
  return workInProgress.child;
}

function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;
  if (current$$1 === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  }
  return workInProgress.child;
}

function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;

  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;

  var newValue = newProps.value;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes_1(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
    }
  }

  pushProvider(workInProgress, newValue);

  if (oldProps !== null) {
    var oldValue = oldProps.value;
    var changedBits = calculateChangedBits(context, newValue, oldValue);
    if (changedBits === 0) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && !hasContextChanged()) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    } else {
      // The context value changed. Search for matching consumers and schedule
      // them to update.
      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
  var context = workInProgress.type;
  // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.
  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;
          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }
  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var newValue = readContext(context, newProps.unstable_observedBits);
  var newChildren = void 0;
  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    newChildren = render(newValue);
    setCurrentPhase(null);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime) {
  var fundamentalImpl = workInProgress.type.impl;
  if (fundamentalImpl.reconcileChildren === false) {
    return null;
  }
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
  cancelWorkTimer(workInProgress);

  if (current$$1 !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current$$1.dependencies;
  }

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning(workInProgress);
  }

  // Check if the children have any pending work.
  var childExpirationTime = workInProgress.childExpirationTime;
  if (childExpirationTime < renderExpirationTime) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    return null;
  } else {
    // This fiber doesn't have work, but its subtree does. Clone the child
    // fibers and continue.
    cloneChildFibers(current$$1, workInProgress);
    return workInProgress.child;
  }
}

function remountFiber(current$$1, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;
    if (returnFiber === null) {
      throw new Error('Cannot swap the root fiber.');
    }

    // Disconnect from the old current.
    // It will get deleted.
    current$$1.alternate = null;
    oldWorkInProgress.alternate = null;

    // Connect to the new tree.
    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref;

    // Replace the child/sibling pointers above it.
    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;
      if (prevSibling === null) {
        throw new Error('Expected parent to have a child.');
      }
      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;
        if (prevSibling === null) {
          throw new Error('Expected to find the previous sibling.');
        }
      }
      prevSibling.sibling = newWorkInProgress;
    }

    // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = current$$1;
      returnFiber.lastEffect = current$$1;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
    }
    current$$1.nextEffect = null;
    current$$1.effectTag = Deletion;

    newWorkInProgress.effectTag |= Placement;

    // Restart work from the new fiber.
    return newWorkInProgress;
  }
}

function beginWork$1(current$$1, workInProgress, renderExpirationTime) {
  var updateExpirationTime = workInProgress.expirationTime;

  {
    if (workInProgress._debugNeedsRemount && current$$1 !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current$$1, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.expirationTime));
    }
  }

  if (current$$1 !== null) {
    var oldProps = current$$1.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || (
    // Force a re-render if the implementation changed due to hot reload:
    workInProgress.type !== current$$1.type)) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else if (updateExpirationTime < renderExpirationTime) {
      didReceiveUpdate = false;
      // This fiber does not have any pending work. Bailout without entering
      // the begin phase. There's still some bookkeeping we that needs to be done
      // in this optimized path, mostly pushing stuff onto the stack.
      switch (workInProgress.tag) {
        case HostRoot:
          pushHostRootContext(workInProgress);
          resetHydrationState();
          break;
        case HostComponent:
          pushHostContext(workInProgress);
          if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(workInProgress.type, newProps)) {
            if (enableSchedulerTracing) {
              markSpawnedWork(Never);
            }
            // Schedule this fiber to re-render at offscreen priority. Then bailout.
            workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
            return null;
          }
          break;
        case ClassComponent:
          {
            var Component = workInProgress.type;
            if (isContextProvider(Component)) {
              pushContextProvider(workInProgress);
            }
            break;
          }
        case HostPortal:
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          break;
        case ContextProvider:
          {
            var newValue = workInProgress.memoizedProps.value;
            pushProvider(workInProgress, newValue);
            break;
          }
        case Profiler:
          if (enableProfilerTimer) {
            workInProgress.effectTag |= Update;
          }
          break;
        case SuspenseComponent:
          {
            var state = workInProgress.memoizedState;
            var didTimeout = state !== null;
            if (didTimeout) {
              // If this boundary is currently timed out, we need to decide
              // whether to retry the primary children, or to skip over it and
              // go straight to the fallback. Check the priority of the primary
              var primaryChildFragment = workInProgress.child;
              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;
              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                // The primary children have pending work. Use the normal path
                // to attempt to render the primary children again.
                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
              } else {
                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                // The primary children do not have pending work with sufficient
                // priority. Bailout.
                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                if (child !== null) {
                  // The fallback children have pending work. Skip over the
                  // primary children and work on the fallback.
                  return child.sibling;
                } else {
                  return null;
                }
              }
            } else {
              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
            }
            break;
          }
        case DehydratedSuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
              // We know that this component will suspend again because if it has
              // been unsuspended it has committed as a regular Suspense component.
              // If it needs to be retried, it should have work scheduled on it.
              workInProgress.effectTag |= DidCapture;
            }
            break;
          }
        case SuspenseListComponent:
          {
            var didSuspendBefore = (current$$1.effectTag & DidCapture) !== NoEffect;

            var hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

            if (didSuspendBefore) {
              if (hasChildWork) {
                // If something was in fallback state last time, and we have all the
                // same children then we're still in progressive loading state.
                // Something might get unblocked by state updates or retries in the
                // tree which will affect the tail. So we need to use the normal
                // path to compute the correct tail.
                return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
              }
              // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.
              workInProgress.effectTag |= DidCapture;
            }

            // If nothing suspended before and we're rendering the same children,
            // then the tail doesn't matter. Anything new that suspends will work
            // in the "together" mode, so we can continue from the state we had.
            var renderState = workInProgress.memoizedState;
            if (renderState !== null) {
              // Reset to the "together" mode in case we've started a different
              // update in the past but didn't complete it.
              renderState.rendering = null;
              renderState.tail = null;
            }
            pushSuspenseContext(workInProgress, suspenseStackCursor.current);

            if (hasChildWork) {
              break;
            } else {
              // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.
              return null;
            }
          }
      }
      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    }
  } else {
    didReceiveUpdate = false;
  }

  // Before entering the begin phase, clear the expiration time.
  workInProgress.expirationTime = NoWork;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current$$1, workInProgress, workInProgress.type, renderExpirationTime);
      }
    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current$$1, workInProgress, elementType, updateExpirationTime, renderExpirationTime);
      }
    case FunctionComponent:
      {
        var _Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
      }
    case ClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;
        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
      }
    case HostRoot:
      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);
    case HostComponent:
      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);
    case HostText:
      return updateHostText(current$$1, workInProgress);
    case SuspenseComponent:
      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
    case HostPortal:
      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);
    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;
        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
      }
    case Fragment:
      return updateFragment(current$$1, workInProgress, renderExpirationTime);
    case Mode:
      return updateMode(current$$1, workInProgress, renderExpirationTime);
    case Profiler:
      return updateProfiler(current$$1, workInProgress, renderExpirationTime);
    case ContextProvider:
      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);
    case ContextConsumer:
      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);
    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps;
        // Resolve outer props first, then resolve inner props.
        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;
            if (outerPropTypes) {
              checkPropTypes_1(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentName(_type2), getCurrentFiberStackInDev);
            }
          }
        }
        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
      }
    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
      }
    case IncompleteClassComponent:
      {
        var _Component3 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;
        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
      }
    case DehydratedSuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          return updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
        }
        break;
      }
    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
      }
    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          return updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime);
        }
        break;
      }
  }
  (function () {
    {
      {
        throw ReactError(Error('Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
}

function createFundamentalStateInstance(currentFiber, props, impl, state) {
  return {
    currentFiber: currentFiber,
    impl: impl,
    instance: null,
    prevProps: null,
    props: props,
    state: state
  };
}

var emptyObject = {};
var isArray$2 = Array.isArray;

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

var appendAllChildren = void 0;
var updateHostContainer = void 0;
var updateHostComponent$1 = void 0;
var updateHostText$1 = void 0;
if (supportsMutation) {
  // Mutation mode

  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === FundamentalComponent) {
        appendInitialChild(parent, node.stateNode.instance);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;
    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    }

    // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.
    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext();
    // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.
    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
    // TODO: Type this specific to this type of component.
    workInProgress.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.
    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode

  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var props = node.memoizedProps;
          var type = node.type;
          instance = cloneHiddenInstance(instance, type, props, node);
        }
        appendInitialChild(parent, instance);
      } else if (node.tag === HostText) {
        var _instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var text = node.memoizedProps;
          _instance = cloneHiddenTextInstance(_instance, text, node);
        }
        appendInitialChild(parent, _instance);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        var _instance2 = node.stateNode.instance;
        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var _props = node.memoizedProps;
          var _type = node.type;
          _instance2 = cloneHiddenInstance(_instance2, _type, _props, node);
        }
        appendInitialChild(parent, _instance2);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        if ((node.effectTag & Update) !== NoEffect) {
          // Need to toggle the visibility of the primary children.
          var newIsHidden = node.memoizedState !== null;
          if (newIsHidden) {
            var primaryChildParent = node.child;
            if (primaryChildParent !== null) {
              if (primaryChildParent.child !== null) {
                primaryChildParent.child.return = primaryChildParent;
                appendAllChildren(parent, primaryChildParent, true, newIsHidden);
              }
              var fallbackChildParent = primaryChildParent.sibling;
              if (fallbackChildParent !== null) {
                fallbackChildParent.return = node;
                node = fallbackChildParent;
                continue;
              }
            }
          }
        }
        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      // $FlowFixMe This is correct but Flow is confused by the labeled break.
      node = node;
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  // An unfortunate fork of appendAllChildren because we have two different parent types.
  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var props = node.memoizedProps;
          var type = node.type;
          instance = cloneHiddenInstance(instance, type, props, node);
        }
        appendChildToContainerChildSet(containerChildSet, instance);
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;
        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var text = node.memoizedProps;
          _instance3 = cloneHiddenTextInstance(_instance3, text, node);
        }
        appendChildToContainerChildSet(containerChildSet, _instance3);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        var _instance4 = node.stateNode.instance;
        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var _props2 = node.memoizedProps;
          var _type2 = node.type;
          _instance4 = cloneHiddenInstance(_instance4, _type2, _props2, node);
        }
        appendChildToContainerChildSet(containerChildSet, _instance4);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        if ((node.effectTag & Update) !== NoEffect) {
          // Need to toggle the visibility of the primary children.
          var newIsHidden = node.memoizedState !== null;
          if (newIsHidden) {
            var primaryChildParent = node.child;
            if (primaryChildParent !== null) {
              if (primaryChildParent.child !== null) {
                primaryChildParent.child.return = primaryChildParent;
                appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
              }
              var fallbackChildParent = primaryChildParent.sibling;
              if (fallbackChildParent !== null) {
                fallbackChildParent.return = node;
                node = fallbackChildParent;
                continue;
              }
            }
          }
        }
        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      // $FlowFixMe This is correct but Flow is confused by the labeled break.
      node = node;
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };
  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged) {
      // No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container);
      // If children might have changed, we have to add them all to the set.
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      // Schedule an update on the container to swap out the container.
      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };
  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    var currentInstance = current.stateNode;
    var oldProps = current.memoizedProps;
    // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged && oldProps === newProps) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }
    var recyclableInstance = workInProgress.stateNode;
    var currentHostContext = getHostContext();
    var updatePayload = null;
    if (oldProps !== newProps) {
      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
    }
    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }
    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
      markUpdate(workInProgress);
    }
    workInProgress.stateNode = newInstance;
    if (childrenUnchanged) {
      // If there are no other effects in this tree, we need to flag this node as having one.
      // Even though we're not going to use it for anything.
      // Otherwise parents won't know that there are new children to propagate upwards.
      markUpdate(workInProgress);
    } else {
      // If children might have changed, we have to add them all to the set.
      appendAllChildren(newInstance, workInProgress, false, false);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.
      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // Noop
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // Noop
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;
        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }
          tailNode = tailNode.sibling;
        }
        // Next we're simply going to delete all insertions after the
        // last rendered item.
        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }
        break;
      }
    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;
        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }
          _tailNode = _tailNode.sibling;
        }
        // Next we're simply going to delete all insertions after the
        // last rendered item.
        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }
        break;
      }
  }
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      break;
    case LazyComponent:
      break;
    case SimpleMemoComponent:
    case FunctionComponent:
      break;
    case ClassComponent:
      {
        var Component = workInProgress.type;
        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }
        break;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;
        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }
        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          popHydrationState(workInProgress);
          // This resets the hacky state to fix isMounted before committing.
          // TODO: Delete this when we delete isMounted and findDOMNode.
          workInProgress.effectTag &= ~Placement;
        }
        updateHostContainer(workInProgress);
        break;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;
        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (enableFlareAPI) {
            var prevListeners = current.memoizedProps.listeners;
            var nextListeners = newProps.listeners;
            var instance = workInProgress.stateNode;
            if (prevListeners !== nextListeners) {
              updateEventListeners(nextListeners, instance, rootContainerInstance, workInProgress);
            }
          }

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            (function () {
              if (!(workInProgress.stateNode !== null)) {
                {
                  throw ReactError(Error('We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.'));
                }
              }
            })();
            // This can happen when we abort work.
            break;
          }

          var currentHostContext = getHostContext();
          // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.
          var wasHydrated = popHydrationState(workInProgress);
          if (wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var _instance5 = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);

            appendAllChildren(_instance5, workInProgress, false, false);

            if (enableFlareAPI) {
              var listeners = newProps.listeners;
              if (listeners != null) {
                updateEventListeners(listeners, _instance5, rootContainerInstance, workInProgress);
              }
            }

            // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.
            if (finalizeInitialChildren(_instance5, type, newProps, rootContainerInstance, currentHostContext)) {
              markUpdate(workInProgress);
            }
            workInProgress.stateNode = _instance5;
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }
        break;
      }
    case HostText:
      {
        var newText = newProps;
        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps;
          // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.
          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            (function () {
              if (!(workInProgress.stateNode !== null)) {
                {
                  throw ReactError(Error('We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.'));
                }
              }
            })();
            // This can happen when we abort work.
          }
          var _rootContainerInstance = getRootHostContainer();
          var _currentHostContext = getHostContext();
          var _wasHydrated = popHydrationState(workInProgress);
          if (_wasHydrated) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }
        break;
      }
    case ForwardRef:
      break;
    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState;
        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.expirationTime = renderExpirationTime;
          // Do not reset the effect list.
          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = false;
        if (current === null) {
          // In cases where we didn't find a suitable hydration boundary we never
          // downgraded this to a DehydratedSuspenseComponent, but we still need to
          // pop the hydration state since we might be inside the insertion tree.
          popHydrationState(workInProgress);
        } else {
          var prevState = current.memoizedState;
          prevDidTimeout = prevState !== null;
          if (!nextDidTimeout && prevState !== null) {
            // We just switched from the fallback to the normal children.
            // Delete the fallback.
            // TODO: Would it be better to store the fallback fragment on
            var currentFallbackChild = current.child.sibling;
            if (currentFallbackChild !== null) {
              // Deletions go at the beginning of the return fiber's effect list
              var first = workInProgress.firstEffect;
              if (first !== null) {
                workInProgress.firstEffect = currentFallbackChild;
                currentFallbackChild.nextEffect = first;
              } else {
                workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                currentFallbackChild.nextEffect = null;
              }
              currentFallbackChild.effectTag = Deletion;
            }
          }
        }

        if (nextDidTimeout && !prevDidTimeout) {
          // If this subtreee is running in batched mode we can suspend,
          // otherwise we won't suspend.
          // TODO: This will still suspend a synchronous tree if anything
          // in the concurrent tree already suspended during this render.
          // This is a known bug.
          if ((workInProgress.mode & BatchedMode) !== NoMode) {
            // TODO: Move this back to throwException because this is too late
            // if this is a large tree which is common for initial loads. We
            // don't know if we should restart a render or not until we get
            // this marker, and this is too late.
            // If this render already had a ping or lower pri updates,
            // and this is the first time we know we're going to suspend we
            // should be able to immediately restart from within throwException.
            var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;
            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
              // If this was in an invisible tree or a new render, then showing
              // this boundary is ok.
              renderDidSuspend();
            } else {
              // Otherwise, we're going to have to hide content so we should
              // suspend for longer if possible.
              renderDidSuspendDelayIfPossible();
            }
          }
        }

        if (supportsPersistence) {
          // TODO: Only schedule updates if not prevDidTimeout.
          if (nextDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the proimse. This flag is also used to hide the
            // primary children.
            workInProgress.effectTag |= Update;
          }
        }
        if (supportsMutation) {
          // TODO: Only schedule updates if these values are non equal, i.e. it changed.
          if (nextDidTimeout || prevDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the proimse. This flag is also used to hide the
            // primary children. In mutation mode, we also need the flag to
            // *unhide* children that were previously hidden, so check if the
            // is currently timed out, too.
            workInProgress.effectTag |= Update;
          }
        }
        if (enableSuspenseCallback && workInProgress.updateQueue !== null && workInProgress.memoizedProps.suspenseCallback != null) {
          // Always notify the callback
          workInProgress.effectTag |= Update;
        }
        break;
      }
    case Fragment:
      break;
    case Mode:
      break;
    case Profiler:
      break;
    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      break;
    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      break;
    case ContextConsumer:
      break;
    case MemoComponent:
      break;
    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;
        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }
        break;
      }
    case DehydratedSuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          popSuspenseContext(workInProgress);
          if (current === null) {
            var _wasHydrated2 = popHydrationState(workInProgress);
            (function () {
              if (!_wasHydrated2) {
                {
                  throw ReactError(Error('A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.'));
                }
              }
            })();
            if (enableSchedulerTracing) {
              markSpawnedWork(Never);
            }
            skipPastDehydratedSuspenseInstance(workInProgress);
          } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {
            // This boundary did not suspend so it's now hydrated.
            // To handle any future suspense cases, we're going to now upgrade it
            // to a Suspense component. We detach it from the existing current fiber.
            current.alternate = null;
            workInProgress.alternate = null;
            workInProgress.tag = SuspenseComponent;
            workInProgress.memoizedState = null;
            workInProgress.stateNode = null;
          }
        }
        break;
      }
    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);

        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode. We don't do anything
          // in this mode.
          break;
        }

        var didSuspendAlready = (workInProgress.effectTag & DidCapture) !== NoEffect;

        var renderedTail = renderState.rendering;
        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.

            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.

            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.effectTag & DidCapture) === NoEffect);
            if (!cannotBeSuspended) {
              var row = workInProgress.child;
              while (row !== null) {
                var suspended = findFirstSuspended(row);
                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.effectTag |= DidCapture;
                  cutOffTailIfNeeded(renderState, false);

                  // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thennables. Instead, we'll transfer its thennables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.
                  var newThennables = suspended.updateQueue;
                  if (newThennables !== null) {
                    workInProgress.updateQueue = newThennables;
                    workInProgress.effectTag |= Update;
                  }

                  // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect list before doing the second pass since that's now invalid.
                  workInProgress.firstEffect = workInProgress.lastEffect = null;
                  // Reset the child fibers to their original state.
                  resetChildFibers(workInProgress, renderExpirationTime);

                  // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.
                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                  return workInProgress.child;
                }
                row = row.sibling;
              }
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          }
          // Next we're going to render the tail.
        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);
            if (_suspended !== null) {
              workInProgress.effectTag |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, true);
              // This might have been modified.
              if (renderState.tail === null && renderState.tailMode === 'hidden') {
                // We need to delete the row we just rendered.
                // Ensure we transfer the update queue to the parent.
                var _newThennables = _suspended.updateQueue;
                if (_newThennables !== null) {
                  workInProgress.updateQueue = _newThennables;
                  workInProgress.effectTag |= Update;
                }
                // Reset the effect list to what it w as before we rendered this
                // child. The nested children have already appended themselves.
                var lastEffect = workInProgress.lastEffect = renderState.lastEffect;
                // Remove any effects that were appended after this point.
                if (lastEffect !== null) {
                  lastEffect.nextEffect = null;
                }
                // We're done.
                return null;
              }
            } else if (now() > renderState.tailExpiration && renderExpirationTime > Never) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.effectTag |= DidCapture;
              didSuspendAlready = true;

              cutOffTailIfNeeded(renderState, false);

              // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. If we can show
              // them, then they really have the same priority as this render.
              // So we'll pick it back up the very next render pass once we've had
              // an opportunity to yield for paint.

              var nextPriority = renderExpirationTime - 1;
              workInProgress.expirationTime = workInProgress.childExpirationTime = nextPriority;
              if (enableSchedulerTracing) {
                markSpawnedWork(nextPriority);
              }
            }
          }
          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;
            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }
            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          if (renderState.tailExpiration === 0) {
            // Heuristic for how long we're willing to spend rendering rows
            // until we just give up and show what we have so far.
            var TAIL_EXPIRATION_TIMEOUT_MS = 500;
            renderState.tailExpiration = now() + TAIL_EXPIRATION_TIMEOUT_MS;
          }
          // Pop a row.
          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.lastEffect = workInProgress.lastEffect;
          next.sibling = null;

          // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.
          var suspenseContext = suspenseStackCursor.current;
          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }
          pushSuspenseContext(workInProgress, suspenseContext);
          // Do a pass over the next row.
          return next;
        }
        break;
      }
    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalImpl = workInProgress.type.impl;
          var fundamentalInstance = workInProgress.stateNode;

          if (fundamentalInstance === null) {
            var getInitialState = fundamentalImpl.getInitialState;
            var fundamentalState = void 0;
            if (getInitialState !== undefined) {
              fundamentalState = getInitialState(newProps);
            }
            fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(workInProgress, newProps, fundamentalImpl, fundamentalState || {});
            var _instance6 = getFundamentalComponentInstance(fundamentalInstance);
            fundamentalInstance.instance = _instance6;
            if (fundamentalImpl.reconcileChildren === false) {
              return null;
            }
            appendAllChildren(_instance6, workInProgress, false, false);
            mountFundamentalComponent(fundamentalInstance);
          } else {
            // We fire update in commit phase
            var prevProps = fundamentalInstance.props;
            fundamentalInstance.prevProps = prevProps;
            fundamentalInstance.props = newProps;
            fundamentalInstance.currentFiber = workInProgress;
            if (supportsPersistence) {
              var _instance7 = cloneFundamentalInstance(fundamentalInstance);
              fundamentalInstance.instance = _instance7;
              appendAllChildren(_instance7, workInProgress, false, false);
            }
            var shouldUpdate = shouldUpdateFundamentalComponent(fundamentalInstance);
            if (shouldUpdate) {
              markUpdate(workInProgress);
            }
          }
        }
        break;
      }
    default:
      (function () {
        {
          {
            throw ReactError(Error('Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.'));
          }
        }
      })();
  }

  return null;
}

function mountEventResponder$1(responder, responderProps, instance, rootContainerInstance, fiber, respondersMap) {
  var responderState = emptyObject;
  var getInitialState = responder.getInitialState;
  if (getInitialState !== null) {
    responderState = getInitialState(responderProps);
  }
  var responderInstance = createResponderInstance(responder, responderProps, responderState, instance, fiber);
  mountResponderInstance(responder, responderInstance, responderProps, responderState, instance, rootContainerInstance);
  respondersMap.set(responder, responderInstance);
}

function updateEventListener(listener, fiber, visistedResponders, respondersMap, instance, rootContainerInstance) {
  var responder = void 0;
  var props = void 0;

  if (listener) {
    responder = listener.responder;
    props = listener.props;
  }
  (function () {
    if (!(responder && responder.$$typeof === REACT_RESPONDER_TYPE)) {
      {
        throw ReactError(Error('An invalid value was used as an event listener. Expect one or many event listeners created via React.unstable_useResponer().'));
      }
    }
  })();
  var listenerProps = props;
  if (visistedResponders.has(responder)) {
    // show warning
    {
      warning$1(false, 'Duplicate event responder "%s" found in event listeners. ' + 'Event listeners passed to elements cannot use the same event responder more than once.', responder.displayName);
    }
    return;
  }
  visistedResponders.add(responder);
  var responderInstance = respondersMap.get(responder);

  if (responderInstance === undefined) {
    // Mount
    mountEventResponder$1(responder, listenerProps, instance, rootContainerInstance, fiber, respondersMap);
  } else {
    // Update
    responderInstance.props = listenerProps;
    responderInstance.fiber = fiber;
  }
}

function updateEventListeners(listeners, instance, rootContainerInstance, fiber) {
  var visistedResponders = new Set();
  var dependencies = fiber.dependencies;
  if (listeners != null) {
    if (dependencies === null) {
      dependencies = fiber.dependencies = {
        expirationTime: NoWork,
        firstContext: null,
        responders: new Map()
      };
    }
    var respondersMap = dependencies.responders;
    if (respondersMap === null) {
      respondersMap = new Map();
    }
    if (isArray$2(listeners)) {
      for (var i = 0, length = listeners.length; i < length; i++) {
        var listener = listeners[i];
        updateEventListener(listener, fiber, visistedResponders, respondersMap, instance, rootContainerInstance);
      }
    } else {
      updateEventListener(listeners, fiber, visistedResponders, respondersMap, instance, rootContainerInstance);
    }
  }
  if (dependencies !== null) {
    var _respondersMap = dependencies.responders;
    if (_respondersMap !== null) {
      // Unmount
      var mountedResponders = Array.from(_respondersMap.keys());
      for (var _i = 0, _length = mountedResponders.length; _i < _length; _i++) {
        var mountedResponder = mountedResponders[_i];
        if (!visistedResponders.has(mountedResponder)) {
          var responderInstance = _respondersMap.get(mountedResponder);
          unmountResponderInstance(responderInstance);
          _respondersMap.delete(mountedResponder);
        }
      }
    }
  }
}

function unwindWork(workInProgress, renderExpirationTime) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;
        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }
        var effectTag = workInProgress.effectTag;
        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;
        (function () {
          if (!((_effectTag & DidCapture) === NoEffect)) {
            {
              throw ReactError(Error('The root failed to unmount after an error. This is likely a bug in React. Please file an issue.'));
            }
          }
        })();
        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
        return workInProgress;
      }
    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }
    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var _effectTag2 = workInProgress.effectTag;
        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
          // Captured a suspense effect. Re-render the boundary.
          return workInProgress;
        }
        return null;
      }
    case DehydratedSuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          // TODO: popHydrationState
          popSuspenseContext(workInProgress);
          var _effectTag3 = workInProgress.effectTag;
          if (_effectTag3 & ShouldCapture) {
            workInProgress.effectTag = _effectTag3 & ~ShouldCapture | DidCapture;
            // Captured a suspense effect. Re-render the boundary.
            return workInProgress;
          }
        }
        return null;
      }
    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.
        return null;
      }
    case HostPortal:
      popHostContainer(workInProgress);
      return null;
    case ContextProvider:
      popProvider(workInProgress);
      return null;
    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;
        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }
        break;
      }
    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }
    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }
    case HostPortal:
      popHostContainer(interruptedWork);
      break;
    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;
    case DehydratedSuspenseComponent:
      if (enableSuspenseServerRenderer) {
        // TODO: popHydrationState
        popSuspenseContext(interruptedWork);
      }
      break;
    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;
    case ContextProvider:
      popProvider(interruptedWork);
      break;
    default:
      break;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError);

  // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  var error = capturedError.error;
  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;

    // Browsers support silencing uncaught errors by calling
    // `preventDefault()` in window `error` handler.
    // We record this information as an expando on the error.

    if (error != null && error._suppressLogging) {
      if (errorBoundaryFound && willRetry) {
        // The error is recoverable and was silenced.
        // Ignore it and don't print the stack addendum.
        // This is handy for testing error boundaries without noise.
        return;
      }
      // The error is fatal. Since the silencing might have
      // been accidental, we'll surface it anyway.
      // However, the browser would have silenced the original error
      // so we'll print it first, and then print the stack addendum.
      console.error(error);
      // For a more detailed description of this block, see:
      // https://github.com/facebook/react/pull/13384
    }

    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

var PossiblyWeakSet$1 = typeof WeakSet === 'function' ? WeakSet : Set;

function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;
  if (stack === null && source !== null) {
    stack = getStackByFiberInDevAndProd(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source.type) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary.type);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var callComponentWillUnmountWithTimer = function (current$$1, instance) {
  startPhaseTimer(current$$1, 'componentWillUnmount');
  instance.props = current$$1.memoizedProps;
  instance.state = current$$1.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
};

// Capture errors so they don't interrupt unmounting.
function safelyCallComponentWillUnmount(current$$1, instance) {
  {
    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);
    if (hasCaughtError()) {
      var unmountError = clearCaughtError();
      captureCommitPhaseError(current$$1, unmountError);
    }
  }
}

function safelyDetachRef(current$$1) {
  var ref = current$$1.ref;
  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback(null, ref, null, null);
        if (hasCaughtError()) {
          var refError = clearCaughtError();
          captureCommitPhaseError(current$$1, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current$$1, destroy) {
  {
    invokeGuardedCallback(null, destroy, null);
    if (hasCaughtError()) {
      var error = clearCaughtError();
      captureCommitPhaseError(current$$1, error);
    }
  }
}

function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
        return;
      }
    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current$$1 !== null) {
            var prevProps = current$$1.memoizedProps;
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode;
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }
            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
              }
            }
            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }
        return;
      }
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case IncompleteClassComponent:
      // Nothing to do for these component types
      return;
    default:
      {
        (function () {
          {
            {
              throw ReactError(Error('This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'));
            }
          }
        })();
      }
  }
}

function commitHookEffectList(unmountTag, mountTag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;
    do {
      if ((effect.tag & unmountTag) !== NoEffect$1) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;
        if (destroy !== undefined) {
          destroy();
        }
      }
      if ((effect.tag & mountTag) !== NoEffect$1) {
        // Mount
        var create = effect.create;
        effect.destroy = create();

        {
          var _destroy = effect.destroy;
          if (_destroy !== undefined && typeof _destroy !== 'function') {
            var addendum = void 0;
            if (_destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof _destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + '}, [someId]); // Or [] if effect doesn\'t need props or state\n\n' + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + _destroy;
            }
            warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
          }
        }
      }
      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitPassiveHookEffects(finishedWork) {
  if ((finishedWork.effectTag & Passive) !== NoEffect) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
          break;
        }
      default:
        break;
    }
  }
}

function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
        break;
      }
    case ClassComponent:
      {
        var instance = finishedWork.stateNode;
        if (finishedWork.effectTag & Update) {
          if (current$$1 === null) {
            startPhaseTimer(finishedWork, 'componentDidMount');
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }
            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate');
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }
            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }
        var updateQueue = finishedWork.updateQueue;
        if (updateQueue !== null) {
          {
            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
            }
          }
          // We could update instance props and state here,
          // but instead we rely on them being set during last render.
          // TODO: revisit this when we implement resuming.
          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }
        return;
      }
    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;
        if (_updateQueue !== null) {
          var _instance = null;
          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;
              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }
          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }
        return;
      }
    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode;

        // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.
        if (current$$1 === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }
    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }
    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }
    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;

          if (typeof onRender === 'function') {
            if (enableSchedulerTracing) {
              onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
            } else {
              onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
            }
          }
        }
        return;
      }
    case SuspenseComponent:
    case SuspenseListComponent:
    case IncompleteClassComponent:
    case FundamentalComponent:
      return;
    default:
      {
        (function () {
          {
            {
              throw ReactError(Error('This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'));
            }
          }
        })();
      }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  if (supportsMutation) {
    // We only have the top Fiber that was inserted but we need to recurse down its
    var node = finishedWork;
    while (true) {
      if (node.tag === HostComponent) {
        var instance = node.stateNode;
        if (isHidden) {
          hideInstance(instance);
        } else {
          unhideInstance(node.stateNode, node.memoizedProps);
        }
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;
        if (isHidden) {
          hideTextInstance(_instance3);
        } else {
          unhideTextInstance(_instance3, node.memoizedProps);
        }
      } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {
        // Found a nested Suspense component that timed out. Skip over the
        var fallbackChildFragment = node.child.sibling;
        fallbackChildFragment.return = node;
        node = fallbackChildFragment;
        continue;
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === finishedWork) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;
  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse = void 0;
    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;
      default:
        instanceToUse = instance;
    }
    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current$$1) {
  var currentRef = current$$1.ref;
  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
}

// User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay
function commitUnmount(current$$1, renderPriorityLevel) {
  onCommitUnmount(current$$1);

  switch (current$$1.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        var updateQueue = current$$1.updateQueue;
        if (updateQueue !== null) {
          var lastEffect = updateQueue.lastEffect;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;

            // When the owner fiber is deleted, the destroy function of a passive
            // effect hook is called during the synchronous commit phase. This is
            // a concession to implementation complexity. Calling it in the
            // passive effect phase (like they usually are, when dependencies
            // change during an update) would require either traversing the
            // children of the deleted fiber again, or including unmount effects
            // as part of the fiber effect list.
            //
            // Because this is during the sync commit phase, we need to change
            // the priority.
            //
            // TODO: Reconsider this implementation trade off.
            var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
            runWithPriority$2(priorityLevel, function () {
              var effect = firstEffect;
              do {
                var destroy = effect.destroy;
                if (destroy !== undefined) {
                  safelyCallDestroy(current$$1, destroy);
                }
                effect = effect.next;
              } while (effect !== firstEffect);
            });
          }
        }
        break;
      }
    case ClassComponent:
      {
        safelyDetachRef(current$$1);
        var instance = current$$1.stateNode;
        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current$$1, instance);
        }
        return;
      }
    case HostComponent:
      {
        if (enableFlareAPI) {
          var dependencies = current$$1.dependencies;

          if (dependencies !== null) {
            var respondersMap = dependencies.responders;
            if (respondersMap !== null) {
              var responderInstances = Array.from(respondersMap.values());
              for (var i = 0, length = responderInstances.length; i < length; i++) {
                var responderInstance = responderInstances[i];
                unmountResponderInstance(responderInstance);
              }
              dependencies.responders = null;
            }
          }
        }
        safelyDetachRef(current$$1);
        return;
      }
    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(current$$1, renderPriorityLevel);
        } else if (supportsPersistence) {
          emptyPortalContainer(current$$1);
        }
        return;
      }
    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalInstance = current$$1.stateNode;
          if (fundamentalInstance !== null) {
            unmountFundamentalComponent(fundamentalInstance);
            current$$1.stateNode = null;
          }
        }
      }
  }
}

function commitNestedUnmounts(root, renderPriorityLevel) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  var node = root;
  while (true) {
    commitUnmount(node, renderPriorityLevel);
    // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.
    if (node.child !== null && (
    // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === root) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current$$1) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  current$$1.return = null;
  current$$1.child = null;
  current$$1.memoizedState = null;
  current$$1.updateQueue = null;
  current$$1.dependencies = null;
  var alternate = current$$1.alternate;
  if (alternate !== null) {
    alternate.return = null;
    alternate.child = null;
    alternate.memoizedState = null;
    alternate.updateQueue = null;
    alternate.dependencies = null;
  }
}

function emptyPortalContainer(current$$1) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current$$1.stateNode;
  var containerInfo = portal.containerInfo;

  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
    case HostComponent:
    case HostText:
    case FundamentalComponent:
      {
        return;
      }
    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            _pendingChildren = portalOrRoot.pendingChildren;

        replaceContainerChildren(containerInfo, _pendingChildren);
        return;
      }
    default:
      {
        (function () {
          {
            {
              throw ReactError(Error('This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'));
            }
          }
        })();
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;
  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }
    parent = parent.return;
  }
  (function () {
    {
      {
        throw ReactError(Error('Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  var node = fiber;
  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedSuspenseComponent) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      }
      // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.
      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    }
    // Check if this host node is stable or about to be placed.
    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  }

  // Recursively insert all host nodes into the parent.
  var parentFiber = getHostParentFiber(finishedWork);

  // Note: these two variables *must* always be updated together.
  var parent = void 0;
  var isContainer = void 0;
  var parentStateNode = parentFiber.stateNode;
  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentStateNode;
      isContainer = false;
      break;
    case HostRoot:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;
    case HostPortal:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;
    case FundamentalComponent:
      if (enableFundamentalAPI) {
        parent = parentStateNode.instance;
        isContainer = false;
      }
    // eslint-disable-next-line-no-fallthrough
    default:
      (function () {
        {
          {
            throw ReactError(Error('Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.'));
          }
        }
      })();
  }
  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent);
    // Clear ContentReset from the effect tag
    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork);
  // We only have the top Fiber that was inserted but we need to recurse down its
  // children to find all the terminal nodes.
  var node = finishedWork;
  while (true) {
    var isHost = node.tag === HostComponent || node.tag === HostText;
    if (isHost || node.tag === FundamentalComponent) {
      var stateNode = isHost ? node.stateNode : node.stateNode.instance;
      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, stateNode, before);
        } else {
          insertBefore(parent, stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, stateNode);
        } else {
          appendChild(parent, stateNode);
        }
      }
    } else if (node.tag === HostPortal) {
      // If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === finishedWork) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(current$$1, renderPriorityLevel) {
  // We only have the top Fiber that was deleted but we need to recurse down its
  var node = current$$1;

  // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.
  var currentParentIsValid = false;

  // Note: these two variables *must* always be updated together.
  var currentParent = void 0;
  var currentParentIsContainer = void 0;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;
      findParent: while (true) {
        (function () {
          if (!(parent !== null)) {
            {
              throw ReactError(Error('Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.'));
            }
          }
        })();
        var parentStateNode = parent.stateNode;
        switch (parent.tag) {
          case HostComponent:
            currentParent = parentStateNode;
            currentParentIsContainer = false;
            break findParent;
          case HostRoot:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
          case HostPortal:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
          case FundamentalComponent:
            if (enableFundamentalAPI) {
              currentParent = parentStateNode.instance;
              currentParentIsContainer = false;
            }
        }
        parent = parent.return;
      }
      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(node, renderPriorityLevel);
      // After all the children have unmounted, it is now safe to remove the
      // node from the tree.
      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      }
      // Don't visit children because we already visited them.
    } else if (node.tag === FundamentalComponent) {
      var fundamentalNode = node.stateNode.instance;
      commitNestedUnmounts(node, renderPriorityLevel);
      // After all the children have unmounted, it is now safe to remove the
      // node from the tree.
      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, fundamentalNode);
      } else {
        removeChild(currentParent, fundamentalNode);
      }
    } else if (enableSuspenseServerRenderer && node.tag === DehydratedSuspenseComponent) {
      // Delete the dehydrated suspense boundary and all of its content.
      if (currentParentIsContainer) {
        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
      } else {
        clearSuspenseBoundary(currentParent, node.stateNode);
      }
    } else if (node.tag === HostPortal) {
      if (node.child !== null) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        currentParentIsContainer = true;
        // Visit children because portals might contain host components.
        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(node, renderPriorityLevel);
      // Visit children because we may find more host components below.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }
    if (node === current$$1) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === current$$1) {
        return;
      }
      node = node.return;
      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(current$$1, renderPriorityLevel) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current$$1, renderPriorityLevel);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(current$$1, renderPriorityLevel);
  }
  detachFiber(current$$1);
}

function commitWork(current$$1, finishedWork) {
  if (!supportsMutation) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case MemoComponent:
      case SimpleMemoComponent:
        {
          // Note: We currently never use MountMutation, but useLayout uses
          // UnmountMutation.
          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
          return;
        }
      case Profiler:
        {
          return;
        }
      case SuspenseComponent:
        {
          commitSuspenseComponent(finishedWork);
          attachSuspenseRetryListeners(finishedWork);
          return;
        }
      case SuspenseListComponent:
        {
          attachSuspenseRetryListeners(finishedWork);
          return;
        }
    }

    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        // Note: We currently never use MountMutation, but useLayout uses
        // UnmountMutation.
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;
      }
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        var instance = finishedWork.stateNode;
        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
          var type = finishedWork.type;
          // TODO: Type the updateQueue to be specific to host components.
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }
        }
        return;
      }
    case HostText:
      {
        (function () {
          if (!(finishedWork.stateNode !== null)) {
            {
              throw ReactError(Error('This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.'));
            }
          }
        })();
        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps;
        // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.
        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }
    case HostRoot:
      {
        return;
      }
    case Profiler:
      {
        return;
      }
    case SuspenseComponent:
      {
        commitSuspenseComponent(finishedWork);
        attachSuspenseRetryListeners(finishedWork);
        return;
      }
    case SuspenseListComponent:
      {
        attachSuspenseRetryListeners(finishedWork);
        return;
      }
    case IncompleteClassComponent:
      {
        return;
      }
    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalInstance = finishedWork.stateNode;
          updateFundamentalComponent(fundamentalInstance);
        }
        return;
      }
    default:
      {
        (function () {
          {
            {
              throw ReactError(Error('This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'));
            }
          }
        })();
      }
  }
}

function commitSuspenseComponent(finishedWork) {
  var newState = finishedWork.memoizedState;

  var newDidTimeout = void 0;
  var primaryChildParent = finishedWork;
  if (newState === null) {
    newDidTimeout = false;
  } else {
    newDidTimeout = true;
    primaryChildParent = finishedWork.child;
    markCommitTimeOfFallback();
  }

  if (supportsMutation && primaryChildParent !== null) {
    hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
  }

  if (enableSuspenseCallback && newState !== null) {
    var suspenseCallback = finishedWork.memoizedProps.suspenseCallback;
    if (typeof suspenseCallback === 'function') {
      var thenables = finishedWork.updateQueue;
      if (thenables !== null) {
        suspenseCallback(new Set(thenables));
      }
    } else {
      if (suspenseCallback !== undefined) {
        warning$1(false, 'Unexpected type for suspenseCallback.');
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of thenables.
  // For each thenable, attach a listener so that when it resolves, React
  var thenables = finishedWork.updateQueue;
  if (thenables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;
    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet$1();
    }
    thenables.forEach(function (thenable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
      if (!retryCache.has(thenable)) {
        if (enableSchedulerTracing) {
          retry = unstable_wrap(retry);
        }
        retryCache.add(thenable);
        thenable.then(retry, retry);
      }
    });
  }
}

function commitResetTextContent(current$$1) {
  if (!supportsMutation) {
    return;
  }
  resetTextContent(current$$1.stateNode);
}

var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime, null);
  // Unmount the root by rendering null.
  update.tag = CaptureUpdate;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: null };
  var error = errorInfo.value;
  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };
  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime, null);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
  if (typeof getDerivedStateFromError === 'function') {
    var error = errorInfo.value;
    update.payload = function () {
      logError(fiber, errorInfo);
      return getDerivedStateFromError(error);
    };
  }

  var inst = fiber.stateNode;
  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }
      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);

        // Only log here if componentDidCatch is the only error boundary method defined
        logError(fiber, errorInfo);
      }
      var error = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });
      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
        }
      }
    };
  } else {
    update.callback = function () {
      markFailedErrorBoundaryForHotReloading(fiber);
    };
  }
  return update;
}

function attachPingListener(root, renderExpirationTime, thenable) {
  // Attach a listener to the promise to "ping" the root and retry. But
  // only if one does not already exist for the current render expiration
  // time (which acts like a "thread ID" here).
  var pingCache = root.pingCache;
  var threadIDs = void 0;
  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(thenable, threadIDs);
  } else {
    threadIDs = pingCache.get(thenable);
    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(thenable, threadIDs);
    }
  }
  if (!threadIDs.has(renderExpirationTime)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(renderExpirationTime);
    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
    if (enableSchedulerTracing) {
      ping = unstable_wrap(ping);
    }
    thenable.then(ping, ping);
  }
}

function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete;
  // Its effect list is no longer valid.
  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;

    checkForWrongSuspensePriorityInDEV(sourceFiber);

    var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext);

    // Schedule the nearest Suspense to re-render the timed out view.
    var _workInProgress = returnFiber;
    do {
      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
        // Found the nearest boundary.

        // Stash the promise on the boundary fiber. If the boundary times out, we'll
        var thenables = _workInProgress.updateQueue;
        if (thenables === null) {
          var updateQueue = new Set();
          updateQueue.add(thenable);
          _workInProgress.updateQueue = updateQueue;
        } else {
          thenables.add(thenable);
        }

        // If the boundary is outside of batched mode, we should *not*
        // suspend the commit. Pretend as if the suspended component rendered
        // null and keep rendering. In the commit phase, we'll schedule a
        // subsequent synchronous update to re-render the Suspense.
        //
        // Note: It doesn't matter whether the component that suspended was
        // inside a batched mode tree. If the Suspense is outside of it, we
        // should *not* suspend the commit.
        if ((_workInProgress.mode & BatchedMode) === NoMode) {
          _workInProgress.effectTag |= DidCapture;

          // We're going to commit this fiber even though it didn't complete.
          // But we shouldn't call any lifecycle methods or callbacks. Remove
          // all lifecycle effect tags.
          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

          if (sourceFiber.tag === ClassComponent) {
            var currentSourceFiber = sourceFiber.alternate;
            if (currentSourceFiber === null) {
              // This is a new mount. Change the tag so it's not mistaken for a
              // completed class component. For example, we should not call
              // componentWillUnmount if it is deleted.
              sourceFiber.tag = IncompleteClassComponent;
            } else {
              // When we try rendering again, we should not reuse the current fiber,
              // since it's known to be in an inconsistent state. Use a force update to
              // prevent a bail out.
              var update = createUpdate(Sync, null);
              update.tag = ForceUpdate;
              enqueueUpdate(sourceFiber, update);
            }
          }

          // The source fiber did not complete. Mark it with Sync priority to
          // indicate that it still has pending work.
          sourceFiber.expirationTime = Sync;

          // Exit without suspending.
          return;
        }

        // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.

        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. SuspenseConfig applies to
        // this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.

        attachPingListener(root, renderExpirationTime, thenable);

        _workInProgress.effectTag |= ShouldCapture;
        _workInProgress.expirationTime = renderExpirationTime;

        return;
      } else if (enableSuspenseServerRenderer && _workInProgress.tag === DehydratedSuspenseComponent) {
        attachPingListener(root, renderExpirationTime, thenable);

        // Since we already have a current fiber, we can eagerly add a retry listener.
        var retryCache = _workInProgress.memoizedState;
        if (retryCache === null) {
          retryCache = _workInProgress.memoizedState = new PossiblyWeakSet();
          var current$$1 = _workInProgress.alternate;
          (function () {
            if (!current$$1) {
              {
                throw ReactError(Error('A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.'));
              }
            }
          })();
          current$$1.memoizedState = retryCache;
        }
        // Memoize using the boundary fiber to prevent redundant listeners.
        if (!retryCache.has(thenable)) {
          retryCache.add(thenable);
          var retry = resolveRetryThenable.bind(null, _workInProgress, thenable);
          if (enableSchedulerTracing) {
            retry = unstable_wrap(retry);
          }
          thenable.then(retry, retry);
        }
        _workInProgress.effectTag |= ShouldCapture;
        _workInProgress.expirationTime = renderExpirationTime;
        return;
      }
      // This boundary already captured during this render. Continue to the next
      // boundary.
      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null);
    // No boundary was found. Fallthrough to error mode.
    // TODO: Use invariant so the message is stripped in prod?
    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
  }

  // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.
  renderDidError();
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;
  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime;
          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }
      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;
        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime;
          // Schedule the error boundary to re-render using updated state
          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update2);
          return;
        }
        break;
      default:
        break;
    }
    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

// The scheduler is imported here *only* to detect whether it's been mocked
// DEV stuff
var ceil = Math.ceil;

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
var IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;


var NoContext = /*                    */0;
var BatchedContext = /*               */1;
var EventContext = /*                 */2;
var DiscreteEventContext = /*         */4;
var LegacyUnbatchedContext = /*       */8;
var RenderContext = /*                */16;
var CommitContext = /*                */32;

var RootIncomplete = 0;
var RootErrored = 1;
var RootSuspended = 2;
var RootSuspendedWithDelay = 3;
var RootCompleted = 4;

// Describes where we are in the React execution stack
var executionContext = NoContext;
// The root we're working on
var workInProgressRoot = null;
// The fiber we're working on
var workInProgress = null;
// The expiration time we're rendering
var renderExpirationTime = NoWork;
// Whether to root completed, errored, suspended, etc.
var workInProgressRootExitStatus = RootIncomplete;
// Most recent event time among processed updates during this render.
// This is conceptually a time stamp but expressed in terms of an ExpirationTime
// because we deal mostly with expiration times in the hot path, so this avoids
// the conversion happening in the hot path.
var workInProgressRootLatestProcessedExpirationTime = Sync;
var workInProgressRootLatestSuspenseTimeout = Sync;
var workInProgressRootCanSuspendUsingConfig = null;
// If we're pinged while rendering we don't always restart immediately.
// This flag determines if it might be worthwhile to restart if an opportunity
// happens latere.
var workInProgressRootHasPendingPing = false;
// The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.
var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500;

var nextEffect = null;
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null;

var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsRenderPriority = NoPriority;
var pendingPassiveEffectsExpirationTime = NoWork;

var rootsWithPendingDiscreteUpdates = null;

// Use these to prevent an infinite loop of nested updates
var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;

var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0;

var interruptedBy = null;

// Marks the need to reschedule pending interactions at these expiration times
// during the commit phase. This enables them to be traced across components
// that spawn new work during render. E.g. hidden boundaries, suspended SSR
// hydration or SuspenseList.
var spawnedWorkDuringRender = null;

// Expiration times are computed by adding to the current time (the start
// time). However, if two updates are scheduled within the same event, we
// should treat their start times as simultaneous, even if the actual clock
// time has advanced between the first and second call.

// In other words, because expiration times determine how updates are batched,
// we want all updates of like priority that occur within the same event to
// receive the same expiration time. Otherwise we get tearing.
var currentEventTime = NoWork;

function requestCurrentTime() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return msToExpirationTime(now());
  }
  // We're not inside React, so we may be in the middle of a browser event.
  if (currentEventTime !== NoWork) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  }
  // This is the first update since React yielded. Compute a new start time.
  currentEventTime = msToExpirationTime(now());
  return currentEventTime;
}

function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
  var mode = fiber.mode;
  if ((mode & BatchedMode) === NoMode) {
    return Sync;
  }

  var priorityLevel = getCurrentPriorityLevel();
  if ((mode & ConcurrentMode) === NoMode) {
    return priorityLevel === ImmediatePriority ? Sync : Batched;
  }

  if ((executionContext & RenderContext) !== NoContext) {
    // Use whatever time we're already rendering
    return renderExpirationTime;
  }

  var expirationTime = void 0;
  if (suspenseConfig !== null) {
    // Compute an expiration time based on the Suspense timeout.
    expirationTime = computeSuspenseExpiration(currentTime, suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
  } else {
    // Compute an expiration time based on the Scheduler priority.
    switch (priorityLevel) {
      case ImmediatePriority:
        expirationTime = Sync;
        break;
      case UserBlockingPriority$2:
        // TODO: Rename this to computeUserBlockingExpiration
        expirationTime = computeInteractiveExpiration(currentTime);
        break;
      case NormalPriority:
      case LowPriority:
        // TODO: Handle LowPriority
        // TODO: Rename this to... something better.
        expirationTime = computeAsyncExpiration(currentTime);
        break;
      case IdlePriority:
        expirationTime = Never;
        break;
      default:
        (function () {
          {
            {
              throw ReactError(Error('Expected a valid priority level'));
            }
          }
        })();
    }
  }

  // If we're in the middle of rendering a tree, do not update at the same
  // expiration time that is already rendering.
  // TODO: We shouldn't have to do this if the update is on a different root.
  // Refactor computeExpirationForFiber + scheduleUpdate so we have access to
  // the root when we check for this condition.
  if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {
    // This is a trick to move this update into a separate batch
    expirationTime -= 1;
  }

  return expirationTime;
}

var lastUniqueAsyncExpiration = NoWork;
function computeUniqueAsyncExpiration() {
  var currentTime = requestCurrentTime();
  var result = computeAsyncExpiration(currentTime);
  if (result <= lastUniqueAsyncExpiration) {
    // Since we assume the current time monotonically increases, we only hit
    // this branch when computeUniqueAsyncExpiration is fired multiple times
    // within a 200ms window (or whatever the async bucket size is).
    result -= 1;
  }
  lastUniqueAsyncExpiration = result;
  return result;
}

function scheduleUpdateOnFiber(fiber, expirationTime) {
  checkForNestedUpdates();
  warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber);

  var root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);
  if (root === null) {
    warnAboutUpdateOnUnmountedFiberInDEV(fiber);
    return;
  }

  root.pingTime = NoWork;

  checkForInterruption(fiber, expirationTime);
  recordScheduleUpdate();

  // TODO: computeExpirationForFiber also reads the priority. Pass the
  // priority as an argument to that function and this one.
  var priorityLevel = getCurrentPriorityLevel();

  if (expirationTime === Sync) {
    if (
    // Check if we're inside unbatchedUpdates
    (executionContext & LegacyUnbatchedContext) !== NoContext &&
    // Check if we're not already rendering
    (executionContext & (RenderContext | CommitContext)) === NoContext) {
      // Register pending interactions on the root to avoid losing traced interaction data.
      schedulePendingInteractions(root, expirationTime);

      // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
      // root inside of batchedUpdates should be synchronous, but layout updates
      // should be deferred until the end of the batch.
      var callback = renderRoot(root, Sync, true);
      while (callback !== null) {
        callback = callback(true);
      }
    } else {
      scheduleCallbackForRoot(root, ImmediatePriority, Sync);
      if (executionContext === NoContext) {
        // Flush the synchronous work now, wnless we're already working or inside
        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
        // scheduleCallbackForFiber to preserve the ability to schedule a callback
        // without immediately flushing it. We only do this for user-initiated
        // updates, to preserve historical behavior of sync mode.
        flushSyncCallbackQueue();
      }
    }
  } else {
    scheduleCallbackForRoot(root, priorityLevel, expirationTime);
  }

  if ((executionContext & DiscreteEventContext) !== NoContext && (
  // Only updates at user-blocking priority or greater are considered
  // discrete, even inside a discrete event.
  priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority)) {
    // This is the result of a discrete event. Track the lowest priority
    // discrete update per root so we can flush them early, if needed.
    if (rootsWithPendingDiscreteUpdates === null) {
      rootsWithPendingDiscreteUpdates = new Map([[root, expirationTime]]);
    } else {
      var lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);
      if (lastDiscreteTime === undefined || lastDiscreteTime > expirationTime) {
        rootsWithPendingDiscreteUpdates.set(root, expirationTime);
      }
    }
  }
}
var scheduleWork = scheduleUpdateOnFiber;

// This is split into a separate function so we can mark a fiber with pending
// work without treating it as a typical update that originates from an event;
// e.g. retrying a Suspense boundary isn't an update, but it does schedule work
// on a fiber.
function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
  // Update the source fiber's expiration time
  if (fiber.expirationTime < expirationTime) {
    fiber.expirationTime = expirationTime;
  }
  var alternate = fiber.alternate;
  if (alternate !== null && alternate.expirationTime < expirationTime) {
    alternate.expirationTime = expirationTime;
  }
  // Walk the parent path to the root and update the child expiration time.
  var node = fiber.return;
  var root = null;
  if (node === null && fiber.tag === HostRoot) {
    root = fiber.stateNode;
  } else {
    while (node !== null) {
      alternate = node.alternate;
      if (node.childExpirationTime < expirationTime) {
        node.childExpirationTime = expirationTime;
        if (alternate !== null && alternate.childExpirationTime < expirationTime) {
          alternate.childExpirationTime = expirationTime;
        }
      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
        alternate.childExpirationTime = expirationTime;
      }
      if (node.return === null && node.tag === HostRoot) {
        root = node.stateNode;
        break;
      }
      node = node.return;
    }
  }

  if (root !== null) {
    // Update the first and last pending expiration times in this root
    var firstPendingTime = root.firstPendingTime;
    if (expirationTime > firstPendingTime) {
      root.firstPendingTime = expirationTime;
    }
    var lastPendingTime = root.lastPendingTime;
    if (lastPendingTime === NoWork || expirationTime < lastPendingTime) {
      root.lastPendingTime = expirationTime;
    }
  }

  return root;
}

// Use this function, along with runRootCallback, to ensure that only a single
// callback per root is scheduled. It's still possible to call renderRoot
// directly, but scheduling via this function helps avoid excessive callbacks.
// It works by storing the callback node and expiration time on the root. When a
// new callback comes in, it compares the expiration time to determine if it
// should cancel the previous one. It also relies on commitRoot scheduling a
// callback to render the next level, because that means we don't need a
// separate callback per expiration time.
function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
  var existingCallbackExpirationTime = root.callbackExpirationTime;
  if (existingCallbackExpirationTime < expirationTime) {
    // New callback has higher priority than the existing one.
    var existingCallbackNode = root.callbackNode;
    if (existingCallbackNode !== null) {
      cancelCallback(existingCallbackNode);
    }
    root.callbackExpirationTime = expirationTime;

    if (expirationTime === Sync) {
      // Sync React callbacks are scheduled on a special internal queue
      root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)));
    } else {
      var options = null;
      if (!disableSchedulerTimeoutBasedOnReactExpirationTime && expirationTime !== Never) {
        var timeout = expirationTimeToMs(expirationTime) - now();
        options = { timeout: timeout };
      }

      root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), options);
      if (enableUserTimingAPI && expirationTime !== Sync && (executionContext & (RenderContext | CommitContext)) === NoContext) {
        // Scheduled an async callback, and we're not already working. Add an
        // entry to the flamegraph that shows we're waiting for a callback
        // to fire.
        startRequestCallbackTimer();
      }
    }
  }

  // Associate the current interactions with this new root+priority.
  schedulePendingInteractions(root, expirationTime);
}

function runRootCallback(root, callback, isSync) {
  var prevCallbackNode = root.callbackNode;
  var continuation = null;
  try {
    continuation = callback(isSync);
    if (continuation !== null) {
      return runRootCallback.bind(null, root, continuation);
    } else {
      return null;
    }
  } finally {
    // If the callback exits without returning a continuation, remove the
    // corresponding callback node from the root. Unless the callback node
    // has changed, which implies that it was already cancelled by a high
    // priority update.
    if (continuation === null && prevCallbackNode === root.callbackNode) {
      root.callbackNode = null;
      root.callbackExpirationTime = NoWork;
    }
  }
}

function flushRoot(root, expirationTime) {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    (function () {
      {
        {
          throw ReactError(Error('work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.'));
        }
      }
    })();
  }
  scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
  flushSyncCallbackQueue();
}

function flushDiscreteUpdates() {
  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
  // However, `act` uses `batchedUpdates`, so there's no way to distinguish
  // those two cases. Need to fix this before exposing flushDiscreteUpdates
  // as a public API.
  if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
    if (true && (executionContext & RenderContext) !== NoContext) {
      warning$1(false, 'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
    }
    // We're already rendering, so we can't synchronously flush pending work.
    // This is probably a nested event dispatch triggered by a lifecycle/effect,
    // like `el.focus()`. Exit.
    return;
  }
  flushPendingDiscreteUpdates();
  if (!revertPassiveEffectsChange) {
    // If the discrete updates scheduled passive effects, flush them now so that
    // they fire before the next serial event.
    flushPassiveEffects();
  }
}

function resolveLocksOnRoot(root, expirationTime) {
  var firstBatch = root.firstBatch;
  if (firstBatch !== null && firstBatch._defer && firstBatch._expirationTime >= expirationTime) {
    scheduleCallback(NormalPriority, function () {
      firstBatch._onComplete();
      return null;
    });
    return true;
  } else {
    return false;
  }
}





function flushPendingDiscreteUpdates() {
  if (rootsWithPendingDiscreteUpdates !== null) {
    // For each root with pending discrete updates, schedule a callback to
    // immediately flush them.
    var roots = rootsWithPendingDiscreteUpdates;
    rootsWithPendingDiscreteUpdates = null;
    roots.forEach(function (expirationTime, root) {
      scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
    });
    // Now flush the immediate queue.
    flushSyncCallbackQueue();
  }
}

function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;
  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;
    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function batchedEventUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= EventContext;
  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;
    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function discreteUpdates$1(fn, a, b, c) {
  var prevExecutionContext = executionContext;
  executionContext |= DiscreteEventContext;
  try {
    // Should this
    return runWithPriority$2(UserBlockingPriority$2, fn.bind(null, a, b, c));
  } finally {
    executionContext = prevExecutionContext;
    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function unbatchedUpdates(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext &= ~BatchedContext;
  executionContext |= LegacyUnbatchedContext;
  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;
    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function flushSync(fn, a) {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    (function () {
      {
        {
          throw ReactError(Error('flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.'));
        }
      }
    })();
  }
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;
  try {
    return runWithPriority$2(ImmediatePriority, fn.bind(null, a));
  } finally {
    executionContext = prevExecutionContext;
    // Flush the immediate callbacks that were scheduled during this batch.
    // Note that this will happen even if batchedUpdates is higher up
    // the stack.
    flushSyncCallbackQueue();
  }
}

function flushControlled(fn) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;
  try {
    runWithPriority$2(ImmediatePriority, fn);
  } finally {
    executionContext = prevExecutionContext;
    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function prepareFreshStack(root, expirationTime) {
  root.finishedWork = null;
  root.finishedExpirationTime = NoWork;

  var timeoutHandle = root.timeoutHandle;
  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout;
    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;
    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }
  workInProgressRoot = root;
  workInProgress = createWorkInProgress(root.current, null, expirationTime);
  renderExpirationTime = expirationTime;
  workInProgressRootExitStatus = RootIncomplete;
  workInProgressRootLatestProcessedExpirationTime = Sync;
  workInProgressRootLatestSuspenseTimeout = Sync;
  workInProgressRootCanSuspendUsingConfig = null;
  workInProgressRootHasPendingPing = false;

  if (enableSchedulerTracing) {
    spawnedWorkDuringRender = null;
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    componentsThatTriggeredHighPriSuspend = null;
  }
}

function renderRoot(root, expirationTime, isSync) {
  (function () {
    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw ReactError(Error('Should not already be working.'));
      }
    }
  })();

  if (enableUserTimingAPI && expirationTime !== Sync) {
    var didExpire = isSync;
    stopRequestCallbackTimer(didExpire);
  }

  if (root.firstPendingTime < expirationTime) {
    // If there's no work left at this expiration time, exit immediately. This
    // happens when multiple callbacks are scheduled for a single root, but an
    // earlier callback flushes the work of a later one.
    return null;
  }

  if (isSync && root.finishedExpirationTime === expirationTime) {
    // There's already a pending commit at this expiration time.
    // TODO: This is poorly factored. This case only exists for the
    // batch.commit() API.
    return commitRoot.bind(null, root);
  }

  flushPassiveEffects();

  // If the root or expiration time have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.
  if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
    prepareFreshStack(root, expirationTime);
    startWorkOnPendingInteractions(root, expirationTime);
  } else if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
    // We could've received an update at a lower priority while we yielded.
    // We're suspended in a delayed state. Once we complete this render we're
    // just going to try to recover at the last pending time anyway so we might
    // as well start doing that eagerly.
    // Ideally we should be able to do this even for retries but we don't yet
    // know if we're going to process an update which wants to commit earlier,
    // and this path happens very early so it would happen too often. Instead,
    // for that case, we'll wait until we complete.
    if (workInProgressRootHasPendingPing) {
      // We have a ping at this expiration. Let's restart to see if we get unblocked.
      prepareFreshStack(root, expirationTime);
    } else {
      var lastPendingTime = root.lastPendingTime;
      if (lastPendingTime < expirationTime) {
        // There's lower priority work. It might be unsuspended. Try rendering
        // at that level immediately, while preserving the position in the queue.
        return renderRoot.bind(null, root, lastPendingTime);
      }
    }
  }

  // If we have a work-in-progress fiber, it means there's still work to do
  // in this root.
  if (workInProgress !== null) {
    var prevExecutionContext = executionContext;
    executionContext |= RenderContext;
    var prevDispatcher = ReactCurrentDispatcher.current;
    if (prevDispatcher === null) {
      // The React isomorphic package does not include a default dispatcher.
      // Instead the first renderer will lazily attach one, in order to give
      // nicer error messages.
      prevDispatcher = ContextOnlyDispatcher;
    }
    ReactCurrentDispatcher.current = ContextOnlyDispatcher;
    var prevInteractions = null;
    if (enableSchedulerTracing) {
      prevInteractions = __interactionsRef.current;
      __interactionsRef.current = root.memoizedInteractions;
    }

    startWorkLoopTimer(workInProgress);

    // TODO: Fork renderRoot into renderRootSync and renderRootAsync
    if (isSync) {
      if (expirationTime !== Sync) {
        // An async update expired. There may be other expired updates on
        // this root. We should render all the expired work in a
        // single batch.
        var currentTime = requestCurrentTime();
        if (currentTime < expirationTime) {
          // Restart at the current time.
          executionContext = prevExecutionContext;
          resetContextDependencies();
          ReactCurrentDispatcher.current = prevDispatcher;
          if (enableSchedulerTracing) {
            __interactionsRef.current = prevInteractions;
          }
          return renderRoot.bind(null, root, currentTime);
        }
      }
    } else {
      // Since we know we're in a React event, we can clear the current
      // event time. The next update will compute a new event time.
      currentEventTime = NoWork;
    }

    do {
      try {
        if (isSync) {
          workLoopSync();
        } else {
          workLoop();
        }
        break;
      } catch (thrownValue) {
        // Reset module-level state that was set during the render phase.
        resetContextDependencies();
        resetHooks();

        var sourceFiber = workInProgress;
        if (sourceFiber === null || sourceFiber.return === null) {
          // Expected to be working on a non-root fiber. This is a fatal error
          // because there's no ancestor that can handle it; the root is
          // supposed to capture all errors that weren't caught by an error
          // boundary.
          prepareFreshStack(root, expirationTime);
          executionContext = prevExecutionContext;
          throw thrownValue;
        }

        if (enableProfilerTimer && sourceFiber.mode & ProfileMode) {
          // Record the time spent rendering before an error was thrown. This
          // avoids inaccurate Profiler durations in the case of a
          // suspended render.
          stopProfilerTimerIfRunningAndRecordDelta(sourceFiber, true);
        }

        var returnFiber = sourceFiber.return;
        throwException(root, returnFiber, sourceFiber, thrownValue, renderExpirationTime);
        workInProgress = completeUnitOfWork(sourceFiber);
      }
    } while (true);

    executionContext = prevExecutionContext;
    resetContextDependencies();
    ReactCurrentDispatcher.current = prevDispatcher;
    if (enableSchedulerTracing) {
      __interactionsRef.current = prevInteractions;
    }

    if (workInProgress !== null) {
      // There's still work left over. Return a continuation.
      stopInterruptedWorkLoopTimer();
      if (expirationTime !== Sync) {
        startRequestCallbackTimer();
      }
      return renderRoot.bind(null, root, expirationTime);
    }
  }

  // We now have a consistent tree. The next step is either to commit it, or, if
  // something suspended, wait to commit it after a timeout.
  stopFinishedWorkLoopTimer();

  root.finishedWork = root.current.alternate;
  root.finishedExpirationTime = expirationTime;

  var isLocked = resolveLocksOnRoot(root, expirationTime);
  if (isLocked) {
    // This root has a lock that prevents it from committing. Exit. If we begin
    // work on the root again, without any intervening updates, it will finish
    // without doing additional work.
    return null;
  }

  // Set this to null to indicate there's no in-progress render.
  workInProgressRoot = null;

  switch (workInProgressRootExitStatus) {
    case RootIncomplete:
      {
        (function () {
          {
            {
              throw ReactError(Error('Should have a work-in-progress.'));
            }
          }
        })();
      }
    // Flow knows about invariant, so it complains if I add a break statement,
    // but eslint doesn't know about invariant, so it complains if I do.
    // eslint-disable-next-line no-fallthrough
    case RootErrored:
      {
        // An error was thrown. First check if there is lower priority work
        // scheduled on this root.
        var _lastPendingTime = root.lastPendingTime;
        if (_lastPendingTime < expirationTime) {
          // There's lower priority work. Before raising the error, try rendering
          // at the lower priority to see if it fixes it. Use a continuation to
          // maintain the existing priority and position in the queue.
          return renderRoot.bind(null, root, _lastPendingTime);
        }
        if (!isSync) {
          // If we're rendering asynchronously, it's possible the error was
          // caused by tearing due to a mutation during an event. Try rendering
          // one more time without yiedling to events.
          prepareFreshStack(root, expirationTime);
          scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
          return null;
        }
        // If we're already rendering synchronously, commit the root in its
        // errored state.
        return commitRoot.bind(null, root);
      }
    case RootSuspended:
      {
        flushSuspensePriorityWarningInDEV();

        // We have an acceptable loading state. We need to figure out if we should
        // immediately commit it or wait a bit.

        // If we have processed new updates during this render, we may now have a
        // new loading state ready. We want to ensure that we commit that as soon as
        // possible.
        var hasNotProcessedNewUpdates = workInProgressRootLatestProcessedExpirationTime === Sync;
        if (hasNotProcessedNewUpdates && !isSync &&
        // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
          // If we have not processed any new updates during this pass, then this is
          // either a retry of an existing fallback state or a hidden tree.
          // Hidden trees shouldn't be batched with other work and after that's
          // fixed it can only be a retry.
          // We're going to throttle committing retries so that we don't show too
          // many loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
          // Don't bother with a very short suspense time.
          if (msUntilTimeout > 10) {
            if (workInProgressRootHasPendingPing) {
              // This render was pinged but we didn't get to restart earlier so try
              // restarting now instead.
              prepareFreshStack(root, expirationTime);
              return renderRoot.bind(null, root, expirationTime);
            }
            var _lastPendingTime2 = root.lastPendingTime;
            if (_lastPendingTime2 < expirationTime) {
              // There's lower priority work. It might be unsuspended. Try rendering
              // at that level.
              return renderRoot.bind(null, root, _lastPendingTime2);
            }
            // The render is suspended, it hasn't timed out, and there's no lower
            // priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
            return null;
          }
        }
        // The work expired. Commit immediately.
        return commitRoot.bind(null, root);
      }
    case RootSuspendedWithDelay:
      {
        flushSuspensePriorityWarningInDEV();

        if (!isSync &&
        // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
          // We're suspended in a state that should be avoided. We'll try to avoid committing
          // it for as long as the timeouts let us.
          if (workInProgressRootHasPendingPing) {
            // This render was pinged but we didn't get to restart earlier so try
            // restarting now instead.
            prepareFreshStack(root, expirationTime);
            return renderRoot.bind(null, root, expirationTime);
          }
          var _lastPendingTime3 = root.lastPendingTime;
          if (_lastPendingTime3 < expirationTime) {
            // There's lower priority work. It might be unsuspended. Try rendering
            // at that level immediately.
            return renderRoot.bind(null, root, _lastPendingTime3);
          }

          var _msUntilTimeout = void 0;
          if (workInProgressRootLatestSuspenseTimeout !== Sync) {
            // We have processed a suspense config whose expiration time we can use as
            // the timeout.
            _msUntilTimeout = expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now();
          } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {
            // This should never normally happen because only new updates cause
            // delayed states, so we should have processed something. However,
            // this could also happen in an offscreen tree.
            _msUntilTimeout = 0;
          } else {
            // If we don't have a suspense config, we're going to use a heuristic to
            var eventTimeMs = inferTimeFromExpirationTime(workInProgressRootLatestProcessedExpirationTime);
            var currentTimeMs = now();
            var timeUntilExpirationMs = expirationTimeToMs(expirationTime) - currentTimeMs;
            var timeElapsed = currentTimeMs - eventTimeMs;
            if (timeElapsed < 0) {
              // We get this wrong some time since we estimate the time.
              timeElapsed = 0;
            }

            _msUntilTimeout = jnd(timeElapsed) - timeElapsed;

            // Clamp the timeout to the expiration time.
            // TODO: Once the event time is exact instead of inferred from expiration time
            // we don't need this.
            if (timeUntilExpirationMs < _msUntilTimeout) {
              _msUntilTimeout = timeUntilExpirationMs;
            }
          }

          // Don't bother with a very short suspense time.
          if (_msUntilTimeout > 10) {
            // The render is suspended, it hasn't timed out, and there's no lower
            // priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
            return null;
          }
        }
        // The work expired. Commit immediately.
        return commitRoot.bind(null, root);
      }
    case RootCompleted:
      {
        // The work completed. Ready to commit.
        if (!isSync &&
        // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current) && workInProgressRootLatestProcessedExpirationTime !== Sync && workInProgressRootCanSuspendUsingConfig !== null) {
          // If we have exceeded the minimum loading delay, which probably
          // means we have shown a spinner already, we might have to suspend
          // a bit longer to ensure that the spinner is shown for enough time.
          var _msUntilTimeout2 = computeMsUntilSuspenseLoadingDelay(workInProgressRootLatestProcessedExpirationTime, expirationTime, workInProgressRootCanSuspendUsingConfig);
          if (_msUntilTimeout2 > 10) {
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout2);
            return null;
          }
        }
        return commitRoot.bind(null, root);
      }
    default:
      {
        (function () {
          {
            {
              throw ReactError(Error('Unknown root exit status.'));
            }
          }
        })();
      }
  }
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}

function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
  if (expirationTime < workInProgressRootLatestProcessedExpirationTime && expirationTime > Never) {
    workInProgressRootLatestProcessedExpirationTime = expirationTime;
  }
  if (suspenseConfig !== null) {
    if (expirationTime < workInProgressRootLatestSuspenseTimeout && expirationTime > Never) {
      workInProgressRootLatestSuspenseTimeout = expirationTime;
      // Most of the time we only have one config and getting wrong is not bad.
      workInProgressRootCanSuspendUsingConfig = suspenseConfig;
    }
  }
}

function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootSuspended;
  }
}

function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  }
}

function renderDidError() {
  if (workInProgressRootExitStatus !== RootCompleted) {
    workInProgressRootExitStatus = RootErrored;
  }
}

// Called during render to determine if anything has suspended.
// Returns false if we're not sure.
function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootIncomplete;
}

function inferTimeFromExpirationTime(expirationTime) {
  // We don't know exactly when the update was scheduled, but we can infer an
  // approximate start time from the expiration time.
  var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
  return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
}

function inferTimeFromExpirationTimeWithSuspenseConfig(expirationTime, suspenseConfig) {
  // We don't know exactly when the update was scheduled, but we can infer an
  // approximate start time from the expiration time by subtracting the timeout
  // that was added to the event time.
  var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
  return earliestExpirationTimeMs - (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
}

function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    workInProgress = performUnitOfWork(workInProgress);
  }
}

function workLoop() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    workInProgress = performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current$$1 = unitOfWork.alternate;

  startWorkTimer(unitOfWork);
  setCurrentFiber(unitOfWork);

  var next = void 0;
  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;
  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(unitOfWork);
  }

  ReactCurrentOwner$2.current = null;
  return next;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  workInProgress = unitOfWork;
  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current$$1 = workInProgress.alternate;
    var returnFiber = workInProgress.return;

    // Check if the work completed or if something threw.
    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      setCurrentFiber(workInProgress);
      var next = void 0;
      if (!enableProfilerTimer || (workInProgress.mode & ProfileMode) === NoMode) {
        next = completeWork(current$$1, workInProgress, renderExpirationTime);
      } else {
        startProfilerTimer(workInProgress);
        next = completeWork(current$$1, workInProgress, renderExpirationTime);
        // Update render duration assuming we didn't error.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
      }
      stopWorkTimer(workInProgress);
      resetCurrentFiber();
      resetChildExpirationTime(workInProgress);

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        return next;
      }

      if (returnFiber !== null &&
      // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if needed,
        // by doing multiple passes over the effect list. We don't want to
        // schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;

        // Skip both NoWork and PerformedWork tags when creating the effect
        // list. PerformedWork effect is read by React DevTools but shouldn't be
        // committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(workInProgress, renderExpirationTime);

      // Because this fiber did not complete, don't reset its expiration time.

      if (enableProfilerTimer && (workInProgress.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);

        // Include the time spent working on failed children before continuing.
        var actualDuration = workInProgress.actualDuration;
        var child = workInProgress.child;
        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }
        workInProgress.actualDuration = actualDuration;
      }

      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        // TODO: The name stopFailedWorkTimer is misleading because Suspense
        // also captures and restarts.
        stopFailedWorkTimer(workInProgress);
        _next.effectTag &= HostEffectMask;
        return _next;
      }
      stopWorkTimer(workInProgress);

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }
    }

    var siblingFiber = workInProgress.sibling;
    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      return siblingFiber;
    }
    // Otherwise, return to the parent
    workInProgress = returnFiber;
  } while (workInProgress !== null);

  // We've reached the root.
  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootCompleted;
  }
  return null;
}

function resetChildExpirationTime(completedWork) {
  if (renderExpirationTime !== Never && completedWork.childExpirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  var newChildExpirationTime = NoWork;

  // Bubble up the earliest expiration time.
  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {
    // In profiling mode, resetChildExpirationTime is also used to reset
    // profiler durations.
    var actualDuration = completedWork.actualDuration;
    var treeBaseDuration = completedWork.selfBaseDuration;

    // When a fiber is cloned, its actualDuration is reset to 0. This value will
    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
    // When work is done, it should bubble to the parent's actualDuration. If
    // the fiber has not been cloned though, (meaning no work was done), then
    // this value will reflect the amount of time spent working on a previous
    // render. In that case it should not bubble. We determine whether it was
    // cloned by comparing the child pointer.
    var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;

    var child = completedWork.child;
    while (child !== null) {
      var childUpdateExpirationTime = child.expirationTime;
      var childChildExpirationTime = child.childExpirationTime;
      if (childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childUpdateExpirationTime;
      }
      if (childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childChildExpirationTime;
      }
      if (shouldBubbleActualDurations) {
        actualDuration += child.actualDuration;
      }
      treeBaseDuration += child.treeBaseDuration;
      child = child.sibling;
    }
    completedWork.actualDuration = actualDuration;
    completedWork.treeBaseDuration = treeBaseDuration;
  } else {
    var _child = completedWork.child;
    while (_child !== null) {
      var _childUpdateExpirationTime = _child.expirationTime;
      var _childChildExpirationTime = _child.childExpirationTime;
      if (_childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childUpdateExpirationTime;
      }
      if (_childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childChildExpirationTime;
      }
      _child = _child.sibling;
    }
  }

  completedWork.childExpirationTime = newChildExpirationTime;
}

function commitRoot(root) {
  var renderPriorityLevel = getCurrentPriorityLevel();
  runWithPriority$2(ImmediatePriority, commitRootImpl.bind(null, root, renderPriorityLevel));
  // If there are passive effects, schedule a callback to flush them. This goes
  // outside commitRootImpl so that it inherits the priority of the render.
  if (rootWithPendingPassiveEffects !== null) {
    scheduleCallback(NormalPriority, function () {
      flushPassiveEffects();
      return null;
    });
  }
  return null;
}

function commitRootImpl(root, renderPriorityLevel) {
  flushPassiveEffects();
  flushRenderPhaseStrictModeWarningsInDEV();

  (function () {
    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw ReactError(Error('Should not already be working.'));
      }
    }
  })();

  var finishedWork = root.finishedWork;
  var expirationTime = root.finishedExpirationTime;
  if (finishedWork === null) {
    return null;
  }
  root.finishedWork = null;
  root.finishedExpirationTime = NoWork;

  (function () {
    if (!(finishedWork !== root.current)) {
      {
        throw ReactError(Error('Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.'));
      }
    }
  })();

  // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.
  root.callbackNode = null;
  root.callbackExpirationTime = NoWork;

  startCommitTimer();

  // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.
  var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;
  var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
  var firstPendingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
  root.firstPendingTime = firstPendingTimeBeforeCommit;
  if (firstPendingTimeBeforeCommit < root.lastPendingTime) {
    // This usually means we've finished all the work, but it can also happen
    // when something gets downprioritized during render, like a hidden tree.
    root.lastPendingTime = firstPendingTimeBeforeCommit;
  }

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    renderExpirationTime = NoWork;
  } else {}
  // This indicates that the last root we worked on is not the same one that
  // we're committing now. This most commonly happens when a suspended root
  // times out.


  // Get the list of effects.
  var firstEffect = void 0;
  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if it
    // had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  if (firstEffect !== null) {
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;
    var prevInteractions = null;
    if (enableSchedulerTracing) {
      prevInteractions = __interactionsRef.current;
      __interactionsRef.current = root.memoizedInteractions;
    }

    // Reset this to null before calling lifecycles
    ReactCurrentOwner$2.current = null;

    // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.

    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.
    startCommitSnapshotEffectsTimer();
    prepareForCommit(root.containerInfo);
    nextEffect = firstEffect;
    do {
      {
        invokeGuardedCallback(null, commitBeforeMutationEffects, null);
        if (hasCaughtError()) {
          (function () {
            if (!(nextEffect !== null)) {
              {
                throw ReactError(Error('Should be working on an effect.'));
              }
            }
          })();
          var error = clearCaughtError();
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);
    stopCommitSnapshotEffectsTimer();

    if (enableProfilerTimer) {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    }

    // The next phase is the mutation phase, where we mutate the host tree.
    startCommitHostEffectsTimer();
    nextEffect = firstEffect;
    do {
      {
        invokeGuardedCallback(null, commitMutationEffects, null, renderPriorityLevel);
        if (hasCaughtError()) {
          (function () {
            if (!(nextEffect !== null)) {
              {
                throw ReactError(Error('Should be working on an effect.'));
              }
            }
          })();
          var _error = clearCaughtError();
          captureCommitPhaseError(nextEffect, _error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);
    stopCommitHostEffectsTimer();
    resetAfterCommit(root.containerInfo);

    // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.
    root.current = finishedWork;

    // The next phase is the layout phase, where we call effects that read
    // the host tree after it's been mutated. The idiomatic use case for this is
    // layout, but class component lifecycles also fire here for legacy reasons.
    startCommitLifeCyclesTimer();
    nextEffect = firstEffect;
    do {
      {
        invokeGuardedCallback(null, commitLayoutEffects, null, root, expirationTime);
        if (hasCaughtError()) {
          (function () {
            if (!(nextEffect !== null)) {
              {
                throw ReactError(Error('Should be working on an effect.'));
              }
            }
          })();
          var _error2 = clearCaughtError();
          captureCommitPhaseError(nextEffect, _error2);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);
    stopCommitLifeCyclesTimer();

    nextEffect = null;

    // Tell Scheduler to yield at the end of the frame, so the browser has an
    // opportunity to paint.
    requestPaint();

    if (enableSchedulerTracing) {
      __interactionsRef.current = prevInteractions;
    }
    executionContext = prevExecutionContext;
  } else {
    // No effects.
    root.current = finishedWork;
    // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.
    startCommitSnapshotEffectsTimer();
    stopCommitSnapshotEffectsTimer();
    if (enableProfilerTimer) {
      recordCommitTime();
    }
    startCommitHostEffectsTimer();
    stopCommitHostEffectsTimer();
    startCommitLifeCyclesTimer();
    stopCommitLifeCyclesTimer();
  }

  stopCommitTimer();

  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsExpirationTime = expirationTime;
    pendingPassiveEffectsRenderPriority = renderPriorityLevel;
  } else {
    // We are done with the effect chain at this point so let's clear the
    // nextEffect pointers to assist with GC. If we have passive effects, we'll
    // clear this in flushPassiveEffects.
    nextEffect = firstEffect;
    while (nextEffect !== null) {
      var nextNextEffect = nextEffect.nextEffect;
      nextEffect.nextEffect = null;
      nextEffect = nextNextEffect;
    }
  }

  // Check if there's remaining work on this root
  var remainingExpirationTime = root.firstPendingTime;
  if (remainingExpirationTime !== NoWork) {
    var currentTime = requestCurrentTime();
    var priorityLevel = inferPriorityFromExpirationTime(currentTime, remainingExpirationTime);

    if (enableSchedulerTracing) {
      if (spawnedWorkDuringRender !== null) {
        var expirationTimes = spawnedWorkDuringRender;
        spawnedWorkDuringRender = null;
        for (var i = 0; i < expirationTimes.length; i++) {
          scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
        }
      }
    }

    scheduleCallbackForRoot(root, priorityLevel, remainingExpirationTime);
  } else {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  if (enableSchedulerTracing) {
    if (!rootDidHavePassiveEffects) {
      // If there are no passive effects, then we can complete the pending interactions.
      // Otherwise, we'll wait until after the passive effects are flushed.
      // Wait to do this until after remaining work has been scheduled,
      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
      finishPendingInteractions(root, expirationTime);
    }
  }

  onCommitRoot(finishedWork.stateNode, expirationTime);

  if (remainingExpirationTime === Sync) {
    // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.
    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  }

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var _error3 = firstUncaughtError;
    firstUncaughtError = null;
    throw _error3;
  }

  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
    // This is a legacy edge case. We just committed the initial mount of
    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
    // synchronously, but layout updates should be deferred until the end
    // of the batch.
    return null;
  }

  // If layout work was scheduled, flush it now.
  flushSyncCallbackQueue();
  return null;
}

function commitBeforeMutationEffects() {
  while (nextEffect !== null) {
    if ((nextEffect.effectTag & Snapshot) !== NoEffect) {
      setCurrentFiber(nextEffect);
      recordEffect();

      var current$$1 = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current$$1, nextEffect);

      resetCurrentFiber();
    }
    nextEffect = nextEffect.nextEffect;
  }
}

function commitMutationEffects(renderPriorityLevel) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);

    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current$$1 = nextEffect.alternate;
      if (current$$1 !== null) {
        commitDetachRef(current$$1);
      }
    }

    // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every possible
    // bitmap value, we remove the secondary effects from the effect tag and
    // switch on that value.
    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted does
          // and isMounted is deprecated anyway so we should be able to kill this.
          nextEffect.effectTag &= ~Placement;
          break;
        }
      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.
          nextEffect.effectTag &= ~Placement;

          // Update
          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }
      case Update:
        {
          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }
      case Deletion:
        {
          commitDeletion(nextEffect, renderPriorityLevel);
          break;
        }
    }

    // TODO: Only record a mutation effect if primaryEffectTag is non-zero.
    recordEffect();

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function commitLayoutEffects(root, committedExpirationTime) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);

    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitLifeCycles(root, current$$1, nextEffect, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    if (effectTag & Passive) {
      rootDoesHavePassiveEffects = true;
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function flushPassiveEffects() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  }
  var root = rootWithPendingPassiveEffects;
  var expirationTime = pendingPassiveEffectsExpirationTime;
  var renderPriorityLevel = pendingPassiveEffectsRenderPriority;
  rootWithPendingPassiveEffects = null;
  pendingPassiveEffectsExpirationTime = NoWork;
  pendingPassiveEffectsRenderPriority = NoPriority;
  var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
  return runWithPriority$2(priorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
}

function flushPassiveEffectsImpl(root, expirationTime) {
  var prevInteractions = null;
  if (enableSchedulerTracing) {
    prevInteractions = __interactionsRef.current;
    __interactionsRef.current = root.memoizedInteractions;
  }

  (function () {
    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw ReactError(Error('Cannot flush passive effects while already rendering.'));
      }
    }
  })();
  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;

  // Note: This currently assumes there are no passive effects on the root
  // fiber, because the root is not part of its own effect list. This could
  // change in the future.
  var effect = root.current.firstEffect;
  while (effect !== null) {
    {
      setCurrentFiber(effect);
      invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);
      if (hasCaughtError()) {
        (function () {
          if (!(effect !== null)) {
            {
              throw ReactError(Error('Should be working on an effect.'));
            }
          }
        })();
        var error = clearCaughtError();
        captureCommitPhaseError(effect, error);
      }
      resetCurrentFiber();
    }
    var nextNextEffect = effect.nextEffect;
    // Remove nextEffect pointer to assist GC
    effect.nextEffect = null;
    effect = nextNextEffect;
  }

  if (enableSchedulerTracing) {
    __interactionsRef.current = prevInteractions;
    finishPendingInteractions(root, expirationTime);
  }

  executionContext = prevExecutionContext;
  flushSyncCallbackQueue();

  // If additional passive effects were scheduled, increment a counter. If this
  // exceeds the limit, we'll fire a warning.
  nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;

  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}

function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}
var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValue(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, Sync);
  enqueueUpdate(rootFiber, update);
  var root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);
  if (root !== null) {
    scheduleCallbackForRoot(root, ImmediatePriority, Sync);
  }
}

function captureCommitPhaseError(sourceFiber, error) {
  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
    return;
  }

  var fiber = sourceFiber.return;
  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;
      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo,
        // TODO: This is always sync
        Sync);
        enqueueUpdate(fiber, update);
        var root = markUpdateTimeFromFiberToRoot(fiber, Sync);
        if (root !== null) {
          scheduleCallbackForRoot(root, ImmediatePriority, Sync);
        }
        return;
      }
    }
    fiber = fiber.return;
  }
}

function pingSuspendedRoot(root, thenable, suspendedTime) {
  var pingCache = root.pingCache;
  if (pingCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(thenable);
  }

  if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.

    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.

    // If we're suspended with delay, we'll always suspend so we can always
    // restart. If we're suspended without any updates, it might be a retry.
    // If it's early in the retry we can restart. We can't know for sure
    // whether we'll eventually process an update during this render pass,
    // but it's somewhat unlikely that we get to a ping before that, since
    // getting to the root most update is usually very fast.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && workInProgressRootLatestProcessedExpirationTime === Sync && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root. Don't need to schedule a ping because
      // we're already working on this tree.
      prepareFreshStack(root, renderExpirationTime);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootHasPendingPing = true;
    }
    return;
  }

  var lastPendingTime = root.lastPendingTime;
  if (lastPendingTime < suspendedTime) {
    // The root is no longer suspended at this time.
    return;
  }

  var pingTime = root.pingTime;
  if (pingTime !== NoWork && pingTime < suspendedTime) {
    // There's already a lower priority ping scheduled.
    return;
  }

  // Mark the time at which this ping was scheduled.
  root.pingTime = suspendedTime;

  if (root.finishedExpirationTime === suspendedTime) {
    // If there's a pending fallback waiting to commit, throw it away.
    root.finishedExpirationTime = NoWork;
    root.finishedWork = null;
  }

  var currentTime = requestCurrentTime();
  var priorityLevel = inferPriorityFromExpirationTime(currentTime, suspendedTime);
  scheduleCallbackForRoot(root, priorityLevel, suspendedTime);
}

function retryTimedOutBoundary(boundaryFiber) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new expiration time.
  var currentTime = requestCurrentTime();
  var suspenseConfig = null; // Retries don't carry over the already committed update.
  var retryTime = computeExpirationForFiber(currentTime, boundaryFiber, suspenseConfig);
  // TODO: Special case idle priority?
  var priorityLevel = inferPriorityFromExpirationTime(currentTime, retryTime);
  var root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);
  if (root !== null) {
    scheduleCallbackForRoot(root, priorityLevel, retryTime);
  }
}

function resolveRetryThenable(boundaryFiber, thenable) {
  var retryCache = void 0;
  if (enableSuspenseServerRenderer) {
    switch (boundaryFiber.tag) {
      case SuspenseComponent:
        retryCache = boundaryFiber.stateNode;
        break;
      case DehydratedSuspenseComponent:
        retryCache = boundaryFiber.memoizedState;
        break;
      default:
        (function () {
          {
            {
              throw ReactError(Error('Pinged unknown suspense boundary type. This is probably a bug in React.'));
            }
          }
        })();
    }
  } else {
    retryCache = boundaryFiber.stateNode;
  }

  if (retryCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(thenable);
  }

  retryTimedOutBoundary(boundaryFiber);
}

// Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.
function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function computeMsUntilSuspenseLoadingDelay(mostRecentEventTime, committedExpirationTime, suspenseConfig) {
  var busyMinDurationMs = suspenseConfig.busyMinDurationMs | 0;
  if (busyMinDurationMs <= 0) {
    return 0;
  }
  var busyDelayMs = suspenseConfig.busyDelayMs | 0;

  // Compute the time until this render pass would expire.
  var currentTimeMs = now();
  var eventTimeMs = inferTimeFromExpirationTimeWithSuspenseConfig(mostRecentEventTime, suspenseConfig);
  var timeElapsed = currentTimeMs - eventTimeMs;
  if (timeElapsed <= busyDelayMs) {
    // If we haven't yet waited longer than the initial delay, we don't
    // have to wait any additional time.
    return 0;
  }
  var msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed;
  // This is the value that is passed to `setTimeout`.
  return msUntilTimeout;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;
    (function () {
      {
        {
          throw ReactError(Error('Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.'));
        }
      }
    })();
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;
      warning$1(false, 'Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

function stopFinishedWorkLoopTimer() {
  var didCompleteRoot = true;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  interruptedBy = null;
}

function stopInterruptedWorkLoopTimer() {
  // TODO: Track which fiber caused the interruption.
  var didCompleteRoot = false;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  interruptedBy = null;
}

function checkForInterruption(fiberThatReceivedUpdate, updateExpirationTime) {
  if (enableUserTimingAPI && workInProgressRoot !== null && updateExpirationTime > renderExpirationTime) {
    interruptedBy = fiberThatReceivedUpdate;
  }
}

var didWarnStateUpdateForUnmountedComponent = null;
function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
  {
    var tag = fiber.tag;
    if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    }
    // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.
    var componentName = getComponentName(fiber.type) || 'ReactComponent';
    if (didWarnStateUpdateForUnmountedComponent !== null) {
      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
        return;
      }
      didWarnStateUpdateForUnmountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
    }
    warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
  }
}

var beginWork$$1 = void 0;
if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  var dummyFiber = null;
  beginWork$$1 = function (current$$1, unitOfWork, expirationTime) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.

    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
    try {
      return beginWork$1(current$$1, unitOfWork, expirationTime);
    } catch (originalError) {
      if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises. Treat everything else like an error.
        throw originalError;
      }

      // Keep this code in sync with renderRoot; any changes here must have
      // corresponding changes there.
      resetContextDependencies();
      resetHooks();

      // Unwind the failed stack frame
      unwindInterruptedWork(unitOfWork);

      // Restore the original properties of the fiber.
      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      }

      // Run beginWork again.
      invokeGuardedCallback(null, beginWork$1, null, current$$1, unitOfWork, expirationTime);

      if (hasCaughtError()) {
        var replayError = clearCaughtError();
        // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
        // Rethrow this error instead of the original one.
        throw replayError;
      } else {
        // This branch is reachable if the render phase is impure.
        throw originalError;
      }
    }
  };
} else {
  beginWork$$1 = beginWork$1;
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInGetChildContext = false;
function warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber) {
  {
    if (fiber.tag === ClassComponent) {
      switch (phase) {
        case 'getChildContext':
          if (didWarnAboutUpdateInGetChildContext) {
            return;
          }
          warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
          didWarnAboutUpdateInGetChildContext = true;
          break;
        case 'render':
          if (didWarnAboutUpdateInRender) {
            return;
          }
          warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure function of ' + 'props and state.');
          didWarnAboutUpdateInRender = true;
          break;
      }
    }
  }
}

// a 'shared' variable that changes when act() opens/closes in tests.
var IsThisRendererActing = { current: false };

function warnIfNotScopedWithMatchingAct(fiber) {
  {
    if (warnsIfNotActing === true && IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
      warningWithoutStack$1(false, "It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + "import {act} from 'react-dom/test-utils';\n" + '//...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + "import TestRenderer from 'react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '//...\n' + 'act(() => ...);' + '%s', getStackByFiberInDevAndProd(fiber));
    }
  }
}

function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
  {
    if (warnsIfNotActing === true && (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      warningWithoutStack$1(false, 'An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
  {
    if (warnsIfNotActing === true && executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;

// In tests, we want to enforce a mocked scheduler.
var didWarnAboutUnmockedScheduler = false;
// TODO Before we release concurrent mode, revisit this and decide whether a mocked
// scheduler is the actual recommendation. The alternative could be a testing build,
// a new lib, or whatever; we dunno just yet. This message is for early adopters
// to get their tests right.

function warnIfUnmockedScheduler(fiber) {
  {
    if (didWarnAboutUnmockedScheduler === false && unstable_flushAllWithoutAsserting === undefined) {
      if (fiber.mode & BatchedMode || fiber.mode & ConcurrentMode) {
        didWarnAboutUnmockedScheduler = true;
        warningWithoutStack$1(false, 'In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
      } else if (warnAboutUnmockedScheduler === true) {
        didWarnAboutUnmockedScheduler = true;
        warningWithoutStack$1(false, 'Starting from React v17, the "scheduler" module will need to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
      }
    }
  }
}

var componentsThatTriggeredHighPriSuspend = null;
function checkForWrongSuspensePriorityInDEV(sourceFiber) {
  {
    var currentPriorityLevel = getCurrentPriorityLevel();
    if ((sourceFiber.mode & ConcurrentMode) !== NoEffect && (currentPriorityLevel === UserBlockingPriority$2 || currentPriorityLevel === ImmediatePriority)) {
      var workInProgressNode = sourceFiber;
      while (workInProgressNode !== null) {
        // Add the component that triggered the suspense
        var current$$1 = workInProgressNode.alternate;
        if (current$$1 !== null) {
          // TODO: warn component that triggers the high priority
          // suspend is the HostRoot
          switch (workInProgressNode.tag) {
            case ClassComponent:
              // Loop through the component's update queue and see whether the component
              // has triggered any high priority updates
              var updateQueue = current$$1.updateQueue;
              if (updateQueue !== null) {
                var update = updateQueue.firstUpdate;
                while (update !== null) {
                  var priorityLevel = update.priority;
                  if (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority) {
                    if (componentsThatTriggeredHighPriSuspend === null) {
                      componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                    } else {
                      componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                    }
                    break;
                  }
                  update = update.next;
                }
              }
              break;
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              if (workInProgressNode.memoizedState !== null && workInProgressNode.memoizedState.baseUpdate !== null) {
                var _update = workInProgressNode.memoizedState.baseUpdate;
                // Loop through the functional component's memoized state to see whether
                // the component has triggered any high pri updates
                while (_update !== null) {
                  var priority = _update.priority;
                  if (priority === UserBlockingPriority$2 || priority === ImmediatePriority) {
                    if (componentsThatTriggeredHighPriSuspend === null) {
                      componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                    } else {
                      componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                    }
                    break;
                  }
                  if (_update.next === workInProgressNode.memoizedState.baseUpdate) {
                    break;
                  }
                  _update = _update.next;
                }
              }
              break;
            default:
              break;
          }
        }
        workInProgressNode = workInProgressNode.return;
      }
    }
  }
}

function flushSuspensePriorityWarningInDEV() {
  {
    if (componentsThatTriggeredHighPriSuspend !== null) {
      var componentNames = [];
      componentsThatTriggeredHighPriSuspend.forEach(function (name) {
        return componentNames.push(name);
      });
      componentsThatTriggeredHighPriSuspend = null;

      if (componentNames.length > 0) {
        warningWithoutStack$1(false, '%s triggered a user-blocking update that suspended.' + '\n\n' + 'The fix is to split the update into multiple parts: a user-blocking ' + 'update to provide immediate feedback, and another update that ' + 'triggers the bulk of the changes.' + '\n\n' + 'Refer to the documentation for useSuspenseTransition to learn how ' + 'to implement this pattern.',
        // TODO: Add link to React docs with more information, once it exists
        componentNames.sort().join(', '));
      }
    }
  }
}

function computeThreadID(root, expirationTime) {
  // Interaction threads are unique per root and expiration time.
  return expirationTime * 1000 + root.interactionThreadID;
}

function markSpawnedWork(expirationTime) {
  if (!enableSchedulerTracing) {
    return;
  }
  if (spawnedWorkDuringRender === null) {
    spawnedWorkDuringRender = [expirationTime];
  } else {
    spawnedWorkDuringRender.push(expirationTime);
  }
}

function scheduleInteractions(root, expirationTime, interactions) {
  if (!enableSchedulerTracing) {
    return;
  }

  if (interactions.size > 0) {
    var pendingInteractionMap = root.pendingInteractionMap;
    var pendingInteractions = pendingInteractionMap.get(expirationTime);
    if (pendingInteractions != null) {
      interactions.forEach(function (interaction) {
        if (!pendingInteractions.has(interaction)) {
          // Update the pending async work count for previously unscheduled interaction.
          interaction.__count++;
        }

        pendingInteractions.add(interaction);
      });
    } else {
      pendingInteractionMap.set(expirationTime, new Set(interactions));

      // Update the pending async work count for the current interactions.
      interactions.forEach(function (interaction) {
        interaction.__count++;
      });
    }

    var subscriber = __subscriberRef.current;
    if (subscriber !== null) {
      var threadID = computeThreadID(root, expirationTime);
      subscriber.onWorkScheduled(interactions, threadID);
    }
  }
}

function schedulePendingInteractions(root, expirationTime) {
  // This is called when work is scheduled on a root.
  // It associates the current interactions with the newly-scheduled expiration.
  // They will be restored when that expiration is later committed.
  if (!enableSchedulerTracing) {
    return;
  }

  scheduleInteractions(root, expirationTime, __interactionsRef.current);
}

function startWorkOnPendingInteractions(root, expirationTime) {
  // This is called when new work is started on a root.
  if (!enableSchedulerTracing) {
    return;
  }

  // Determine which interactions this batch of work currently includes, So that
  // we can accurately attribute time spent working on it, And so that cascading
  // work triggered during the render phase will be associated with it.
  var interactions = new Set();
  root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
    if (scheduledExpirationTime >= expirationTime) {
      scheduledInteractions.forEach(function (interaction) {
        return interactions.add(interaction);
      });
    }
  });

  // Store the current set of interactions on the FiberRoot for a few reasons:
  // We can re-use it in hot functions like renderRoot() without having to
  // recalculate it. We will also use it in commitWork() to pass to any Profiler
  // onRender() hooks. This also provides DevTools with a way to access it when
  // the onCommitRoot() hook is called.
  root.memoizedInteractions = interactions;

  if (interactions.size > 0) {
    var subscriber = __subscriberRef.current;
    if (subscriber !== null) {
      var threadID = computeThreadID(root, expirationTime);
      try {
        subscriber.onWorkStarted(interactions, threadID);
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority, function () {
          throw error;
        });
      }
    }
  }
}

function finishPendingInteractions(root, committedExpirationTime) {
  if (!enableSchedulerTracing) {
    return;
  }

  var earliestRemainingTimeAfterCommit = root.firstPendingTime;

  var subscriber = void 0;

  try {
    subscriber = __subscriberRef.current;
    if (subscriber !== null && root.memoizedInteractions.size > 0) {
      var threadID = computeThreadID(root, committedExpirationTime);
      subscriber.onWorkStopped(root.memoizedInteractions, threadID);
    }
  } catch (error) {
    // If the subscriber throws, rethrow it in a separate task
    scheduleCallback(ImmediatePriority, function () {
      throw error;
    });
  } finally {
    // Clear completed interactions from the pending Map.
    // Unless the render was suspended or cascading work was scheduled,
    // In which case– leave pending interactions until the subsequent render.
    var pendingInteractionMap = root.pendingInteractionMap;
    pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
      // Only decrement the pending interaction count if we're done.
      // If there's still work at the current priority,
      // That indicates that we are waiting for suspense data.
      if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
        pendingInteractionMap.delete(scheduledExpirationTime);

        scheduledInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              // If the subscriber throws, rethrow it in a separate task
              scheduleCallback(ImmediatePriority, function () {
                throw error;
              });
            }
          }
        });
      }
    });
  }
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = function (root, expirationTime) {
      try {
        var didError = (root.current.effectTag & DidCapture) === DidCapture;
        if (enableProfilerTimer) {
          var currentTime = requestCurrentTime();
          var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
        } else {
          hook.onCommitFiberRoot(rendererID, root, undefined, didError);
        }
      } catch (err) {
        if (true && !hasLoggedError) {
          hasLoggedError = true;
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
        }
      }
    };
    onCommitFiberUnmount = function (fiber) {
      try {
        hook.onCommitFiberUnmount(rendererID, fiber);
      } catch (err) {
        if (true && !hasLoggedError) {
          hasLoggedError = true;
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
        }
      }
    };
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root, expirationTime) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root, expirationTime);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

var hasBadMapPolyfill = void 0;

{
  hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]);
    // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.
    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


var debugCounter = void 0;

{
  debugCounter = 1;
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;

  this.mode = mode;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;
  this.childExpirationTime = NoWork;

  this.alternate = null;

  if (enableProfilerTimer) {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN;

    // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).
    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  }

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
}

function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;
    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }
    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }
  return IndeterminateComponent;
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps;

    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    if (enableProfilerTimer) {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  }

  workInProgress.childExpirationTime = current.childExpirationTime;
  workInProgress.expirationTime = current.expirationTime;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;

  // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.
  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    expirationTime: currentDependencies.expirationTime,
    firstContext: currentDependencies.firstContext,
    responders: currentDependencies.responders
  };

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;
    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;
      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;
      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;
      default:
        break;
    }
  }

  return workInProgress;
}

// Used to reuse a Fiber for a second pass.
function resetWorkInProgress(workInProgress, renderExpirationTime) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.

  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.

  // Reset the effect tag but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.effectTag &= Placement;

  // The effect list is no longer valid.
  workInProgress.nextEffect = null;
  workInProgress.firstEffect = null;
  workInProgress.lastEffect = null;

  var current = workInProgress.alternate;
  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childExpirationTime = NoWork;
    workInProgress.expirationTime = renderExpirationTime;

    workInProgress.child = null;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;

    workInProgress.dependencies = null;

    if (enableProfilerTimer) {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;

    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;

    // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.
    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      expirationTime: currentDependencies.expirationTime,
      firstContext: currentDependencies.firstContext,
      responders: currentDependencies.responders
    };

    if (enableProfilerTimer) {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}

function createHostRootFiber(tag) {
  var mode = void 0;
  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode | BatchedMode | StrictMode;
  } else if (tag === BatchedRoot) {
    mode = BatchedMode | StrictMode;
  } else {
    mode = NoMode;
  }

  if (enableProfilerTimer && isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}

function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, expirationTime) {
  var fiber = void 0;

  var fiberTag = IndeterminateComponent;
  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
  var resolvedType = type;
  if (typeof type === 'function') {
    if (shouldConstruct(type)) {
      fiberTag = ClassComponent;
      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = Mode;
        mode |= ConcurrentMode | BatchedMode | StrictMode;
        break;
      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;
      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);
      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, expirationTime, key);
      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;
              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;
              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;
                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }
                break getTag;
              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;
              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;
              case REACT_FUNDAMENTAL_TYPE:
                if (enableFundamentalAPI) {
                  return createFiberFromFundamental(type, pendingProps, mode, expirationTime, key);
                }
                break;
            }
          }
          var info = '';
          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }
            var ownerName = owner ? getComponentName(owner.type) : null;
            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }
          (function () {
            {
              {
                throw ReactError(Error('Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ' + (type == null ? type : typeof type) + '.' + info));
              }
            }
          })();
        }
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }
  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }
  return fiber;
}

function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromFundamental(fundamentalComponent, pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(FundamentalComponent, pendingProps, key, mode);
  fiber.elementType = fundamentalComponent;
  fiber.type = fundamentalComponent;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  // TODO: The Profiler fiber shouldn't have a type. It has a tag.
  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);

  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.
  fiber.type = REACT_SUSPENSE_TYPE;
  fiber.elementType = REACT_SUSPENSE_TYPE;

  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromSuspenseList(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
  {
    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
    // This needs to be fixed in getComponentName so that it relies on the tag
    // instead.
    fiber.type = REACT_SUSPENSE_LIST_TYPE;
  }
  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode);
  // TODO: These should not need a type.
  fiber.elementType = 'DELETED';
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

// Used for stashing WIP properties to replay failed work in DEV.
function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  }

  // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.

  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.childExpirationTime = source.childExpirationTime;
  target.alternate = source.alternate;
  if (enableProfilerTimer) {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }
  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

// TODO: This should be lifted into the renderer.


// The following attributes are only used by interaction tracing builds.
// They enable interactions to be associated with their async work,
// And expose interaction metadata to the React DevTools Profiler plugin.
// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.


// Exported FiberRoot type includes all properties,
// To avoid requiring potentially error-prone :any casts throughout the project.
// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).
// The types are defined separately within this file to ensure they stay in sync.
// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)


function FiberRootNode(containerInfo, tag, hydrate) {
  this.tag = tag;
  this.current = null;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.pingCache = null;
  this.finishedExpirationTime = NoWork;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.hydrate = hydrate;
  this.firstBatch = null;
  this.callbackNode = null;
  this.callbackExpirationTime = NoWork;
  this.firstPendingTime = NoWork;
  this.lastPendingTime = NoWork;
  this.pingTime = NoWork;

  if (enableSchedulerTracing) {
    this.interactionThreadID = unstable_getThreadID();
    this.memoizedInteractions = new Set();
    this.pendingInteractionMap = new Map();
  }
}

function createFiberRoot(containerInfo, tag, hydrate) {
  var root = new FiberRootNode(containerInfo, tag, hydrate);

  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber(tag);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;

  return root;
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


var didWarnAboutNestedUpdates = void 0;
var didWarnAboutFindNodeInStrictMode = void 0;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;
    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function scheduleRootUpdate(current$$1, element, expirationTime, suspenseConfig, callback) {
  {
    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime, suspenseConfig);
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: element };

  callback = callback === undefined ? null : callback;
  if (callback !== null) {
    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }

  if (revertPassiveEffectsChange) {
    flushPassiveEffects();
  }
  enqueueUpdate(current$$1, update);
  scheduleWork(current$$1, expirationTime);

  return expirationTime;
}

function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, suspenseConfig, callback) {
  // TODO: If this is a nested container, this won't be the root.
  var current$$1 = container.current;

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current$$1.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);
  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  return scheduleRootUpdate(current$$1, element, expirationTime, suspenseConfig, callback);
}

function findHostInstance(component) {
  var fiber = get(component);
  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      (function () {
        {
          {
            throw ReactError(Error('Unable to find node on an unmounted component.'));
          }
        }
      })();
    } else {
      (function () {
        {
          {
            throw ReactError(Error('Argument appears to not be a ReactComponent. Keys: ' + Object.keys(component)));
          }
        }
      })();
    }
  }
  var hostFiber = findCurrentHostFiber(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);
    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        (function () {
          {
            {
              throw ReactError(Error('Unable to find node on an unmounted component.'));
            }
          }
        })();
      } else {
        (function () {
          {
            {
              throw ReactError(Error('Argument appears to not be a ReactComponent. Keys: ' + Object.keys(component)));
            }
          }
        })();
      }
    }
    var hostFiber = findCurrentHostFiber(fiber);
    if (hostFiber === null) {
      return null;
    }
    if (hostFiber.mode & StrictMode) {
      var componentName = getComponentName(fiber.type) || 'Component';
      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;
        if (fiber.mode & StrictMode) {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        } else {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        }
      }
    }
    return hostFiber.stateNode;
  }
  return findHostInstance(component);
}

function createContainer(containerInfo, tag, hydrate) {
  return createFiberRoot(containerInfo, tag, hydrate);
}

function updateContainer(element, container, parentComponent, callback) {
  var current$$1 = container.current;
  var currentTime = requestCurrentTime();
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfUnmockedScheduler(current$$1);
      warnIfNotScopedWithMatchingAct(current$$1);
    }
  }
  var suspenseConfig = requestCurrentSuspenseConfig();
  var expirationTime = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, suspenseConfig, callback);
}

function getPublicRootInstance(container) {
  var containerFiber = container.current;
  if (!containerFiber.child) {
    return null;
  }
  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);
    default:
      return containerFiber.child.stateNode;
  }
}

function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
  if (hostFiber === null) {
    return null;
  }
  if (hostFiber.tag === FundamentalComponent) {
    return hostFiber.stateNode.instance;
  }
  return hostFiber.stateNode;
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}

var overrideHookState = null;
var overrideProps = null;
var scheduleUpdate = null;
var setSuspenseHandler = null;

{
  var copyWithSetImpl = function (obj, path, idx, value) {
    if (idx >= path.length) {
      return value;
    }
    var key = path[idx];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
    // $FlowFixMe number or string is fine here
    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  };

  // Support DevTools editable values for useState and useReducer.
  overrideHookState = function (fiber, id, path, value) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;
    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }
    if (currentHook !== null) {
      if (revertPassiveEffectsChange) {
        flushPassiveEffects();
      }

      var newState = copyWithSet(currentHook.memoizedState, path, value);
      currentHook.memoizedState = newState;
      currentHook.baseState = newState;

      // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.
      fiber.memoizedProps = _assign({}, fiber.memoizedProps);

      scheduleWork(fiber, Sync);
    }
  };

  // Support DevTools props for function components, forwardRef, memo, host components, etc.
  overrideProps = function (fiber, path, value) {
    if (revertPassiveEffectsChange) {
      flushPassiveEffects();
    }
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }
    scheduleWork(fiber, Sync);
  };

  scheduleUpdate = function (fiber) {
    if (revertPassiveEffectsChange) {
      flushPassiveEffects();
    }
    scheduleWork(fiber, Sync);
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;


  return injectInternals(_assign({}, devToolsConfig, {
    overrideHookState: overrideHookState,
    overrideProps: overrideProps,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }
      return findFiberByHostInstance(instance);
    },

    // React Refresh
    findHostInstancesForRefresh: findHostInstancesForRefresh,
    scheduleRefresh: scheduleRefresh,
    scheduleRoot: scheduleRoot,
    setRefreshHandler: setRefreshHandler,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber: function () {
      return current;
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.9.0';

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;

var topLevelUpdateWarnings = void 0;
var warnOnInvalidCallback = void 0;
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }

  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };

  warnOnInvalidCallback = function (callback, callerName) {
    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  };
}

setRestoreImplementation(restoreControlledState$1);

function ReactBatch(root) {
  var expirationTime = computeUniqueAsyncExpiration();
  this._expirationTime = expirationTime;
  this._root = root;
  this._next = null;
  this._callbacks = null;
  this._didComplete = false;
  this._hasChildren = false;
  this._children = null;
  this._defer = true;
}
ReactBatch.prototype.render = function (children) {
  var _this = this;

  (function () {
    if (!_this._defer) {
      {
        throw ReactError(Error('batch.render: Cannot render a batch that already committed.'));
      }
    }
  })();
  this._hasChildren = true;
  this._children = children;
  var internalRoot = this._root._internalRoot;
  var expirationTime = this._expirationTime;
  var work = new ReactWork();
  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, null, work._onCommit);
  return work;
};
ReactBatch.prototype.then = function (onComplete) {
  if (this._didComplete) {
    onComplete();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onComplete);
};
ReactBatch.prototype.commit = function () {
  var _this2 = this;

  var internalRoot = this._root._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  (function () {
    if (!(_this2._defer && firstBatch !== null)) {
      {
        throw ReactError(Error('batch.commit: Cannot commit a batch multiple times.'));
      }
    }
  })();

  if (!this._hasChildren) {
    // This batch is empty. Return.
    this._next = null;
    this._defer = false;
    return;
  }

  var expirationTime = this._expirationTime;

  // Ensure this is the first batch in the list.
  if (firstBatch !== this) {
    // This batch is not the earliest batch. We need to move it to the front.
    // Update its expiration time to be the expiration time of the earliest
    // batch, so that we can flush it without flushing the other batches.
    if (this._hasChildren) {
      expirationTime = this._expirationTime = firstBatch._expirationTime;
      // Rendering this batch again ensures its children will be the final state
      // when we flush (updates are processed in insertion order: last
      // update wins).
      // TODO: This forces a restart. Should we print a warning?
      this.render(this._children);
    }

    // Remove the batch from the list.
    var previous = null;
    var batch = firstBatch;
    while (batch !== this) {
      previous = batch;
      batch = batch._next;
    }
    (function () {
      if (!(previous !== null)) {
        {
          throw ReactError(Error('batch.commit: Cannot commit a batch multiple times.'));
        }
      }
    })();
    previous._next = batch._next;

    // Add it to the front.
    this._next = firstBatch;
    firstBatch = internalRoot.firstBatch = this;
  }

  // Synchronously flush all the work up to this batch's expiration time.
  this._defer = false;
  flushRoot(internalRoot, expirationTime);

  // Pop the batch from the list.
  var next = this._next;
  this._next = null;
  firstBatch = internalRoot.firstBatch = next;

  // Append the next earliest batch's children to the update queue.
  if (firstBatch !== null && firstBatch._hasChildren) {
    firstBatch.render(firstBatch._children);
  }
};
ReactBatch.prototype._onComplete = function () {
  if (this._didComplete) {
    return;
  }
  this._didComplete = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback = callbacks[i];
    _callback();
  }
};

function ReactWork() {
  this._callbacks = null;
  this._didCommit = false;
  // TODO: Avoid need to bind by replacing callbacks in the update queue with
  // list of Work objects.
  this._onCommit = this._onCommit.bind(this);
}
ReactWork.prototype.then = function (onCommit) {
  if (this._didCommit) {
    onCommit();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onCommit);
};
ReactWork.prototype._onCommit = function () {
  if (this._didCommit) {
    return;
  }
  this._didCommit = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback2 = callbacks[i];
    (function () {
      if (!(typeof _callback2 === 'function')) {
        {
          throw ReactError(Error('Invalid argument passed as callback. Expected a function. Instead received: ' + _callback2));
        }
      }
    })();
    _callback2();
  }
};

function ReactSyncRoot(container, tag, hydrate) {
  // Tag is either LegacyRoot or Concurrent Root
  var root = createContainer(container, tag, hydrate);
  this._internalRoot = root;
}

function ReactRoot(container, hydrate) {
  var root = createContainer(container, ConcurrentRoot, hydrate);
  this._internalRoot = root;
}

ReactRoot.prototype.render = ReactSyncRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, null, work._onCommit);
  return work;
};

ReactRoot.prototype.unmount = ReactSyncRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(null, root, null, work._onCommit);
  return work;
};

// Sync roots cannot create batches. Only concurrent ones.
ReactRoot.prototype.createBatch = function () {
  var batch = new ReactBatch(this);
  var expirationTime = batch._expirationTime;

  var internalRoot = this._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  if (firstBatch === null) {
    internalRoot.firstBatch = batch;
    batch._next = null;
  } else {
    // Insert sorted by expiration time then insertion order
    var insertAfter = null;
    var insertBefore = firstBatch;
    while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {
      insertAfter = insertBefore;
      insertBefore = insertBefore._next;
    }
    batch._next = insertBefore;
    if (insertAfter !== null) {
      insertAfter._next = batch;
    }
  }

  return batch;
};

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

var warnedAboutHydrateAPI = false;

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
  // First clear any existing content.
  if (!shouldHydrate) {
    var warned = false;
    var rootSibling = void 0;
    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }
      container.removeChild(rootSibling);
    }
  }
  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }

  // Legacy roots are not batched.
  return new ReactSyncRoot(container, LegacyRoot, shouldHydrate);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');
  }

  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.
  var root = container._reactRootContainer;
  var fiberRoot = void 0;
  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    fiberRoot = root._internalRoot;
    if (typeof callback === 'function') {
      var originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);
        originalCallback.call(instance);
      };
    }
    // Initial mount should not be batched.
    unbatchedUpdates(function () {
      updateContainer(children, fiberRoot, parentComponent, callback);
    });
  } else {
    fiberRoot = root._internalRoot;
    if (typeof callback === 'function') {
      var _originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);
        _originalCallback.call(instance);
      };
    }
    // Update
    updateContainer(children, fiberRoot, parentComponent, callback);
  }
  return getPublicRootInstance(fiberRoot);
}

function createPortal$$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  (function () {
    if (!isValidContainer(container)) {
      {
        throw ReactError(Error('Target container is not a DOM element.'));
      }
    }
  })();
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal$$1,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null && owner.stateNode !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }
    {
      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    return findHostInstance(componentOrElement);
  },
  hydrate: function (element, container, callback) {
    (function () {
      if (!isValidContainer(container)) {
        {
          throw ReactError(Error('Target container is not a DOM element.'));
        }
      }
    })();
    {
      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    }
    // TODO: throw or warn if we couldn't hydrate?
    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    (function () {
      if (!isValidContainer(container)) {
        {
          throw ReactError(Error('Target container is not a DOM element.'));
        }
      }
    })();
    {
      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    }
    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    (function () {
      if (!isValidContainer(containerNode)) {
        {
          throw ReactError(Error('Target container is not a DOM element.'));
        }
      }
    })();
    (function () {
      if (!(parentComponent != null && has(parentComponent))) {
        {
          throw ReactError(Error('parentComponent must be a valid React Component'));
        }
      }
    })();
    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    (function () {
      if (!isValidContainer(container)) {
        {
          throw ReactError(Error('unmountComponentAtNode(...): Target container is not a DOM element.'));
        }
      }
    })();

    {
      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    }

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
      }

      // Unmount should not be batched.
      unbatchedUpdates(function () {
        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
    return createPortal$$1.apply(undefined, arguments);
  },


  unstable_batchedUpdates: batchedUpdates$1,

  // TODO remove this legacy method, unstable_discreteUpdates replaces it
  unstable_interactiveUpdates: function (fn, a, b, c) {
    flushDiscreteUpdates();
    return discreteUpdates$1(fn, a, b, c);
  },

  unstable_discreteUpdates: discreteUpdates$1,
  unstable_flushDiscreteUpdates: flushDiscreteUpdates,

  flushSync: flushSync,

  unstable_createRoot: createRoot,
  unstable_createSyncRoot: createSyncRoot,
  unstable_flushControlled: flushControlled,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // Keep in sync with ReactDOMUnstableNativeDependencies.js
    // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.
    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch, flushPassiveEffects, IsThisRendererActing]
  }
};

function createRoot(container, options) {
  var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';
  (function () {
    if (!isValidContainer(container)) {
      {
        throw ReactError(Error(functionName + '(...): Target container is not a DOM element.'));
      }
    }
  })();
  warnIfReactDOMContainerInDEV(container);
  var hydrate = options != null && options.hydrate === true;
  return new ReactRoot(container, hydrate);
}

function createSyncRoot(container, options) {
  var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';
  (function () {
    if (!isValidContainer(container)) {
      {
        throw ReactError(Error(functionName + '(...): Target container is not a DOM element.'));
      }
    }
  })();
  warnIfReactDOMContainerInDEV(container);
  var hydrate = options != null && options.hydrate === true;
  return new ReactSyncRoot(container, BatchedRoot, hydrate);
}

function warnIfReactDOMContainerInDEV(container) {
  {
    !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    container._reactHasBeenPassedToCreateRootDEV = true;
  }
}

if (enableStableConcurrentModeAPIs) {
  ReactDOM.createRoot = createRoot;
  ReactDOM.createSyncRoot = createSyncRoot;
}

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3.default || ReactDOM$3;

return reactDom;

})));

var CLOSURE_NO_DEPS=true;var COMPILED=false;var goog=goog||{};goog.global=this;goog.global.CLOSURE_UNCOMPILED_DEFINES;goog.global.CLOSURE_DEFINES;goog.isDef=function(val){return val!==void 0};goog.isString=function(val){return typeof val=="string"};goog.isBoolean=function(val){return typeof val=="boolean"};goog.isNumber=function(val){return typeof val=="number"};
goog.exportPath_=function(name,opt_object,opt_objectToExportTo){var parts=name.split(".");var cur=opt_objectToExportTo||goog.global;if(!(parts[0]in cur)&&cur.execScript)cur.execScript("var "+parts[0]);for(var part;parts.length&&(part=parts.shift());)if(!parts.length&&goog.isDef(opt_object))cur[part]=opt_object;else if(cur[part]&&cur[part]!==Object.prototype[part])cur=cur[part];else cur=cur[part]={}};
goog.define=function(name,defaultValue){var value=defaultValue;if(!COMPILED)if(goog.global.CLOSURE_UNCOMPILED_DEFINES&&goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType===undefined&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,name))value=goog.global.CLOSURE_UNCOMPILED_DEFINES[name];else if(goog.global.CLOSURE_DEFINES&&goog.global.CLOSURE_DEFINES.nodeType===undefined&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,name))value=goog.global.CLOSURE_DEFINES[name];
goog.exportPath_(name,value)};goog.define("goog.DEBUG",true);goog.define("goog.LOCALE","en");goog.define("goog.TRUSTED_SITE",true);goog.define("goog.STRICT_MODE_COMPATIBLE",false);goog.define("goog.DISALLOW_TEST_ONLY_CODE",COMPILED&&!goog.DEBUG);goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING",false);
goog.provide=function(name){if(goog.isInModuleLoader_())throw Error("goog.provide can not be used within a goog.module.");if(!COMPILED)if(goog.isProvided_(name))throw Error('Namespace "'+name+'" already declared.');goog.constructNamespace_(name)};
goog.constructNamespace_=function(name,opt_obj){if(!COMPILED){delete goog.implicitNamespaces_[name];var namespace=name;while(namespace=namespace.substring(0,namespace.lastIndexOf("."))){if(goog.getObjectByName(namespace))break;goog.implicitNamespaces_[namespace]=true}}goog.exportPath_(name,opt_obj)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(name){if(!goog.isString(name)||!name||name.search(goog.VALID_MODULE_RE_)==-1)throw Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw Error("Module "+name+" has been loaded incorrectly. Note, "+"modules cannot be loaded as normal scripts. They require some kind of "+"pre-processing step. You're likely trying to load a module via a "+"script tag or as a part of a concatenated bundle without rewriting the "+"module. For more info see: "+"https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=name;if(!COMPILED){if(goog.isProvided_(name))throw Error('Namespace "'+name+'" already declared.');delete goog.implicitNamespaces_[name]}};goog.module.get=function(name){return goog.module.getInternal_(name)};
goog.module.getInternal_=function(name){if(!COMPILED)if(name in goog.loadedModules_)return goog.loadedModules_[name];else if(!goog.implicitNamespaces_[name]){var ns=goog.getObjectByName(name);return ns!=null?ns:null}return null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.moduleLoaderState_!=null};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw new Error("goog.module.declareLegacyNamespace must be called from "+"within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to "+"goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=true};
goog.setTestOnly=function(opt_message){if(goog.DISALLOW_TEST_ONLY_CODE){opt_message=opt_message||"";throw Error("Importing test-only code into non-debug environment"+(opt_message?": "+opt_message:"."));}};goog.forwardDeclare=function(name){};goog.forwardDeclare("Document");goog.forwardDeclare("HTMLScriptElement");goog.forwardDeclare("XMLHttpRequest");
if(!COMPILED){goog.isProvided_=function(name){return name in goog.loadedModules_||!goog.implicitNamespaces_[name]&&goog.isDefAndNotNull(goog.getObjectByName(name))};goog.implicitNamespaces_={"goog.module":true}}goog.getObjectByName=function(name,opt_obj){var parts=name.split(".");var cur=opt_obj||goog.global;for(var part;part=parts.shift();)if(goog.isDefAndNotNull(cur[part]))cur=cur[part];else return null;return cur};
goog.globalize=function(obj,opt_global){var global=opt_global||goog.global;for(var x in obj)global[x]=obj[x]};
goog.addDependency=function(relPath,provides,requires,opt_loadFlags){if(goog.DEPENDENCIES_ENABLED){var provide,require;var path=relPath.replace(/\\/g,"/");var deps=goog.dependencies_;if(!opt_loadFlags||typeof opt_loadFlags==="boolean")opt_loadFlags=opt_loadFlags?{"module":"goog"}:{};for(var i=0;provide=provides[i];i++){deps.nameToPath[provide]=path;deps.loadFlags[path]=opt_loadFlags}for(var j=0;require=requires[j];j++){if(!(path in deps.requires))deps.requires[path]={};deps.requires[path][require]=
true}}};goog.define("goog.ENABLE_DEBUG_LOADER",true);goog.logToConsole_=function(msg){if(goog.global.console)goog.global.console["error"](msg)};
goog.require=function(name){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_)goog.maybeProcessDeferredDep_(name);if(goog.isProvided_(name)){if(goog.isInModuleLoader_())return goog.module.getInternal_(name)}else if(goog.ENABLE_DEBUG_LOADER){var path=goog.getPathFromDeps_(name);if(path)goog.writeScripts_(path);else{var errorMessage="goog.require could not find: "+name;goog.logToConsole_(errorMessage);throw Error(errorMessage);}}return null}};goog.basePath="";goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;goog.global.CLOSURE_IMPORT_SCRIPT;goog.nullFunction=function(){};goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(ctor){ctor.instance_=undefined;ctor.getInstance=function(){if(ctor.instance_)return ctor.instance_;if(goog.DEBUG)goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=ctor;return ctor.instance_=new ctor}};goog.instantiatedSingletons_=[];goog.define("goog.LOAD_MODULE_USING_EVAL",true);
goog.define("goog.SEAL_MODULE_EXPORTS",goog.DEBUG);goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.define("goog.TRANSPILE","detect");goog.define("goog.TRANSPILER","transpile.js");
if(goog.DEPENDENCIES_ENABLED){goog.dependencies_={loadFlags:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}};goog.inHtmlDocument_=function(){var doc=goog.global.document;return doc!=null&&"write"in doc};goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH)){goog.basePath=goog.global.CLOSURE_BASE_PATH;return}else if(!goog.inHtmlDocument_())return;var doc=goog.global.document;var currentScript=doc.currentScript;if(currentScript)var scripts=
[currentScript];else var scripts=doc.getElementsByTagName("SCRIPT");for(var i=scripts.length-1;i>=0;--i){var script=scripts[i];var src=script.src;var qmark=src.lastIndexOf("?");var l=qmark==-1?src.length:qmark;if(src.substr(l-7,7)=="base.js"){goog.basePath=src.substr(0,l-7);return}}};goog.importScript_=function(src,opt_sourceText){var importScript=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_;if(importScript(src,opt_sourceText))goog.dependencies_.written[src]=true};goog.IS_OLD_IE_=!!(!goog.global.atob&&
goog.global.document&&goog.global.document.all);goog.oldIeWaiting_=false;goog.importProcessedScript_=function(src,isModule,needsTranspile){var bootstrap='goog.retrieveAndExec_("'+src+'", '+isModule+", "+needsTranspile+");";goog.importScript_("",bootstrap)};goog.queuedModules_=[];goog.wrapModule_=function(srcUrl,scriptText){if(!goog.LOAD_MODULE_USING_EVAL||!goog.isDef(goog.global.JSON))return""+"goog.loadModule(function(exports) {"+'"use strict";'+scriptText+"\n"+";return exports"+"});"+"\n//# sourceURL\x3d"+
srcUrl+"\n";else return""+"goog.loadModule("+goog.global.JSON.stringify(scriptText+"\n//# sourceURL\x3d"+srcUrl+"\n")+");"};goog.loadQueuedModules_=function(){var count=goog.queuedModules_.length;if(count>0){var queue=goog.queuedModules_;goog.queuedModules_=[];for(var i=0;i<count;i++){var path=queue[i];goog.maybeProcessDeferredPath_(path)}}goog.oldIeWaiting_=false};goog.maybeProcessDeferredDep_=function(name){if(goog.isDeferredModule_(name)&&goog.allDepsAreAvailable_(name)){var path=goog.getPathFromDeps_(name);
goog.maybeProcessDeferredPath_(goog.basePath+path)}};goog.isDeferredModule_=function(name){var path=goog.getPathFromDeps_(name);var loadFlags=path&&goog.dependencies_.loadFlags[path]||{};var languageLevel=loadFlags["lang"]||"es3";if(path&&(loadFlags["module"]=="goog"||goog.needsTranspile_(languageLevel))){var abspath=goog.basePath+path;return abspath in goog.dependencies_.deferred}return false};goog.allDepsAreAvailable_=function(name){var path=goog.getPathFromDeps_(name);if(path&&path in goog.dependencies_.requires)for(var requireName in goog.dependencies_.requires[path])if(!goog.isProvided_(requireName)&&
!goog.isDeferredModule_(requireName))return false;return true};goog.maybeProcessDeferredPath_=function(abspath){if(abspath in goog.dependencies_.deferred){var src=goog.dependencies_.deferred[abspath];delete goog.dependencies_.deferred[abspath];goog.globalEval(src)}};goog.loadModuleFromUrl=function(url){goog.retrieveAndExec_(url,true,false)};goog.writeScriptSrcNode_=function(src){goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"'+src+'"\x3e\x3c/'+"script\x3e")};goog.appendScriptSrcNode_=
function(src){var doc=goog.global.document;var scriptEl=doc.createElement("script");scriptEl.type="text/javascript";scriptEl.src=src;scriptEl.defer=false;scriptEl.async=false;doc.head.appendChild(scriptEl)};goog.writeScriptTag_=function(src,opt_sourceText){if(goog.inHtmlDocument_()){var doc=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&doc.readyState=="complete"){var isDeps=/\bdeps.js$/.test(src);if(isDeps)return false;else throw Error('Cannot write "'+src+'" after document load');
}if(opt_sourceText===undefined)if(!goog.IS_OLD_IE_)if(goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING)goog.appendScriptSrcNode_(src);else goog.writeScriptSrcNode_(src);else{goog.oldIeWaiting_=true;var state=" onreadystatechange\x3d'goog.onScriptLoad_(this, "+ ++goog.lastNonModuleScriptIndex_+")' ";doc.write('\x3cscript type\x3d"text/javascript" src\x3d"'+src+'"'+state+"\x3e\x3c/"+"script\x3e")}else doc.write('\x3cscript type\x3d"text/javascript"\x3e'+goog.protectScriptTag_(opt_sourceText)+"\x3c/"+"script\x3e");
return true}else return false};goog.protectScriptTag_=function(str){return str.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")};goog.needsTranspile_=function(lang){if(goog.TRANSPILE=="always")return true;else if(goog.TRANSPILE=="never")return false;else if(!goog.requiresTranspilation_)goog.requiresTranspilation_=goog.createRequiresTranspilation_();if(lang in goog.requiresTranspilation_)return goog.requiresTranspilation_[lang];else throw new Error("Unknown language mode: "+lang);};goog.requiresTranspilation_=
null;goog.lastNonModuleScriptIndex_=0;goog.onScriptLoad_=function(script,scriptIndex){if(script.readyState=="complete"&&goog.lastNonModuleScriptIndex_==scriptIndex)goog.loadQueuedModules_();return true};goog.writeScripts_=function(pathToLoad){var scripts=[];var seenScript={};var deps=goog.dependencies_;function visitNode(path){if(path in deps.written)return;if(path in deps.visited)return;deps.visited[path]=true;if(path in deps.requires)for(var requireName in deps.requires[path])if(!goog.isProvided_(requireName))if(requireName in
deps.nameToPath)visitNode(deps.nameToPath[requireName]);else throw Error("Undefined nameToPath for "+requireName);if(!(path in seenScript)){seenScript[path]=true;scripts.push(path)}}visitNode(pathToLoad);for(var i=0;i<scripts.length;i++){var path=scripts[i];goog.dependencies_.written[path]=true}var moduleState=goog.moduleLoaderState_;goog.moduleLoaderState_=null;for(var i=0;i<scripts.length;i++){var path=scripts[i];if(path){var loadFlags=deps.loadFlags[path]||{};var languageLevel=loadFlags["lang"]||
"es3";var needsTranspile=goog.needsTranspile_(languageLevel);if(loadFlags["module"]=="goog"||needsTranspile)goog.importProcessedScript_(goog.basePath+path,loadFlags["module"]=="goog",needsTranspile);else goog.importScript_(goog.basePath+path)}else{goog.moduleLoaderState_=moduleState;throw Error("Undefined script input");}}goog.moduleLoaderState_=moduleState};goog.getPathFromDeps_=function(rule){if(rule in goog.dependencies_.nameToPath)return goog.dependencies_.nameToPath[rule];else return null};goog.findBasePath_();
if(!goog.global.CLOSURE_NO_DEPS)goog.importScript_(goog.basePath+"deps.js")}goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(goog.hasBadLetScoping==null){var hasBadLetScoping;try{hasBadLetScoping=!eval('"use strict";'+"let x \x3d 1; function f() { return typeof x; };"+'f() \x3d\x3d "number";')}catch(e){hasBadLetScoping=false}goog.hasBadLetScoping=hasBadLetScoping}return goog.hasBadLetScoping};
goog.workaroundSafari10EvalBug=function(moduleDef){return"(function(){"+moduleDef+"\n"+";"+"})();\n"};
goog.loadModule=function(moduleDef){var previousState=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:undefined,declareLegacyNamespace:false};var exports;if(goog.isFunction(moduleDef))exports=moduleDef.call(undefined,{});else if(goog.isString(moduleDef)){if(goog.useSafari10Workaround())moduleDef=goog.workaroundSafari10EvalBug(moduleDef);exports=goog.loadModuleFromSource_.call(undefined,moduleDef)}else throw Error("Invalid module definition");var moduleName=goog.moduleLoaderState_.moduleName;
if(!goog.isString(moduleName)||!moduleName)throw Error('Invalid module name "'+moduleName+'"');if(goog.moduleLoaderState_.declareLegacyNamespace)goog.constructNamespace_(moduleName,exports);else if(goog.SEAL_MODULE_EXPORTS&&Object.seal&&typeof exports=="object"&&exports!=null)Object.seal(exports);goog.loadedModules_[moduleName]=exports}finally{goog.moduleLoaderState_=previousState}};goog.loadModuleFromSource_=function(){var exports={};eval(arguments[0]);return exports};
goog.normalizePath_=function(path){var components=path.split("/");var i=0;while(i<components.length)if(components[i]==".")components.splice(i,1);else if(i&&components[i]==".."&&components[i-1]&&components[i-1]!="..")components.splice(--i,2);else i++;return components.join("/")};goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_=function(src){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(src);else try{var xhr=new goog.global["XMLHttpRequest"];xhr.open("get",src,false);xhr.send();return xhr.status==0||xhr.status==200?xhr.responseText:null}catch(err){return null}};
goog.retrieveAndExec_=function(src,isModule,needsTranspile){if(!COMPILED){var originalPath=src;src=goog.normalizePath_(src);var importScript=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_;var scriptText=goog.loadFileSync_(src);if(scriptText==null)throw new Error('Load of "'+src+'" failed');if(needsTranspile)scriptText=goog.transpile_.call(goog.global,scriptText,src);if(isModule)scriptText=goog.wrapModule_(src,scriptText);else scriptText+="\n//# sourceURL\x3d"+src;var isOldIE=goog.IS_OLD_IE_;
if(isOldIE&&goog.oldIeWaiting_){goog.dependencies_.deferred[originalPath]=scriptText;goog.queuedModules_.push(originalPath)}else importScript(src,scriptText)}};
goog.transpile_=function(code,path){var jscomp=goog.global["$jscomp"];if(!jscomp)goog.global["$jscomp"]=jscomp={};var transpile=jscomp.transpile;if(!transpile){var transpilerPath=goog.basePath+goog.TRANSPILER;var transpilerCode=goog.loadFileSync_(transpilerPath);if(transpilerCode){eval(transpilerCode+"\n//# sourceURL\x3d"+transpilerPath);if(goog.global["$gwtExport"]&&goog.global["$gwtExport"]["$jscomp"]&&!goog.global["$gwtExport"]["$jscomp"]["transpile"])throw new Error('The transpiler did not properly export the "transpile" '+
"method. $gwtExport: "+JSON.stringify(goog.global["$gwtExport"]));goog.global["$jscomp"].transpile=goog.global["$gwtExport"]["$jscomp"]["transpile"];jscomp=goog.global["$jscomp"];transpile=jscomp.transpile}}if(!transpile){var suffix=" requires transpilation but no transpiler was found.";transpile=jscomp.transpile=function(code,path){goog.logToConsole_(path+suffix);return code}}return transpile(code,path)};
goog.typeOf=function(value){var s=typeof value;if(s=="object")if(value){if(value instanceof Array)return"array";else if(value instanceof Object)return s;var className=Object.prototype.toString.call(value);if(className=="[object Window]")return"object";if(className=="[object Array]"||typeof value.length=="number"&&typeof value.splice!="undefined"&&typeof value.propertyIsEnumerable!="undefined"&&!value.propertyIsEnumerable("splice"))return"array";if(className=="[object Function]"||typeof value.call!=
"undefined"&&typeof value.propertyIsEnumerable!="undefined"&&!value.propertyIsEnumerable("call"))return"function"}else return"null";else if(s=="function"&&typeof value.call=="undefined")return"object";return s};goog.isNull=function(val){return val===null};goog.isDefAndNotNull=function(val){return val!=null};goog.isArray=function(val){return goog.typeOf(val)=="array"};goog.isArrayLike=function(val){var type=goog.typeOf(val);return type=="array"||type=="object"&&typeof val.length=="number"};
goog.isDateLike=function(val){return goog.isObject(val)&&typeof val.getFullYear=="function"};goog.isFunction=function(val){return goog.typeOf(val)=="function"};goog.isObject=function(val){var type=typeof val;return type=="object"&&val!=null||type=="function"};goog.getUid=function(obj){return obj[goog.UID_PROPERTY_]||(obj[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(obj){return!!obj[goog.UID_PROPERTY_]};
goog.removeUid=function(obj){if(obj!==null&&"removeAttribute"in obj)obj.removeAttribute(goog.UID_PROPERTY_);try{delete obj[goog.UID_PROPERTY_]}catch(ex){}};goog.UID_PROPERTY_="closure_uid_"+(Math.random()*1E9>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;
goog.cloneObject=function(obj){var type=goog.typeOf(obj);if(type=="object"||type=="array"){if(obj.clone)return obj.clone();var clone=type=="array"?[]:{};for(var key in obj)clone[key]=goog.cloneObject(obj[key]);return clone}return obj};goog.bindNative_=function(fn,selfObj,var_args){return fn.call.apply(fn.bind,arguments)};
goog.bindJs_=function(fn,selfObj,var_args){if(!fn)throw new Error;if(arguments.length>2){var boundArgs=Array.prototype.slice.call(arguments,2);return function(){var newArgs=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(newArgs,boundArgs);return fn.apply(selfObj,newArgs)}}else return function(){return fn.apply(selfObj,arguments)}};
goog.bind=function(fn,selfObj,var_args){if(Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1)goog.bind=goog.bindNative_;else goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};goog.partial=function(fn,var_args){var args=Array.prototype.slice.call(arguments,1);return function(){var newArgs=args.slice();newArgs.push.apply(newArgs,arguments);return fn.apply(this,newArgs)}};goog.mixin=function(target,source){for(var x in source)target[x]=source[x]};
goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(script){if(goog.global.execScript)goog.global.execScript(script,"JavaScript");else if(goog.global.eval){if(goog.evalWorksForGlobals_==null){goog.global.eval("var _evalTest_ \x3d 1;");if(typeof goog.global["_evalTest_"]!="undefined"){try{delete goog.global["_evalTest_"]}catch(ignore){}goog.evalWorksForGlobals_=true}else goog.evalWorksForGlobals_=false}if(goog.evalWorksForGlobals_)goog.global.eval(script);else{var doc=goog.global.document;var scriptElt=doc.createElement("SCRIPT");
scriptElt.type="text/javascript";scriptElt.defer=false;scriptElt.appendChild(doc.createTextNode(script));doc.body.appendChild(scriptElt);doc.body.removeChild(scriptElt)}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;goog.cssNameMapping_;goog.cssNameMappingStyle_;goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName=function(className,opt_modifier){if(String(className).charAt(0)==".")throw new Error('className passed in goog.getCssName must not start with ".".'+" You passed: "+className);var getMapping=function(cssName){return goog.cssNameMapping_[cssName]||cssName};var renameByParts=function(cssName){var parts=cssName.split("-");var mapped=[];for(var i=0;i<parts.length;i++)mapped.push(getMapping(parts[i]));return mapped.join("-")};var rename;if(goog.cssNameMapping_)rename=goog.cssNameMappingStyle_==
"BY_WHOLE"?getMapping:renameByParts;else rename=function(a){return a};var result=opt_modifier?className+"-"+rename(opt_modifier):rename(className);if(goog.global.CLOSURE_CSS_NAME_MAP_FN)return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);return result};goog.setCssNameMapping=function(mapping,opt_style){goog.cssNameMapping_=mapping;goog.cssNameMappingStyle_=opt_style};goog.global.CLOSURE_CSS_NAME_MAPPING;if(!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING)goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING;
goog.getMsg=function(str,opt_values){if(opt_values)str=str.replace(/\{\$([^}]+)}/g,function(match,key){return opt_values!=null&&key in opt_values?opt_values[key]:match});return str};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(publicPath,object,opt_objectToExportTo){goog.exportPath_(publicPath,object,opt_objectToExportTo)};goog.exportProperty=function(object,publicName,symbol){object[publicName]=symbol};
goog.inherits=function(childCtor,parentCtor){function tempCtor(){}tempCtor.prototype=parentCtor.prototype;childCtor.superClass_=parentCtor.prototype;childCtor.prototype=new tempCtor;childCtor.prototype.constructor=childCtor;childCtor.base=function(me,methodName,var_args){var args=new Array(arguments.length-2);for(var i=2;i<arguments.length;i++)args[i-2]=arguments[i];return parentCtor.prototype[methodName].apply(me,args)}};
goog.base=function(me,opt_methodName,var_args){var caller=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!caller)throw Error("arguments.caller not defined.  goog.base() cannot be used "+"with strict mode code. See "+"http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(caller.superClass_){var ctorArgs=new Array(arguments.length-1);for(var i=1;i<arguments.length;i++)ctorArgs[i-1]=arguments[i];return caller.superClass_.constructor.apply(me,ctorArgs)}var args=new Array(arguments.length-
2);for(var i=2;i<arguments.length;i++)args[i-2]=arguments[i];var foundCaller=false;for(var ctor=me.constructor;ctor;ctor=ctor.superClass_&&ctor.superClass_.constructor)if(ctor.prototype[opt_methodName]===caller)foundCaller=true;else if(foundCaller)return ctor.prototype[opt_methodName].apply(me,args);if(me[opt_methodName]===caller)return me.constructor.prototype[opt_methodName].apply(me,args);else throw Error("goog.base called from a method of one name "+"to a method of a different name");};
goog.scope=function(fn){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a goog.module.");fn.call(goog.global)};if(!COMPILED)goog.global["COMPILED"]=COMPILED;
goog.defineClass=function(superClass,def){var constructor=def.constructor;var statics=def.statics;if(!constructor||constructor==Object.prototype.constructor)constructor=function(){throw Error("cannot instantiate an interface (no constructor defined).");};var cls=goog.defineClass.createSealingConstructor_(constructor,superClass);if(superClass)goog.inherits(cls,superClass);delete def.constructor;delete def.statics;goog.defineClass.applyProperties_(cls.prototype,def);if(statics!=null)if(statics instanceof
Function)statics(cls);else goog.defineClass.applyProperties_(cls,statics);return cls};goog.defineClass.ClassDescriptor;goog.define("goog.defineClass.SEAL_CLASS_INSTANCES",goog.DEBUG);
goog.defineClass.createSealingConstructor_=function(ctr,superClass){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return ctr;var superclassSealable=!goog.defineClass.isUnsealable_(superClass);var wrappedCtr=function(){var instance=ctr.apply(this,arguments)||this;instance[goog.UID_PROPERTY_]=instance[goog.UID_PROPERTY_];if(this.constructor===wrappedCtr&&superclassSealable&&Object.seal instanceof Function)Object.seal(instance);return instance};return wrappedCtr};
goog.defineClass.isUnsealable_=function(ctr){return ctr&&ctr.prototype&&ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"];
goog.defineClass.applyProperties_=function(target,source){var key;for(key in source)if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key];for(var i=0;i<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++){key=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}};goog.tagUnsealableClass=function(ctr){if(!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES)ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=true};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_=function(){var requiresTranspilation={"es3":false};var transpilationRequiredForAllLaterModes=false;function addNewerLanguageTranspilationCheck(modeName,isSupported){if(transpilationRequiredForAllLaterModes)requiresTranspilation[modeName]=true;else if(isSupported())requiresTranspilation[modeName]=false;else{requiresTranspilation[modeName]=true;transpilationRequiredForAllLaterModes=true}}function evalCheck(code){try{return!!eval(code)}catch(ignored){return false}}var userAgent=
goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";addNewerLanguageTranspilationCheck("es5",function(){return evalCheck("[1,].length\x3d\x3d1")});addNewerLanguageTranspilationCheck("es6",function(){var re=/Edge\/(\d+)(\.\d)*/i;var edgeUserAgent=userAgent.match(re);if(edgeUserAgent&&Number(edgeUserAgent[1])<15)return false;var es6fullTest="class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}"+"let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof "+
"String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function "+"f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()"+"\x3d\x3d3}";return evalCheck('(()\x3d\x3e{"use strict";'+es6fullTest+"})()")});addNewerLanguageTranspilationCheck("es6-impl",function(){return true});addNewerLanguageTranspilationCheck("es7",function(){return evalCheck("2 ** 2 \x3d\x3d 4")});addNewerLanguageTranspilationCheck("es8",function(){return evalCheck("async () \x3d\x3e 1, true")});return requiresTranspilation};goog.provide("goog.string");goog.provide("goog.string.Unicode");goog.define("goog.string.DETECT_DOUBLE_ESCAPING",false);goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING",false);goog.string.Unicode={NBSP:" "};goog.string.startsWith=function(str,prefix){return str.lastIndexOf(prefix,0)==0};goog.string.endsWith=function(str,suffix){var l=str.length-suffix.length;return l>=0&&str.indexOf(suffix,l)==l};
goog.string.caseInsensitiveStartsWith=function(str,prefix){return goog.string.caseInsensitiveCompare(prefix,str.substr(0,prefix.length))==0};goog.string.caseInsensitiveEndsWith=function(str,suffix){return goog.string.caseInsensitiveCompare(suffix,str.substr(str.length-suffix.length,suffix.length))==0};goog.string.caseInsensitiveEquals=function(str1,str2){return str1.toLowerCase()==str2.toLowerCase()};
goog.string.subs=function(str,var_args){var splitParts=str.split("%s");var returnString="";var subsArguments=Array.prototype.slice.call(arguments,1);while(subsArguments.length&&splitParts.length>1)returnString+=splitParts.shift()+subsArguments.shift();return returnString+splitParts.join("%s")};goog.string.collapseWhitespace=function(str){return str.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=function(str){return/^[\s\xa0]*$/.test(str)};
goog.string.isEmptyString=function(str){return str.length==0};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(str){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(str){return!/[^\t\n\r ]/.test(str)};goog.string.isAlpha=function(str){return!/[^a-zA-Z]/.test(str)};goog.string.isNumeric=function(str){return!/[^0-9]/.test(str)};
goog.string.isAlphaNumeric=function(str){return!/[^a-zA-Z0-9]/.test(str)};goog.string.isSpace=function(ch){return ch==" "};goog.string.isUnicodeChar=function(ch){return ch.length==1&&ch>=" "&&ch<="~"||ch>=""&&ch<="�"};goog.string.stripNewlines=function(str){return str.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(str){return str.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(str){return str.replace(/\xa0|\s/g," ")};
goog.string.normalizeSpaces=function(str){return str.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(str){return str.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(str){return str.trim()}:function(str){return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")};goog.string.trimLeft=function(str){return str.replace(/^[\s\xa0]+/,"")};
goog.string.trimRight=function(str){return str.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=function(str1,str2){var test1=String(str1).toLowerCase();var test2=String(str2).toLowerCase();if(test1<test2)return-1;else if(test1==test2)return 0;else return 1};
goog.string.numberAwareCompare_=function(str1,str2,tokenizerRegExp){if(str1==str2)return 0;if(!str1)return-1;if(!str2)return 1;var tokens1=str1.toLowerCase().match(tokenizerRegExp);var tokens2=str2.toLowerCase().match(tokenizerRegExp);var count=Math.min(tokens1.length,tokens2.length);for(var i=0;i<count;i++){var a=tokens1[i];var b=tokens2[i];if(a!=b){var num1=parseInt(a,10);if(!isNaN(num1)){var num2=parseInt(b,10);if(!isNaN(num2)&&num1-num2)return num1-num2}return a<b?-1:1}}if(tokens1.length!=tokens2.length)return tokens1.length-
tokens2.length;return str1<str2?-1:1};goog.string.intAwareCompare=function(str1,str2){return goog.string.numberAwareCompare_(str1,str2,/\d+|\D+/g)};goog.string.floatAwareCompare=function(str1,str2){return goog.string.numberAwareCompare_(str1,str2,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(str){return encodeURIComponent(String(str))};goog.string.urlDecode=function(str){return decodeURIComponent(str.replace(/\+/g," "))};
goog.string.newLineToBr=function(str,opt_xml){return str.replace(/(\r\n|\r|\n)/g,opt_xml?"\x3cbr /\x3e":"\x3cbr\x3e")};
goog.string.htmlEscape=function(str,opt_isLikelyToContainHtmlChars){if(opt_isLikelyToContainHtmlChars){str=str.replace(goog.string.AMP_RE_,"\x26amp;").replace(goog.string.LT_RE_,"\x26lt;").replace(goog.string.GT_RE_,"\x26gt;").replace(goog.string.QUOT_RE_,"\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_,"\x26#39;").replace(goog.string.NULL_RE_,"\x26#0;");if(goog.string.DETECT_DOUBLE_ESCAPING)str=str.replace(goog.string.E_RE_,"\x26#101;");return str}else{if(!goog.string.ALL_RE_.test(str))return str;
if(str.indexOf("\x26")!=-1)str=str.replace(goog.string.AMP_RE_,"\x26amp;");if(str.indexOf("\x3c")!=-1)str=str.replace(goog.string.LT_RE_,"\x26lt;");if(str.indexOf("\x3e")!=-1)str=str.replace(goog.string.GT_RE_,"\x26gt;");if(str.indexOf('"')!=-1)str=str.replace(goog.string.QUOT_RE_,"\x26quot;");if(str.indexOf("'")!=-1)str=str.replace(goog.string.SINGLE_QUOTE_RE_,"\x26#39;");if(str.indexOf("\x00")!=-1)str=str.replace(goog.string.NULL_RE_,"\x26#0;");if(goog.string.DETECT_DOUBLE_ESCAPING&&str.indexOf("e")!=
-1)str=str.replace(goog.string.E_RE_,"\x26#101;");return str}};goog.string.AMP_RE_=/&/g;goog.string.LT_RE_=/</g;goog.string.GT_RE_=/>/g;goog.string.QUOT_RE_=/"/g;goog.string.SINGLE_QUOTE_RE_=/'/g;goog.string.NULL_RE_=/\x00/g;goog.string.E_RE_=/e/g;goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/;
goog.string.unescapeEntities=function(str){if(goog.string.contains(str,"\x26"))if(!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global)return goog.string.unescapeEntitiesUsingDom_(str);else return goog.string.unescapePureXmlEntities_(str);return str};goog.string.unescapeEntitiesWithDocument=function(str,document){if(goog.string.contains(str,"\x26"))return goog.string.unescapeEntitiesUsingDom_(str,document);return str};
goog.string.unescapeEntitiesUsingDom_=function(str,opt_document){var seen={"\x26amp;":"\x26","\x26lt;":"\x3c","\x26gt;":"\x3e","\x26quot;":'"'};var div;if(opt_document)div=opt_document.createElement("div");else div=goog.global.document.createElement("div");return str.replace(goog.string.HTML_ENTITY_PATTERN_,function(s,entity){var value=seen[s];if(value)return value;if(entity.charAt(0)=="#"){var n=Number("0"+entity.substr(1));if(!isNaN(n))value=String.fromCharCode(n)}if(!value){div.innerHTML=s+" ";
value=div.firstChild.nodeValue.slice(0,-1)}return seen[s]=value})};goog.string.unescapePureXmlEntities_=function(str){return str.replace(/&([^;]+);/g,function(s,entity){switch(entity){case "amp":return"\x26";case "lt":return"\x3c";case "gt":return"\x3e";case "quot":return'"';default:if(entity.charAt(0)=="#"){var n=Number("0"+entity.substr(1));if(!isNaN(n))return String.fromCharCode(n)}return s}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;
goog.string.whitespaceEscape=function(str,opt_xml){return goog.string.newLineToBr(str.replace(/  /g," \x26#160;"),opt_xml)};goog.string.preserveSpaces=function(str){return str.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(str,quoteChars){var length=quoteChars.length;for(var i=0;i<length;i++){var quoteChar=length==1?quoteChars:quoteChars.charAt(i);if(str.charAt(0)==quoteChar&&str.charAt(str.length-1)==quoteChar)return str.substring(1,str.length-1)}return str};
goog.string.truncate=function(str,chars,opt_protectEscapedCharacters){if(opt_protectEscapedCharacters)str=goog.string.unescapeEntities(str);if(str.length>chars)str=str.substring(0,chars-3)+"...";if(opt_protectEscapedCharacters)str=goog.string.htmlEscape(str);return str};
goog.string.truncateMiddle=function(str,chars,opt_protectEscapedCharacters,opt_trailingChars){if(opt_protectEscapedCharacters)str=goog.string.unescapeEntities(str);if(opt_trailingChars&&str.length>chars){if(opt_trailingChars>chars)opt_trailingChars=chars;var endPoint=str.length-opt_trailingChars;var startPoint=chars-opt_trailingChars;str=str.substring(0,startPoint)+"..."+str.substring(endPoint)}else if(str.length>chars){var half=Math.floor(chars/2);var endPos=str.length-half;half+=chars%2;str=str.substring(0,
half)+"..."+str.substring(endPos)}if(opt_protectEscapedCharacters)str=goog.string.htmlEscape(str);return str};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","\x3c":"\x3c"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(s){s=String(s);var sb=['"'];for(var i=0;i<s.length;i++){var ch=s.charAt(i);var cc=ch.charCodeAt(0);sb[i+1]=goog.string.specialEscapeChars_[ch]||(cc>31&&cc<127?ch:goog.string.escapeChar(ch))}sb.push('"');return sb.join("")};goog.string.escapeString=function(str){var sb=[];for(var i=0;i<str.length;i++)sb[i]=goog.string.escapeChar(str.charAt(i));return sb.join("")};
goog.string.escapeChar=function(c){if(c in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[c];if(c in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[c]=goog.string.specialEscapeChars_[c];var rv=c;var cc=c.charCodeAt(0);if(cc>31&&cc<127)rv=c;else{if(cc<256){rv="\\x";if(cc<16||cc>256)rv+="0"}else{rv="\\u";if(cc<4096)rv+="0"}rv+=cc.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[c]=rv};
goog.string.contains=function(str,subString){return str.indexOf(subString)!=-1};goog.string.caseInsensitiveContains=function(str,subString){return goog.string.contains(str.toLowerCase(),subString.toLowerCase())};goog.string.countOf=function(s,ss){return s&&ss?s.split(ss).length-1:0};goog.string.removeAt=function(s,index,stringLength){var resultStr=s;if(index>=0&&index<s.length&&stringLength>0)resultStr=s.substr(0,index)+s.substr(index+stringLength,s.length-index-stringLength);return resultStr};
goog.string.remove=function(str,substr){return str.replace(substr,"")};goog.string.removeAll=function(s,ss){var re=new RegExp(goog.string.regExpEscape(ss),"g");return s.replace(re,"")};goog.string.replaceAll=function(s,ss,replacement){var re=new RegExp(goog.string.regExpEscape(ss),"g");return s.replace(re,replacement.replace(/\$/g,"$$$$"))};goog.string.regExpEscape=function(s){return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};
goog.string.repeat=String.prototype.repeat?function(string,length){return string.repeat(length)}:function(string,length){return(new Array(length+1)).join(string)};goog.string.padNumber=function(num,length,opt_precision){var s=goog.isDef(opt_precision)?num.toFixed(opt_precision):String(num);var index=s.indexOf(".");if(index==-1)index=s.length;return goog.string.repeat("0",Math.max(0,length-index))+s};goog.string.makeSafe=function(obj){return obj==null?"":String(obj)};
goog.string.buildString=function(var_args){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){var x=2147483648;return Math.floor(Math.random()*x).toString(36)+Math.abs(Math.floor(Math.random()*x)^goog.now()).toString(36)};
goog.string.compareVersions=function(version1,version2){var order=0;var v1Subs=goog.string.trim(String(version1)).split(".");var v2Subs=goog.string.trim(String(version2)).split(".");var subCount=Math.max(v1Subs.length,v2Subs.length);for(var subIdx=0;order==0&&subIdx<subCount;subIdx++){var v1Sub=v1Subs[subIdx]||"";var v2Sub=v2Subs[subIdx]||"";do{var v1Comp=/(\d*)(\D*)(.*)/.exec(v1Sub)||["","","",""];var v2Comp=/(\d*)(\D*)(.*)/.exec(v2Sub)||["","","",""];if(v1Comp[0].length==0&&v2Comp[0].length==0)break;
var v1CompNum=v1Comp[1].length==0?0:parseInt(v1Comp[1],10);var v2CompNum=v2Comp[1].length==0?0:parseInt(v2Comp[1],10);order=goog.string.compareElements_(v1CompNum,v2CompNum)||goog.string.compareElements_(v1Comp[2].length==0,v2Comp[2].length==0)||goog.string.compareElements_(v1Comp[2],v2Comp[2]);v1Sub=v1Comp[3];v2Sub=v2Comp[3]}while(order==0)}return order};goog.string.compareElements_=function(left,right){if(left<right)return-1;else if(left>right)return 1;return 0};
goog.string.hashCode=function(str){var result=0;for(var i=0;i<str.length;++i)result=31*result+str.charCodeAt(i)>>>0;return result};goog.string.uniqueStringCounter_=Math.random()*2147483648|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(str){var num=Number(str);if(num==0&&goog.string.isEmptyOrWhitespace(str))return NaN;return num};goog.string.isLowerCamelCase=function(str){return/^[a-z]+([A-Z][a-z]*)*$/.test(str)};
goog.string.isUpperCamelCase=function(str){return/^([A-Z][a-z]*)+$/.test(str)};goog.string.toCamelCase=function(str){return String(str).replace(/\-([a-z])/g,function(all,match){return match.toUpperCase()})};goog.string.toSelectorCase=function(str){return String(str).replace(/([A-Z])/g,"-$1").toLowerCase()};
goog.string.toTitleCase=function(str,opt_delimiters){var delimiters=goog.isString(opt_delimiters)?goog.string.regExpEscape(opt_delimiters):"\\s";delimiters=delimiters?"|["+delimiters+"]+":"";var regexp=new RegExp("(^"+delimiters+")([a-z])","g");return str.replace(regexp,function(all,p1,p2){return p1+p2.toUpperCase()})};goog.string.capitalize=function(str){return String(str.charAt(0)).toUpperCase()+String(str.substr(1)).toLowerCase()};
goog.string.parseInt=function(value){if(isFinite(value))value=String(value);if(goog.isString(value))return/^\s*-?0x/i.test(value)?parseInt(value,16):parseInt(value,10);return NaN};goog.string.splitLimit=function(str,separator,limit){var parts=str.split(separator);var returnVal=[];while(limit>0&&parts.length){returnVal.push(parts.shift());limit--}if(parts.length)returnVal.push(parts.join(separator));return returnVal};
goog.string.lastComponent=function(str,separators){if(!separators)return str;else if(typeof separators=="string")separators=[separators];var lastSeparatorIndex=-1;for(var i=0;i<separators.length;i++){if(separators[i]=="")continue;var currentSeparatorIndex=str.lastIndexOf(separators[i]);if(currentSeparatorIndex>lastSeparatorIndex)lastSeparatorIndex=currentSeparatorIndex}if(lastSeparatorIndex==-1)return str;return str.slice(lastSeparatorIndex+1)};
goog.string.editDistance=function(a,b){var v0=[];var v1=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var i=0;i<b.length+1;i++)v0[i]=i;for(var i=0;i<a.length;i++){v1[0]=i+1;for(var j=0;j<b.length;j++){var cost=Number(a[i]!=b[j]);v1[j+1]=Math.min(v1[j]+1,v0[j+1]+1,v0[j]+cost)}for(var j=0;j<v0.length;j++)v0[j]=v1[j]}return v1[b.length]};goog.provide("goog.debug.Error");goog.debug.Error=function(opt_msg){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var stack=(new Error).stack;if(stack)this.stack=stack}if(opt_msg)this.message=String(opt_msg);this.reportErrorToServer=true};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.provide("goog.dom.NodeType");goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.provide("goog.asserts");goog.provide("goog.asserts.AssertionError");goog.require("goog.debug.Error");goog.require("goog.dom.NodeType");goog.require("goog.string");goog.define("goog.asserts.ENABLE_ASSERTS",goog.DEBUG);goog.asserts.AssertionError=function(messagePattern,messageArgs){messageArgs.unshift(messagePattern);goog.debug.Error.call(this,goog.string.subs.apply(null,messageArgs));messageArgs.shift();this.messagePattern=messagePattern};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);
goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(e){throw e;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;goog.asserts.doAssertFailure_=function(defaultMessage,defaultArgs,givenMessage,givenArgs){var message="Assertion failed";if(givenMessage){message+=": "+givenMessage;var args=givenArgs}else if(defaultMessage){message+=": "+defaultMessage;args=defaultArgs}var e=new goog.asserts.AssertionError(""+message,args||[]);goog.asserts.errorHandler_(e)};
goog.asserts.setErrorHandler=function(errorHandler){if(goog.asserts.ENABLE_ASSERTS)goog.asserts.errorHandler_=errorHandler};goog.asserts.assert=function(condition,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!condition)goog.asserts.doAssertFailure_("",null,opt_message,Array.prototype.slice.call(arguments,2));return condition};
goog.asserts.fail=function(opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS)goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(opt_message?": "+opt_message:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(value))goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertString=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isString(value))goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertFunction=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(value))goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertObject=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isObject(value))goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertArray=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isArray(value))goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertBoolean=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(value))goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertElement=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&(!goog.isObject(value)||value.nodeType!=goog.dom.NodeType.ELEMENT))goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertInstanceof=function(value,type,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!(value instanceof type))goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(type),goog.asserts.getType_(value)],opt_message,Array.prototype.slice.call(arguments,3));return value};goog.asserts.assertObjectPrototypeIsIntact=function(){for(var key in Object.prototype)goog.asserts.fail(key+" should not be enumerable in Object.prototype.")};
goog.asserts.getType_=function(value){if(value instanceof Function)return value.displayName||value.name||"unknown type name";else if(value instanceof Object)return value.constructor.displayName||value.constructor.name||Object.prototype.toString.call(value);else return value===null?"null":typeof value};goog.provide("goog.array");goog.require("goog.asserts");goog.define("goog.NATIVE_ARRAY_PROTOTYPES",goog.TRUSTED_SITE);goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS",false);goog.array.peek=function(array){return array[array.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(arr,obj,opt_fromIndex){goog.asserts.assert(arr.length!=null);return Array.prototype.indexOf.call(arr,obj,opt_fromIndex)}:function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?0:opt_fromIndex<0?Math.max(0,arr.length+opt_fromIndex):opt_fromIndex;if(goog.isString(arr)){if(!goog.isString(obj)||obj.length!=1)return-1;return arr.indexOf(obj,fromIndex)}for(var i=fromIndex;i<
arr.length;i++)if(i in arr&&arr[i]===obj)return i;return-1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(arr,obj,opt_fromIndex){goog.asserts.assert(arr.length!=null);var fromIndex=opt_fromIndex==null?arr.length-1:opt_fromIndex;return Array.prototype.lastIndexOf.call(arr,obj,fromIndex)}:function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?arr.length-1:opt_fromIndex;if(fromIndex<0)fromIndex=Math.max(0,arr.length+fromIndex);if(goog.isString(arr)){if(!goog.isString(obj)||
obj.length!=1)return-1;return arr.lastIndexOf(obj,fromIndex)}for(var i=fromIndex;i>=0;i--)if(i in arr&&arr[i]===obj)return i;return-1};goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);Array.prototype.forEach.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2)f.call(opt_obj,arr2[i],i,arr)};
goog.array.forEachRight=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=l-1;i>=0;--i)if(i in arr2)f.call(opt_obj,arr2[i],i,arr)};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.filter.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var res=[];var resLength=0;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2){var val=arr2[i];if(f.call(opt_obj,val,i,arr))res[resLength++]=val}return res};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.map.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var res=new Array(l);var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2)res[i]=f.call(opt_obj,arr2[i],i,arr);return res};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(arr,f,val,opt_obj){goog.asserts.assert(arr.length!=null);if(opt_obj)f=goog.bind(f,opt_obj);return Array.prototype.reduce.call(arr,f,val)}:function(arr,f,val,opt_obj){var rval=val;goog.array.forEach(arr,function(val,index){rval=f.call(opt_obj,rval,val,index,arr)});return rval};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(arr,f,val,opt_obj){goog.asserts.assert(arr.length!=null);goog.asserts.assert(f!=null);if(opt_obj)f=goog.bind(f,opt_obj);return Array.prototype.reduceRight.call(arr,f,val)}:function(arr,f,val,opt_obj){var rval=val;goog.array.forEachRight(arr,function(val,index){rval=f.call(opt_obj,rval,val,index,arr)});return rval};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.some.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return true;return false};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.every.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&!f.call(opt_obj,arr2[i],i,arr))return false;return true};
goog.array.count=function(arr,f,opt_obj){var count=0;goog.array.forEach(arr,function(element,index,arr){if(f.call(opt_obj,element,index,arr))++count},opt_obj);return count};goog.array.find=function(arr,f,opt_obj){var i=goog.array.findIndex(arr,f,opt_obj);return i<0?null:goog.isString(arr)?arr.charAt(i):arr[i]};goog.array.findIndex=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return i;return-1};
goog.array.findRight=function(arr,f,opt_obj){var i=goog.array.findIndexRight(arr,f,opt_obj);return i<0?null:goog.isString(arr)?arr.charAt(i):arr[i]};goog.array.findIndexRight=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=l-1;i>=0;i--)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return i;return-1};goog.array.contains=function(arr,obj){return goog.array.indexOf(arr,obj)>=0};goog.array.isEmpty=function(arr){return arr.length==0};
goog.array.clear=function(arr){if(!goog.isArray(arr))for(var i=arr.length-1;i>=0;i--)delete arr[i];arr.length=0};goog.array.insert=function(arr,obj){if(!goog.array.contains(arr,obj))arr.push(obj)};goog.array.insertAt=function(arr,obj,opt_i){goog.array.splice(arr,opt_i,0,obj)};goog.array.insertArrayAt=function(arr,elementsToAdd,opt_i){goog.partial(goog.array.splice,arr,opt_i,0).apply(null,elementsToAdd)};
goog.array.insertBefore=function(arr,obj,opt_obj2){var i;if(arguments.length==2||(i=goog.array.indexOf(arr,opt_obj2))<0)arr.push(obj);else goog.array.insertAt(arr,obj,i)};goog.array.remove=function(arr,obj){var i=goog.array.indexOf(arr,obj);var rv;if(rv=i>=0)goog.array.removeAt(arr,i);return rv};goog.array.removeLast=function(arr,obj){var i=goog.array.lastIndexOf(arr,obj);if(i>=0){goog.array.removeAt(arr,i);return true}return false};
goog.array.removeAt=function(arr,i){goog.asserts.assert(arr.length!=null);return Array.prototype.splice.call(arr,i,1).length==1};goog.array.removeIf=function(arr,f,opt_obj){var i=goog.array.findIndex(arr,f,opt_obj);if(i>=0){goog.array.removeAt(arr,i);return true}return false};goog.array.removeAllIf=function(arr,f,opt_obj){var removedCount=0;goog.array.forEachRight(arr,function(val,index){if(f.call(opt_obj,val,index,arr))if(goog.array.removeAt(arr,index))removedCount++});return removedCount};
goog.array.concat=function(var_args){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(var_args){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(object){var length=object.length;if(length>0){var rv=new Array(length);for(var i=0;i<length;i++)rv[i]=object[i];return rv}return[]};goog.array.clone=goog.array.toArray;
goog.array.extend=function(arr1,var_args){for(var i=1;i<arguments.length;i++){var arr2=arguments[i];if(goog.isArrayLike(arr2)){var len1=arr1.length||0;var len2=arr2.length||0;arr1.length=len1+len2;for(var j=0;j<len2;j++)arr1[len1+j]=arr2[j]}else arr1.push(arr2)}};goog.array.splice=function(arr,index,howMany,var_args){goog.asserts.assert(arr.length!=null);return Array.prototype.splice.apply(arr,goog.array.slice(arguments,1))};
goog.array.slice=function(arr,start,opt_end){goog.asserts.assert(arr.length!=null);if(arguments.length<=2)return Array.prototype.slice.call(arr,start);else return Array.prototype.slice.call(arr,start,opt_end)};
goog.array.removeDuplicates=function(arr,opt_rv,opt_hashFn){var returnArray=opt_rv||arr;var defaultHashFn=function(item){return goog.isObject(item)?"o"+goog.getUid(item):(typeof item).charAt(0)+item};var hashFn=opt_hashFn||defaultHashFn;var seen={},cursorInsert=0,cursorRead=0;while(cursorRead<arr.length){var current=arr[cursorRead++];var key=hashFn(current);if(!Object.prototype.hasOwnProperty.call(seen,key)){seen[key]=true;returnArray[cursorInsert++]=current}}returnArray.length=cursorInsert};
goog.array.binarySearch=function(arr,target,opt_compareFn){return goog.array.binarySearch_(arr,opt_compareFn||goog.array.defaultCompare,false,target)};goog.array.binarySelect=function(arr,evaluator,opt_obj){return goog.array.binarySearch_(arr,evaluator,true,undefined,opt_obj)};
goog.array.binarySearch_=function(arr,compareFn,isEvaluator,opt_target,opt_selfObj){var left=0;var right=arr.length;var found;while(left<right){var middle=left+right>>1;var compareResult;if(isEvaluator)compareResult=compareFn.call(opt_selfObj,arr[middle],middle,arr);else compareResult=compareFn(opt_target,arr[middle]);if(compareResult>0)left=middle+1;else{right=middle;found=!compareResult}}return found?left:~left};goog.array.sort=function(arr,opt_compareFn){arr.sort(opt_compareFn||goog.array.defaultCompare)};
goog.array.stableSort=function(arr,opt_compareFn){var compArr=new Array(arr.length);for(var i=0;i<arr.length;i++)compArr[i]={index:i,value:arr[i]};var valueCompareFn=opt_compareFn||goog.array.defaultCompare;function stableCompareFn(obj1,obj2){return valueCompareFn(obj1.value,obj2.value)||obj1.index-obj2.index}goog.array.sort(compArr,stableCompareFn);for(var i=0;i<arr.length;i++)arr[i]=compArr[i].value};
goog.array.sortByKey=function(arr,keyFn,opt_compareFn){var keyCompareFn=opt_compareFn||goog.array.defaultCompare;goog.array.sort(arr,function(a,b){return keyCompareFn(keyFn(a),keyFn(b))})};goog.array.sortObjectsByKey=function(arr,key,opt_compareFn){goog.array.sortByKey(arr,function(obj){return obj[key]},opt_compareFn)};
goog.array.isSorted=function(arr,opt_compareFn,opt_strict){var compare=opt_compareFn||goog.array.defaultCompare;for(var i=1;i<arr.length;i++){var compareResult=compare(arr[i-1],arr[i]);if(compareResult>0||compareResult==0&&opt_strict)return false}return true};
goog.array.equals=function(arr1,arr2,opt_equalsFn){if(!goog.isArrayLike(arr1)||!goog.isArrayLike(arr2)||arr1.length!=arr2.length)return false;var l=arr1.length;var equalsFn=opt_equalsFn||goog.array.defaultCompareEquality;for(var i=0;i<l;i++)if(!equalsFn(arr1[i],arr2[i]))return false;return true};
goog.array.compare3=function(arr1,arr2,opt_compareFn){var compare=opt_compareFn||goog.array.defaultCompare;var l=Math.min(arr1.length,arr2.length);for(var i=0;i<l;i++){var result=compare(arr1[i],arr2[i]);if(result!=0)return result}return goog.array.defaultCompare(arr1.length,arr2.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};
goog.array.binaryInsert=function(array,value,opt_compareFn){var index=goog.array.binarySearch(array,value,opt_compareFn);if(index<0){goog.array.insertAt(array,value,-(index+1));return true}return false};goog.array.binaryRemove=function(array,value,opt_compareFn){var index=goog.array.binarySearch(array,value,opt_compareFn);return index>=0?goog.array.removeAt(array,index):false};
goog.array.bucket=function(array,sorter,opt_obj){var buckets={};for(var i=0;i<array.length;i++){var value=array[i];var key=sorter.call(opt_obj,value,i,array);if(goog.isDef(key)){var bucket=buckets[key]||(buckets[key]=[]);bucket.push(value)}}return buckets};goog.array.toObject=function(arr,keyFunc,opt_obj){var ret={};goog.array.forEach(arr,function(element,index){ret[keyFunc.call(opt_obj,element,index,arr)]=element});return ret};
goog.array.range=function(startOrEnd,opt_end,opt_step){var array=[];var start=0;var end=startOrEnd;var step=opt_step||1;if(opt_end!==undefined){start=startOrEnd;end=opt_end}if(step*(end-start)<0)return[];if(step>0)for(var i=start;i<end;i+=step)array.push(i);else for(var i=start;i>end;i+=step)array.push(i);return array};goog.array.repeat=function(value,n){var array=[];for(var i=0;i<n;i++)array[i]=value;return array};
goog.array.flatten=function(var_args){var CHUNK_SIZE=8192;var result=[];for(var i=0;i<arguments.length;i++){var element=arguments[i];if(goog.isArray(element))for(var c=0;c<element.length;c+=CHUNK_SIZE){var chunk=goog.array.slice(element,c,c+CHUNK_SIZE);var recurseResult=goog.array.flatten.apply(null,chunk);for(var r=0;r<recurseResult.length;r++)result.push(recurseResult[r])}else result.push(element)}return result};
goog.array.rotate=function(array,n){goog.asserts.assert(array.length!=null);if(array.length){n%=array.length;if(n>0)Array.prototype.unshift.apply(array,array.splice(-n,n));else if(n<0)Array.prototype.push.apply(array,array.splice(0,-n))}return array};
goog.array.moveItem=function(arr,fromIndex,toIndex){goog.asserts.assert(fromIndex>=0&&fromIndex<arr.length);goog.asserts.assert(toIndex>=0&&toIndex<arr.length);var removedItems=Array.prototype.splice.call(arr,fromIndex,1);Array.prototype.splice.call(arr,toIndex,0,removedItems[0])};
goog.array.zip=function(var_args){if(!arguments.length)return[];var result=[];var minLen=arguments[0].length;for(var i=1;i<arguments.length;i++)if(arguments[i].length<minLen)minLen=arguments[i].length;for(var i=0;i<minLen;i++){var value=[];for(var j=0;j<arguments.length;j++)value.push(arguments[j][i]);result.push(value)}return result};
goog.array.shuffle=function(arr,opt_randFn){var randFn=opt_randFn||Math.random;for(var i=arr.length-1;i>0;i--){var j=Math.floor(randFn()*(i+1));var tmp=arr[i];arr[i]=arr[j];arr[j]=tmp}};goog.array.copyByIndex=function(arr,index_arr){var result=[];goog.array.forEach(index_arr,function(index){result.push(arr[index])});return result};goog.array.concatMap=function(arr,f,opt_obj){return goog.array.concat.apply([],goog.array.map(arr,f,opt_obj))};goog.provide("goog.object");goog.object.is=function(v,v2){if(v===v2)return v!==0||1/v===1/v2;return v!==v&&v2!==v2};goog.object.forEach=function(obj,f,opt_obj){for(var key in obj)f.call(opt_obj,obj[key],key,obj)};goog.object.filter=function(obj,f,opt_obj){var res={};for(var key in obj)if(f.call(opt_obj,obj[key],key,obj))res[key]=obj[key];return res};goog.object.map=function(obj,f,opt_obj){var res={};for(var key in obj)res[key]=f.call(opt_obj,obj[key],key,obj);return res};
goog.object.some=function(obj,f,opt_obj){for(var key in obj)if(f.call(opt_obj,obj[key],key,obj))return true;return false};goog.object.every=function(obj,f,opt_obj){for(var key in obj)if(!f.call(opt_obj,obj[key],key,obj))return false;return true};goog.object.getCount=function(obj){var rv=0;for(var key in obj)rv++;return rv};goog.object.getAnyKey=function(obj){for(var key in obj)return key};goog.object.getAnyValue=function(obj){for(var key in obj)return obj[key]};
goog.object.contains=function(obj,val){return goog.object.containsValue(obj,val)};goog.object.getValues=function(obj){var res=[];var i=0;for(var key in obj)res[i++]=obj[key];return res};goog.object.getKeys=function(obj){var res=[];var i=0;for(var key in obj)res[i++]=key;return res};goog.object.getValueByKeys=function(obj,var_args){var isArrayLike=goog.isArrayLike(var_args);var keys=isArrayLike?var_args:arguments;for(var i=isArrayLike?0:1;i<keys.length;i++){obj=obj[keys[i]];if(!goog.isDef(obj))break}return obj};
goog.object.containsKey=function(obj,key){return obj!==null&&key in obj};goog.object.containsValue=function(obj,val){for(var key in obj)if(obj[key]==val)return true;return false};goog.object.findKey=function(obj,f,opt_this){for(var key in obj)if(f.call(opt_this,obj[key],key,obj))return key;return undefined};goog.object.findValue=function(obj,f,opt_this){var key=goog.object.findKey(obj,f,opt_this);return key&&obj[key]};goog.object.isEmpty=function(obj){for(var key in obj)return false;return true};
goog.object.clear=function(obj){for(var i in obj)delete obj[i]};goog.object.remove=function(obj,key){var rv;if(rv=key in obj)delete obj[key];return rv};goog.object.add=function(obj,key,val){if(obj!==null&&key in obj)throw Error('The object already contains the key "'+key+'"');goog.object.set(obj,key,val)};goog.object.get=function(obj,key,opt_val){if(obj!==null&&key in obj)return obj[key];return opt_val};goog.object.set=function(obj,key,value){obj[key]=value};
goog.object.setIfUndefined=function(obj,key,value){return key in obj?obj[key]:obj[key]=value};goog.object.setWithReturnValueIfNotSet=function(obj,key,f){if(key in obj)return obj[key];var val=f();obj[key]=val;return val};goog.object.equals=function(a,b){for(var k in a)if(!(k in b)||a[k]!==b[k])return false;for(var k in b)if(!(k in a))return false;return true};goog.object.clone=function(obj){var res={};for(var key in obj)res[key]=obj[key];return res};
goog.object.unsafeClone=function(obj){var type=goog.typeOf(obj);if(type=="object"||type=="array"){if(goog.isFunction(obj.clone))return obj.clone();var clone=type=="array"?[]:{};for(var key in obj)clone[key]=goog.object.unsafeClone(obj[key]);return clone}return obj};goog.object.transpose=function(obj){var transposed={};for(var key in obj)transposed[obj[key]]=key;return transposed};
goog.object.PROTOTYPE_FIELDS_=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"];goog.object.extend=function(target,var_args){var key,source;for(var i=1;i<arguments.length;i++){source=arguments[i];for(key in source)target[key]=source[key];for(var j=0;j<goog.object.PROTOTYPE_FIELDS_.length;j++){key=goog.object.PROTOTYPE_FIELDS_[j];if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}}};
goog.object.create=function(var_args){var argLength=arguments.length;if(argLength==1&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(argLength%2)throw Error("Uneven number of arguments");var rv={};for(var i=0;i<argLength;i+=2)rv[arguments[i]]=arguments[i+1];return rv};
goog.object.createSet=function(var_args){var argLength=arguments.length;if(argLength==1&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);var rv={};for(var i=0;i<argLength;i++)rv[arguments[i]]=true;return rv};goog.object.createImmutableView=function(obj){var result=obj;if(Object.isFrozen&&!Object.isFrozen(obj)){result=Object.create(obj);Object.freeze(result)}return result};goog.object.isImmutableView=function(obj){return!!Object.isFrozen&&Object.isFrozen(obj)};
goog.object.getAllPropertyNames=function(obj,opt_includeObjectPrototype,opt_includeFunctionPrototype){if(!obj)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(obj);var visitedSet={};var proto=obj;while(proto&&(proto!==Object.prototype||!!opt_includeObjectPrototype)&&(proto!==Function.prototype||!!opt_includeFunctionPrototype)){var names=Object.getOwnPropertyNames(proto);for(var i=0;i<names.length;i++)visitedSet[names[i]]=true;proto=Object.getPrototypeOf(proto)}return goog.object.getKeys(visitedSet)};goog.provide("goog.structs");goog.require("goog.array");goog.require("goog.object");goog.structs.getCount=function(col){if(col.getCount&&typeof col.getCount=="function")return col.getCount();if(goog.isArrayLike(col)||goog.isString(col))return col.length;return goog.object.getCount(col)};
goog.structs.getValues=function(col){if(col.getValues&&typeof col.getValues=="function")return col.getValues();if(goog.isString(col))return col.split("");if(goog.isArrayLike(col)){var rv=[];var l=col.length;for(var i=0;i<l;i++)rv.push(col[i]);return rv}return goog.object.getValues(col)};
goog.structs.getKeys=function(col){if(col.getKeys&&typeof col.getKeys=="function")return col.getKeys();if(col.getValues&&typeof col.getValues=="function")return undefined;if(goog.isArrayLike(col)||goog.isString(col)){var rv=[];var l=col.length;for(var i=0;i<l;i++)rv.push(i);return rv}return goog.object.getKeys(col)};
goog.structs.contains=function(col,val){if(col.contains&&typeof col.contains=="function")return col.contains(val);if(col.containsValue&&typeof col.containsValue=="function")return col.containsValue(val);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.contains(col,val);return goog.object.containsValue(col,val)};
goog.structs.isEmpty=function(col){if(col.isEmpty&&typeof col.isEmpty=="function")return col.isEmpty();if(goog.isArrayLike(col)||goog.isString(col))return goog.array.isEmpty(col);return goog.object.isEmpty(col)};goog.structs.clear=function(col){if(col.clear&&typeof col.clear=="function")col.clear();else if(goog.isArrayLike(col))goog.array.clear(col);else goog.object.clear(col)};
goog.structs.forEach=function(col,f,opt_obj){if(col.forEach&&typeof col.forEach=="function")col.forEach(f,opt_obj);else if(goog.isArrayLike(col)||goog.isString(col))goog.array.forEach(col,f,opt_obj);else{var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)f.call(opt_obj,values[i],keys&&keys[i],col)}};
goog.structs.filter=function(col,f,opt_obj){if(typeof col.filter=="function")return col.filter(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.filter(col,f,opt_obj);var rv;var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;if(keys){rv={};for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],keys[i],col))rv[keys[i]]=values[i]}else{rv=[];for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],undefined,col))rv.push(values[i])}return rv};
goog.structs.map=function(col,f,opt_obj){if(typeof col.map=="function")return col.map(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.map(col,f,opt_obj);var rv;var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;if(keys){rv={};for(var i=0;i<l;i++)rv[keys[i]]=f.call(opt_obj,values[i],keys[i],col)}else{rv=[];for(var i=0;i<l;i++)rv[i]=f.call(opt_obj,values[i],undefined,col)}return rv};
goog.structs.some=function(col,f,opt_obj){if(typeof col.some=="function")return col.some(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.some(col,f,opt_obj);var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],keys&&keys[i],col))return true;return false};
goog.structs.every=function(col,f,opt_obj){if(typeof col.every=="function")return col.every(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.every(col,f,opt_obj);var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)if(!f.call(opt_obj,values[i],keys&&keys[i],col))return false;return true};goog.provide("goog.functions");goog.functions.constant=function(retValue){return function(){return retValue}};goog.functions.FALSE=goog.functions.constant(false);goog.functions.TRUE=goog.functions.constant(true);goog.functions.NULL=goog.functions.constant(null);goog.functions.identity=function(opt_returnValue,var_args){return opt_returnValue};goog.functions.error=function(message){return function(){throw Error(message);}};goog.functions.fail=function(err){return function(){throw err;}};
goog.functions.lock=function(f,opt_numArgs){opt_numArgs=opt_numArgs||0;return function(){return f.apply(this,Array.prototype.slice.call(arguments,0,opt_numArgs))}};goog.functions.nth=function(n){return function(){return arguments[n]}};goog.functions.partialRight=function(fn,var_args){var rightArgs=Array.prototype.slice.call(arguments,1);return function(){var newArgs=Array.prototype.slice.call(arguments);newArgs.push.apply(newArgs,rightArgs);return fn.apply(this,newArgs)}};
goog.functions.withReturnValue=function(f,retValue){return goog.functions.sequence(f,goog.functions.constant(retValue))};goog.functions.equalTo=function(value,opt_useLooseComparison){return function(other){return opt_useLooseComparison?value==other:value===other}};
goog.functions.compose=function(fn,var_args){var functions=arguments;var length=functions.length;return function(){var result;if(length)result=functions[length-1].apply(this,arguments);for(var i=length-2;i>=0;i--)result=functions[i].call(this,result);return result}};goog.functions.sequence=function(var_args){var functions=arguments;var length=functions.length;return function(){var result;for(var i=0;i<length;i++)result=functions[i].apply(this,arguments);return result}};
goog.functions.and=function(var_args){var functions=arguments;var length=functions.length;return function(){for(var i=0;i<length;i++)if(!functions[i].apply(this,arguments))return false;return true}};goog.functions.or=function(var_args){var functions=arguments;var length=functions.length;return function(){for(var i=0;i<length;i++)if(functions[i].apply(this,arguments))return true;return false}};goog.functions.not=function(f){return function(){return!f.apply(this,arguments)}};
goog.functions.create=function(constructor,var_args){var temp=function(){};temp.prototype=constructor.prototype;var obj=new temp;constructor.apply(obj,Array.prototype.slice.call(arguments,1));return obj};goog.define("goog.functions.CACHE_RETURN_VALUE",true);goog.functions.cacheReturnValue=function(fn){var called=false;var value;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return fn();if(!called){value=fn();called=true}return value}};
goog.functions.once=function(f){var inner=f;return function(){if(inner){var tmp=inner;inner=null;tmp()}}};goog.functions.debounce=function(f,interval,opt_scope){var timeout=0;return function(var_args){goog.global.clearTimeout(timeout);var args=arguments;timeout=goog.global.setTimeout(function(){f.apply(opt_scope,args)},interval)}};
goog.functions.throttle=function(f,interval,opt_scope){var timeout=0;var shouldFire=false;var args=[];var handleTimeout=function(){timeout=0;if(shouldFire){shouldFire=false;fire()}};var fire=function(){timeout=goog.global.setTimeout(handleTimeout,interval);f.apply(opt_scope,args)};return function(var_args){args=arguments;if(!timeout)fire();else shouldFire=true}};
goog.functions.rateLimit=function(f,interval,opt_scope){var timeout=0;var handleTimeout=function(){timeout=0};return function(var_args){if(!timeout){timeout=goog.global.setTimeout(handleTimeout,interval);f.apply(opt_scope,arguments)}}};goog.provide("goog.math");goog.require("goog.array");goog.require("goog.asserts");goog.math.randomInt=function(a){return Math.floor(Math.random()*a)};goog.math.uniformRandom=function(a,b){return a+Math.random()*(b-a)};goog.math.clamp=function(value,min,max){return Math.min(Math.max(value,min),max)};goog.math.modulo=function(a,b){var r=a%b;return r*b<0?r+b:r};goog.math.lerp=function(a,b,x){return a+x*(b-a)};goog.math.nearlyEquals=function(a,b,opt_tolerance){return Math.abs(a-b)<=(opt_tolerance||1E-6)};
goog.math.standardAngle=function(angle){return goog.math.modulo(angle,360)};goog.math.standardAngleInRadians=function(angle){return goog.math.modulo(angle,2*Math.PI)};goog.math.toRadians=function(angleDegrees){return angleDegrees*Math.PI/180};goog.math.toDegrees=function(angleRadians){return angleRadians*180/Math.PI};goog.math.angleDx=function(degrees,radius){return radius*Math.cos(goog.math.toRadians(degrees))};goog.math.angleDy=function(degrees,radius){return radius*Math.sin(goog.math.toRadians(degrees))};
goog.math.angle=function(x1,y1,x2,y2){return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2-y1,x2-x1)))};goog.math.angleDifference=function(startAngle,endAngle){var d=goog.math.standardAngle(endAngle)-goog.math.standardAngle(startAngle);if(d>180)d=d-360;else if(d<=-180)d=360+d;return d};goog.math.sign=function(x){if(x>0)return 1;if(x<0)return-1;return x};
goog.math.longestCommonSubsequence=function(array1,array2,opt_compareFn,opt_collectorFn){var compare=opt_compareFn||function(a,b){return a==b};var collect=opt_collectorFn||function(i1,i2){return array1[i1]};var length1=array1.length;var length2=array2.length;var arr=[];for(var i=0;i<length1+1;i++){arr[i]=[];arr[i][0]=0}for(var j=0;j<length2+1;j++)arr[0][j]=0;for(i=1;i<=length1;i++)for(j=1;j<=length2;j++)if(compare(array1[i-1],array2[j-1]))arr[i][j]=arr[i-1][j-1]+1;else arr[i][j]=Math.max(arr[i-1][j],
arr[i][j-1]);var result=[];var i=length1,j=length2;while(i>0&&j>0)if(compare(array1[i-1],array2[j-1])){result.unshift(collect(i-1,j-1));i--;j--}else if(arr[i-1][j]>arr[i][j-1])i--;else j--;return result};goog.math.sum=function(var_args){return goog.array.reduce(arguments,function(sum,value){return sum+value},0)};goog.math.average=function(var_args){return goog.math.sum.apply(null,arguments)/arguments.length};
goog.math.sampleVariance=function(var_args){var sampleSize=arguments.length;if(sampleSize<2)return 0;var mean=goog.math.average.apply(null,arguments);var variance=goog.math.sum.apply(null,goog.array.map(arguments,function(val){return Math.pow(val-mean,2)}))/(sampleSize-1);return variance};goog.math.standardDeviation=function(var_args){return Math.sqrt(goog.math.sampleVariance.apply(null,arguments))};goog.math.isInt=function(num){return isFinite(num)&&num%1==0};goog.math.isFiniteNumber=function(num){return isFinite(num)};
goog.math.isNegativeZero=function(num){return num==0&&1/num<0};goog.math.log10Floor=function(num){if(num>0){var x=Math.round(Math.log(num)*Math.LOG10E);return x-(parseFloat("1e"+x)>num?1:0)}return num==0?-Infinity:NaN};goog.math.safeFloor=function(num,opt_epsilon){goog.asserts.assert(!goog.isDef(opt_epsilon)||opt_epsilon>0);return Math.floor(num+(opt_epsilon||2E-15))};
goog.math.safeCeil=function(num,opt_epsilon){goog.asserts.assert(!goog.isDef(opt_epsilon)||opt_epsilon>0);return Math.ceil(num-(opt_epsilon||2E-15))};goog.provide("goog.iter");goog.provide("goog.iter.Iterable");goog.provide("goog.iter.Iterator");goog.provide("goog.iter.StopIteration");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.functions");goog.require("goog.math");goog.iter.Iterable;goog.iter.StopIteration="StopIteration"in goog.global?goog.global["StopIteration"]:{message:"StopIteration",stack:""};goog.iter.Iterator=function(){};goog.iter.Iterator.prototype.next=function(){throw goog.iter.StopIteration;};
goog.iter.Iterator.prototype.__iterator__=function(opt_keys){return this};
goog.iter.toIterator=function(iterable){if(iterable instanceof goog.iter.Iterator)return iterable;if(typeof iterable.__iterator__=="function")return iterable.__iterator__(false);if(goog.isArrayLike(iterable)){var i=0;var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){if(i>=iterable.length)throw goog.iter.StopIteration;if(!(i in iterable)){i++;continue}return iterable[i++]}};return newIter}throw Error("Not implemented");};
goog.iter.forEach=function(iterable,f,opt_obj){if(goog.isArrayLike(iterable))try{goog.array.forEach(iterable,f,opt_obj)}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}else{iterable=goog.iter.toIterator(iterable);try{while(true)f.call(opt_obj,iterable.next(),undefined,iterable)}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}}};
goog.iter.filter=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){var val=iterator.next();if(f.call(opt_obj,val,undefined,iterator))return val}};return newIter};goog.iter.filterFalse=function(iterable,f,opt_obj){return goog.iter.filter(iterable,goog.functions.not(f),opt_obj)};
goog.iter.range=function(startOrStop,opt_stop,opt_step){var start=0;var stop=startOrStop;var step=opt_step||1;if(arguments.length>1){start=startOrStop;stop=opt_stop}if(step==0)throw Error("Range step argument must not be zero");var newIter=new goog.iter.Iterator;newIter.next=function(){if(step>0&&start>=stop||step<0&&start<=stop)throw goog.iter.StopIteration;var rv=start;start+=step;return rv};return newIter};goog.iter.join=function(iterable,deliminator){return goog.iter.toArray(iterable).join(deliminator)};
goog.iter.map=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;newIter.next=function(){var val=iterator.next();return f.call(opt_obj,val,undefined,iterator)};return newIter};goog.iter.reduce=function(iterable,f,val,opt_obj){var rval=val;goog.iter.forEach(iterable,function(val){rval=f.call(opt_obj,rval,val)});return rval};
goog.iter.some=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);try{while(true)if(f.call(opt_obj,iterable.next(),undefined,iterable))return true}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}return false};goog.iter.every=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);try{while(true)if(!f.call(opt_obj,iterable.next(),undefined,iterable))return false}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}return true};goog.iter.chain=function(var_args){return goog.iter.chainFromIterable(arguments)};
goog.iter.chainFromIterable=function(iterable){var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;var current=null;iter.next=function(){while(true){if(current==null){var it=iterator.next();current=goog.iter.toIterator(it)}try{return current.next()}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;current=null}}};return iter};
goog.iter.dropWhile=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;var dropping=true;newIter.next=function(){while(true){var val=iterator.next();if(dropping&&f.call(opt_obj,val,undefined,iterator))continue;else dropping=false;return val}};return newIter};
goog.iter.takeWhile=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;iter.next=function(){var val=iterator.next();if(f.call(opt_obj,val,undefined,iterator))return val;throw goog.iter.StopIteration;};return iter};goog.iter.toArray=function(iterable){if(goog.isArrayLike(iterable))return goog.array.toArray(iterable);iterable=goog.iter.toIterator(iterable);var array=[];goog.iter.forEach(iterable,function(val){array.push(val)});return array};
goog.iter.equals=function(iterable1,iterable2,opt_equalsFn){var fillValue={};var pairs=goog.iter.zipLongest(fillValue,iterable1,iterable2);var equalsFn=opt_equalsFn||goog.array.defaultCompareEquality;return goog.iter.every(pairs,function(pair){return equalsFn(pair[0],pair[1])})};goog.iter.nextOrValue=function(iterable,defaultValue){try{return goog.iter.toIterator(iterable).next()}catch(e){if(e!=goog.iter.StopIteration)throw e;return defaultValue}};
goog.iter.product=function(var_args){var someArrayEmpty=goog.array.some(arguments,function(arr){return!arr.length});if(someArrayEmpty||!arguments.length)return new goog.iter.Iterator;var iter=new goog.iter.Iterator;var arrays=arguments;var indicies=goog.array.repeat(0,arrays.length);iter.next=function(){if(indicies){var retVal=goog.array.map(indicies,function(valueIndex,arrayIndex){return arrays[arrayIndex][valueIndex]});for(var i=indicies.length-1;i>=0;i--){goog.asserts.assert(indicies);if(indicies[i]<
arrays[i].length-1){indicies[i]++;break}if(i==0){indicies=null;break}indicies[i]=0}return retVal}throw goog.iter.StopIteration;};return iter};
goog.iter.cycle=function(iterable){var baseIterator=goog.iter.toIterator(iterable);var cache=[];var cacheIndex=0;var iter=new goog.iter.Iterator;var useCache=false;iter.next=function(){var returnElement=null;if(!useCache)try{returnElement=baseIterator.next();cache.push(returnElement);return returnElement}catch(e){if(e!=goog.iter.StopIteration||goog.array.isEmpty(cache))throw e;useCache=true}returnElement=cache[cacheIndex];cacheIndex=(cacheIndex+1)%cache.length;return returnElement};return iter};
goog.iter.count=function(opt_start,opt_step){var counter=opt_start||0;var step=goog.isDef(opt_step)?opt_step:1;var iter=new goog.iter.Iterator;iter.next=function(){var returnValue=counter;counter+=step;return returnValue};return iter};goog.iter.repeat=function(value){var iter=new goog.iter.Iterator;iter.next=goog.functions.constant(value);return iter};
goog.iter.accumulate=function(iterable){var iterator=goog.iter.toIterator(iterable);var total=0;var iter=new goog.iter.Iterator;iter.next=function(){total+=iterator.next();return total};return iter};goog.iter.zip=function(var_args){var args=arguments;var iter=new goog.iter.Iterator;if(args.length>0){var iterators=goog.array.map(args,goog.iter.toIterator);iter.next=function(){var arr=goog.array.map(iterators,function(it){return it.next()});return arr}}return iter};
goog.iter.zipLongest=function(fillValue,var_args){var args=goog.array.slice(arguments,1);var iter=new goog.iter.Iterator;if(args.length>0){var iterators=goog.array.map(args,goog.iter.toIterator);iter.next=function(){var iteratorsHaveValues=false;var arr=goog.array.map(iterators,function(it){var returnValue;try{returnValue=it.next();iteratorsHaveValues=true}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;returnValue=fillValue}return returnValue});if(!iteratorsHaveValues)throw goog.iter.StopIteration;
return arr}}return iter};goog.iter.compress=function(iterable,selectors){var selectorIterator=goog.iter.toIterator(selectors);return goog.iter.filter(iterable,function(){return!!selectorIterator.next()})};goog.iter.GroupByIterator_=function(iterable,opt_keyFunc){this.iterator=goog.iter.toIterator(iterable);this.keyFunc=opt_keyFunc||goog.functions.identity;this.targetKey;this.currentKey;this.currentValue};goog.inherits(goog.iter.GroupByIterator_,goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next=function(){while(this.currentKey==this.targetKey){this.currentValue=this.iterator.next();this.currentKey=this.keyFunc(this.currentValue)}this.targetKey=this.currentKey;return[this.currentKey,this.groupItems_(this.targetKey)]};
goog.iter.GroupByIterator_.prototype.groupItems_=function(targetKey){var arr=[];while(this.currentKey==targetKey){arr.push(this.currentValue);try{this.currentValue=this.iterator.next()}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;break}this.currentKey=this.keyFunc(this.currentValue)}return arr};goog.iter.groupBy=function(iterable,opt_keyFunc){return new goog.iter.GroupByIterator_(iterable,opt_keyFunc)};
goog.iter.starMap=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;iter.next=function(){var args=goog.iter.toArray(iterator.next());return f.apply(opt_obj,goog.array.concat(args,undefined,iterator))};return iter};
goog.iter.tee=function(iterable,opt_num){var iterator=goog.iter.toIterator(iterable);var num=goog.isNumber(opt_num)?opt_num:2;var buffers=goog.array.map(goog.array.range(num),function(){return[]});var addNextIteratorValueToBuffers=function(){var val=iterator.next();goog.array.forEach(buffers,function(buffer){buffer.push(val)})};var createIterator=function(buffer){var iter=new goog.iter.Iterator;iter.next=function(){if(goog.array.isEmpty(buffer))addNextIteratorValueToBuffers();goog.asserts.assert(!goog.array.isEmpty(buffer));
return buffer.shift()};return iter};return goog.array.map(buffers,createIterator)};goog.iter.enumerate=function(iterable,opt_start){return goog.iter.zip(goog.iter.count(opt_start),iterable)};goog.iter.limit=function(iterable,limitSize){goog.asserts.assert(goog.math.isInt(limitSize)&&limitSize>=0);var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;var remaining=limitSize;iter.next=function(){if(remaining-- >0)return iterator.next();throw goog.iter.StopIteration;};return iter};
goog.iter.consume=function(iterable,count){goog.asserts.assert(goog.math.isInt(count)&&count>=0);var iterator=goog.iter.toIterator(iterable);while(count-- >0)goog.iter.nextOrValue(iterator,null);return iterator};goog.iter.slice=function(iterable,start,opt_end){goog.asserts.assert(goog.math.isInt(start)&&start>=0);var iterator=goog.iter.consume(iterable,start);if(goog.isNumber(opt_end)){goog.asserts.assert(goog.math.isInt(opt_end)&&opt_end>=start);iterator=goog.iter.limit(iterator,opt_end-start)}return iterator};
goog.iter.hasDuplicates_=function(arr){var deduped=[];goog.array.removeDuplicates(arr,deduped);return arr.length!=deduped.length};goog.iter.permutations=function(iterable,opt_length){var elements=goog.iter.toArray(iterable);var length=goog.isNumber(opt_length)?opt_length:elements.length;var sets=goog.array.repeat(elements,length);var product=goog.iter.product.apply(undefined,sets);return goog.iter.filter(product,function(arr){return!goog.iter.hasDuplicates_(arr)})};
goog.iter.combinations=function(iterable,length){var elements=goog.iter.toArray(iterable);var indexes=goog.iter.range(elements.length);var indexIterator=goog.iter.permutations(indexes,length);var sortedIndexIterator=goog.iter.filter(indexIterator,function(arr){return goog.array.isSorted(arr)});var iter=new goog.iter.Iterator;function getIndexFromElements(index){return elements[index]}iter.next=function(){return goog.array.map(sortedIndexIterator.next(),getIndexFromElements)};return iter};
goog.iter.combinationsWithReplacement=function(iterable,length){var elements=goog.iter.toArray(iterable);var indexes=goog.array.range(elements.length);var sets=goog.array.repeat(indexes,length);var indexIterator=goog.iter.product.apply(undefined,sets);var sortedIndexIterator=goog.iter.filter(indexIterator,function(arr){return goog.array.isSorted(arr)});var iter=new goog.iter.Iterator;function getIndexFromElements(index){return elements[index]}iter.next=function(){return goog.array.map(sortedIndexIterator.next(),
getIndexFromElements)};return iter};goog.provide("goog.structs.Map");goog.require("goog.iter.Iterator");goog.require("goog.iter.StopIteration");goog.require("goog.object");goog.structs.Map=function(opt_map,var_args){this.map_={};this.keys_=[];this.count_=0;this.version_=0;var argLength=arguments.length;if(argLength>1){if(argLength%2)throw Error("Uneven number of arguments");for(var i=0;i<argLength;i+=2)this.set(arguments[i],arguments[i+1])}else if(opt_map)this.addAll(opt_map)};goog.structs.Map.prototype.getCount=function(){return this.count_};
goog.structs.Map.prototype.getValues=function(){this.cleanupKeysArray_();var rv=[];for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];rv.push(this.map_[key])}return rv};goog.structs.Map.prototype.getKeys=function(){this.cleanupKeysArray_();return this.keys_.concat()};goog.structs.Map.prototype.containsKey=function(key){return goog.structs.Map.hasKey_(this.map_,key)};
goog.structs.Map.prototype.containsValue=function(val){for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];if(goog.structs.Map.hasKey_(this.map_,key)&&this.map_[key]==val)return true}return false};
goog.structs.Map.prototype.equals=function(otherMap,opt_equalityFn){if(this===otherMap)return true;if(this.count_!=otherMap.getCount())return false;var equalityFn=opt_equalityFn||goog.structs.Map.defaultEquals;this.cleanupKeysArray_();for(var key,i=0;key=this.keys_[i];i++)if(!equalityFn(this.get(key),otherMap.get(key)))return false;return true};goog.structs.Map.defaultEquals=function(a,b){return a===b};goog.structs.Map.prototype.isEmpty=function(){return this.count_==0};
goog.structs.Map.prototype.clear=function(){this.map_={};this.keys_.length=0;this.count_=0;this.version_=0};goog.structs.Map.prototype.remove=function(key){if(goog.structs.Map.hasKey_(this.map_,key)){delete this.map_[key];this.count_--;this.version_++;if(this.keys_.length>2*this.count_)this.cleanupKeysArray_();return true}return false};
goog.structs.Map.prototype.cleanupKeysArray_=function(){if(this.count_!=this.keys_.length){var srcIndex=0;var destIndex=0;while(srcIndex<this.keys_.length){var key=this.keys_[srcIndex];if(goog.structs.Map.hasKey_(this.map_,key))this.keys_[destIndex++]=key;srcIndex++}this.keys_.length=destIndex}if(this.count_!=this.keys_.length){var seen={};var srcIndex=0;var destIndex=0;while(srcIndex<this.keys_.length){var key=this.keys_[srcIndex];if(!goog.structs.Map.hasKey_(seen,key)){this.keys_[destIndex++]=key;
seen[key]=1}srcIndex++}this.keys_.length=destIndex}};goog.structs.Map.prototype.get=function(key,opt_val){if(goog.structs.Map.hasKey_(this.map_,key))return this.map_[key];return opt_val};goog.structs.Map.prototype.set=function(key,value){if(!goog.structs.Map.hasKey_(this.map_,key)){this.count_++;this.keys_.push(key);this.version_++}this.map_[key]=value};
goog.structs.Map.prototype.addAll=function(map){var keys,values;if(map instanceof goog.structs.Map){keys=map.getKeys();values=map.getValues()}else{keys=goog.object.getKeys(map);values=goog.object.getValues(map)}for(var i=0;i<keys.length;i++)this.set(keys[i],values[i])};goog.structs.Map.prototype.forEach=function(f,opt_obj){var keys=this.getKeys();for(var i=0;i<keys.length;i++){var key=keys[i];var value=this.get(key);f.call(opt_obj,value,key,this)}};goog.structs.Map.prototype.clone=function(){return new goog.structs.Map(this)};
goog.structs.Map.prototype.transpose=function(){var transposed=new goog.structs.Map;for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];var value=this.map_[key];transposed.set(value,key)}return transposed};goog.structs.Map.prototype.toObject=function(){this.cleanupKeysArray_();var obj={};for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];obj[key]=this.map_[key]}return obj};goog.structs.Map.prototype.getKeyIterator=function(){return this.__iterator__(true)};
goog.structs.Map.prototype.getValueIterator=function(){return this.__iterator__(false)};goog.structs.Map.prototype.__iterator__=function(opt_keys){this.cleanupKeysArray_();var i=0;var version=this.version_;var selfObj=this;var newIter=new goog.iter.Iterator;newIter.next=function(){if(version!=selfObj.version_)throw Error("The map has changed since the iterator was created");if(i>=selfObj.keys_.length)throw goog.iter.StopIteration;var key=selfObj.keys_[i++];return opt_keys?key:selfObj.map_[key]};return newIter};
goog.structs.Map.hasKey_=function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)};goog.provide("goog.uri.utils");goog.provide("goog.uri.utils.ComponentIndex");goog.provide("goog.uri.utils.QueryArray");goog.provide("goog.uri.utils.QueryValue");goog.provide("goog.uri.utils.StandardQueryParam");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.string");goog.uri.utils.CharCode_={AMPERSAND:38,EQUAL:61,HASH:35,QUESTION:63};
goog.uri.utils.buildFromEncodedParts=function(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var out="";if(opt_scheme)out+=opt_scheme+":";if(opt_domain){out+="//";if(opt_userInfo)out+=opt_userInfo+"@";out+=opt_domain;if(opt_port)out+=":"+opt_port}if(opt_path)out+=opt_path;if(opt_queryData)out+="?"+opt_queryData;if(opt_fragment)out+="#"+opt_fragment;return out};
goog.uri.utils.splitRe_=new RegExp("^"+"(?:"+"([^:/?#.]+)"+":)?"+"(?://"+"(?:([^/?#]*)@)?"+"([^/#?]*?)"+"(?::([0-9]+))?"+"(?\x3d[/#?]|$)"+")?"+"([^?#]+)?"+"(?:\\?([^#]*))?"+"(?:#([\\s\\S]*))?"+"$");goog.uri.utils.ComponentIndex={SCHEME:1,USER_INFO:2,DOMAIN:3,PORT:4,PATH:5,QUERY_DATA:6,FRAGMENT:7};goog.uri.utils.split=function(uri){return uri.match(goog.uri.utils.splitRe_)};
goog.uri.utils.decodeIfPossible_=function(uri,opt_preserveReserved){if(!uri)return uri;return opt_preserveReserved?decodeURI(uri):decodeURIComponent(uri)};goog.uri.utils.getComponentByIndex_=function(componentIndex,uri){return goog.uri.utils.split(uri)[componentIndex]||null};goog.uri.utils.getScheme=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME,uri)};
goog.uri.utils.getEffectiveScheme=function(uri){var scheme=goog.uri.utils.getScheme(uri);if(!scheme&&goog.global.self&&goog.global.self.location){var protocol=goog.global.self.location.protocol;scheme=protocol.substr(0,protocol.length-1)}return scheme?scheme.toLowerCase():""};goog.uri.utils.getUserInfoEncoded=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO,uri)};goog.uri.utils.getUserInfo=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))};
goog.uri.utils.getDomainEncoded=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN,uri)};goog.uri.utils.getDomain=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri),true)};goog.uri.utils.getPort=function(uri){return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT,uri))||null};
goog.uri.utils.getPathEncoded=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH,uri)};goog.uri.utils.getPath=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri),true)};goog.uri.utils.getQueryData=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA,uri)};
goog.uri.utils.getFragmentEncoded=function(uri){var hashIndex=uri.indexOf("#");return hashIndex<0?null:uri.substr(hashIndex+1)};goog.uri.utils.setFragmentEncoded=function(uri,fragment){return goog.uri.utils.removeFragment(uri)+(fragment?"#"+fragment:"")};goog.uri.utils.getFragment=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))};
goog.uri.utils.getHost=function(uri){var pieces=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME],pieces[goog.uri.utils.ComponentIndex.USER_INFO],pieces[goog.uri.utils.ComponentIndex.DOMAIN],pieces[goog.uri.utils.ComponentIndex.PORT])};
goog.uri.utils.getOrigin=function(uri){var pieces=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME],null,pieces[goog.uri.utils.ComponentIndex.DOMAIN],pieces[goog.uri.utils.ComponentIndex.PORT])};goog.uri.utils.getPathAndAfter=function(uri){var pieces=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(null,null,null,null,pieces[goog.uri.utils.ComponentIndex.PATH],pieces[goog.uri.utils.ComponentIndex.QUERY_DATA],pieces[goog.uri.utils.ComponentIndex.FRAGMENT])};
goog.uri.utils.removeFragment=function(uri){var hashIndex=uri.indexOf("#");return hashIndex<0?uri:uri.substr(0,hashIndex)};goog.uri.utils.haveSameDomain=function(uri1,uri2){var pieces1=goog.uri.utils.split(uri1);var pieces2=goog.uri.utils.split(uri2);return pieces1[goog.uri.utils.ComponentIndex.DOMAIN]==pieces2[goog.uri.utils.ComponentIndex.DOMAIN]&&pieces1[goog.uri.utils.ComponentIndex.SCHEME]==pieces2[goog.uri.utils.ComponentIndex.SCHEME]&&pieces1[goog.uri.utils.ComponentIndex.PORT]==pieces2[goog.uri.utils.ComponentIndex.PORT]};
goog.uri.utils.assertNoFragmentsOrQueries_=function(uri){goog.asserts.assert(uri.indexOf("#")<0&&uri.indexOf("?")<0,"goog.uri.utils: Fragment or query identifiers are not supported: [%s]",uri)};goog.uri.utils.QueryValue;goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData=function(encodedQuery,callback){if(!encodedQuery)return;var pairs=encodedQuery.split("\x26");for(var i=0;i<pairs.length;i++){var indexOfEquals=pairs[i].indexOf("\x3d");var name=null;var value=null;if(indexOfEquals>=0){name=pairs[i].substring(0,indexOfEquals);value=pairs[i].substring(indexOfEquals+1)}else name=pairs[i];callback(name,value?goog.string.urlDecode(value):"")}};
goog.uri.utils.splitQueryData_=function(uri){var hashIndex=uri.indexOf("#");if(hashIndex<0)hashIndex=uri.length;var questionIndex=uri.indexOf("?");var queryData;if(questionIndex<0||questionIndex>hashIndex){questionIndex=hashIndex;queryData=""}else queryData=uri.substring(questionIndex+1,hashIndex);return[uri.substr(0,questionIndex),queryData,uri.substr(hashIndex)]};goog.uri.utils.joinQueryData_=function(parts){return parts[0]+(parts[1]?"?"+parts[1]:"")+parts[2]};
goog.uri.utils.appendQueryData_=function(queryData,newData){if(!newData)return queryData;return queryData?queryData+"\x26"+newData:newData};goog.uri.utils.appendQueryDataToUri_=function(uri,queryData){if(!queryData)return uri;var parts=goog.uri.utils.splitQueryData_(uri);parts[1]=goog.uri.utils.appendQueryData_(parts[1],queryData);return goog.uri.utils.joinQueryData_(parts)};
goog.uri.utils.appendKeyValuePairs_=function(key,value,pairs){goog.asserts.assertString(key);if(goog.isArray(value)){goog.asserts.assertArray(value);for(var j=0;j<value.length;j++)goog.uri.utils.appendKeyValuePairs_(key,String(value[j]),pairs)}else if(value!=null)pairs.push(key+(value===""?"":"\x3d"+goog.string.urlEncode(value)))};
goog.uri.utils.buildQueryData=function(keysAndValues,opt_startIndex){goog.asserts.assert(Math.max(keysAndValues.length-(opt_startIndex||0),0)%2==0,"goog.uri.utils: Key/value lists must be even in length.");var params=[];for(var i=opt_startIndex||0;i<keysAndValues.length;i+=2){var key=keysAndValues[i];goog.uri.utils.appendKeyValuePairs_(key,keysAndValues[i+1],params)}return params.join("\x26")};
goog.uri.utils.buildQueryDataFromMap=function(map){var params=[];for(var key in map)goog.uri.utils.appendKeyValuePairs_(key,map[key],params);return params.join("\x26")};goog.uri.utils.appendParams=function(uri,var_args){var queryData=arguments.length==2?goog.uri.utils.buildQueryData(arguments[1],0):goog.uri.utils.buildQueryData(arguments,1);return goog.uri.utils.appendQueryDataToUri_(uri,queryData)};
goog.uri.utils.appendParamsFromMap=function(uri,map){var queryData=goog.uri.utils.buildQueryDataFromMap(map);return goog.uri.utils.appendQueryDataToUri_(uri,queryData)};goog.uri.utils.appendParam=function(uri,key,opt_value){var value=goog.isDefAndNotNull(opt_value)?"\x3d"+goog.string.urlEncode(opt_value):"";return goog.uri.utils.appendQueryDataToUri_(uri,key+value)};
goog.uri.utils.findParam_=function(uri,startIndex,keyEncoded,hashOrEndIndex){var index=startIndex;var keyLength=keyEncoded.length;while((index=uri.indexOf(keyEncoded,index))>=0&&index<hashOrEndIndex){var precedingChar=uri.charCodeAt(index-1);if(precedingChar==goog.uri.utils.CharCode_.AMPERSAND||precedingChar==goog.uri.utils.CharCode_.QUESTION){var followingChar=uri.charCodeAt(index+keyLength);if(!followingChar||followingChar==goog.uri.utils.CharCode_.EQUAL||followingChar==goog.uri.utils.CharCode_.AMPERSAND||
followingChar==goog.uri.utils.CharCode_.HASH)return index}index+=keyLength+1}return-1};goog.uri.utils.hashOrEndRe_=/#|$/;goog.uri.utils.hasParam=function(uri,keyEncoded){return goog.uri.utils.findParam_(uri,0,keyEncoded,uri.search(goog.uri.utils.hashOrEndRe_))>=0};
goog.uri.utils.getParamValue=function(uri,keyEncoded){var hashOrEndIndex=uri.search(goog.uri.utils.hashOrEndRe_);var foundIndex=goog.uri.utils.findParam_(uri,0,keyEncoded,hashOrEndIndex);if(foundIndex<0)return null;else{var endPosition=uri.indexOf("\x26",foundIndex);if(endPosition<0||endPosition>hashOrEndIndex)endPosition=hashOrEndIndex;foundIndex+=keyEncoded.length+1;return goog.string.urlDecode(uri.substr(foundIndex,endPosition-foundIndex))}};
goog.uri.utils.getParamValues=function(uri,keyEncoded){var hashOrEndIndex=uri.search(goog.uri.utils.hashOrEndRe_);var position=0;var foundIndex;var result=[];while((foundIndex=goog.uri.utils.findParam_(uri,position,keyEncoded,hashOrEndIndex))>=0){position=uri.indexOf("\x26",foundIndex);if(position<0||position>hashOrEndIndex)position=hashOrEndIndex;foundIndex+=keyEncoded.length+1;result.push(goog.string.urlDecode(uri.substr(foundIndex,position-foundIndex)))}return result};
goog.uri.utils.trailingQueryPunctuationRe_=/[?&]($|#)/;
goog.uri.utils.removeParam=function(uri,keyEncoded){var hashOrEndIndex=uri.search(goog.uri.utils.hashOrEndRe_);var position=0;var foundIndex;var buffer=[];while((foundIndex=goog.uri.utils.findParam_(uri,position,keyEncoded,hashOrEndIndex))>=0){buffer.push(uri.substring(position,foundIndex));position=Math.min(uri.indexOf("\x26",foundIndex)+1||hashOrEndIndex,hashOrEndIndex)}buffer.push(uri.substr(position));return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_,"$1")};
goog.uri.utils.setParam=function(uri,keyEncoded,value){return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri,keyEncoded),keyEncoded,value)};
goog.uri.utils.setParamsFromMap=function(uri,params){var parts=goog.uri.utils.splitQueryData_(uri);var queryData=parts[1];var buffer=[];if(queryData)goog.array.forEach(queryData.split("\x26"),function(pair){var indexOfEquals=pair.indexOf("\x3d");var name=indexOfEquals>=0?pair.substr(0,indexOfEquals):pair;if(!params.hasOwnProperty(name))buffer.push(pair)});parts[1]=goog.uri.utils.appendQueryData_(buffer.join("\x26"),goog.uri.utils.buildQueryDataFromMap(params));return goog.uri.utils.joinQueryData_(parts)};
goog.uri.utils.appendPath=function(baseUri,path){goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);if(goog.string.endsWith(baseUri,"/"))baseUri=baseUri.substr(0,baseUri.length-1);if(goog.string.startsWith(path,"/"))path=path.substr(1);return goog.string.buildString(baseUri,"/",path)};
goog.uri.utils.setPath=function(uri,path){if(!goog.string.startsWith(path,"/"))path="/"+path;var parts=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME],parts[goog.uri.utils.ComponentIndex.USER_INFO],parts[goog.uri.utils.ComponentIndex.DOMAIN],parts[goog.uri.utils.ComponentIndex.PORT],path,parts[goog.uri.utils.ComponentIndex.QUERY_DATA],parts[goog.uri.utils.ComponentIndex.FRAGMENT])};goog.uri.utils.StandardQueryParam={RANDOM:"zx"};
goog.uri.utils.makeUnique=function(uri){return goog.uri.utils.setParam(uri,goog.uri.utils.StandardQueryParam.RANDOM,goog.string.getRandomString())};goog.provide("goog.Uri");goog.provide("goog.Uri.QueryData");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.string");goog.require("goog.structs");goog.require("goog.structs.Map");goog.require("goog.uri.utils");goog.require("goog.uri.utils.ComponentIndex");goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri=function(opt_uri,opt_ignoreCase){this.scheme_="";this.userInfo_="";this.domain_="";this.port_=null;this.path_="";this.fragment_="";this.isReadOnly_=false;this.ignoreCase_=false;this.queryData_;var m;if(opt_uri instanceof goog.Uri){this.ignoreCase_=goog.isDef(opt_ignoreCase)?opt_ignoreCase:opt_uri.getIgnoreCase();this.setScheme(opt_uri.getScheme());this.setUserInfo(opt_uri.getUserInfo());this.setDomain(opt_uri.getDomain());this.setPort(opt_uri.getPort());this.setPath(opt_uri.getPath());this.setQueryData(opt_uri.getQueryData().clone());
this.setFragment(opt_uri.getFragment())}else if(opt_uri&&(m=goog.uri.utils.split(String(opt_uri)))){this.ignoreCase_=!!opt_ignoreCase;this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME]||"",true);this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO]||"",true);this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN]||"",true);this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);this.setPath(m[goog.uri.utils.ComponentIndex.PATH]||"",true);this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA]||
"",true);this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT]||"",true)}else{this.ignoreCase_=!!opt_ignoreCase;this.queryData_=new goog.Uri.QueryData(null,null,this.ignoreCase_)}};goog.Uri.preserveParameterTypesCompatibilityFlag=false;goog.Uri.RANDOM_PARAM=goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString=function(){var out=[];var scheme=this.getScheme();if(scheme)out.push(goog.Uri.encodeSpecialChars_(scheme,goog.Uri.reDisallowedInSchemeOrUserInfo_,true),":");var domain=this.getDomain();if(domain||scheme=="file"){out.push("//");var userInfo=this.getUserInfo();if(userInfo)out.push(goog.Uri.encodeSpecialChars_(userInfo,goog.Uri.reDisallowedInSchemeOrUserInfo_,true),"@");out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));var port=this.getPort();if(port!=
null)out.push(":",String(port))}var path=this.getPath();if(path){if(this.hasDomain()&&path.charAt(0)!="/")out.push("/");out.push(goog.Uri.encodeSpecialChars_(path,path.charAt(0)=="/"?goog.Uri.reDisallowedInAbsolutePath_:goog.Uri.reDisallowedInRelativePath_,true))}var query=this.getEncodedQuery();if(query)out.push("?",query);var fragment=this.getFragment();if(fragment)out.push("#",goog.Uri.encodeSpecialChars_(fragment,goog.Uri.reDisallowedInFragment_));return out.join("")};
goog.Uri.prototype.resolve=function(relativeUri){var absoluteUri=this.clone();var overridden=relativeUri.hasScheme();if(overridden)absoluteUri.setScheme(relativeUri.getScheme());else overridden=relativeUri.hasUserInfo();if(overridden)absoluteUri.setUserInfo(relativeUri.getUserInfo());else overridden=relativeUri.hasDomain();if(overridden)absoluteUri.setDomain(relativeUri.getDomain());else overridden=relativeUri.hasPort();var path=relativeUri.getPath();if(overridden)absoluteUri.setPort(relativeUri.getPort());
else{overridden=relativeUri.hasPath();if(overridden){if(path.charAt(0)!="/")if(this.hasDomain()&&!this.hasPath())path="/"+path;else{var lastSlashIndex=absoluteUri.getPath().lastIndexOf("/");if(lastSlashIndex!=-1)path=absoluteUri.getPath().substr(0,lastSlashIndex+1)+path}path=goog.Uri.removeDotSegments(path)}}if(overridden)absoluteUri.setPath(path);else overridden=relativeUri.hasQuery();if(overridden)absoluteUri.setQueryData(relativeUri.getQueryData().clone());else overridden=relativeUri.hasFragment();
if(overridden)absoluteUri.setFragment(relativeUri.getFragment());return absoluteUri};goog.Uri.prototype.clone=function(){return new goog.Uri(this)};goog.Uri.prototype.getScheme=function(){return this.scheme_};goog.Uri.prototype.setScheme=function(newScheme,opt_decode){this.enforceReadOnly();this.scheme_=opt_decode?goog.Uri.decodeOrEmpty_(newScheme,true):newScheme;if(this.scheme_)this.scheme_=this.scheme_.replace(/:$/,"");return this};goog.Uri.prototype.hasScheme=function(){return!!this.scheme_};
goog.Uri.prototype.getUserInfo=function(){return this.userInfo_};goog.Uri.prototype.setUserInfo=function(newUserInfo,opt_decode){this.enforceReadOnly();this.userInfo_=opt_decode?goog.Uri.decodeOrEmpty_(newUserInfo):newUserInfo;return this};goog.Uri.prototype.hasUserInfo=function(){return!!this.userInfo_};goog.Uri.prototype.getDomain=function(){return this.domain_};
goog.Uri.prototype.setDomain=function(newDomain,opt_decode){this.enforceReadOnly();this.domain_=opt_decode?goog.Uri.decodeOrEmpty_(newDomain,true):newDomain;return this};goog.Uri.prototype.hasDomain=function(){return!!this.domain_};goog.Uri.prototype.getPort=function(){return this.port_};
goog.Uri.prototype.setPort=function(newPort){this.enforceReadOnly();if(newPort){newPort=Number(newPort);if(isNaN(newPort)||newPort<0)throw Error("Bad port number "+newPort);this.port_=newPort}else this.port_=null;return this};goog.Uri.prototype.hasPort=function(){return this.port_!=null};goog.Uri.prototype.getPath=function(){return this.path_};goog.Uri.prototype.setPath=function(newPath,opt_decode){this.enforceReadOnly();this.path_=opt_decode?goog.Uri.decodeOrEmpty_(newPath,true):newPath;return this};
goog.Uri.prototype.hasPath=function(){return!!this.path_};goog.Uri.prototype.hasQuery=function(){return this.queryData_.toString()!==""};goog.Uri.prototype.setQueryData=function(queryData,opt_decode){this.enforceReadOnly();if(queryData instanceof goog.Uri.QueryData){this.queryData_=queryData;this.queryData_.setIgnoreCase(this.ignoreCase_)}else{if(!opt_decode)queryData=goog.Uri.encodeSpecialChars_(queryData,goog.Uri.reDisallowedInQuery_);this.queryData_=new goog.Uri.QueryData(queryData,null,this.ignoreCase_)}return this};
goog.Uri.prototype.setQuery=function(newQuery,opt_decode){return this.setQueryData(newQuery,opt_decode)};goog.Uri.prototype.getEncodedQuery=function(){return this.queryData_.toString()};goog.Uri.prototype.getDecodedQuery=function(){return this.queryData_.toDecodedString()};goog.Uri.prototype.getQueryData=function(){return this.queryData_};goog.Uri.prototype.getQuery=function(){return this.getEncodedQuery()};
goog.Uri.prototype.setParameterValue=function(key,value){this.enforceReadOnly();this.queryData_.set(key,value);return this};goog.Uri.prototype.setParameterValues=function(key,values){this.enforceReadOnly();if(!goog.isArray(values))values=[String(values)];this.queryData_.setValues(key,values);return this};goog.Uri.prototype.getParameterValues=function(name){return this.queryData_.getValues(name)};goog.Uri.prototype.getParameterValue=function(paramName){return this.queryData_.get(paramName)};
goog.Uri.prototype.getFragment=function(){return this.fragment_};goog.Uri.prototype.setFragment=function(newFragment,opt_decode){this.enforceReadOnly();this.fragment_=opt_decode?goog.Uri.decodeOrEmpty_(newFragment):newFragment;return this};goog.Uri.prototype.hasFragment=function(){return!!this.fragment_};goog.Uri.prototype.hasSameDomainAs=function(uri2){return(!this.hasDomain()&&!uri2.hasDomain()||this.getDomain()==uri2.getDomain())&&(!this.hasPort()&&!uri2.hasPort()||this.getPort()==uri2.getPort())};
goog.Uri.prototype.makeUnique=function(){this.enforceReadOnly();this.setParameterValue(goog.Uri.RANDOM_PARAM,goog.string.getRandomString());return this};goog.Uri.prototype.removeParameter=function(key){this.enforceReadOnly();this.queryData_.remove(key);return this};goog.Uri.prototype.setReadOnly=function(isReadOnly){this.isReadOnly_=isReadOnly;return this};goog.Uri.prototype.isReadOnly=function(){return this.isReadOnly_};
goog.Uri.prototype.enforceReadOnly=function(){if(this.isReadOnly_)throw Error("Tried to modify a read-only Uri");};goog.Uri.prototype.setIgnoreCase=function(ignoreCase){this.ignoreCase_=ignoreCase;if(this.queryData_)this.queryData_.setIgnoreCase(ignoreCase);return this};goog.Uri.prototype.getIgnoreCase=function(){return this.ignoreCase_};goog.Uri.parse=function(uri,opt_ignoreCase){return uri instanceof goog.Uri?uri.clone():new goog.Uri(uri,opt_ignoreCase)};
goog.Uri.create=function(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_query,opt_fragment,opt_ignoreCase){var uri=new goog.Uri(null,opt_ignoreCase);opt_scheme&&uri.setScheme(opt_scheme);opt_userInfo&&uri.setUserInfo(opt_userInfo);opt_domain&&uri.setDomain(opt_domain);opt_port&&uri.setPort(opt_port);opt_path&&uri.setPath(opt_path);opt_query&&uri.setQueryData(opt_query);opt_fragment&&uri.setFragment(opt_fragment);return uri};
goog.Uri.resolve=function(base,rel){if(!(base instanceof goog.Uri))base=goog.Uri.parse(base);if(!(rel instanceof goog.Uri))rel=goog.Uri.parse(rel);return base.resolve(rel)};
goog.Uri.removeDotSegments=function(path){if(path==".."||path==".")return"";else if(!goog.string.contains(path,"./")&&!goog.string.contains(path,"/."))return path;else{var leadingSlash=goog.string.startsWith(path,"/");var segments=path.split("/");var out=[];for(var pos=0;pos<segments.length;){var segment=segments[pos++];if(segment=="."){if(leadingSlash&&pos==segments.length)out.push("")}else if(segment==".."){if(out.length>1||out.length==1&&out[0]!="")out.pop();if(leadingSlash&&pos==segments.length)out.push("")}else{out.push(segment);
leadingSlash=true}}return out.join("/")}};goog.Uri.decodeOrEmpty_=function(val,opt_preserveReserved){if(!val)return"";return opt_preserveReserved?decodeURI(val.replace(/%25/g,"%2525")):decodeURIComponent(val)};goog.Uri.encodeSpecialChars_=function(unescapedPart,extra,opt_removeDoubleEncoding){if(goog.isString(unescapedPart)){var encoded=encodeURI(unescapedPart).replace(extra,goog.Uri.encodeChar_);if(opt_removeDoubleEncoding)encoded=goog.Uri.removeDoubleEncoding_(encoded);return encoded}return null};
goog.Uri.encodeChar_=function(ch){var n=ch.charCodeAt(0);return"%"+(n>>4&15).toString(16)+(n&15).toString(16)};goog.Uri.removeDoubleEncoding_=function(doubleEncodedString){return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g,"%$1")};goog.Uri.reDisallowedInSchemeOrUserInfo_=/[#\/\?@]/g;goog.Uri.reDisallowedInRelativePath_=/[#\?:]/g;goog.Uri.reDisallowedInAbsolutePath_=/[#\?]/g;goog.Uri.reDisallowedInQuery_=/[#\?@]/g;goog.Uri.reDisallowedInFragment_=/#/g;
goog.Uri.haveSameDomain=function(uri1String,uri2String){var pieces1=goog.uri.utils.split(uri1String);var pieces2=goog.uri.utils.split(uri2String);return pieces1[goog.uri.utils.ComponentIndex.DOMAIN]==pieces2[goog.uri.utils.ComponentIndex.DOMAIN]&&pieces1[goog.uri.utils.ComponentIndex.PORT]==pieces2[goog.uri.utils.ComponentIndex.PORT]};goog.Uri.QueryData=function(opt_query,opt_uri,opt_ignoreCase){this.keyMap_=null;this.count_=null;this.encodedQuery_=opt_query||null;this.ignoreCase_=!!opt_ignoreCase};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_=function(){if(!this.keyMap_){this.keyMap_=new goog.structs.Map;this.count_=0;if(this.encodedQuery_){var self=this;goog.uri.utils.parseQueryData(this.encodedQuery_,function(name,value){self.add(goog.string.urlDecode(name),value)})}}};
goog.Uri.QueryData.createFromMap=function(map,opt_uri,opt_ignoreCase){var keys=goog.structs.getKeys(map);if(typeof keys=="undefined")throw Error("Keys are undefined");var queryData=new goog.Uri.QueryData(null,null,opt_ignoreCase);var values=goog.structs.getValues(map);for(var i=0;i<keys.length;i++){var key=keys[i];var value=values[i];if(!goog.isArray(value))queryData.add(key,value);else queryData.setValues(key,value)}return queryData};
goog.Uri.QueryData.createFromKeysValues=function(keys,values,opt_uri,opt_ignoreCase){if(keys.length!=values.length)throw Error("Mismatched lengths for keys/values");var queryData=new goog.Uri.QueryData(null,null,opt_ignoreCase);for(var i=0;i<keys.length;i++)queryData.add(keys[i],values[i]);return queryData};goog.Uri.QueryData.prototype.getCount=function(){this.ensureKeyMapInitialized_();return this.count_};
goog.Uri.QueryData.prototype.add=function(key,value){this.ensureKeyMapInitialized_();this.invalidateCache_();key=this.getKeyName_(key);var values=this.keyMap_.get(key);if(!values)this.keyMap_.set(key,values=[]);values.push(value);this.count_=goog.asserts.assertNumber(this.count_)+1;return this};
goog.Uri.QueryData.prototype.remove=function(key){this.ensureKeyMapInitialized_();key=this.getKeyName_(key);if(this.keyMap_.containsKey(key)){this.invalidateCache_();this.count_=goog.asserts.assertNumber(this.count_)-this.keyMap_.get(key).length;return this.keyMap_.remove(key)}return false};goog.Uri.QueryData.prototype.clear=function(){this.invalidateCache_();this.keyMap_=null;this.count_=0};goog.Uri.QueryData.prototype.isEmpty=function(){this.ensureKeyMapInitialized_();return this.count_==0};
goog.Uri.QueryData.prototype.containsKey=function(key){this.ensureKeyMapInitialized_();key=this.getKeyName_(key);return this.keyMap_.containsKey(key)};goog.Uri.QueryData.prototype.containsValue=function(value){var vals=this.getValues();return goog.array.contains(vals,value)};goog.Uri.QueryData.prototype.forEach=function(f,opt_scope){this.ensureKeyMapInitialized_();this.keyMap_.forEach(function(values,key){goog.array.forEach(values,function(value){f.call(opt_scope,value,key,this)},this)},this)};
goog.Uri.QueryData.prototype.getKeys=function(){this.ensureKeyMapInitialized_();var vals=this.keyMap_.getValues();var keys=this.keyMap_.getKeys();var rv=[];for(var i=0;i<keys.length;i++){var val=vals[i];for(var j=0;j<val.length;j++)rv.push(keys[i])}return rv};
goog.Uri.QueryData.prototype.getValues=function(opt_key){this.ensureKeyMapInitialized_();var rv=[];if(goog.isString(opt_key)){if(this.containsKey(opt_key))rv=goog.array.concat(rv,this.keyMap_.get(this.getKeyName_(opt_key)))}else{var values=this.keyMap_.getValues();for(var i=0;i<values.length;i++)rv=goog.array.concat(rv,values[i])}return rv};
goog.Uri.QueryData.prototype.set=function(key,value){this.ensureKeyMapInitialized_();this.invalidateCache_();key=this.getKeyName_(key);if(this.containsKey(key))this.count_=goog.asserts.assertNumber(this.count_)-this.keyMap_.get(key).length;this.keyMap_.set(key,[value]);this.count_=goog.asserts.assertNumber(this.count_)+1;return this};
goog.Uri.QueryData.prototype.get=function(key,opt_default){var values=key?this.getValues(key):[];if(goog.Uri.preserveParameterTypesCompatibilityFlag)return values.length>0?values[0]:opt_default;else return values.length>0?String(values[0]):opt_default};goog.Uri.QueryData.prototype.setValues=function(key,values){this.remove(key);if(values.length>0){this.invalidateCache_();this.keyMap_.set(this.getKeyName_(key),goog.array.clone(values));this.count_=goog.asserts.assertNumber(this.count_)+values.length}};
goog.Uri.QueryData.prototype.toString=function(){if(this.encodedQuery_)return this.encodedQuery_;if(!this.keyMap_)return"";var sb=[];var keys=this.keyMap_.getKeys();for(var i=0;i<keys.length;i++){var key=keys[i];var encodedKey=goog.string.urlEncode(key);var val=this.getValues(key);for(var j=0;j<val.length;j++){var param=encodedKey;if(val[j]!=="")param+="\x3d"+goog.string.urlEncode(val[j]);sb.push(param)}}return this.encodedQuery_=sb.join("\x26")};goog.Uri.QueryData.prototype.toDecodedString=function(){return goog.Uri.decodeOrEmpty_(this.toString())};
goog.Uri.QueryData.prototype.invalidateCache_=function(){this.encodedQuery_=null};goog.Uri.QueryData.prototype.filterKeys=function(keys){this.ensureKeyMapInitialized_();this.keyMap_.forEach(function(value,key){if(!goog.array.contains(keys,key))this.remove(key)},this);return this};goog.Uri.QueryData.prototype.clone=function(){var rv=new goog.Uri.QueryData;rv.encodedQuery_=this.encodedQuery_;if(this.keyMap_){rv.keyMap_=this.keyMap_.clone();rv.count_=this.count_}return rv};
goog.Uri.QueryData.prototype.getKeyName_=function(arg){var keyName=String(arg);if(this.ignoreCase_)keyName=keyName.toLowerCase();return keyName};goog.Uri.QueryData.prototype.setIgnoreCase=function(ignoreCase){var resetKeys=ignoreCase&&!this.ignoreCase_;if(resetKeys){this.ensureKeyMapInitialized_();this.invalidateCache_();this.keyMap_.forEach(function(value,key){var lowerCase=key.toLowerCase();if(key!=lowerCase){this.remove(key);this.setValues(lowerCase,value)}},this)}this.ignoreCase_=ignoreCase};
goog.Uri.QueryData.prototype.extend=function(var_args){for(var i=0;i<arguments.length;i++){var data=arguments[i];goog.structs.forEach(data,function(value,key){this.add(key,value)},this)}};goog.provide("goog.math.Integer");goog.math.Integer=function(bits,sign){this.bits_=[];this.sign_=sign;var top=true;for(var i=bits.length-1;i>=0;i--){var val=bits[i]|0;if(!top||val!=sign){this.bits_[i]=val;top=false}}};goog.math.Integer.IntCache_={};
goog.math.Integer.fromInt=function(value){if(-128<=value&&value<128){var cachedObj=goog.math.Integer.IntCache_[value];if(cachedObj)return cachedObj}var obj=new goog.math.Integer([value|0],value<0?-1:0);if(-128<=value&&value<128)goog.math.Integer.IntCache_[value]=obj;return obj};
goog.math.Integer.fromNumber=function(value){if(isNaN(value)||!isFinite(value))return goog.math.Integer.ZERO;else if(value<0)return goog.math.Integer.fromNumber(-value).negate();else{var bits=[];var pow=1;for(var i=0;value>=pow;i++){bits[i]=value/pow|0;pow*=goog.math.Integer.TWO_PWR_32_DBL_}return new goog.math.Integer(bits,0)}};goog.math.Integer.fromBits=function(bits){var high=bits[bits.length-1];return new goog.math.Integer(bits,high&1<<31?-1:0)};
goog.math.Integer.fromString=function(str,opt_radix){if(str.length==0)throw Error("number format error: empty string");var radix=opt_radix||10;if(radix<2||36<radix)throw Error("radix out of range: "+radix);if(str.charAt(0)=="-")return goog.math.Integer.fromString(str.substring(1),radix).negate();else if(str.indexOf("-")>=0)throw Error('number format error: interior "-" character');var radixToPower=goog.math.Integer.fromNumber(Math.pow(radix,8));var result=goog.math.Integer.ZERO;for(var i=0;i<str.length;i+=
8){var size=Math.min(8,str.length-i);var value=parseInt(str.substring(i,i+size),radix);if(size<8){var power=goog.math.Integer.fromNumber(Math.pow(radix,size));result=result.multiply(power).add(goog.math.Integer.fromNumber(value))}else{result=result.multiply(radixToPower);result=result.add(goog.math.Integer.fromNumber(value))}}return result};goog.math.Integer.TWO_PWR_32_DBL_=(1<<16)*(1<<16);goog.math.Integer.ZERO=goog.math.Integer.fromInt(0);goog.math.Integer.ONE=goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_=goog.math.Integer.fromInt(1<<24);goog.math.Integer.prototype.toInt=function(){return this.bits_.length>0?this.bits_[0]:this.sign_};goog.math.Integer.prototype.toNumber=function(){if(this.isNegative())return-this.negate().toNumber();else{var val=0;var pow=1;for(var i=0;i<this.bits_.length;i++){val+=this.getBitsUnsigned(i)*pow;pow*=goog.math.Integer.TWO_PWR_32_DBL_}return val}};
goog.math.Integer.prototype.toString=function(opt_radix){var radix=opt_radix||10;if(radix<2||36<radix)throw Error("radix out of range: "+radix);if(this.isZero())return"0";else if(this.isNegative())return"-"+this.negate().toString(radix);var radixToPower=goog.math.Integer.fromNumber(Math.pow(radix,6));var rem=this;var result="";while(true){var remDiv=rem.divide(radixToPower);var intval=rem.subtract(remDiv.multiply(radixToPower)).toInt()>>>0;var digits=intval.toString(radix);rem=remDiv;if(rem.isZero())return digits+
result;else{while(digits.length<6)digits="0"+digits;result=""+digits+result}}};goog.math.Integer.prototype.getBits=function(index){if(index<0)return 0;else if(index<this.bits_.length)return this.bits_[index];else return this.sign_};goog.math.Integer.prototype.getBitsUnsigned=function(index){var val=this.getBits(index);return val>=0?val:goog.math.Integer.TWO_PWR_32_DBL_+val};goog.math.Integer.prototype.getSign=function(){return this.sign_};
goog.math.Integer.prototype.isZero=function(){if(this.sign_!=0)return false;for(var i=0;i<this.bits_.length;i++)if(this.bits_[i]!=0)return false;return true};goog.math.Integer.prototype.isNegative=function(){return this.sign_==-1};goog.math.Integer.prototype.isOdd=function(){return this.bits_.length==0&&this.sign_==-1||this.bits_.length>0&&(this.bits_[0]&1)!=0};
goog.math.Integer.prototype.equals=function(other){if(this.sign_!=other.sign_)return false;var len=Math.max(this.bits_.length,other.bits_.length);for(var i=0;i<len;i++)if(this.getBits(i)!=other.getBits(i))return false;return true};goog.math.Integer.prototype.notEquals=function(other){return!this.equals(other)};goog.math.Integer.prototype.greaterThan=function(other){return this.compare(other)>0};goog.math.Integer.prototype.greaterThanOrEqual=function(other){return this.compare(other)>=0};
goog.math.Integer.prototype.lessThan=function(other){return this.compare(other)<0};goog.math.Integer.prototype.lessThanOrEqual=function(other){return this.compare(other)<=0};goog.math.Integer.prototype.compare=function(other){var diff=this.subtract(other);if(diff.isNegative())return-1;else if(diff.isZero())return 0;else return+1};
goog.math.Integer.prototype.shorten=function(numBits){var arr_index=numBits-1>>5;var bit_index=(numBits-1)%32;var bits=[];for(var i=0;i<arr_index;i++)bits[i]=this.getBits(i);var sigBits=bit_index==31?4294967295:(1<<bit_index+1)-1;var val=this.getBits(arr_index)&sigBits;if(val&1<<bit_index){val|=4294967295-sigBits;bits[arr_index]=val;return new goog.math.Integer(bits,-1)}else{bits[arr_index]=val;return new goog.math.Integer(bits,0)}};goog.math.Integer.prototype.negate=function(){return this.not().add(goog.math.Integer.ONE)};
goog.math.Integer.prototype.add=function(other){var len=Math.max(this.bits_.length,other.bits_.length);var arr=[];var carry=0;for(var i=0;i<=len;i++){var a1=this.getBits(i)>>>16;var a0=this.getBits(i)&65535;var b1=other.getBits(i)>>>16;var b0=other.getBits(i)&65535;var c0=carry+a0+b0;var c1=(c0>>>16)+a1+b1;carry=c1>>>16;c0&=65535;c1&=65535;arr[i]=c1<<16|c0}return goog.math.Integer.fromBits(arr)};goog.math.Integer.prototype.subtract=function(other){return this.add(other.negate())};
goog.math.Integer.prototype.multiply=function(other){if(this.isZero())return goog.math.Integer.ZERO;else if(other.isZero())return goog.math.Integer.ZERO;if(this.isNegative())if(other.isNegative())return this.negate().multiply(other.negate());else return this.negate().multiply(other).negate();else if(other.isNegative())return this.multiply(other.negate()).negate();if(this.lessThan(goog.math.Integer.TWO_PWR_24_)&&other.lessThan(goog.math.Integer.TWO_PWR_24_))return goog.math.Integer.fromNumber(this.toNumber()*
other.toNumber());var len=this.bits_.length+other.bits_.length;var arr=[];for(var i=0;i<2*len;i++)arr[i]=0;for(var i=0;i<this.bits_.length;i++)for(var j=0;j<other.bits_.length;j++){var a1=this.getBits(i)>>>16;var a0=this.getBits(i)&65535;var b1=other.getBits(j)>>>16;var b0=other.getBits(j)&65535;arr[2*i+2*j]+=a0*b0;goog.math.Integer.carry16_(arr,2*i+2*j);arr[2*i+2*j+1]+=a1*b0;goog.math.Integer.carry16_(arr,2*i+2*j+1);arr[2*i+2*j+1]+=a0*b1;goog.math.Integer.carry16_(arr,2*i+2*j+1);arr[2*i+2*j+2]+=
a1*b1;goog.math.Integer.carry16_(arr,2*i+2*j+2)}for(var i=0;i<len;i++)arr[i]=arr[2*i+1]<<16|arr[2*i];for(var i=len;i<2*len;i++)arr[i]=0;return new goog.math.Integer(arr,0)};goog.math.Integer.carry16_=function(bits,index){while((bits[index]&65535)!=bits[index]){bits[index+1]+=bits[index]>>>16;bits[index]&=65535;index++}};
goog.math.Integer.prototype.slowDivide_=function(other){if(this.isNegative()||other.isNegative())throw Error("slowDivide_ only works with positive integers.");var twoPower=goog.math.Integer.ONE;var multiple=other;while(multiple.lessThanOrEqual(this)){twoPower=twoPower.shiftLeft(1);multiple=multiple.shiftLeft(1)}var res=twoPower.shiftRight(1);var total=multiple.shiftRight(1);var total2;multiple=multiple.shiftRight(2);twoPower=twoPower.shiftRight(2);while(!multiple.isZero()){total2=total.add(multiple);
if(total2.lessThanOrEqual(this)){res=res.add(twoPower);total=total2}multiple=multiple.shiftRight(1);twoPower=twoPower.shiftRight(1)}return res};
goog.math.Integer.prototype.divide=function(other){if(other.isZero())throw Error("division by zero");else if(this.isZero())return goog.math.Integer.ZERO;if(this.isNegative())if(other.isNegative())return this.negate().divide(other.negate());else return this.negate().divide(other).negate();else if(other.isNegative())return this.divide(other.negate()).negate();if(this.bits_.length>30)return this.slowDivide_(other);var res=goog.math.Integer.ZERO;var rem=this;while(rem.greaterThanOrEqual(other)){var approx=
Math.max(1,Math.floor(rem.toNumber()/other.toNumber()));var log2=Math.ceil(Math.log(approx)/Math.LN2);var delta=log2<=48?1:Math.pow(2,log2-48);var approxRes=goog.math.Integer.fromNumber(approx);var approxRem=approxRes.multiply(other);while(approxRem.isNegative()||approxRem.greaterThan(rem)){approx-=delta;approxRes=goog.math.Integer.fromNumber(approx);approxRem=approxRes.multiply(other)}if(approxRes.isZero())approxRes=goog.math.Integer.ONE;res=res.add(approxRes);rem=rem.subtract(approxRem)}return res};
goog.math.Integer.prototype.modulo=function(other){return this.subtract(this.divide(other).multiply(other))};goog.math.Integer.prototype.not=function(){var len=this.bits_.length;var arr=[];for(var i=0;i<len;i++)arr[i]=~this.bits_[i];return new goog.math.Integer(arr,~this.sign_)};goog.math.Integer.prototype.and=function(other){var len=Math.max(this.bits_.length,other.bits_.length);var arr=[];for(var i=0;i<len;i++)arr[i]=this.getBits(i)&other.getBits(i);return new goog.math.Integer(arr,this.sign_&other.sign_)};
goog.math.Integer.prototype.or=function(other){var len=Math.max(this.bits_.length,other.bits_.length);var arr=[];for(var i=0;i<len;i++)arr[i]=this.getBits(i)|other.getBits(i);return new goog.math.Integer(arr,this.sign_|other.sign_)};goog.math.Integer.prototype.xor=function(other){var len=Math.max(this.bits_.length,other.bits_.length);var arr=[];for(var i=0;i<len;i++)arr[i]=this.getBits(i)^other.getBits(i);return new goog.math.Integer(arr,this.sign_^other.sign_)};
goog.math.Integer.prototype.shiftLeft=function(numBits){var arr_delta=numBits>>5;var bit_delta=numBits%32;var len=this.bits_.length+arr_delta+(bit_delta>0?1:0);var arr=[];for(var i=0;i<len;i++)if(bit_delta>0)arr[i]=this.getBits(i-arr_delta)<<bit_delta|this.getBits(i-arr_delta-1)>>>32-bit_delta;else arr[i]=this.getBits(i-arr_delta);return new goog.math.Integer(arr,this.sign_)};
goog.math.Integer.prototype.shiftRight=function(numBits){var arr_delta=numBits>>5;var bit_delta=numBits%32;var len=this.bits_.length-arr_delta;var arr=[];for(var i=0;i<len;i++)if(bit_delta>0)arr[i]=this.getBits(i+arr_delta)>>>bit_delta|this.getBits(i+arr_delta+1)<<32-bit_delta;else arr[i]=this.getBits(i+arr_delta);return new goog.math.Integer(arr,this.sign_)};goog.provide("goog.string.StringBuffer");goog.string.StringBuffer=function(opt_a1,var_args){if(opt_a1!=null)this.append.apply(this,arguments)};goog.string.StringBuffer.prototype.buffer_="";goog.string.StringBuffer.prototype.set=function(s){this.buffer_=""+s};goog.string.StringBuffer.prototype.append=function(a1,opt_a2,var_args){this.buffer_+=String(a1);if(opt_a2!=null)for(var i=1;i<arguments.length;i++)this.buffer_+=arguments[i];return this};
goog.string.StringBuffer.prototype.clear=function(){this.buffer_=""};goog.string.StringBuffer.prototype.getLength=function(){return this.buffer_.length};goog.string.StringBuffer.prototype.toString=function(){return this.buffer_};goog.provide("goog.reflect");goog.reflect.object=function(type,object){return object};goog.reflect.objectProperty=function(prop,object){return prop};goog.reflect.sinkValue=function(x){goog.reflect.sinkValue[" "](x);return x};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(obj,prop){try{goog.reflect.sinkValue(obj[prop]);return true}catch(e){}return false};
goog.reflect.cache=function(cacheObj,key,valueFn,opt_keyFn){var storedKey=opt_keyFn?opt_keyFn(key):key;if(Object.prototype.hasOwnProperty.call(cacheObj,storedKey))return cacheObj[storedKey];return cacheObj[storedKey]=valueFn(key)};goog.provide("goog.math.Long");goog.require("goog.asserts");goog.require("goog.reflect");goog.math.Long=function(low,high){this.low_=low|0;this.high_=high|0};goog.math.Long.IntCache_={};goog.math.Long.valueCache_={};goog.math.Long.getCachedIntValue_=function(value){return goog.reflect.cache(goog.math.Long.IntCache_,value,function(val){return new goog.math.Long(val,val<0?-1:0)})};
goog.math.Long.MAX_VALUE_FOR_RADIX_=["","","111111111111111111111111111111111111111111111111111111111111111","2021110011022210012102010021220101220221","13333333333333333333333333333333","1104332401304422434310311212","1540241003031030222122211","22341010611245052052300","777777777777777777777","67404283172107811827","9223372036854775807","1728002635214590697","41a792678515120367","10b269549075433c37","4340724c6c71dc7a7","160e2ad3246366807","7fffffffffffffff","33d3d8307b214008","16agh595df825fa7",
"ba643dci0ffeehh","5cbfjia3fh26ja7","2heiciiie82dh97","1adaibb21dckfa7","i6k448cf4192c2","acd772jnc9l0l7","64ie1focnn5g77","3igoecjbmca687","27c48l5b37oaop","1bk39f3ah3dmq7","q1se8f0m04isb","hajppbc1fc207","bm03i95hia437","7vvvvvvvvvvvv","5hg4ck9jd4u37","3tdtk1v8j6tpp","2pijmikexrxp7","1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_=["","","-1000000000000000000000000000000000000000000000000000000000000000","-2021110011022210012102010021220101220222","-20000000000000000000000000000000","-1104332401304422434310311213","-1540241003031030222122212","-22341010611245052052301","-1000000000000000000000","-67404283172107811828","-9223372036854775808","-1728002635214590698","-41a792678515120368","-10b269549075433c38","-4340724c6c71dc7a8","-160e2ad3246366808","-8000000000000000","-33d3d8307b214009",
"-16agh595df825fa8","-ba643dci0ffeehi","-5cbfjia3fh26ja8","-2heiciiie82dh98","-1adaibb21dckfa8","-i6k448cf4192c3","-acd772jnc9l0l8","-64ie1focnn5g78","-3igoecjbmca688","-27c48l5b37oaoq","-1bk39f3ah3dmq8","-q1se8f0m04isc","-hajppbc1fc208","-bm03i95hia438","-8000000000000","-5hg4ck9jd4u38","-3tdtk1v8j6tpq","-2pijmikexrxp8","-1y2p0ij32e8e8"];
goog.math.Long.fromInt=function(value){var intValue=value|0;goog.asserts.assert(value===intValue,"value should be a 32-bit integer");if(-128<=intValue&&intValue<128)return goog.math.Long.getCachedIntValue_(intValue);else return new goog.math.Long(intValue,intValue<0?-1:0)};
goog.math.Long.fromNumber=function(value){if(isNaN(value))return goog.math.Long.getZero();else if(value<=-goog.math.Long.TWO_PWR_63_DBL_)return goog.math.Long.getMinValue();else if(value+1>=goog.math.Long.TWO_PWR_63_DBL_)return goog.math.Long.getMaxValue();else if(value<0)return goog.math.Long.fromNumber(-value).negate();else return new goog.math.Long(value%goog.math.Long.TWO_PWR_32_DBL_|0,value/goog.math.Long.TWO_PWR_32_DBL_|0)};
goog.math.Long.fromBits=function(lowBits,highBits){return new goog.math.Long(lowBits,highBits)};
goog.math.Long.fromString=function(str,opt_radix){if(str.length==0)throw Error("number format error: empty string");var radix=opt_radix||10;if(radix<2||36<radix)throw Error("radix out of range: "+radix);if(str.charAt(0)=="-")return goog.math.Long.fromString(str.substring(1),radix).negate();else if(str.indexOf("-")>=0)throw Error('number format error: interior "-" character: '+str);var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,8));var result=goog.math.Long.getZero();for(var i=0;i<str.length;i+=
8){var size=Math.min(8,str.length-i);var value=parseInt(str.substring(i,i+size),radix);if(size<8){var power=goog.math.Long.fromNumber(Math.pow(radix,size));result=result.multiply(power).add(goog.math.Long.fromNumber(value))}else{result=result.multiply(radixToPower);result=result.add(goog.math.Long.fromNumber(value))}}return result};
goog.math.Long.isStringInRange=function(str,opt_radix){var radix=opt_radix||10;if(radix<2||36<radix)throw Error("radix out of range: "+radix);var extremeValue=str.charAt(0)=="-"?goog.math.Long.MIN_VALUE_FOR_RADIX_[radix]:goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];if(str.length<extremeValue.length)return true;else if(str.length==extremeValue.length&&str<=extremeValue)return true;else return false};goog.math.Long.TWO_PWR_16_DBL_=1<<16;goog.math.Long.TWO_PWR_32_DBL_=goog.math.Long.TWO_PWR_16_DBL_*goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_32_DBL_;goog.math.Long.TWO_PWR_63_DBL_=goog.math.Long.TWO_PWR_64_DBL_/2;goog.math.Long.getZero=function(){return goog.math.Long.getCachedIntValue_(0)};goog.math.Long.getOne=function(){return goog.math.Long.getCachedIntValue_(1)};goog.math.Long.getNegOne=function(){return goog.math.Long.getCachedIntValue_(-1)};
goog.math.Long.getMaxValue=function(){return goog.reflect.cache(goog.math.Long.valueCache_,goog.math.Long.ValueCacheId_.MAX_VALUE,function(){return goog.math.Long.fromBits(4294967295|0,2147483647|0)})};goog.math.Long.getMinValue=function(){return goog.reflect.cache(goog.math.Long.valueCache_,goog.math.Long.ValueCacheId_.MIN_VALUE,function(){return goog.math.Long.fromBits(0,2147483648|0)})};
goog.math.Long.getTwoPwr24=function(){return goog.reflect.cache(goog.math.Long.valueCache_,goog.math.Long.ValueCacheId_.TWO_PWR_24,function(){return goog.math.Long.fromInt(1<<24)})};goog.math.Long.prototype.toInt=function(){return this.low_};goog.math.Long.prototype.toNumber=function(){return this.high_*goog.math.Long.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()};
goog.math.Long.prototype.toString=function(opt_radix){var radix=opt_radix||10;if(radix<2||36<radix)throw Error("radix out of range: "+radix);if(this.isZero())return"0";if(this.isNegative())if(this.equals(goog.math.Long.getMinValue())){var radixLong=goog.math.Long.fromNumber(radix);var div=this.div(radixLong);var rem=div.multiply(radixLong).subtract(this);return div.toString(radix)+rem.toInt().toString(radix)}else return"-"+this.negate().toString(radix);var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,
6));var rem=this;var result="";while(true){var remDiv=rem.div(radixToPower);var intval=rem.subtract(remDiv.multiply(radixToPower)).toInt()>>>0;var digits=intval.toString(radix);rem=remDiv;if(rem.isZero())return digits+result;else{while(digits.length<6)digits="0"+digits;result=""+digits+result}}};goog.math.Long.prototype.getHighBits=function(){return this.high_};goog.math.Long.prototype.getLowBits=function(){return this.low_};
goog.math.Long.prototype.getLowBitsUnsigned=function(){return this.low_>=0?this.low_:goog.math.Long.TWO_PWR_32_DBL_+this.low_};goog.math.Long.prototype.getNumBitsAbs=function(){if(this.isNegative())if(this.equals(goog.math.Long.getMinValue()))return 64;else return this.negate().getNumBitsAbs();else{var val=this.high_!=0?this.high_:this.low_;for(var bit=31;bit>0;bit--)if((val&1<<bit)!=0)break;return this.high_!=0?bit+33:bit+1}};
goog.math.Long.prototype.isZero=function(){return this.high_==0&&this.low_==0};goog.math.Long.prototype.isNegative=function(){return this.high_<0};goog.math.Long.prototype.isOdd=function(){return(this.low_&1)==1};goog.math.Long.prototype.equals=function(other){return this.high_==other.high_&&this.low_==other.low_};goog.math.Long.prototype.notEquals=function(other){return this.high_!=other.high_||this.low_!=other.low_};goog.math.Long.prototype.lessThan=function(other){return this.compare(other)<0};
goog.math.Long.prototype.lessThanOrEqual=function(other){return this.compare(other)<=0};goog.math.Long.prototype.greaterThan=function(other){return this.compare(other)>0};goog.math.Long.prototype.greaterThanOrEqual=function(other){return this.compare(other)>=0};
goog.math.Long.prototype.compare=function(other){if(this.equals(other))return 0;var thisNeg=this.isNegative();var otherNeg=other.isNegative();if(thisNeg&&!otherNeg)return-1;if(!thisNeg&&otherNeg)return 1;if(this.subtract(other).isNegative())return-1;else return 1};goog.math.Long.prototype.negate=function(){if(this.equals(goog.math.Long.getMinValue()))return goog.math.Long.getMinValue();else return this.not().add(goog.math.Long.getOne())};
goog.math.Long.prototype.add=function(other){var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00+b00;c16+=c00>>>16;c00&=65535;c16+=a16+b16;c32+=c16>>>16;c16&=65535;c32+=a32+b32;c48+=c32>>>16;c32&=65535;c48+=a48+b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)};goog.math.Long.prototype.subtract=function(other){return this.add(other.negate())};
goog.math.Long.prototype.multiply=function(other){if(this.isZero())return goog.math.Long.getZero();else if(other.isZero())return goog.math.Long.getZero();if(this.equals(goog.math.Long.getMinValue()))return other.isOdd()?goog.math.Long.getMinValue():goog.math.Long.getZero();else if(other.equals(goog.math.Long.getMinValue()))return this.isOdd()?goog.math.Long.getMinValue():goog.math.Long.getZero();if(this.isNegative())if(other.isNegative())return this.negate().multiply(other.negate());else return this.negate().multiply(other).negate();
else if(other.isNegative())return this.multiply(other.negate()).negate();if(this.lessThan(goog.math.Long.getTwoPwr24())&&other.lessThan(goog.math.Long.getTwoPwr24()))return goog.math.Long.fromNumber(this.toNumber()*other.toNumber());var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00*b00;c16+=c00>>>16;c00&=65535;c16+=a16*
b00;c32+=c16>>>16;c16&=65535;c16+=a00*b16;c32+=c16>>>16;c16&=65535;c32+=a32*b00;c48+=c32>>>16;c32&=65535;c32+=a16*b16;c48+=c32>>>16;c32&=65535;c32+=a00*b32;c48+=c32>>>16;c32&=65535;c48+=a48*b00+a32*b16+a16*b32+a00*b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)};
goog.math.Long.prototype.div=function(other){if(other.isZero())throw Error("division by zero");else if(this.isZero())return goog.math.Long.getZero();if(this.equals(goog.math.Long.getMinValue()))if(other.equals(goog.math.Long.getOne())||other.equals(goog.math.Long.getNegOne()))return goog.math.Long.getMinValue();else if(other.equals(goog.math.Long.getMinValue()))return goog.math.Long.getOne();else{var halfThis=this.shiftRight(1);var approx=halfThis.div(other).shiftLeft(1);if(approx.equals(goog.math.Long.getZero()))return other.isNegative()?
goog.math.Long.getOne():goog.math.Long.getNegOne();else{var rem=this.subtract(other.multiply(approx));var result=approx.add(rem.div(other));return result}}else if(other.equals(goog.math.Long.getMinValue()))return goog.math.Long.getZero();if(this.isNegative())if(other.isNegative())return this.negate().div(other.negate());else return this.negate().div(other).negate();else if(other.isNegative())return this.div(other.negate()).negate();var res=goog.math.Long.getZero();var rem=this;while(rem.greaterThanOrEqual(other)){var approx=
Math.max(1,Math.floor(rem.toNumber()/other.toNumber()));var log2=Math.ceil(Math.log(approx)/Math.LN2);var delta=log2<=48?1:Math.pow(2,log2-48);var approxRes=goog.math.Long.fromNumber(approx);var approxRem=approxRes.multiply(other);while(approxRem.isNegative()||approxRem.greaterThan(rem)){approx-=delta;approxRes=goog.math.Long.fromNumber(approx);approxRem=approxRes.multiply(other)}if(approxRes.isZero())approxRes=goog.math.Long.getOne();res=res.add(approxRes);rem=rem.subtract(approxRem)}return res};
goog.math.Long.prototype.modulo=function(other){return this.subtract(this.div(other).multiply(other))};goog.math.Long.prototype.not=function(){return goog.math.Long.fromBits(~this.low_,~this.high_)};goog.math.Long.prototype.and=function(other){return goog.math.Long.fromBits(this.low_&other.low_,this.high_&other.high_)};goog.math.Long.prototype.or=function(other){return goog.math.Long.fromBits(this.low_|other.low_,this.high_|other.high_)};
goog.math.Long.prototype.xor=function(other){return goog.math.Long.fromBits(this.low_^other.low_,this.high_^other.high_)};goog.math.Long.prototype.shiftLeft=function(numBits){numBits&=63;if(numBits==0)return this;else{var low=this.low_;if(numBits<32){var high=this.high_;return goog.math.Long.fromBits(low<<numBits,high<<numBits|low>>>32-numBits)}else return goog.math.Long.fromBits(0,low<<numBits-32)}};
goog.math.Long.prototype.shiftRight=function(numBits){numBits&=63;if(numBits==0)return this;else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>numBits)}else return goog.math.Long.fromBits(high>>numBits-32,high>=0?0:-1)}};
goog.math.Long.prototype.shiftRightUnsigned=function(numBits){numBits&=63;if(numBits==0)return this;else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>>numBits)}else if(numBits==32)return goog.math.Long.fromBits(high,0);else return goog.math.Long.fromBits(high>>>numBits-32,0)}};goog.math.Long.ValueCacheId_={MAX_VALUE:1,MIN_VALUE:2,TWO_PWR_24:6};goog.provide("cljs.core");goog.require("goog.math.Long");goog.require("goog.math.Integer");goog.require("goog.string");goog.require("goog.object");goog.require("goog.array");goog.require("goog.Uri");goog.require("goog.string.StringBuffer");cljs.core._STAR_clojurescript_version_STAR_="1.10.520";cljs.core._STAR_unchecked_if_STAR_=false;cljs.core._STAR_unchecked_arrays_STAR_=false;cljs.core._STAR_warn_on_infer_STAR_=false;
if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core.PROTOCOL_SENTINEL!=="undefined");else cljs.core.PROTOCOL_SENTINEL={};cljs.core.MODULE_URIS=null;cljs.core.MODULE_INFOS=null;goog.define("cljs.core._STAR_target_STAR_","default");cljs.core._STAR_ns_STAR_=null;cljs.core._STAR_out_STAR_=null;cljs.core._STAR_assert_STAR_=true;
if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core._STAR_print_fn_STAR_!=="undefined");else cljs.core._STAR_print_fn_STAR_=null;cljs.core._STAR_exec_tap_fn_STAR_=function cljs$core$_STAR_exec_tap_fn_STAR_(f){var and__7893__auto__=typeof setTimeout!=="undefined";if(and__7893__auto__){var and__7893__auto____$1=setTimeout(f,0);if(cljs.core.truth_(and__7893__auto____$1))return true;else return and__7893__auto____$1}else return and__7893__auto__};
if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core._STAR_print_err_fn_STAR_!=="undefined");else cljs.core._STAR_print_err_fn_STAR_=null;cljs.core.set_print_fn_BANG_=function cljs$core$set_print_fn_BANG_(f){return cljs.core._STAR_print_fn_STAR_=f};cljs.core.set_print_err_fn_BANG_=function cljs$core$set_print_err_fn_BANG_(f){return cljs.core._STAR_print_err_fn_STAR_=f};cljs.core._STAR_flush_on_newline_STAR_=true;cljs.core._STAR_print_newline_STAR_=true;
cljs.core._STAR_print_readably_STAR_=true;cljs.core._STAR_print_meta_STAR_=false;cljs.core._STAR_print_dup_STAR_=false;cljs.core._STAR_print_namespace_maps_STAR_=false;cljs.core._STAR_print_length_STAR_=null;cljs.core._STAR_print_level_STAR_=null;cljs.core._STAR_print_fn_bodies_STAR_=false;if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core._STAR_loaded_libs_STAR_!=="undefined");else cljs.core._STAR_loaded_libs_STAR_=null;
cljs.core.pr_opts=function cljs$core$pr_opts(){return new cljs.core.PersistentArrayMap(null,5,[new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,
"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_],null)};cljs.core.enable_console_print_BANG_=function cljs$core$enable_console_print_BANG_(){cljs.core._STAR_print_newline_STAR_=false;cljs.core.set_print_fn_BANG_(function(){var xs=arguments;return console.log.apply(console,goog.array.clone(xs))});cljs.core.set_print_err_fn_BANG_(function(){var xs=arguments;return console.error.apply(console,goog.array.clone(xs))});return null};
cljs.core.truth_=function cljs$core$truth_(x){return x!=null&&x!==false};cljs.core.not_native=null;cljs.core.identical_QMARK_=function cljs$core$identical_QMARK_(x,y){return x===y};cljs.core.nil_QMARK_=function cljs$core$nil_QMARK_(x){return x==null};cljs.core.array_QMARK_=function cljs$core$array_QMARK_(x){if(cljs.core._STAR_target_STAR_==="nodejs")return Array.isArray(x);else return x instanceof Array};cljs.core.number_QMARK_=function cljs$core$number_QMARK_(x){return typeof x==="number"};
cljs.core.not=function cljs$core$not(x){if(x==null)return true;else if(x===false)return true;else return false};cljs.core.some_QMARK_=function cljs$core$some_QMARK_(x){return!(x==null)};cljs.core.object_QMARK_=function cljs$core$object_QMARK_(x){if(!(x==null))return x.constructor===Object;else return false};cljs.core.string_QMARK_=function cljs$core$string_QMARK_(x){return goog.isString(x)};cljs.core.char_QMARK_=function cljs$core$char_QMARK_(x){return typeof x==="string"&&1===x.length};
cljs.core.any_QMARK_=function cljs$core$any_QMARK_(x){return true};cljs.core.native_satisfies_QMARK_=function cljs$core$native_satisfies_QMARK_(p,x){var x__$1=x==null?null:x;if(p[goog.typeOf(x__$1)])return true;else if(p["_"])return true;else return false};cljs.core.is_proto_=function cljs$core$is_proto_(x){return x.constructor.prototype===x};cljs.core._STAR_main_cli_fn_STAR_=null;cljs.core._STAR_command_line_args_STAR_=null;cljs.core.type=function cljs$core$type(x){if(x==null)return null;else return x.constructor};
cljs.core.missing_protocol=function cljs$core$missing_protocol(proto,obj){var ty=cljs.core.type(obj);var ty__$1=cljs.core.truth_(function(){var and__7893__auto__=ty;if(cljs.core.truth_(and__7893__auto__))return ty.cljs$lang$type;else return and__7893__auto__}())?ty.cljs$lang$ctorStr:goog.typeOf(obj);return new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join(""))};
cljs.core.type__GT_str=function cljs$core$type__GT_str(ty){var temp__4655__auto__=ty.cljs$lang$ctorStr;if(cljs.core.truth_(temp__4655__auto__)){var s=temp__4655__auto__;return s}else return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty)};cljs.core.load_file=function cljs$core$load_file(file){if(cljs.core.truth_(COMPILED))return null;else return goog.nodeGlobalRequire(file)};
if(typeof Symbol!=="undefined"&&goog.typeOf(Symbol)==="function")cljs.core.ITER_SYMBOL=Symbol.iterator;else cljs.core.ITER_SYMBOL="@@iterator";
cljs.core.CHAR_MAP={"]":"_RBRACK_","'":"_SINGLEQUOTE_","\x3d":"_EQ_",'"':"_DOUBLEQUOTE_","!":"_BANG_","*":"_STAR_","%":"_PERCENT_","|":"_BAR_","~":"_TILDE_","/":"_SLASH_","\\":"_BSLASH_","-":"_","?":"_QMARK_","\x26":"_AMPERSAND_",":":"_COLON_","\x3c":"_LT_","{":"_LBRACE_","}":"_RBRACE_","[":"_LBRACK_","#":"_SHARP_","^":"_CARET_","+":"_PLUS_","@":"_CIRCA_","\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP={"_RBRACE_":"}","_COLON_":":","_BANG_":"!","_QMARK_":"?","_BSLASH_":"\\\\","_SLASH_":"/","_PERCENT_":"%","_PLUS_":"+","_SHARP_":"#","_LBRACE_":"{","_BAR_":"|","_LBRACK_":"[","_EQ_":"\x3d","_":"-","_TILDE_":"~","_RBRACK_":"]","_GT_":"\x3e","_SINGLEQUOTE_":"'","_CIRCA_":"@","_AMPERSAND_":"\x26","_DOUBLEQUOTE_":'\\"',"_CARET_":"^","_LT_":"\x3c","_STAR_":"*"};cljs.core.DEMUNGE_PATTERN=null;
cljs.core.system_time=function cljs$core$system_time(){if(typeof performance!=="undefined"&&!(performance.now==null))return performance.now();else if(typeof process!=="undefined"&&!(process.hrtime==null)){var t=process.hrtime();return(t[0]*1E9+t[1])/1E6}else return(new Date).getTime()};
cljs.core.make_array=function cljs$core$make_array(var_args){var G__10208=arguments.length;switch(G__10208){case 1:return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10210=arguments.length;var i__9108__auto___10211=0;while(true){if(i__9108__auto___10211<len__9107__auto___10210){args_arr__9132__auto__.push(arguments[i__9108__auto___10211]);
var G__10212=i__9108__auto___10211+1;i__9108__auto___10211=G__10212;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.make_array.cljs$core$IFn$_invoke$arity$1=function(size){return new Array(size)};cljs.core.make_array.cljs$core$IFn$_invoke$arity$2=function(type,size){return new Array(size)};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic=function(type,size,more_sizes){var dims=more_sizes;var dimarray=new Array(size);var n__8876__auto___10213=dimarray.length;var i_10214=0;while(true){if(i_10214<n__8876__auto___10213){dimarray[i_10214]=cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array,null,dims);var G__10215=i_10214+1;i_10214=G__10215;continue}else;break}return dimarray};
cljs.core.make_array.cljs$lang$applyTo=function(seq10205){var G__10206=cljs.core.first(seq10205);var seq10205__$1=cljs.core.next(seq10205);var G__10207=cljs.core.first(seq10205__$1);var seq10205__$2=cljs.core.next(seq10205__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10206,G__10207,seq10205__$2)};cljs.core.make_array.cljs$lang$maxFixedArity=2;
cljs.core.aclone=function cljs$core$aclone(arr){var len=arr.length;var new_arr=new Array(len);var n__8876__auto___10216=len;var i_10217=0;while(true){if(i_10217<n__8876__auto___10216){new_arr[i_10217]=arr[i_10217];var G__10218=i_10217+1;i_10217=G__10218;continue}else;break}return new_arr};cljs.core.array=function cljs$core$array(var_args){var a=new Array(arguments.length);var i=0;while(true){if(i<a.length){a[i]=arguments[i];var G__10219=i+1;i=G__10219;continue}else return a;break}};
cljs.core.maybe_warn=function cljs$core$maybe_warn(e){if(cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_))return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1?cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e):cljs.core._STAR_print_err_fn_STAR_.call(null,e);else return null};
cljs.core.checked_aget=function cljs$core$checked_aget(var_args){var G__10224=arguments.length;switch(G__10224){case 2:return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10227=arguments.length;var i__9108__auto___10228=0;while(true){if(i__9108__auto___10228<len__9107__auto___10227){args_arr__9132__auto__.push(arguments[i__9108__auto___10228]);var G__10229=i__9108__auto___10228+1;i__9108__auto___10228=
G__10229;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2=function(array,idx){try{if(cljs.core.truth_(function(){var or__7908__auto__=cljs.core.array_QMARK_(array);if(or__7908__auto__)return or__7908__auto__;else return goog.isArrayLike(array)}()));else throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");if(typeof idx==="number");else throw new Error("Assert failed: (number? idx)");if(!(idx<0));else throw new Error("Assert failed: (not (neg? idx))");if(idx<array.length);else throw new Error("Assert failed: (\x3c idx (alength array))");
}catch(e10225){var e_10230=e10225;cljs.core.maybe_warn(e_10230)}return array[idx]};cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic=function(array,idx,idxs){return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget,cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array,idx),idxs)};
cljs.core.checked_aget.cljs$lang$applyTo=function(seq10221){var G__10222=cljs.core.first(seq10221);var seq10221__$1=cljs.core.next(seq10221);var G__10223=cljs.core.first(seq10221__$1);var seq10221__$2=cljs.core.next(seq10221__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10222,G__10223,seq10221__$2)};cljs.core.checked_aget.cljs$lang$maxFixedArity=2;
cljs.core.checked_aset=function cljs$core$checked_aset(var_args){var G__10236=arguments.length;switch(G__10236){case 3:return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10239=arguments.length;var i__9108__auto___10240=0;while(true){if(i__9108__auto___10240<len__9107__auto___10239){args_arr__9132__auto__.push(arguments[i__9108__auto___10240]);var G__10241=i__9108__auto___10240+1;i__9108__auto___10240=
G__10241;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3=function(array,idx,val){try{if(cljs.core.truth_(function(){var or__7908__auto__=cljs.core.array_QMARK_(array);if(or__7908__auto__)return or__7908__auto__;else return goog.isArrayLike(array)}()));else throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");if(typeof idx==="number");else throw new Error("Assert failed: (number? idx)");if(!(idx<0));else throw new Error("Assert failed: (not (neg? idx))");if(idx<array.length);
else throw new Error("Assert failed: (\x3c idx (alength array))");}catch(e10237){var e_10242=e10237;cljs.core.maybe_warn(e_10242)}return array[idx]=val};cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic=function(array,idx,idx2,idxv){return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset,cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array,idx),idx2,idxv)};
cljs.core.checked_aset.cljs$lang$applyTo=function(seq10232){var G__10233=cljs.core.first(seq10232);var seq10232__$1=cljs.core.next(seq10232);var G__10234=cljs.core.first(seq10232__$1);var seq10232__$2=cljs.core.next(seq10232__$1);var G__10235=cljs.core.first(seq10232__$2);var seq10232__$3=cljs.core.next(seq10232__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10233,G__10234,G__10235,seq10232__$3)};cljs.core.checked_aset.cljs$lang$maxFixedArity=3;
cljs.core.checked_aget_SINGLEQUOTE_=function cljs$core$checked_aget_SINGLEQUOTE_(var_args){var G__10247=arguments.length;switch(G__10247){case 2:return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10249=arguments.length;var i__9108__auto___10250=0;while(true){if(i__9108__auto___10250<len__9107__auto___10249){args_arr__9132__auto__.push(arguments[i__9108__auto___10250]);var G__10251=i__9108__auto___10250+
1;i__9108__auto___10250=G__10251;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2=function(array,idx){if(cljs.core.truth_(function(){var or__7908__auto__=cljs.core.array_QMARK_(array);if(or__7908__auto__)return or__7908__auto__;else return goog.isArrayLike(array)}()));else throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");if(typeof idx==="number");else throw new Error("Assert failed: (number? idx)");if(!(idx<0));else throw new Error("Assert failed: (not (neg? idx))");if(idx<array.length);
else throw new Error("Assert failed: (\x3c idx (alength array))");return array[idx]};cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic=function(array,idx,idxs){return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_,cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array,idx),idxs)};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo=function(seq10244){var G__10245=cljs.core.first(seq10244);var seq10244__$1=cljs.core.next(seq10244);var G__10246=cljs.core.first(seq10244__$1);var seq10244__$2=cljs.core.next(seq10244__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10245,G__10246,seq10244__$2)};cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity=2;
cljs.core.checked_aset_SINGLEQUOTE_=function cljs$core$checked_aset_SINGLEQUOTE_(var_args){var G__10257=arguments.length;switch(G__10257){case 3:return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10259=arguments.length;var i__9108__auto___10260=0;while(true){if(i__9108__auto___10260<len__9107__auto___10259){args_arr__9132__auto__.push(arguments[i__9108__auto___10260]);var G__10261=
i__9108__auto___10260+1;i__9108__auto___10260=G__10261;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3=function(array,idx,val){if(cljs.core.truth_(function(){var or__7908__auto__=cljs.core.array_QMARK_(array);if(or__7908__auto__)return or__7908__auto__;else return goog.isArrayLike(array)}()));else throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");if(typeof idx==="number");else throw new Error("Assert failed: (number? idx)");if(!(idx<0));else throw new Error("Assert failed: (not (neg? idx))");if(idx<array.length);
else throw new Error("Assert failed: (\x3c idx (alength array))");return array[idx]=val};cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic=function(array,idx,idx2,idxv){return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_,cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array,idx),idx2,idxv)};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo=function(seq10253){var G__10254=cljs.core.first(seq10253);var seq10253__$1=cljs.core.next(seq10253);var G__10255=cljs.core.first(seq10253__$1);var seq10253__$2=cljs.core.next(seq10253__$1);var G__10256=cljs.core.first(seq10253__$2);var seq10253__$3=cljs.core.next(seq10253__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10254,G__10255,G__10256,seq10253__$3)};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity=3;
cljs.core.aget=function cljs$core$aget(var_args){var G__10266=arguments.length;switch(G__10266){case 2:return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10268=arguments.length;var i__9108__auto___10269=0;while(true){if(i__9108__auto___10269<len__9107__auto___10268){args_arr__9132__auto__.push(arguments[i__9108__auto___10269]);var G__10270=i__9108__auto___10269+1;i__9108__auto___10269=G__10270;continue}else;
break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.aget.cljs$core$IFn$_invoke$arity$2=function(array,idx){return array[idx]};cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic=function(array,idx,idxs){return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget,array[idx],idxs)};
cljs.core.aget.cljs$lang$applyTo=function(seq10263){var G__10264=cljs.core.first(seq10263);var seq10263__$1=cljs.core.next(seq10263);var G__10265=cljs.core.first(seq10263__$1);var seq10263__$2=cljs.core.next(seq10263__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10264,G__10265,seq10263__$2)};cljs.core.aget.cljs$lang$maxFixedArity=2;
cljs.core.aset=function cljs$core$aset(var_args){var G__10276=arguments.length;switch(G__10276){case 3:return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10278=arguments.length;var i__9108__auto___10279=0;while(true){if(i__9108__auto___10279<len__9107__auto___10278){args_arr__9132__auto__.push(arguments[i__9108__auto___10279]);var G__10280=i__9108__auto___10279+1;i__9108__auto___10279=G__10280;
continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};cljs.core.aset.cljs$core$IFn$_invoke$arity$3=function(array,idx,val){return array[idx]=val};cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic=function(array,idx,idx2,idxv){return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset,array[idx],idx2,idxv)};
cljs.core.aset.cljs$lang$applyTo=function(seq10272){var G__10273=cljs.core.first(seq10272);var seq10272__$1=cljs.core.next(seq10272);var G__10274=cljs.core.first(seq10272__$1);var seq10272__$2=cljs.core.next(seq10272__$1);var G__10275=cljs.core.first(seq10272__$2);var seq10272__$3=cljs.core.next(seq10272__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10273,G__10274,G__10275,seq10272__$3)};cljs.core.aset.cljs$lang$maxFixedArity=3;
cljs.core.alength=function cljs$core$alength(array){return array.length};cljs.core.into_array=function cljs$core$into_array(var_args){var G__10282=arguments.length;switch(G__10282){case 1:return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1=function(aseq){return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null,aseq)};cljs.core.into_array.cljs$core$IFn$_invoke$arity$2=function(type,aseq){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a,x){a.push(x);return a},[],aseq)};cljs.core.into_array.cljs$lang$maxFixedArity=2;
cljs.core.js_invoke=function cljs$core$js_invoke(var_args){var args__9117__auto__=[];var len__9107__auto___10287=arguments.length;var i__9108__auto___10288=0;while(true){if(i__9108__auto___10288<len__9107__auto___10287){args__9117__auto__.push(arguments[i__9108__auto___10288]);var G__10289=i__9108__auto___10288+1;i__9108__auto___10288=G__10289;continue}else;break}var argseq__9118__auto__=2<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(2),0,null):null;return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
arguments[1],argseq__9118__auto__)};cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic=function(obj,s,args){return obj[s].apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args))};cljs.core.js_invoke.cljs$lang$maxFixedArity=2;
cljs.core.js_invoke.cljs$lang$applyTo=function(seq10284){var G__10285=cljs.core.first(seq10284);var seq10284__$1=cljs.core.next(seq10284);var G__10286=cljs.core.first(seq10284__$1);var seq10284__$2=cljs.core.next(seq10284__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10285,G__10286,seq10284__$2)};cljs.core.Fn=function(){};cljs.core.IFn=function(){};
cljs.core._invoke=function cljs$core$_invoke(var_args){var G__10291=arguments.length;switch(G__10291){case 1:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);
break;case 5:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;case 6:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;case 7:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);break;case 8:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7]);break;case 9:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8]);break;case 10:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9]);break;case 11:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10]);break;case 12:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11]);break;case 13:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],
arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12]);break;case 14:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13]);break;case 15:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],
arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14]);break;case 16:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15]);break;case 17:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0],arguments[1],arguments[2],
arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16]);break;case 18:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17]);
break;case 19:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18]);break;case 20:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],
arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19]);break;case 21:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19],
arguments[20]);break;case 22:return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19],arguments[20],arguments[21]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1=function(this$){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$1==null))return this$.cljs$core$IFn$_invoke$arity$1(this$);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(this$):m__8607__auto__.call(null,this$);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(this$):m__8604__auto__.call(null,this$);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2=function(this$,a){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$2==null))return this$.cljs$core$IFn$_invoke$arity$2(this$,a);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(this$,a):m__8607__auto__.call(null,this$,a);else{var m__8604__auto__=cljs.core._invoke["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(this$,a):m__8604__auto__.call(null,this$,a);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3=function(this$,a,b){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$3==null))return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(this$,a,b):m__8607__auto__.call(null,this$,a,b);else{var m__8604__auto__=
cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(this$,a,b):m__8604__auto__.call(null,this$,a,b);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4=function(this$,a,b,c){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$4==null))return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$4?m__8607__auto__.cljs$core$IFn$_invoke$arity$4(this$,a,b,c):m__8607__auto__.call(null,this$,a,b,c);else{var m__8604__auto__=
cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$4?m__8604__auto__.cljs$core$IFn$_invoke$arity$4(this$,a,b,c):m__8604__auto__.call(null,this$,a,b,c);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5=function(this$,a,b,c,d){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$5==null))return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$5?m__8607__auto__.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d):m__8607__auto__.call(null,this$,a,b,c,d);else{var m__8604__auto__=
cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$5?m__8604__auto__.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d):m__8604__auto__.call(null,this$,a,b,c,d);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6=function(this$,a,b,c,d,e){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$6==null))return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$6?m__8607__auto__.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e):m__8607__auto__.call(null,this$,a,b,c,d,e);
else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$6?m__8604__auto__.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e):m__8604__auto__.call(null,this$,a,b,c,d,e);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7=function(this$,a,b,c,d,e,f){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$7==null))return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$7?m__8607__auto__.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f):m__8607__auto__.call(null,this$,a,b,c,
d,e,f);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$7?m__8604__auto__.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f):m__8604__auto__.call(null,this$,a,b,c,d,e,f);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8=function(this$,a,b,c,d,e,f,g){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$8==null))return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$8?m__8607__auto__.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g):m__8607__auto__.call(null,this$,
a,b,c,d,e,f,g);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$8?m__8604__auto__.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9=function(this$,a,b,c,d,e,f,g,h){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$9==null))return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$9?m__8607__auto__.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h):m__8607__auto__.call(null,
this$,a,b,c,d,e,f,g,h);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$9?m__8604__auto__.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10=function(this$,a,b,c,d,e,f,g,h,i){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$10==null))return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$10?m__8607__auto__.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i):m__8607__auto__.call(null,
this$,a,b,c,d,e,f,g,h,i);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$10?m__8604__auto__.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11=function(this$,a,b,c,d,e,f,g,h,i,j){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$11==null))return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$11?m__8607__auto__.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j):m__8607__auto__.call(null,
this$,a,b,c,d,e,f,g,h,i,j);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$11?m__8604__auto__.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12=function(this$,a,b,c,d,e,f,g,h,i,j,k){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$12==null))return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$12?m__8607__auto__.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k):m__8607__auto__.call(null,
this$,a,b,c,d,e,f,g,h,i,j,k);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$12?m__8604__auto__.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13=function(this$,a,b,c,d,e,f,g,h,i,j,k,l){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$13==null))return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$13?m__8607__auto__.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,
l):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$13?m__8604__auto__.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$14==null))return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$14?m__8607__auto__.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,
j,k,l,m):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$14?m__8604__auto__.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$15==null))return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$15?m__8607__auto__.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,
h,i,j,k,l,m,n):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$15?m__8604__auto__.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$16==null))return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$16?m__8607__auto__.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,
f,g,h,i,j,k,l,m,n,o):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$16?m__8604__auto__.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$17==null))return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$17?m__8607__auto__.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,
d,e,f,g,h,i,j,k,l,m,n,o,p):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$17?m__8604__auto__.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$18==null))return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$18?m__8607__auto__.cljs$core$IFn$_invoke$arity$18(this$,a,
b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$18?m__8604__auto__.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$19==null))return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$19?m__8607__auto__.cljs$core$IFn$_invoke$arity$19(this$,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$19?m__8604__auto__.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$20==null))return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$20?m__8607__auto__.cljs$core$IFn$_invoke$arity$20(this$,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$20?m__8604__auto__.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$21==null))return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$21?m__8607__auto__.cljs$core$IFn$_invoke$arity$21(this$,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$21?m__8604__auto__.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22=function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){if(!(this$==null)&&!(this$.cljs$core$IFn$_invoke$arity$22==null))return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._invoke[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$22?m__8607__auto__.cljs$core$IFn$_invoke$arity$22(this$,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest):m__8607__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);else{var m__8604__auto__=cljs.core._invoke["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$22?m__8604__auto__.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest):m__8604__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);else throw cljs.core.missing_protocol("IFn.-invoke",this$);}}};
cljs.core._invoke.cljs$lang$maxFixedArity=22;cljs.core.ICloneable=function(){};
cljs.core._clone=function cljs$core$_clone(value){if(!(value==null)&&!(value.cljs$core$ICloneable$_clone$arity$1==null))return value.cljs$core$ICloneable$_clone$arity$1(value);else{var x__8606__auto__=value==null?null:value;var m__8607__auto__=cljs.core._clone[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(value):m__8607__auto__.call(null,value);else{var m__8604__auto__=cljs.core._clone["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(value):m__8604__auto__.call(null,value);else throw cljs.core.missing_protocol("ICloneable.-clone",value);}}};cljs.core.ICounted=function(){};
cljs.core._count=function cljs$core$_count(coll){if(!(coll==null)&&!(coll.cljs$core$ICounted$_count$arity$1==null))return coll.cljs$core$ICounted$_count$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._count[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._count["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("ICounted.-count",coll);}}};cljs.core.IEmptyableCollection=function(){};
cljs.core._empty=function cljs$core$_empty(coll){if(!(coll==null)&&!(coll.cljs$core$IEmptyableCollection$_empty$arity$1==null))return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._empty[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._empty["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);}}};cljs.core.ICollection=function(){};
cljs.core._conj=function cljs$core$_conj(coll,o){if(!(coll==null)&&!(coll.cljs$core$ICollection$_conj$arity$2==null))return coll.cljs$core$ICollection$_conj$arity$2(coll,o);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._conj[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,o):m__8607__auto__.call(null,coll,o);else{var m__8604__auto__=cljs.core._conj["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,o):m__8604__auto__.call(null,coll,o);else throw cljs.core.missing_protocol("ICollection.-conj",coll);}}};cljs.core.IIndexed=function(){};
cljs.core._nth=function cljs$core$_nth(var_args){var G__10294=arguments.length;switch(G__10294){case 2:return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2=function(coll,n){if(!(coll==null)&&!(coll.cljs$core$IIndexed$_nth$arity$2==null))return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._nth[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,n):m__8607__auto__.call(null,coll,n);else{var m__8604__auto__=cljs.core._nth["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,n):m__8604__auto__.call(null,coll,n);else throw cljs.core.missing_protocol("IIndexed.-nth",coll);}}};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3=function(coll,n,not_found){if(!(coll==null)&&!(coll.cljs$core$IIndexed$_nth$arity$3==null))return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._nth[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,not_found):m__8607__auto__.call(null,coll,n,not_found);else{var m__8604__auto__=
cljs.core._nth["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,not_found):m__8604__auto__.call(null,coll,n,not_found);else throw cljs.core.missing_protocol("IIndexed.-nth",coll);}}};cljs.core._nth.cljs$lang$maxFixedArity=3;cljs.core.ASeq=function(){};cljs.core.ISeq=function(){};
cljs.core._first=function cljs$core$_first(coll){if(!(coll==null)&&!(coll.cljs$core$ISeq$_first$arity$1==null))return coll.cljs$core$ISeq$_first$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._first[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._first["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("ISeq.-first",coll);}}};
cljs.core._rest=function cljs$core$_rest(coll){if(!(coll==null)&&!(coll.cljs$core$ISeq$_rest$arity$1==null))return coll.cljs$core$ISeq$_rest$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._rest[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._rest["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("ISeq.-rest",coll);}}};cljs.core.INext=function(){};
cljs.core._next=function cljs$core$_next(coll){if(!(coll==null)&&!(coll.cljs$core$INext$_next$arity$1==null))return coll.cljs$core$INext$_next$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._next[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._next["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("INext.-next",coll);}}};cljs.core.ILookup=function(){};
cljs.core._lookup=function cljs$core$_lookup(var_args){var G__10297=arguments.length;switch(G__10297){case 2:return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2=function(o,k){if(!(o==null)&&!(o.cljs$core$ILookup$_lookup$arity$2==null))return o.cljs$core$ILookup$_lookup$arity$2(o,k);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._lookup[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(o,k):m__8607__auto__.call(null,o,k);else{var m__8604__auto__=cljs.core._lookup["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(o,k):m__8604__auto__.call(null,o,k);else throw cljs.core.missing_protocol("ILookup.-lookup",o);}}};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3=function(o,k,not_found){if(!(o==null)&&!(o.cljs$core$ILookup$_lookup$arity$3==null))return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._lookup[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(o,k,not_found):m__8607__auto__.call(null,o,k,not_found);else{var m__8604__auto__=
cljs.core._lookup["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(o,k,not_found):m__8604__auto__.call(null,o,k,not_found);else throw cljs.core.missing_protocol("ILookup.-lookup",o);}}};cljs.core._lookup.cljs$lang$maxFixedArity=3;cljs.core.IAssociative=function(){};
cljs.core._contains_key_QMARK_=function cljs$core$_contains_key_QMARK_(coll,k){if(!(coll==null)&&!(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2==null))return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._contains_key_QMARK_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,k):m__8607__auto__.call(null,
coll,k);else{var m__8604__auto__=cljs.core._contains_key_QMARK_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,k):m__8604__auto__.call(null,coll,k);else throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);}}};
cljs.core._assoc=function cljs$core$_assoc(coll,k,v){if(!(coll==null)&&!(coll.cljs$core$IAssociative$_assoc$arity$3==null))return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._assoc[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,v):m__8607__auto__.call(null,coll,k,v);else{var m__8604__auto__=cljs.core._assoc["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,v):m__8604__auto__.call(null,coll,k,v);else throw cljs.core.missing_protocol("IAssociative.-assoc",coll);}}};cljs.core.IFind=function(){};
cljs.core._find=function cljs$core$_find(coll,k){if(!(coll==null)&&!(coll.cljs$core$IFind$_find$arity$2==null))return coll.cljs$core$IFind$_find$arity$2(coll,k);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._find[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,k):m__8607__auto__.call(null,coll,k);else{var m__8604__auto__=cljs.core._find["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,k):m__8604__auto__.call(null,coll,k);else throw cljs.core.missing_protocol("IFind.-find",coll);}}};cljs.core.IMap=function(){};
cljs.core._dissoc=function cljs$core$_dissoc(coll,k){if(!(coll==null)&&!(coll.cljs$core$IMap$_dissoc$arity$2==null))return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._dissoc[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,k):m__8607__auto__.call(null,coll,k);else{var m__8604__auto__=cljs.core._dissoc["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,k):m__8604__auto__.call(null,coll,k);else throw cljs.core.missing_protocol("IMap.-dissoc",coll);}}};cljs.core.IMapEntry=function(){};
cljs.core._key=function cljs$core$_key(coll){if(!(coll==null)&&!(coll.cljs$core$IMapEntry$_key$arity$1==null))return coll.cljs$core$IMapEntry$_key$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._key[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._key["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IMapEntry.-key",coll);}}};
cljs.core._val=function cljs$core$_val(coll){if(!(coll==null)&&!(coll.cljs$core$IMapEntry$_val$arity$1==null))return coll.cljs$core$IMapEntry$_val$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._val[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._val["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IMapEntry.-val",coll);}}};cljs.core.ISet=function(){};
cljs.core._disjoin=function cljs$core$_disjoin(coll,v){if(!(coll==null)&&!(coll.cljs$core$ISet$_disjoin$arity$2==null))return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._disjoin[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,v):m__8607__auto__.call(null,coll,v);else{var m__8604__auto__=cljs.core._disjoin["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,v):m__8604__auto__.call(null,coll,v);else throw cljs.core.missing_protocol("ISet.-disjoin",coll);}}};cljs.core.IStack=function(){};
cljs.core._peek=function cljs$core$_peek(coll){if(!(coll==null)&&!(coll.cljs$core$IStack$_peek$arity$1==null))return coll.cljs$core$IStack$_peek$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._peek[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._peek["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IStack.-peek",coll);}}};
cljs.core._pop=function cljs$core$_pop(coll){if(!(coll==null)&&!(coll.cljs$core$IStack$_pop$arity$1==null))return coll.cljs$core$IStack$_pop$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._pop[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._pop["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IStack.-pop",coll);}}};cljs.core.IVector=function(){};
cljs.core._assoc_n=function cljs$core$_assoc_n(coll,n,val){if(!(coll==null)&&!(coll.cljs$core$IVector$_assoc_n$arity$3==null))return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._assoc_n[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,val):m__8607__auto__.call(null,coll,n,val);else{var m__8604__auto__=
cljs.core._assoc_n["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,val):m__8604__auto__.call(null,coll,n,val);else throw cljs.core.missing_protocol("IVector.-assoc-n",coll);}}};cljs.core.IDeref=function(){};
cljs.core._deref=function cljs$core$_deref(o){if(!(o==null)&&!(o.cljs$core$IDeref$_deref$arity$1==null))return o.cljs$core$IDeref$_deref$arity$1(o);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._deref[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8607__auto__.call(null,o);else{var m__8604__auto__=cljs.core._deref["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8604__auto__.call(null,o);else throw cljs.core.missing_protocol("IDeref.-deref",o);}}};cljs.core.IDerefWithTimeout=function(){};
cljs.core._deref_with_timeout=function cljs$core$_deref_with_timeout(o,msec,timeout_val){if(!(o==null)&&!(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3==null))return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._deref_with_timeout[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(o,
msec,timeout_val):m__8607__auto__.call(null,o,msec,timeout_val);else{var m__8604__auto__=cljs.core._deref_with_timeout["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(o,msec,timeout_val):m__8604__auto__.call(null,o,msec,timeout_val);else throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);}}};cljs.core.IMeta=function(){};
cljs.core._meta=function cljs$core$_meta(o){if(!(o==null)&&!(o.cljs$core$IMeta$_meta$arity$1==null))return o.cljs$core$IMeta$_meta$arity$1(o);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._meta[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8607__auto__.call(null,o);else{var m__8604__auto__=cljs.core._meta["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8604__auto__.call(null,o);else throw cljs.core.missing_protocol("IMeta.-meta",o);}}};cljs.core.IWithMeta=function(){};
cljs.core._with_meta=function cljs$core$_with_meta(o,meta){if(!(o==null)&&!(o.cljs$core$IWithMeta$_with_meta$arity$2==null))return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._with_meta[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(o,meta):m__8607__auto__.call(null,o,meta);else{var m__8604__auto__=cljs.core._with_meta["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(o,meta):m__8604__auto__.call(null,o,meta);else throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);}}};cljs.core.IReduce=function(){};
cljs.core._reduce=function cljs$core$_reduce(var_args){var G__10300=arguments.length;switch(G__10300){case 2:return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2=function(coll,f){if(!(coll==null)&&!(coll.cljs$core$IReduce$_reduce$arity$2==null))return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._reduce[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,f):m__8607__auto__.call(null,coll,f);else{var m__8604__auto__=cljs.core._reduce["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,f):m__8604__auto__.call(null,coll,f);else throw cljs.core.missing_protocol("IReduce.-reduce",coll);}}};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3=function(coll,f,start){if(!(coll==null)&&!(coll.cljs$core$IReduce$_reduce$arity$3==null))return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._reduce[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,start):m__8607__auto__.call(null,coll,f,start);else{var m__8604__auto__=
cljs.core._reduce["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,start):m__8604__auto__.call(null,coll,f,start);else throw cljs.core.missing_protocol("IReduce.-reduce",coll);}}};cljs.core._reduce.cljs$lang$maxFixedArity=3;cljs.core.IKVReduce=function(){};
cljs.core._kv_reduce=function cljs$core$_kv_reduce(coll,f,init){if(!(coll==null)&&!(coll.cljs$core$IKVReduce$_kv_reduce$arity$3==null))return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._kv_reduce[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,init):m__8607__auto__.call(null,coll,f,init);else{var m__8604__auto__=
cljs.core._kv_reduce["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,init):m__8604__auto__.call(null,coll,f,init);else throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);}}};cljs.core.IEquiv=function(){};
cljs.core._equiv=function cljs$core$_equiv(o,other){if(!(o==null)&&!(o.cljs$core$IEquiv$_equiv$arity$2==null))return o.cljs$core$IEquiv$_equiv$arity$2(o,other);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._equiv[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(o,other):m__8607__auto__.call(null,o,other);else{var m__8604__auto__=cljs.core._equiv["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(o,other):m__8604__auto__.call(null,o,other);else throw cljs.core.missing_protocol("IEquiv.-equiv",o);}}};cljs.core.IHash=function(){};
cljs.core._hash=function cljs$core$_hash(o){if(!(o==null)&&!(o.cljs$core$IHash$_hash$arity$1==null))return o.cljs$core$IHash$_hash$arity$1(o);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._hash[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8607__auto__.call(null,o);else{var m__8604__auto__=cljs.core._hash["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8604__auto__.call(null,o);else throw cljs.core.missing_protocol("IHash.-hash",o);}}};cljs.core.ISeqable=function(){};
cljs.core._seq=function cljs$core$_seq(o){if(!(o==null)&&!(o.cljs$core$ISeqable$_seq$arity$1==null))return o.cljs$core$ISeqable$_seq$arity$1(o);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._seq[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8607__auto__.call(null,o);else{var m__8604__auto__=cljs.core._seq["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(o):m__8604__auto__.call(null,o);else throw cljs.core.missing_protocol("ISeqable.-seq",o);}}};cljs.core.ISequential=function(){};cljs.core.IList=function(){};cljs.core.IRecord=function(){};cljs.core.IReversible=function(){};
cljs.core._rseq=function cljs$core$_rseq(coll){if(!(coll==null)&&!(coll.cljs$core$IReversible$_rseq$arity$1==null))return coll.cljs$core$IReversible$_rseq$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._rseq[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._rseq["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IReversible.-rseq",coll);}}};cljs.core.ISorted=function(){};
cljs.core._sorted_seq=function cljs$core$_sorted_seq(coll,ascending_QMARK_){if(!(coll==null)&&!(coll.cljs$core$ISorted$_sorted_seq$arity$2==null))return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._sorted_seq[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,ascending_QMARK_):m__8607__auto__.call(null,
coll,ascending_QMARK_);else{var m__8604__auto__=cljs.core._sorted_seq["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,ascending_QMARK_):m__8604__auto__.call(null,coll,ascending_QMARK_);else throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);}}};
cljs.core._sorted_seq_from=function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){if(!(coll==null)&&!(coll.cljs$core$ISorted$_sorted_seq_from$arity$3==null))return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._sorted_seq_from[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,ascending_QMARK_):
m__8607__auto__.call(null,coll,k,ascending_QMARK_);else{var m__8604__auto__=cljs.core._sorted_seq_from["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,ascending_QMARK_):m__8604__auto__.call(null,coll,k,ascending_QMARK_);else throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);}}};
cljs.core._entry_key=function cljs$core$_entry_key(coll,entry){if(!(coll==null)&&!(coll.cljs$core$ISorted$_entry_key$arity$2==null))return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._entry_key[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(coll,entry):m__8607__auto__.call(null,coll,entry);else{var m__8604__auto__=
cljs.core._entry_key["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(coll,entry):m__8604__auto__.call(null,coll,entry);else throw cljs.core.missing_protocol("ISorted.-entry-key",coll);}}};
cljs.core._comparator=function cljs$core$_comparator(coll){if(!(coll==null)&&!(coll.cljs$core$ISorted$_comparator$arity$1==null))return coll.cljs$core$ISorted$_comparator$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._comparator[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._comparator["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("ISorted.-comparator",coll);}}};cljs.core.IWriter=function(){};
cljs.core._write=function cljs$core$_write(writer,s){if(!(writer==null)&&!(writer.cljs$core$IWriter$_write$arity$2==null))return writer.cljs$core$IWriter$_write$arity$2(writer,s);else{var x__8606__auto__=writer==null?null:writer;var m__8607__auto__=cljs.core._write[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(writer,s):m__8607__auto__.call(null,writer,s);else{var m__8604__auto__=cljs.core._write["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(writer,s):m__8604__auto__.call(null,writer,s);else throw cljs.core.missing_protocol("IWriter.-write",writer);}}};
cljs.core._flush=function cljs$core$_flush(writer){if(!(writer==null)&&!(writer.cljs$core$IWriter$_flush$arity$1==null))return writer.cljs$core$IWriter$_flush$arity$1(writer);else{var x__8606__auto__=writer==null?null:writer;var m__8607__auto__=cljs.core._flush[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(writer):m__8607__auto__.call(null,writer);else{var m__8604__auto__=cljs.core._flush["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(writer):m__8604__auto__.call(null,writer);else throw cljs.core.missing_protocol("IWriter.-flush",writer);}}};cljs.core.IPrintWithWriter=function(){};
cljs.core._pr_writer=function cljs$core$_pr_writer(o,writer,opts){if(!(o==null)&&!(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3==null))return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._pr_writer[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(o,writer,opts):m__8607__auto__.call(null,o,writer,opts);
else{var m__8604__auto__=cljs.core._pr_writer["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(o,writer,opts):m__8604__auto__.call(null,o,writer,opts);else throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);}}};cljs.core.IPending=function(){};
cljs.core._realized_QMARK_=function cljs$core$_realized_QMARK_(x){if(!(x==null)&&!(x.cljs$core$IPending$_realized_QMARK_$arity$1==null))return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._realized_QMARK_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8607__auto__.call(null,x);else{var m__8604__auto__=cljs.core._realized_QMARK_["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8604__auto__.call(null,x);else throw cljs.core.missing_protocol("IPending.-realized?",x);}}};cljs.core.IWatchable=function(){};
cljs.core._notify_watches=function cljs$core$_notify_watches(this$,oldval,newval){if(!(this$==null)&&!(this$.cljs$core$IWatchable$_notify_watches$arity$3==null))return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._notify_watches[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(this$,oldval,
newval):m__8607__auto__.call(null,this$,oldval,newval);else{var m__8604__auto__=cljs.core._notify_watches["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(this$,oldval,newval):m__8604__auto__.call(null,this$,oldval,newval);else throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);}}};
cljs.core._add_watch=function cljs$core$_add_watch(this$,key,f){if(!(this$==null)&&!(this$.cljs$core$IWatchable$_add_watch$arity$3==null))return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._add_watch[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(this$,key,f):m__8607__auto__.call(null,this$,key,f);
else{var m__8604__auto__=cljs.core._add_watch["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(this$,key,f):m__8604__auto__.call(null,this$,key,f);else throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);}}};
cljs.core._remove_watch=function cljs$core$_remove_watch(this$,key){if(!(this$==null)&&!(this$.cljs$core$IWatchable$_remove_watch$arity$2==null))return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);else{var x__8606__auto__=this$==null?null:this$;var m__8607__auto__=cljs.core._remove_watch[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(this$,key):m__8607__auto__.call(null,this$,
key);else{var m__8604__auto__=cljs.core._remove_watch["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(this$,key):m__8604__auto__.call(null,this$,key);else throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);}}};cljs.core.IEditableCollection=function(){};
cljs.core._as_transient=function cljs$core$_as_transient(coll){if(!(coll==null)&&!(coll.cljs$core$IEditableCollection$_as_transient$arity$1==null))return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._as_transient[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);
else{var m__8604__auto__=cljs.core._as_transient["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);}}};cljs.core.ITransientCollection=function(){};
cljs.core._conj_BANG_=function cljs$core$_conj_BANG_(tcoll,val){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2==null))return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._conj_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,val):m__8607__auto__.call(null,
tcoll,val);else{var m__8604__auto__=cljs.core._conj_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,val):m__8604__auto__.call(null,tcoll,val);else throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);}}};
cljs.core._persistent_BANG_=function cljs$core$_persistent_BANG_(tcoll){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1==null))return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._persistent_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(tcoll):m__8607__auto__.call(null,
tcoll);else{var m__8604__auto__=cljs.core._persistent_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(tcoll):m__8604__auto__.call(null,tcoll);else throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);}}};cljs.core.ITransientAssociative=function(){};
cljs.core._assoc_BANG_=function cljs$core$_assoc_BANG_(tcoll,key,val){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3==null))return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._assoc_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,key,val):
m__8607__auto__.call(null,tcoll,key,val);else{var m__8604__auto__=cljs.core._assoc_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,key,val):m__8604__auto__.call(null,tcoll,key,val);else throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);}}};cljs.core.ITransientMap=function(){};
cljs.core._dissoc_BANG_=function cljs$core$_dissoc_BANG_(tcoll,key){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2==null))return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._dissoc_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,key):m__8607__auto__.call(null,
tcoll,key);else{var m__8604__auto__=cljs.core._dissoc_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,key):m__8604__auto__.call(null,tcoll,key);else throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);}}};cljs.core.ITransientVector=function(){};
cljs.core._assoc_n_BANG_=function cljs$core$_assoc_n_BANG_(tcoll,n,val){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3==null))return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._assoc_n_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,n,val):m__8607__auto__.call(null,
tcoll,n,val);else{var m__8604__auto__=cljs.core._assoc_n_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,n,val):m__8604__auto__.call(null,tcoll,n,val);else throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);}}};
cljs.core._pop_BANG_=function cljs$core$_pop_BANG_(tcoll){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1==null))return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._pop_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(tcoll):m__8607__auto__.call(null,tcoll);else{var m__8604__auto__=
cljs.core._pop_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(tcoll):m__8604__auto__.call(null,tcoll);else throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);}}};cljs.core.ITransientSet=function(){};
cljs.core._disjoin_BANG_=function cljs$core$_disjoin_BANG_(tcoll,v){if(!(tcoll==null)&&!(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2==null))return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);else{var x__8606__auto__=tcoll==null?null:tcoll;var m__8607__auto__=cljs.core._disjoin_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,v):m__8607__auto__.call(null,
tcoll,v);else{var m__8604__auto__=cljs.core._disjoin_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,v):m__8604__auto__.call(null,tcoll,v);else throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);}}};cljs.core.IComparable=function(){};
cljs.core._compare=function cljs$core$_compare(x,y){if(!(x==null)&&!(x.cljs$core$IComparable$_compare$arity$2==null))return x.cljs$core$IComparable$_compare$arity$2(x,y);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._compare[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(x,y):m__8607__auto__.call(null,x,y);else{var m__8604__auto__=cljs.core._compare["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(x,y):m__8604__auto__.call(null,x,y);else throw cljs.core.missing_protocol("IComparable.-compare",x);}}};cljs.core.IChunk=function(){};
cljs.core._drop_first=function cljs$core$_drop_first(coll){if(!(coll==null)&&!(coll.cljs$core$IChunk$_drop_first$arity$1==null))return coll.cljs$core$IChunk$_drop_first$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._drop_first[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._drop_first["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IChunk.-drop-first",coll);}}};cljs.core.IChunkedSeq=function(){};
cljs.core._chunked_first=function cljs$core$_chunked_first(coll){if(!(coll==null)&&!(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1==null))return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._chunked_first[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=
cljs.core._chunked_first["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);}}};
cljs.core._chunked_rest=function cljs$core$_chunked_rest(coll){if(!(coll==null)&&!(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1==null))return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._chunked_rest[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=
cljs.core._chunked_rest["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);}}};cljs.core.IChunkedNext=function(){};
cljs.core._chunked_next=function cljs$core$_chunked_next(coll){if(!(coll==null)&&!(coll.cljs$core$IChunkedNext$_chunked_next$arity$1==null))return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._chunked_next[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=
cljs.core._chunked_next["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);}}};cljs.core.INamed=function(){};
cljs.core._name=function cljs$core$_name(x){if(!(x==null)&&!(x.cljs$core$INamed$_name$arity$1==null))return x.cljs$core$INamed$_name$arity$1(x);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._name[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8607__auto__.call(null,x);else{var m__8604__auto__=cljs.core._name["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8604__auto__.call(null,x);else throw cljs.core.missing_protocol("INamed.-name",x);}}};
cljs.core._namespace=function cljs$core$_namespace(x){if(!(x==null)&&!(x.cljs$core$INamed$_namespace$arity$1==null))return x.cljs$core$INamed$_namespace$arity$1(x);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._namespace[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8607__auto__.call(null,x);else{var m__8604__auto__=cljs.core._namespace["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8604__auto__.call(null,x);else throw cljs.core.missing_protocol("INamed.-namespace",x);}}};cljs.core.IAtom=function(){};cljs.core.IReset=function(){};
cljs.core._reset_BANG_=function cljs$core$_reset_BANG_(o,new_value){if(!(o==null)&&!(o.cljs$core$IReset$_reset_BANG_$arity$2==null))return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._reset_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value):m__8607__auto__.call(null,o,new_value);else{var m__8604__auto__=
cljs.core._reset_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value):m__8604__auto__.call(null,o,new_value);else throw cljs.core.missing_protocol("IReset.-reset!",o);}}};cljs.core.ISwap=function(){};
cljs.core._swap_BANG_=function cljs$core$_swap_BANG_(var_args){var G__10303=arguments.length;switch(G__10303){case 2:return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2=function(o,f){if(!(o==null)&&!(o.cljs$core$ISwap$_swap_BANG_$arity$2==null))return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._swap_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(o,f):m__8607__auto__.call(null,o,f);else{var m__8604__auto__=cljs.core._swap_BANG_["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(o,f):m__8604__auto__.call(null,o,f);else throw cljs.core.missing_protocol("ISwap.-swap!",o);}}};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3=function(o,f,a){if(!(o==null)&&!(o.cljs$core$ISwap$_swap_BANG_$arity$3==null))return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._swap_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(o,f,a):m__8607__auto__.call(null,o,f,a);else{var m__8604__auto__=cljs.core._swap_BANG_["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(o,f,a):m__8604__auto__.call(null,o,f,a);else throw cljs.core.missing_protocol("ISwap.-swap!",o);}}};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4=function(o,f,a,b){if(!(o==null)&&!(o.cljs$core$ISwap$_swap_BANG_$arity$4==null))return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._swap_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$4?m__8607__auto__.cljs$core$IFn$_invoke$arity$4(o,f,a,b):m__8607__auto__.call(null,o,f,a,b);else{var m__8604__auto__=cljs.core._swap_BANG_["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$4?m__8604__auto__.cljs$core$IFn$_invoke$arity$4(o,f,a,b):m__8604__auto__.call(null,o,f,a,b);else throw cljs.core.missing_protocol("ISwap.-swap!",o);}}};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5=function(o,f,a,b,xs){if(!(o==null)&&!(o.cljs$core$ISwap$_swap_BANG_$arity$5==null))return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._swap_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$5?m__8607__auto__.cljs$core$IFn$_invoke$arity$5(o,f,a,b,xs):m__8607__auto__.call(null,o,f,a,b,xs);else{var m__8604__auto__=
cljs.core._swap_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$5?m__8604__auto__.cljs$core$IFn$_invoke$arity$5(o,f,a,b,xs):m__8604__auto__.call(null,o,f,a,b,xs);else throw cljs.core.missing_protocol("ISwap.-swap!",o);}}};cljs.core._swap_BANG_.cljs$lang$maxFixedArity=5;cljs.core.IVolatile=function(){};
cljs.core._vreset_BANG_=function cljs$core$_vreset_BANG_(o,new_value){if(!(o==null)&&!(o.cljs$core$IVolatile$_vreset_BANG_$arity$2==null))return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);else{var x__8606__auto__=o==null?null:o;var m__8607__auto__=cljs.core._vreset_BANG_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value):m__8607__auto__.call(null,o,new_value);else{var m__8604__auto__=
cljs.core._vreset_BANG_["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value):m__8604__auto__.call(null,o,new_value);else throw cljs.core.missing_protocol("IVolatile.-vreset!",o);}}};cljs.core.IIterable=function(){};
cljs.core._iterator=function cljs$core$_iterator(coll){if(!(coll==null)&&!(coll.cljs$core$IIterable$_iterator$arity$1==null))return coll.cljs$core$IIterable$_iterator$arity$1(coll);else{var x__8606__auto__=coll==null?null:coll;var m__8607__auto__=cljs.core._iterator[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8607__auto__.call(null,coll);else{var m__8604__auto__=cljs.core._iterator["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(coll):m__8604__auto__.call(null,coll);else throw cljs.core.missing_protocol("IIterable.-iterator",coll);}}};cljs.core.StringBufferWriter=function(sb){this.sb=sb;this.cljs$lang$protocol_mask$partition0$=1073741824;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2=function(_,s){var self__=this;var ___$1=this;return self__.sb.append(s)};cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1=function(_){var self__=this;var ___$1=this;return null};cljs.core.StringBufferWriter.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"sb","sb",-1249746442,null)],null)};
cljs.core.StringBufferWriter.cljs$lang$type=true;cljs.core.StringBufferWriter.cljs$lang$ctorStr="cljs.core/StringBufferWriter";cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/StringBufferWriter")};cljs.core.__GT_StringBufferWriter=function cljs$core$__GT_StringBufferWriter(sb){return new cljs.core.StringBufferWriter(sb)};
cljs.core.pr_str_STAR_=function cljs$core$pr_str_STAR_(obj){var sb=new goog.string.StringBuffer;var writer=new cljs.core.StringBufferWriter(sb);obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());writer.cljs$core$IWriter$_flush$arity$1(null);return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)};cljs.core.int_rotate_left=function cljs$core$int_rotate_left(x,n){return x<<n|x>>>-n};
if(typeof Math!=="undefined"&&typeof Math.imul!=="undefined"&&!(Math.imul(4294967295,5)===0))cljs.core.imul=function cljs$core$imul(a,b){return Math.imul(a,b)};else cljs.core.imul=function cljs$core$imul(a,b){var ah=a>>>16&65535;var al=a&65535;var bh=b>>>16&65535;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16>>>0)|0};cljs.core.m3_seed=0;cljs.core.m3_C1=3432918353|0;cljs.core.m3_C2=461845907|0;
cljs.core.m3_mix_K1=function cljs$core$m3_mix_K1(k1){return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1|0,cljs.core.m3_C1),15),cljs.core.m3_C2)};cljs.core.m3_mix_H1=function cljs$core$m3_mix_H1(h1,k1){return cljs.core.imul(cljs.core.int_rotate_left((h1|0)^(k1|0),13),5)+(3864292196|0)|0};
cljs.core.m3_fmix=function cljs$core$m3_fmix(h1,len){var h1__$1=h1|0;var h1__$2=h1__$1^len;var h1__$3=h1__$2^h1__$2>>>16;var h1__$4=cljs.core.imul(h1__$3,2246822507|0);var h1__$5=h1__$4^h1__$4>>>13;var h1__$6=cljs.core.imul(h1__$5,3266489909|0);return h1__$6^h1__$6>>>16};cljs.core.m3_hash_int=function cljs$core$m3_hash_int(in$){if(in$===0)return in$;else{var k1=cljs.core.m3_mix_K1(in$);var h1=cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);return cljs.core.m3_fmix(h1,4)}};
cljs.core.m3_hash_unencoded_chars=function cljs$core$m3_hash_unencoded_chars(in$){var h1=function(){var i=1;var h1=cljs.core.m3_seed;while(true){if(i<in$.length){var G__10305=i+2;var G__10306=cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1(in$.charCodeAt(i-1)|in$.charCodeAt(i)<<16));i=G__10305;h1=G__10306;continue}else return h1;break}}();var h1__$1=(in$.length&1)===1?h1^cljs.core.m3_mix_K1(in$.charCodeAt(in$.length-1)):h1;return cljs.core.m3_fmix(h1__$1,cljs.core.imul(2,in$.length))};
cljs.core.string_hash_cache={};cljs.core.string_hash_cache_count=0;cljs.core.hash_string_STAR_=function cljs$core$hash_string_STAR_(s){if(!(s==null)){var len=s.length;if(len>0){var i=0;var hash=0;while(true){if(i<len){var G__10309=i+1;var G__10310=cljs.core.imul(31,hash)+s.charCodeAt(i);i=G__10309;hash=G__10310;continue}else return hash;break}}else return 0}else return 0};
cljs.core.add_to_string_hash_cache=function cljs$core$add_to_string_hash_cache(k){var h=cljs.core.hash_string_STAR_(k);goog.object.set(cljs.core.string_hash_cache,k,h);cljs.core.string_hash_cache_count=cljs.core.string_hash_cache_count+1;return h};
cljs.core.hash_string=function cljs$core$hash_string(k){if(cljs.core.string_hash_cache_count>255){cljs.core.string_hash_cache={};cljs.core.string_hash_cache_count=0}else;if(k==null)return 0;else{var h=cljs.core.string_hash_cache[k];if(typeof h==="number")return h;else return cljs.core.add_to_string_hash_cache(k)}};
cljs.core.hash=function cljs$core$hash(o){if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&4194304||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IHash$?true:false:false)return cljs.core._hash(o)^0;else if(typeof o==="number")if(cljs.core.truth_(isFinite(o)))return Math.floor(o)%2147483647;else{var G__10314=o;switch(G__10314){case Infinity:return 2146435072;break;case -Infinity:return-1048576;break;default:return 2146959360}}else if(o===true)return 1231;else if(o===false)return 1237;else if(typeof o===
"string")return cljs.core.m3_hash_int(cljs.core.hash_string(o));else if(o instanceof Date)return o.valueOf()^0;else if(o==null)return 0;else return cljs.core._hash(o)^0};cljs.core.hash_combine=function cljs$core$hash_combine(seed,hash){return seed^hash+2654435769+(seed<<6)+(seed>>2)};cljs.core.instance_QMARK_=function cljs$core$instance_QMARK_(c,x){return x instanceof c};cljs.core.symbol_QMARK_=function cljs$core$symbol_QMARK_(x){return x instanceof cljs.core.Symbol};
cljs.core.hash_symbol=function cljs$core$hash_symbol(sym){return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns))};
cljs.core.compare_symbols=function cljs$core$compare_symbols(a,b){if(a.str===b.str)return 0;else if(cljs.core.truth_(function(){var and__7893__auto__=cljs.core.not(a.ns);if(and__7893__auto__)return b.ns;else return and__7893__auto__}()))return-1;else if(cljs.core.truth_(a.ns))if(cljs.core.not(b.ns))return 1;else{var nsc=function(){var G__10316=a.ns;var G__10317=b.ns;return goog.array.defaultCompare(G__10316,G__10317)}();if(0===nsc){var G__10318=a.name;var G__10319=b.name;return goog.array.defaultCompare(G__10318,
G__10319)}else return nsc}else{var G__10320=a.name;var G__10321=b.name;return goog.array.defaultCompare(G__10320,G__10321)}};cljs.core.Symbol=function(ns,name,str,_hash,_meta){this.ns=ns;this.name=name;this.str=str;this._hash=_hash;this._meta=_meta;this.cljs$lang$protocol_mask$partition0$=2154168321;this.cljs$lang$protocol_mask$partition1$=4096};cljs.core.Symbol.prototype.toString=function(){var self__=this;var _=this;return self__.str};
cljs.core.Symbol.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2=function(_,other){var self__=this;var ___$1=this;if(other instanceof cljs.core.Symbol)return self__.str===other.str;else return false};
cljs.core.Symbol.prototype.call=function(){var G__10323=null;var G__10323__2=function(self__,coll){var self__=this;var self____$1=this;var sym=self____$1;return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,sym)};var G__10323__3=function(self__,coll,not_found){var self__=this;var self____$1=this;var sym=self____$1;return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found)};G__10323=function(self__,coll,not_found){switch(arguments.length){case 2:return G__10323__2.call(this,self__,coll);
case 3:return G__10323__3.call(this,self__,coll,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__10323.cljs$core$IFn$_invoke$arity$2=G__10323__2;G__10323.cljs$core$IFn$_invoke$arity$3=G__10323__3;return G__10323}();cljs.core.Symbol.prototype.apply=function(self__,args10322){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10322)))};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1=function(coll){var self__=this;var sym=this;return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,sym)};cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2=function(coll,not_found){var self__=this;var sym=this;return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found)};cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__._meta};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(_,new_meta){var self__=this;var ___$1=this;return new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta)};cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1=function(sym){var self__=this;var sym__$1=this;var h__8368__auto__=self__._hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_symbol(sym__$1);self__._hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1=function(_){var self__=this;var ___$1=this;return self__.name};cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1=function(_){var self__=this;var ___$1=this;return self__.ns};cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(o,writer,_){var self__=this;var o__$1=this;return cljs.core._write(writer,self__.str)};
cljs.core.Symbol.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"str","str",-1564826950,null),cljs.core.with_meta(new cljs.core.Symbol(null,"_hash","_hash",-2130838312,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,
"_meta","_meta",-1716892533,null)],null)};cljs.core.Symbol.cljs$lang$type=true;cljs.core.Symbol.cljs$lang$ctorStr="cljs.core/Symbol";cljs.core.Symbol.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Symbol")};cljs.core.__GT_Symbol=function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){return new cljs.core.Symbol(ns,name,str,_hash,_meta)};
cljs.core.var_QMARK_=function cljs$core$var_QMARK_(v){return v instanceof cljs.core.Var};cljs.core.symbol=function cljs$core$symbol(var_args){var G__10325=arguments.length;switch(G__10325){case 1:return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1=function(name){while(true){if(name instanceof cljs.core.Symbol)return name;else if(typeof name==="string"){var idx=name.indexOf("/");if(idx<1)return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,name);else return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0,idx),name.substring(idx+1,name.length))}else if(cljs.core.var_QMARK_(name))return name.sym;else if(name instanceof cljs.core.Keyword){var G__10327=name.fqn;name=G__10327;continue}else throw new Error("no conversion to symbol");
break}};cljs.core.symbol.cljs$core$IFn$_invoke$arity$2=function(ns,name){var sym_str=!(ns==null)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),"/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(""):name;return new cljs.core.Symbol(ns,name,sym_str,null,null)};cljs.core.symbol.cljs$lang$maxFixedArity=2;cljs.core.Var=function(val,sym,_meta){this.val=val;this.sym=sym;this._meta=_meta;this.cljs$lang$protocol_mask$partition0$=6717441;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.Var.prototype.isMacro=function(){var self__=this;var _=this;return(self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null)).cljs$lang$macro};cljs.core.Var.prototype.toString=function(){var self__=this;var _=this;return["#'",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("")};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1=function(_){var self__=this;var ___$1=this;return self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null)};cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__._meta};cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(_,new_meta){var self__=this;var ___$1=this;return new cljs.core.Var(self__.val,self__.sym,new_meta)};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2=function(this$,other){var self__=this;var this$__$1=this;if(other instanceof cljs.core.Var)return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym,other.sym);else return false};cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1=function(_){var self__=this;var ___$1=this;return cljs.core.hash_symbol(self__.sym)};cljs.core.Var.prototype.cljs$core$Fn$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call=function(){var G__10371=null;var G__10371__1=function(self__){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10329=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10329.cljs$core$IFn$_invoke$arity$0?fexpr__10329.cljs$core$IFn$_invoke$arity$0():fexpr__10329.call(null)};var G__10371__2=function(self__,a){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10330=self__.val.cljs$core$IFn$_invoke$arity$0?
self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10330.cljs$core$IFn$_invoke$arity$1?fexpr__10330.cljs$core$IFn$_invoke$arity$1(a):fexpr__10330.call(null,a)};var G__10371__3=function(self__,a,b){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10331=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10331.cljs$core$IFn$_invoke$arity$2?fexpr__10331.cljs$core$IFn$_invoke$arity$2(a,b):fexpr__10331.call(null,
a,b)};var G__10371__4=function(self__,a,b,c){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10332=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10332.cljs$core$IFn$_invoke$arity$3?fexpr__10332.cljs$core$IFn$_invoke$arity$3(a,b,c):fexpr__10332.call(null,a,b,c)};var G__10371__5=function(self__,a,b,c,d){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10333=self__.val.cljs$core$IFn$_invoke$arity$0?
self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10333.cljs$core$IFn$_invoke$arity$4?fexpr__10333.cljs$core$IFn$_invoke$arity$4(a,b,c,d):fexpr__10333.call(null,a,b,c,d)};var G__10371__6=function(self__,a,b,c,d,e){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10334=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10334.cljs$core$IFn$_invoke$arity$5?fexpr__10334.cljs$core$IFn$_invoke$arity$5(a,
b,c,d,e):fexpr__10334.call(null,a,b,c,d,e)};var G__10371__7=function(self__,a,b,c,d,e,f){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10335=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10335.cljs$core$IFn$_invoke$arity$6?fexpr__10335.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f):fexpr__10335.call(null,a,b,c,d,e,f)};var G__10371__8=function(self__,a,b,c,d,e,f,g){var self__=this;var self____$1=this;var _=self____$1;
var fexpr__10336=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10336.cljs$core$IFn$_invoke$arity$7?fexpr__10336.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):fexpr__10336.call(null,a,b,c,d,e,f,g)};var G__10371__9=function(self__,a,b,c,d,e,f,g,h){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10337=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10337.cljs$core$IFn$_invoke$arity$8?
fexpr__10337.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):fexpr__10337.call(null,a,b,c,d,e,f,g,h)};var G__10371__10=function(self__,a,b,c,d,e,f,g,h,i){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10338=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10338.cljs$core$IFn$_invoke$arity$9?fexpr__10338.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):fexpr__10338.call(null,a,b,c,d,e,f,g,h,i)};var G__10371__11=
function(self__,a,b,c,d,e,f,g,h,i,j){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10339=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10339.cljs$core$IFn$_invoke$arity$10?fexpr__10339.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):fexpr__10339.call(null,a,b,c,d,e,f,g,h,i,j)};var G__10371__12=function(self__,a,b,c,d,e,f,g,h,i,j,k){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10340=self__.val.cljs$core$IFn$_invoke$arity$0?
self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10340.cljs$core$IFn$_invoke$arity$11?fexpr__10340.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):fexpr__10340.call(null,a,b,c,d,e,f,g,h,i,j,k)};var G__10371__13=function(self__,a,b,c,d,e,f,g,h,i,j,k,l){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10341=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10341.cljs$core$IFn$_invoke$arity$12?
fexpr__10341.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):fexpr__10341.call(null,a,b,c,d,e,f,g,h,i,j,k,l)};var G__10371__14=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10342=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10342.cljs$core$IFn$_invoke$arity$13?fexpr__10342.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):fexpr__10342.call(null,a,
b,c,d,e,f,g,h,i,j,k,l,m)};var G__10371__15=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10343=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10343.cljs$core$IFn$_invoke$arity$14?fexpr__10343.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):fexpr__10343.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n)};var G__10371__16=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,
o){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10344=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10344.cljs$core$IFn$_invoke$arity$15?fexpr__10344.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):fexpr__10344.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)};var G__10371__17=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10345=self__.val.cljs$core$IFn$_invoke$arity$0?
self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10345.cljs$core$IFn$_invoke$arity$16?fexpr__10345.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):fexpr__10345.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)};var G__10371__18=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10346=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10346.cljs$core$IFn$_invoke$arity$17?
fexpr__10346.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):fexpr__10346.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)};var G__10371__19=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10347=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10347.cljs$core$IFn$_invoke$arity$18?fexpr__10347.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,
l,m,n,o,p,q,r):fexpr__10347.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)};var G__10371__20=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10348=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10348.cljs$core$IFn$_invoke$arity$19?fexpr__10348.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):fexpr__10348.call(null,a,b,c,d,e,f,g,h,i,j,
k,l,m,n,o,p,q,r,s)};var G__10371__21=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){var self__=this;var self____$1=this;var _=self____$1;var fexpr__10349=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10349.cljs$core$IFn$_invoke$arity$20?fexpr__10349.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):fexpr__10349.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)};var G__10371__22=function(self__,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){var self__=this;var self____$1=this;var _=self____$1;return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null),a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0))};G__10371=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){switch(arguments.length){case 1:return G__10371__1.call(this,self__);
case 2:return G__10371__2.call(this,self__,a);case 3:return G__10371__3.call(this,self__,a,b);case 4:return G__10371__4.call(this,self__,a,b,c);case 5:return G__10371__5.call(this,self__,a,b,c,d);case 6:return G__10371__6.call(this,self__,a,b,c,d,e);case 7:return G__10371__7.call(this,self__,a,b,c,d,e,f);case 8:return G__10371__8.call(this,self__,a,b,c,d,e,f,g);case 9:return G__10371__9.call(this,self__,a,b,c,d,e,f,g,h);case 10:return G__10371__10.call(this,self__,a,b,c,d,e,f,g,h,i);case 11:return G__10371__11.call(this,
self__,a,b,c,d,e,f,g,h,i,j);case 12:return G__10371__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);case 13:return G__10371__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);case 14:return G__10371__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);case 15:return G__10371__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);case 16:return G__10371__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);case 17:return G__10371__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);case 18:return G__10371__18.call(this,
self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);case 19:return G__10371__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);case 20:return G__10371__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);case 21:return G__10371__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);case 22:return G__10371__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest)}throw new Error("Invalid arity: "+(arguments.length-1));};G__10371.cljs$core$IFn$_invoke$arity$1=G__10371__1;G__10371.cljs$core$IFn$_invoke$arity$2=
G__10371__2;G__10371.cljs$core$IFn$_invoke$arity$3=G__10371__3;G__10371.cljs$core$IFn$_invoke$arity$4=G__10371__4;G__10371.cljs$core$IFn$_invoke$arity$5=G__10371__5;G__10371.cljs$core$IFn$_invoke$arity$6=G__10371__6;G__10371.cljs$core$IFn$_invoke$arity$7=G__10371__7;G__10371.cljs$core$IFn$_invoke$arity$8=G__10371__8;G__10371.cljs$core$IFn$_invoke$arity$9=G__10371__9;G__10371.cljs$core$IFn$_invoke$arity$10=G__10371__10;G__10371.cljs$core$IFn$_invoke$arity$11=G__10371__11;G__10371.cljs$core$IFn$_invoke$arity$12=
G__10371__12;G__10371.cljs$core$IFn$_invoke$arity$13=G__10371__13;G__10371.cljs$core$IFn$_invoke$arity$14=G__10371__14;G__10371.cljs$core$IFn$_invoke$arity$15=G__10371__15;G__10371.cljs$core$IFn$_invoke$arity$16=G__10371__16;G__10371.cljs$core$IFn$_invoke$arity$17=G__10371__17;G__10371.cljs$core$IFn$_invoke$arity$18=G__10371__18;G__10371.cljs$core$IFn$_invoke$arity$19=G__10371__19;G__10371.cljs$core$IFn$_invoke$arity$20=G__10371__20;G__10371.cljs$core$IFn$_invoke$arity$21=G__10371__21;G__10371.cljs$core$IFn$_invoke$arity$22=
G__10371__22;return G__10371}();cljs.core.Var.prototype.apply=function(self__,args10328){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10328)))};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0=function(){var self__=this;var _=this;var fexpr__10350=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10350.cljs$core$IFn$_invoke$arity$0?fexpr__10350.cljs$core$IFn$_invoke$arity$0():fexpr__10350.call(null)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1=function(a){var self__=this;var _=this;var fexpr__10351=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10351.cljs$core$IFn$_invoke$arity$1?fexpr__10351.cljs$core$IFn$_invoke$arity$1(a):fexpr__10351.call(null,a)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2=function(a,b){var self__=this;var _=this;var fexpr__10352=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10352.cljs$core$IFn$_invoke$arity$2?fexpr__10352.cljs$core$IFn$_invoke$arity$2(a,b):fexpr__10352.call(null,a,b)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3=function(a,b,c){var self__=this;var _=this;var fexpr__10353=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10353.cljs$core$IFn$_invoke$arity$3?fexpr__10353.cljs$core$IFn$_invoke$arity$3(a,b,c):fexpr__10353.call(null,a,b,c)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4=function(a,b,c,d){var self__=this;var _=this;var fexpr__10354=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10354.cljs$core$IFn$_invoke$arity$4?fexpr__10354.cljs$core$IFn$_invoke$arity$4(a,b,c,d):fexpr__10354.call(null,a,b,c,d)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5=function(a,b,c,d,e){var self__=this;var _=this;var fexpr__10355=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10355.cljs$core$IFn$_invoke$arity$5?fexpr__10355.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e):fexpr__10355.call(null,a,b,c,d,e)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6=function(a,b,c,d,e,f){var self__=this;var _=this;var fexpr__10356=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10356.cljs$core$IFn$_invoke$arity$6?fexpr__10356.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f):fexpr__10356.call(null,a,b,c,d,e,f)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7=function(a,b,c,d,e,f,g){var self__=this;var _=this;var fexpr__10357=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10357.cljs$core$IFn$_invoke$arity$7?fexpr__10357.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):fexpr__10357.call(null,a,b,c,d,e,f,g)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8=function(a,b,c,d,e,f,g,h){var self__=this;var _=this;var fexpr__10358=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10358.cljs$core$IFn$_invoke$arity$8?fexpr__10358.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):fexpr__10358.call(null,a,b,c,d,e,f,g,h)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9=function(a,b,c,d,e,f,g,h,i){var self__=this;var _=this;var fexpr__10359=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10359.cljs$core$IFn$_invoke$arity$9?fexpr__10359.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):fexpr__10359.call(null,a,b,c,d,e,f,g,h,i)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10=function(a,b,c,d,e,f,g,h,i,j){var self__=this;var _=this;var fexpr__10360=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10360.cljs$core$IFn$_invoke$arity$10?fexpr__10360.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):fexpr__10360.call(null,a,b,c,d,e,f,g,h,i,j)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11=function(a,b,c,d,e,f,g,h,i,j,k){var self__=this;var _=this;var fexpr__10361=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10361.cljs$core$IFn$_invoke$arity$11?fexpr__10361.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):fexpr__10361.call(null,a,b,c,d,e,f,g,h,i,j,k)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12=function(a,b,c,d,e,f,g,h,i,j,k,l){var self__=this;var _=this;var fexpr__10362=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10362.cljs$core$IFn$_invoke$arity$12?fexpr__10362.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):fexpr__10362.call(null,a,b,c,d,e,f,g,h,i,j,k,l)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13=function(a,b,c,d,e,f,g,h,i,j,k,l,m){var self__=this;var _=this;var fexpr__10363=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10363.cljs$core$IFn$_invoke$arity$13?fexpr__10363.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):fexpr__10363.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){var self__=this;var _=this;var fexpr__10364=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10364.cljs$core$IFn$_invoke$arity$14?fexpr__10364.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):fexpr__10364.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var self__=this;var _=this;var fexpr__10365=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10365.cljs$core$IFn$_invoke$arity$15?fexpr__10365.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):fexpr__10365.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var self__=this;var _=this;var fexpr__10366=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10366.cljs$core$IFn$_invoke$arity$16?fexpr__10366.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):fexpr__10366.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var self__=this;var _=this;var fexpr__10367=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10367.cljs$core$IFn$_invoke$arity$17?fexpr__10367.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):fexpr__10367.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var self__=this;var _=this;var fexpr__10368=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10368.cljs$core$IFn$_invoke$arity$18?fexpr__10368.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):fexpr__10368.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var self__=this;var _=this;var fexpr__10369=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10369.cljs$core$IFn$_invoke$arity$19?fexpr__10369.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):fexpr__10369.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){var self__=this;var _=this;var fexpr__10370=self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null);return fexpr__10370.cljs$core$IFn$_invoke$arity$20?fexpr__10370.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):fexpr__10370.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){var self__=this;var _=this;return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0?self__.val.cljs$core$IFn$_invoke$arity$0():self__.val.call(null),a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0))};
cljs.core.Var.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"val","val",1769233139,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"_meta","_meta",-1716892533,null)],null)};cljs.core.Var.cljs$lang$type=true;cljs.core.Var.cljs$lang$ctorStr="cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Var")};cljs.core.__GT_Var=function cljs$core$__GT_Var(val,sym,_meta){return new cljs.core.Var(val,sym,_meta)};
cljs.core.iterable_QMARK_=function cljs$core$iterable_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition1$&131072||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IIterable$)return true;else if(!x.cljs$lang$protocol_mask$partition1$)return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,x)};cljs.core.clone=function cljs$core$clone(value){return cljs.core._clone(value)};
cljs.core.cloneable_QMARK_=function cljs$core$cloneable_QMARK_(value){if(!(value==null))if(value.cljs$lang$protocol_mask$partition1$&8192||cljs.core.PROTOCOL_SENTINEL===value.cljs$core$ICloneable$)return true;else if(!value.cljs$lang$protocol_mask$partition1$)return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,value);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,value)};
cljs.core.seq=function cljs$core$seq(coll){if(coll==null)return null;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&8388608||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeqable$?true:false:false)return cljs.core._seq(coll);else if(cljs.core.array_QMARK_(coll))if(coll.length===0)return null;else return new cljs.core.IndexedSeq(coll,0,null);else if(typeof coll==="string")if(coll.length===0)return null;else return new cljs.core.IndexedSeq(coll,0,null);else if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,
coll))return cljs.core._seq(coll);else throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)," is not ISeqable"].join(""));};cljs.core.first=function cljs$core$first(coll){if(coll==null)return null;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeq$?true:false:false)return cljs.core._first(coll);else{var s=cljs.core.seq(coll);if(s==null)return null;else return cljs.core._first(s)}};
cljs.core.rest=function cljs$core$rest(coll){if(!(coll==null))if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeq$?true:false:false)return cljs.core._rest(coll);else{var s=cljs.core.seq(coll);if(s)return s.cljs$core$ISeq$_rest$arity$1(null);else return cljs.core.List.EMPTY}else return cljs.core.List.EMPTY};
cljs.core.next=function cljs$core$next(coll){if(coll==null)return null;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&128||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$INext$?true:false:false)return cljs.core._next(coll);else return cljs.core.seq(cljs.core.rest(coll))};
cljs.core._EQ_=function cljs$core$_EQ_(var_args){var G__10382=arguments.length;switch(G__10382){case 1:return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10384=arguments.length;var i__9108__auto___10385=0;while(true){if(i__9108__auto___10385<len__9107__auto___10384){args_arr__9132__auto__.push(arguments[i__9108__auto___10385]);
var G__10386=i__9108__auto___10385+1;i__9108__auto___10385=G__10386;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1=function(x){return true};cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2=function(x,y){if(x==null)return y==null;else return x===y||cljs.core._equiv(x,y)};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){while(true){if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))if(cljs.core.next(more)){var G__10387=y;var G__10388=cljs.core.first(more);var G__10389=cljs.core.next(more);x=G__10387;y=G__10388;more=G__10389;continue}else return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));else return false;break}};
cljs.core._EQ_.cljs$lang$applyTo=function(seq10379){var G__10380=cljs.core.first(seq10379);var seq10379__$1=cljs.core.next(seq10379);var G__10381=cljs.core.first(seq10379__$1);var seq10379__$2=cljs.core.next(seq10379__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10380,G__10381,seq10379__$2)};cljs.core._EQ_.cljs$lang$maxFixedArity=2;cljs.core.ES6Iterator=function(s){this.s=s};
cljs.core.ES6Iterator.prototype.next=function(){var self__=this;var _=this;if(!(self__.s==null)){var x=cljs.core.first(self__.s);self__.s=cljs.core.next(self__.s);return{"value":x,"done":false}}else return{"value":null,"done":true}};
cljs.core.ES6Iterator.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ES6Iterator.cljs$lang$type=true;cljs.core.ES6Iterator.cljs$lang$ctorStr="cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ES6Iterator")};cljs.core.__GT_ES6Iterator=function cljs$core$__GT_ES6Iterator(s){return new cljs.core.ES6Iterator(s)};cljs.core.es6_iterator=function cljs$core$es6_iterator(coll){return new cljs.core.ES6Iterator(cljs.core.seq(coll))};
cljs.core.ES6IteratorSeq=function(value,iter,_rest){this.value=value;this.iter=iter;this._rest=_rest;this.cljs$lang$protocol_mask$partition0$=8388672;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;return this$__$1};cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1=function(_){var self__=this;var ___$1=this;return self__.value};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(_){var self__=this;var ___$1=this;if(self__._rest==null)self__._rest=cljs.core.es6_iterator_seq(self__.iter);else;return self__._rest};
cljs.core.ES6IteratorSeq.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"iter","iter",-1346195486,null),cljs.core.with_meta(new cljs.core.Symbol(null,"_rest","_rest",-2100466189,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ES6IteratorSeq.cljs$lang$type=true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr="cljs.core/ES6IteratorSeq";cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ES6IteratorSeq")};cljs.core.__GT_ES6IteratorSeq=function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){return new cljs.core.ES6IteratorSeq(value,iter,_rest)};
cljs.core.es6_iterator_seq=function cljs$core$es6_iterator_seq(iter){var v=iter.next();if(cljs.core.truth_(v.done))return cljs.core.List.EMPTY;else return new cljs.core.ES6IteratorSeq(v.value,iter,null)};cljs.core.mix_collection_hash=function cljs$core$mix_collection_hash(hash_basis,count){var h1=cljs.core.m3_seed;var k1=cljs.core.m3_mix_K1(hash_basis);var h1__$1=cljs.core.m3_mix_H1(h1,k1);return cljs.core.m3_fmix(h1__$1,count)};
cljs.core.hash_ordered_coll=function cljs$core$hash_ordered_coll(coll){var n=0;var hash_code=1;var coll__$1=cljs.core.seq(coll);while(true){if(!(coll__$1==null)){var G__10390=n+1;var G__10391=cljs.core.imul(31,hash_code)+cljs.core.hash(cljs.core.first(coll__$1))|0;var G__10392=cljs.core.next(coll__$1);n=G__10390;hash_code=G__10391;coll__$1=G__10392;continue}else return cljs.core.mix_collection_hash(hash_code,n);break}};cljs.core.empty_ordered_hash=cljs.core.mix_collection_hash(1,0);
cljs.core.hash_unordered_coll=function cljs$core$hash_unordered_coll(coll){var n=0;var hash_code=0;var coll__$1=cljs.core.seq(coll);while(true){if(!(coll__$1==null)){var G__10393=n+1;var G__10394=hash_code+cljs.core.hash(cljs.core.first(coll__$1))|0;var G__10395=cljs.core.next(coll__$1);n=G__10393;hash_code=G__10394;coll__$1=G__10395;continue}else return cljs.core.mix_collection_hash(hash_code,n);break}};cljs.core.empty_unordered_hash=cljs.core.mix_collection_hash(0,0);
goog.object.set(cljs.core.ICounted,"null",true);var G__10396_10399=cljs.core._count;var G__10397_10400="null";var G__10398_10401=function(G__10396_10399,G__10397_10400){return function(_){return 0}}(G__10396_10399,G__10397_10400);goog.object.set(G__10396_10399,G__10397_10400,G__10398_10401);Date.prototype.cljs$core$IEquiv$=cljs.core.PROTOCOL_SENTINEL;Date.prototype.cljs$core$IEquiv$_equiv$arity$2=function(o,other){var o__$1=this;return other instanceof Date&&o__$1.valueOf()===other.valueOf()};
Date.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;Date.prototype.cljs$core$IComparable$_compare$arity$2=function(this$,other){var this$__$1=this;if(other instanceof Date){var G__10402=this$__$1.valueOf();var G__10403=other.valueOf();return goog.array.defaultCompare(G__10402,G__10403)}else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));};cljs.core.Inst=function(){};
cljs.core.inst_ms_STAR_=function cljs$core$inst_ms_STAR_(inst){if(!(inst==null)&&!(inst.cljs$core$Inst$inst_ms_STAR_$arity$1==null))return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);else{var x__8606__auto__=inst==null?null:inst;var m__8607__auto__=cljs.core.inst_ms_STAR_[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(inst):m__8607__auto__.call(null,inst);else{var m__8604__auto__=cljs.core.inst_ms_STAR_["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(inst):m__8604__auto__.call(null,inst);else throw cljs.core.missing_protocol("Inst.inst-ms*",inst);}}};Date.prototype.cljs$core$Inst$=cljs.core.PROTOCOL_SENTINEL;Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1=function(inst){var inst__$1=this;return inst__$1.getTime()};cljs.core.inst_ms=function cljs$core$inst_ms(inst){return cljs.core.inst_ms_STAR_(inst)};
cljs.core.inst_QMARK_=function cljs$core$inst_QMARK_(x){if(!(x==null))if(false||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$Inst$)return true;else if(!x.cljs$lang$protocol_mask$partition$)return cljs.core.native_satisfies_QMARK_(cljs.core.Inst,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.Inst,x)};goog.object.set(cljs.core.IEquiv,"number",true);var G__10405_10408=cljs.core._equiv;var G__10406_10409="number";
var G__10407_10410=function(G__10405_10408,G__10406_10409){return function(x,o){return x===o}}(G__10405_10408,G__10406_10409);goog.object.set(G__10405_10408,G__10406_10409,G__10407_10410);goog.object.set(cljs.core.Fn,"function",true);goog.object.set(cljs.core.IMeta,"function",true);var G__10411_10414=cljs.core._meta;var G__10412_10415="function";var G__10413_10416=function(G__10411_10414,G__10412_10415){return function(_){return null}}(G__10411_10414,G__10412_10415);
goog.object.set(G__10411_10414,G__10412_10415,G__10413_10416);goog.object.set(cljs.core.IHash,"_",true);var G__10417_10420=cljs.core._hash;var G__10418_10421="_";var G__10419_10422=function(G__10417_10420,G__10418_10421){return function(o){return goog.getUid(o)}}(G__10417_10420,G__10418_10421);goog.object.set(G__10417_10420,G__10418_10421,G__10419_10422);cljs.core.inc=function cljs$core$inc(x){return x+1};
cljs.core.Reduced=function(val){this.val=val;this.cljs$lang$protocol_mask$partition0$=32768;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1=function(o){var self__=this;var o__$1=this;return self__.val};cljs.core.Reduced.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"val","val",1769233139,null)],null)};cljs.core.Reduced.cljs$lang$type=true;
cljs.core.Reduced.cljs$lang$ctorStr="cljs.core/Reduced";cljs.core.Reduced.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Reduced")};cljs.core.__GT_Reduced=function cljs$core$__GT_Reduced(val){return new cljs.core.Reduced(val)};cljs.core.reduced=function cljs$core$reduced(x){return new cljs.core.Reduced(x)};cljs.core.reduced_QMARK_=function cljs$core$reduced_QMARK_(r){return r instanceof cljs.core.Reduced};
cljs.core.ensure_reduced=function cljs$core$ensure_reduced(x){if(cljs.core.reduced_QMARK_(x))return x;else return cljs.core.reduced(x)};cljs.core.unreduced=function cljs$core$unreduced(x){if(cljs.core.reduced_QMARK_(x))return cljs.core.deref(x);else return x};cljs.core.deref=function cljs$core$deref(o){return cljs.core._deref(o)};
cljs.core.ci_reduce=function cljs$core$ci_reduce(var_args){var G__10424=arguments.length;switch(G__10424){case 2:return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2=function(cicoll,f){var cnt=cljs.core._count(cicoll);if(cnt===0)return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null);else{var val=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,0);var n=1;while(true){if(n<cnt){var nval=function(){var G__10425=val;var G__10426=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10425,G__10426):f.call(null,G__10425,
G__10426)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10432=nval;var G__10433=n+1;val=G__10432;n=G__10433;continue}}else return val;break}}};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3=function(cicoll,f,val){var cnt=cljs.core._count(cicoll);var val__$1=val;var n=0;while(true){if(n<cnt){var nval=function(){var G__10427=val__$1;var G__10428=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10427,G__10428):f.call(null,G__10427,G__10428)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10434=nval;var G__10435=n+1;val__$1=G__10434;
n=G__10435;continue}}else return val__$1;break}};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4=function(cicoll,f,val,idx){var cnt=cljs.core._count(cicoll);var val__$1=val;var n=idx;while(true){if(n<cnt){var nval=function(){var G__10429=val__$1;var G__10430=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10429,G__10430):f.call(null,G__10429,G__10430)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10436=nval;var G__10437=n+1;val__$1=
G__10436;n=G__10437;continue}}else return val__$1;break}};cljs.core.ci_reduce.cljs$lang$maxFixedArity=4;
cljs.core.array_reduce=function cljs$core$array_reduce(var_args){var G__10439=arguments.length;switch(G__10439){case 2:return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2=function(arr,f){var cnt=arr.length;if(arr.length===0)return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null);else{var val=arr[0];var n=1;while(true){if(n<cnt){var nval=function(){var G__10440=val;var G__10441=arr[n];return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10440,G__10441):f.call(null,G__10440,G__10441)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10447=nval;
var G__10448=n+1;val=G__10447;n=G__10448;continue}}else return val;break}}};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3=function(arr,f,val){var cnt=arr.length;var val__$1=val;var n=0;while(true){if(n<cnt){var nval=function(){var G__10442=val__$1;var G__10443=arr[n];return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10442,G__10443):f.call(null,G__10442,G__10443)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10449=nval;var G__10450=n+1;val__$1=G__10449;n=G__10450;continue}}else return val__$1;break}};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4=function(arr,f,val,idx){var cnt=arr.length;var val__$1=val;var n=idx;while(true){if(n<cnt){var nval=function(){var G__10444=val__$1;var G__10445=arr[n];return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10444,G__10445):f.call(null,G__10444,G__10445)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10451=nval;var G__10452=n+1;val__$1=G__10451;n=G__10452;continue}}else return val__$1;break}};
cljs.core.array_reduce.cljs$lang$maxFixedArity=4;cljs.core.counted_QMARK_=function cljs$core$counted_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&2||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$ICounted$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,x)};
cljs.core.indexed_QMARK_=function cljs$core$indexed_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&16||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IIndexed$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,x)};
cljs.core._indexOf=function cljs$core$_indexOf(var_args){var G__10456=arguments.length;switch(G__10456){case 2:return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2=function(coll,x){return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3=function(coll,x,start){var len=cljs.core.count(coll);if(start>=len)return-1;else{var idx=start>0?start:start<0?function(){var x__8264__auto__=0;var y__8265__auto__=start+len;return x__8264__auto__>y__8265__auto__?x__8264__auto__:y__8265__auto__}():start;while(true){if(idx<len)if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,idx),x))return idx;else{var G__10458=idx+1;idx=G__10458;continue}else return-1;
break}}};cljs.core._indexOf.cljs$lang$maxFixedArity=3;cljs.core._lastIndexOf=function cljs$core$_lastIndexOf(var_args){var G__10460=arguments.length;switch(G__10460){case 2:return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2=function(coll,x){return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3=function(coll,x,start){var len=cljs.core.count(coll);if(len===0)return-1;else{var idx=start>0?function(){var x__8271__auto__=len-1;var y__8272__auto__=start;return x__8271__auto__<y__8272__auto__?x__8271__auto__:y__8272__auto__}():start<0?len+start:start;while(true){if(idx>=0)if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,idx),x))return idx;else{var G__10462=idx-1;idx=G__10462;continue}else return-1;
break}}};cljs.core._lastIndexOf.cljs$lang$maxFixedArity=3;cljs.core.IndexedSeqIterator=function(arr,i){this.arr=arr;this.i=i};cljs.core.IndexedSeqIterator.prototype.hasNext=function(){var self__=this;var _=this;return self__.i<self__.arr.length};cljs.core.IndexedSeqIterator.prototype.next=function(){var self__=this;var _=this;var ret=self__.arr[self__.i];self__.i=self__.i+1;return ret};
cljs.core.IndexedSeqIterator.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.IndexedSeqIterator.cljs$lang$type=true;cljs.core.IndexedSeqIterator.cljs$lang$ctorStr="cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/IndexedSeqIterator")};cljs.core.__GT_IndexedSeqIterator=function cljs$core$__GT_IndexedSeqIterator(arr,i){return new cljs.core.IndexedSeqIterator(arr,i)};
cljs.core.IndexedSeq=function(arr,i,meta){this.arr=arr;this.i=i;this.meta=meta;this.cljs$lang$protocol_mask$partition0$=166592766;this.cljs$lang$protocol_mask$partition1$=139264};cljs.core.IndexedSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.IndexedSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.IndexedSeq.prototype.indexOf=function(){var G__10463=null;var G__10463__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__10463__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10463=function(x,start){switch(arguments.length){case 1:return G__10463__1.call(this,x);case 2:return G__10463__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__10463.cljs$core$IFn$_invoke$arity$1=G__10463__1;G__10463.cljs$core$IFn$_invoke$arity$2=G__10463__2;return G__10463}();
cljs.core.IndexedSeq.prototype.lastIndexOf=function(){var G__10464=null;var G__10464__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__10464__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10464=function(x,start){switch(arguments.length){case 1:return G__10464__1.call(this,x);case 2:return G__10464__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__10464.cljs$core$IFn$_invoke$arity$1=G__10464__1;G__10464.cljs$core$IFn$_invoke$arity$2=G__10464__2;return G__10464}();cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,n){var self__=this;var coll__$1=this;var i__$1=n+self__.i;if(0<=i__$1&&i__$1<self__.arr.length)return self__.arr[i__$1];else throw new Error("Index out of bounds");};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,n,not_found){var self__=this;var coll__$1=this;var i__$1=n+self__.i;if(0<=i__$1&&i__$1<self__.arr.length)return self__.arr[i__$1];else return not_found};cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.IndexedSeqIterator(self__.arr,self__.i)};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.IndexedSeq(self__.arr,self__.i,self__.meta)};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1=function(_){var self__=this;var ___$1=this;if(self__.i+1<self__.arr.length)return new cljs.core.IndexedSeq(self__.arr,self__.i+1,null);else return null};cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;var x__8264__auto__=0;var y__8265__auto__=self__.arr.length-self__.i;return x__8264__auto__>y__8265__auto__?x__8264__auto__:y__8265__auto__};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1=function(coll){var self__=this;var coll__$1=this;var c=coll__$1.cljs$core$ICounted$_count$arity$1(null);if(c>0)return new cljs.core.RSeq(coll__$1,c-1,null);else return null};cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll(coll__$1)};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,self__.arr[self__.i],self__.i+1)};cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i)};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1=function(_){var self__=this;var ___$1=this;return self__.arr[self__.i]};cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(_){var self__=this;var ___$1=this;if(self__.i+1<self__.arr.length)return new cljs.core.IndexedSeq(self__.arr,self__.i+1,null);else return cljs.core.List.EMPTY};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;if(self__.i<self__.arr.length)return this$__$1;else return null};cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.IndexedSeq(self__.arr,self__.i,new_meta)};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};cljs.core.IndexedSeq.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)],null)};cljs.core.IndexedSeq.cljs$lang$type=true;
cljs.core.IndexedSeq.cljs$lang$ctorStr="cljs.core/IndexedSeq";cljs.core.IndexedSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/IndexedSeq")};cljs.core.__GT_IndexedSeq=function cljs$core$__GT_IndexedSeq(arr,i,meta){return new cljs.core.IndexedSeq(arr,i,meta)};var G__10465_10468=cljs.core.IndexedSeq.prototype;var G__10466_10469=cljs.core.ITER_SYMBOL;
var G__10467_10470=function(G__10465_10468,G__10466_10469){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__10465_10468,G__10466_10469);goog.object.set(G__10465_10468,G__10466_10469,G__10467_10470);
cljs.core.prim_seq=function cljs$core$prim_seq(var_args){var G__10472=arguments.length;switch(G__10472){case 1:return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1=function(prim){return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim,0)};cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2=function(prim,i){if(i<prim.length)return new cljs.core.IndexedSeq(prim,i,null);else return null};cljs.core.prim_seq.cljs$lang$maxFixedArity=2;
cljs.core.array_seq=function cljs$core$array_seq(var_args){var G__10475=arguments.length;switch(G__10475){case 1:return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1=function(array){return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,0)};cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2=function(array,i){return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i)};cljs.core.array_seq.cljs$lang$maxFixedArity=2;cljs.core.RSeq=function(ci,i,meta){this.ci=ci;this.i=i;this.meta=meta;this.cljs$lang$protocol_mask$partition0$=32374990;this.cljs$lang$protocol_mask$partition1$=8192};
cljs.core.RSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.RSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.RSeq.prototype.indexOf=function(){var G__10477=null;var G__10477__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__10477__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10477=function(x,start){switch(arguments.length){case 1:return G__10477__1.call(this,x);case 2:return G__10477__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__10477.cljs$core$IFn$_invoke$arity$1=G__10477__1;G__10477.cljs$core$IFn$_invoke$arity$2=G__10477__2;return G__10477}();
cljs.core.RSeq.prototype.lastIndexOf=function(){var G__10478=null;var G__10478__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__10478__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10478=function(x,start){switch(arguments.length){case 1:return G__10478__1.call(this,x);case 2:return G__10478__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__10478.cljs$core$IFn$_invoke$arity$1=G__10478__1;G__10478.cljs$core$IFn$_invoke$arity$2=G__10478__2;return G__10478}();cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.RSeq(self__.ci,self__.i,self__.meta)};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.i>0)return new cljs.core.RSeq(self__.ci,self__.i-1,null);else return null};cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.i+1};cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll(coll__$1)};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(col,f){var self__=this;var col__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,col__$1)};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(col,f,start){var self__=this;var col__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,col__$1)};cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i)};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.i>0)return new cljs.core.RSeq(self__.ci,self__.i-1,null);else return cljs.core.List.EMPTY};cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.RSeq(self__.ci,self__.i,new_meta)};cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.RSeq.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"ci","ci",2049808339,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)],null)};cljs.core.RSeq.cljs$lang$type=true;cljs.core.RSeq.cljs$lang$ctorStr="cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/RSeq")};cljs.core.__GT_RSeq=function cljs$core$__GT_RSeq(ci,i,meta){return new cljs.core.RSeq(ci,i,meta)};var G__10479_10482=cljs.core.RSeq.prototype;var G__10480_10483=cljs.core.ITER_SYMBOL;
var G__10481_10484=function(G__10479_10482,G__10480_10483){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__10479_10482,G__10480_10483);goog.object.set(G__10479_10482,G__10480_10483,G__10481_10484);cljs.core.second=function cljs$core$second(coll){return cljs.core.first(cljs.core.next(coll))};cljs.core.ffirst=function cljs$core$ffirst(coll){return cljs.core.first(cljs.core.first(coll))};cljs.core.nfirst=function cljs$core$nfirst(coll){return cljs.core.next(cljs.core.first(coll))};
cljs.core.fnext=function cljs$core$fnext(coll){return cljs.core.first(cljs.core.next(coll))};cljs.core.nnext=function cljs$core$nnext(coll){return cljs.core.next(cljs.core.next(coll))};cljs.core.last=function cljs$core$last(s){while(true){var sn=cljs.core.next(s);if(!(sn==null)){var G__10485=sn;s=G__10485;continue}else return cljs.core.first(s);break}};goog.object.set(cljs.core.IEquiv,"_",true);var G__10486_10489=cljs.core._equiv;var G__10487_10490="_";
var G__10488_10491=function(G__10486_10489,G__10487_10490){return function(x,o){return x===o}}(G__10486_10489,G__10487_10490);goog.object.set(G__10486_10489,G__10487_10490,G__10488_10491);
cljs.core.conj=function cljs$core$conj(var_args){var G__10496=arguments.length;switch(G__10496){case 0:return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10498=arguments.length;var i__9108__auto___10499=0;while(true){if(i__9108__auto___10499<len__9107__auto___10498){args_arr__9132__auto__.push(arguments[i__9108__auto___10499]);
var G__10500=i__9108__auto___10499+1;i__9108__auto___10499=G__10500;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.conj.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.PersistentVector.EMPTY};cljs.core.conj.cljs$core$IFn$_invoke$arity$1=function(coll){return coll};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2=function(coll,x){if(!(coll==null))return cljs.core._conj(coll,x);else return new cljs.core.List(null,x,null,1,null)};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic=function(coll,x,xs){while(true){if(cljs.core.truth_(xs)){var G__10501=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);var G__10502=cljs.core.first(xs);var G__10503=cljs.core.next(xs);coll=G__10501;x=G__10502;xs=G__10503;continue}else return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);break}};
cljs.core.conj.cljs$lang$applyTo=function(seq10493){var G__10494=cljs.core.first(seq10493);var seq10493__$1=cljs.core.next(seq10493);var G__10495=cljs.core.first(seq10493__$1);var seq10493__$2=cljs.core.next(seq10493__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10494,G__10495,seq10493__$2)};cljs.core.conj.cljs$lang$maxFixedArity=2;
cljs.core.empty=function cljs$core$empty(coll){if(coll==null)return null;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&4||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IEmptyableCollection$?true:false:false)return cljs.core._empty(coll);else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&4||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IEmptyableCollection$?true:!coll.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection,coll):
false:cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection,coll))return cljs.core._empty(coll);else return null};cljs.core.accumulating_seq_count=function cljs$core$accumulating_seq_count(coll){var s=cljs.core.seq(coll);var acc=0;while(true){if(cljs.core.counted_QMARK_(s))return acc+cljs.core._count(s);else{var G__10506=cljs.core.next(s);var G__10507=acc+1;s=G__10506;acc=G__10507;continue}break}};
cljs.core.count=function cljs$core$count(coll){if(!(coll==null))if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&2||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ICounted$?true:false:false)return cljs.core._count(coll);else if(cljs.core.array_QMARK_(coll))return coll.length;else if(typeof coll==="string")return coll.length;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&8388608||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeqable$?true:false:false)return cljs.core.accumulating_seq_count(coll);
else return cljs.core._count(coll);else return 0};
cljs.core.linear_traversal_nth=function cljs$core$linear_traversal_nth(var_args){var G__10511=arguments.length;switch(G__10511){case 2:return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2=function(coll,n){while(true){if(coll==null)throw new Error("Index out of bounds");else if(n===0)if(cljs.core.seq(coll))return cljs.core.first(coll);else throw new Error("Index out of bounds");else if(cljs.core.indexed_QMARK_(coll))return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);else if(cljs.core.seq(coll)){var G__10513=cljs.core.next(coll);var G__10514=n-1;coll=G__10513;n=G__10514;continue}else throw new Error("Index out of bounds");
break}};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3=function(coll,n,not_found){while(true){if(coll==null)return not_found;else if(n===0)if(cljs.core.seq(coll))return cljs.core.first(coll);else return not_found;else if(cljs.core.indexed_QMARK_(coll))return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);else if(cljs.core.seq(coll)){var G__10515=cljs.core.next(coll);var G__10516=n-1;var G__10517=not_found;coll=G__10515;n=G__10516;not_found=G__10517;continue}else return not_found;break}};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity=3;cljs.core.nth=function cljs$core$nth(var_args){var G__10519=arguments.length;switch(G__10519){case 2:return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2=function(coll,n){if(!(typeof n==="number"))throw new Error("Index argument to nth must be a number");else if(coll==null)return coll;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&16||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IIndexed$?true:false:false)return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);else if(cljs.core.array_QMARK_(coll))if(-1<n&&n<coll.length)return coll[n|0];else throw new Error("Index out of bounds");else if(typeof coll===
"string")if(-1<n&&n<coll.length)return coll.charAt(n|0);else throw new Error("Index out of bounds");else if(function(){var or__7908__auto__=!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeq$?true:false:false;if(or__7908__auto__)return or__7908__auto__;else if(!(coll==null))if(coll.cljs$lang$protocol_mask$partition0$&16777216||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISequential$)return true;else return false;else return false}())if(n<
0)throw new Error("Index out of bounds");else return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);else if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll))return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);else throw new Error(["nth not supported on this type ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3=function(coll,n,not_found){if(!(typeof n==="number"))throw new Error("Index argument to nth must be a number.");else if(coll==null)return not_found;else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&16||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IIndexed$?true:false:false)return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);else if(cljs.core.array_QMARK_(coll))if(-1<n&&n<coll.length)return coll[n|0];else return not_found;else if(typeof coll===
"string")if(-1<n&&n<coll.length)return coll.charAt(n|0);else return not_found;else if(function(){var or__7908__auto__=!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeq$?true:false:false;if(or__7908__auto__)return or__7908__auto__;else if(!(coll==null))if(coll.cljs$lang$protocol_mask$partition0$&16777216||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISequential$)return true;else return false;else return false}())if(n<0)return not_found;else return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,
n,not_found);else if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll))return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);else throw new Error(["nth not supported on this type ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));};cljs.core.nth.cljs$lang$maxFixedArity=3;
cljs.core.nthrest=function cljs$core$nthrest(coll,n){var n__$1=n;var xs=coll;while(true){var temp__4655__auto__=n__$1>0&&cljs.core.seq(xs);if(temp__4655__auto__){var xs__$1=temp__4655__auto__;var G__10529=n__$1-1;var G__10530=cljs.core.rest(xs__$1);n__$1=G__10529;xs=G__10530;continue}else return xs;break}};
cljs.core.get=function cljs$core$get(var_args){var G__10532=arguments.length;switch(G__10532){case 2:return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.get.cljs$core$IFn$_invoke$arity$2=function(o,k){if(o==null)return null;else if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&256||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$ILookup$?true:false:false)return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);else if(cljs.core.array_QMARK_(o))if(!(k==null)&&k<o.length)return o[k|0];else return null;else if(typeof o==="string")if(!(k==null)&&k<o.length)return o.charAt(k|0);else return null;else if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,
o))return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);else return null};
cljs.core.get.cljs$core$IFn$_invoke$arity$3=function(o,k,not_found){if(!(o==null))if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&256||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$ILookup$?true:false:false)return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);else if(cljs.core.array_QMARK_(o))if(!(k==null)&&(-1<k&&k<o.length))return o[k|0];else return not_found;else if(typeof o==="string")if(!(k==null)&&(-1<k&&k<o.length))return o.charAt(k|0);else return not_found;else if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,
o))return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);else return not_found;else return not_found};cljs.core.get.cljs$lang$maxFixedArity=3;
cljs.core.assoc=function cljs$core$assoc(var_args){var G__10541=arguments.length;switch(G__10541){case 3:return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10543=arguments.length;var i__9108__auto___10544=0;while(true){if(i__9108__auto___10544<len__9107__auto___10543){args_arr__9132__auto__.push(arguments[i__9108__auto___10544]);var G__10545=i__9108__auto___10544+1;i__9108__auto___10544=G__10545;
continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};cljs.core.assoc.cljs$core$IFn$_invoke$arity$3=function(coll,k,v){if(!(coll==null))return cljs.core._assoc(coll,k,v);else return cljs.core.PersistentArrayMap.createAsIfByAssoc([k,v])};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic=function(coll,k,v,kvs){while(true){var ret=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);if(cljs.core.truth_(kvs)){var G__10546=ret;var G__10547=cljs.core.first(kvs);var G__10548=cljs.core.second(kvs);var G__10549=cljs.core.nnext(kvs);coll=G__10546;k=G__10547;v=G__10548;kvs=G__10549;continue}else return ret;break}};
cljs.core.assoc.cljs$lang$applyTo=function(seq10537){var G__10538=cljs.core.first(seq10537);var seq10537__$1=cljs.core.next(seq10537);var G__10539=cljs.core.first(seq10537__$1);var seq10537__$2=cljs.core.next(seq10537__$1);var G__10540=cljs.core.first(seq10537__$2);var seq10537__$3=cljs.core.next(seq10537__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10538,G__10539,G__10540,seq10537__$3)};cljs.core.assoc.cljs$lang$maxFixedArity=3;
cljs.core.dissoc=function cljs$core$dissoc(var_args){var G__10554=arguments.length;switch(G__10554){case 1:return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10556=arguments.length;var i__9108__auto___10557=0;while(true){if(i__9108__auto___10557<len__9107__auto___10556){args_arr__9132__auto__.push(arguments[i__9108__auto___10557]);
var G__10558=i__9108__auto___10557+1;i__9108__auto___10557=G__10558;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1=function(coll){return coll};cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2=function(coll,k){if(coll==null)return null;else return cljs.core._dissoc(coll,k)};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic=function(coll,k,ks){while(true){if(coll==null)return null;else{var ret=cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);if(cljs.core.truth_(ks)){var G__10559=ret;var G__10560=cljs.core.first(ks);var G__10561=cljs.core.next(ks);coll=G__10559;k=G__10560;ks=G__10561;continue}else return ret}break}};
cljs.core.dissoc.cljs$lang$applyTo=function(seq10551){var G__10552=cljs.core.first(seq10551);var seq10551__$1=cljs.core.next(seq10551);var G__10553=cljs.core.first(seq10551__$1);var seq10551__$2=cljs.core.next(seq10551__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10552,G__10553,seq10551__$2)};cljs.core.dissoc.cljs$lang$maxFixedArity=2;
cljs.core.fn_QMARK_=function cljs$core$fn_QMARK_(f){var or__7908__auto__=goog.isFunction(f);if(or__7908__auto__)return or__7908__auto__;else if(!(f==null))if(false||cljs.core.PROTOCOL_SENTINEL===f.cljs$core$Fn$)return true;else if(!f.cljs$lang$protocol_mask$partition$)return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,f);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,f)};
cljs.core.MetaFn=function(afn,meta){this.afn=afn;this.meta=meta;this.cljs$lang$protocol_mask$partition0$=393217;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__.meta};cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(_,new_meta){var self__=this;var ___$1=this;return new cljs.core.MetaFn(self__.afn,new_meta)};cljs.core.MetaFn.prototype.cljs$core$Fn$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call=function(){var G__10565=null;var G__10565__1=function(self__){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$0?self__.afn.cljs$core$IFn$_invoke$arity$0():self__.afn.call(null)};var G__10565__2=function(self__,a){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$1?self__.afn.cljs$core$IFn$_invoke$arity$1(a):self__.afn.call(null,a)};var G__10565__3=function(self__,a,b){var self__=
this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$2?self__.afn.cljs$core$IFn$_invoke$arity$2(a,b):self__.afn.call(null,a,b)};var G__10565__4=function(self__,a,b,c){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$3?self__.afn.cljs$core$IFn$_invoke$arity$3(a,b,c):self__.afn.call(null,a,b,c)};var G__10565__5=function(self__,a,b,c,d){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$4?
self__.afn.cljs$core$IFn$_invoke$arity$4(a,b,c,d):self__.afn.call(null,a,b,c,d)};var G__10565__6=function(self__,a,b,c,d,e){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$5?self__.afn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e):self__.afn.call(null,a,b,c,d,e)};var G__10565__7=function(self__,a,b,c,d,e,f){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$6?self__.afn.cljs$core$IFn$_invoke$arity$6(a,b,
c,d,e,f):self__.afn.call(null,a,b,c,d,e,f)};var G__10565__8=function(self__,a,b,c,d,e,f,g){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$7?self__.afn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):self__.afn.call(null,a,b,c,d,e,f,g)};var G__10565__9=function(self__,a,b,c,d,e,f,g,h){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$8?self__.afn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):self__.afn.call(null,
a,b,c,d,e,f,g,h)};var G__10565__10=function(self__,a,b,c,d,e,f,g,h,i){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$9?self__.afn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):self__.afn.call(null,a,b,c,d,e,f,g,h,i)};var G__10565__11=function(self__,a,b,c,d,e,f,g,h,i,j){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$10?self__.afn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):self__.afn.call(null,
a,b,c,d,e,f,g,h,i,j)};var G__10565__12=function(self__,a,b,c,d,e,f,g,h,i,j,k){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$11?self__.afn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k)};var G__10565__13=function(self__,a,b,c,d,e,f,g,h,i,j,k,l){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$12?self__.afn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,
f,g,h,i,j,k,l):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l)};var G__10565__14=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$13?self__.afn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m)};var G__10565__15=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$14?
self__.afn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n)};var G__10565__16=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$15?self__.afn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)};var G__10565__17=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var self__=this;var self____$1=
this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$16?self__.afn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)};var G__10565__18=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$17?self__.afn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,
q)};var G__10565__19=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$18?self__.afn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)};var G__10565__20=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$19?self__.afn.cljs$core$IFn$_invoke$arity$19(a,
b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)};var G__10565__21=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){var self__=this;var self____$1=this;var _=self____$1;return self__.afn.cljs$core$IFn$_invoke$arity$20?self__.afn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)};var G__10565__22=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){var self__=
this;var self____$1=this;var _=self____$1;return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0))};G__10565=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){switch(arguments.length){case 1:return G__10565__1.call(this,self__);case 2:return G__10565__2.call(this,self__,a);case 3:return G__10565__3.call(this,self__,a,b);case 4:return G__10565__4.call(this,self__,a,b,c);case 5:return G__10565__5.call(this,
self__,a,b,c,d);case 6:return G__10565__6.call(this,self__,a,b,c,d,e);case 7:return G__10565__7.call(this,self__,a,b,c,d,e,f);case 8:return G__10565__8.call(this,self__,a,b,c,d,e,f,g);case 9:return G__10565__9.call(this,self__,a,b,c,d,e,f,g,h);case 10:return G__10565__10.call(this,self__,a,b,c,d,e,f,g,h,i);case 11:return G__10565__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);case 12:return G__10565__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);case 13:return G__10565__13.call(this,self__,a,b,c,d,e,f,g,
h,i,j,k,l);case 14:return G__10565__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);case 15:return G__10565__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);case 16:return G__10565__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);case 17:return G__10565__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);case 18:return G__10565__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);case 19:return G__10565__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);case 20:return G__10565__20.call(this,
self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);case 21:return G__10565__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);case 22:return G__10565__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest)}throw new Error("Invalid arity: "+(arguments.length-1));};G__10565.cljs$core$IFn$_invoke$arity$1=G__10565__1;G__10565.cljs$core$IFn$_invoke$arity$2=G__10565__2;G__10565.cljs$core$IFn$_invoke$arity$3=G__10565__3;G__10565.cljs$core$IFn$_invoke$arity$4=G__10565__4;G__10565.cljs$core$IFn$_invoke$arity$5=
G__10565__5;G__10565.cljs$core$IFn$_invoke$arity$6=G__10565__6;G__10565.cljs$core$IFn$_invoke$arity$7=G__10565__7;G__10565.cljs$core$IFn$_invoke$arity$8=G__10565__8;G__10565.cljs$core$IFn$_invoke$arity$9=G__10565__9;G__10565.cljs$core$IFn$_invoke$arity$10=G__10565__10;G__10565.cljs$core$IFn$_invoke$arity$11=G__10565__11;G__10565.cljs$core$IFn$_invoke$arity$12=G__10565__12;G__10565.cljs$core$IFn$_invoke$arity$13=G__10565__13;G__10565.cljs$core$IFn$_invoke$arity$14=G__10565__14;G__10565.cljs$core$IFn$_invoke$arity$15=
G__10565__15;G__10565.cljs$core$IFn$_invoke$arity$16=G__10565__16;G__10565.cljs$core$IFn$_invoke$arity$17=G__10565__17;G__10565.cljs$core$IFn$_invoke$arity$18=G__10565__18;G__10565.cljs$core$IFn$_invoke$arity$19=G__10565__19;G__10565.cljs$core$IFn$_invoke$arity$20=G__10565__20;G__10565.cljs$core$IFn$_invoke$arity$21=G__10565__21;G__10565.cljs$core$IFn$_invoke$arity$22=G__10565__22;return G__10565}();
cljs.core.MetaFn.prototype.apply=function(self__,args10564){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10564)))};cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0=function(){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$0?self__.afn.cljs$core$IFn$_invoke$arity$0():self__.afn.call(null)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1=function(a){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$1?self__.afn.cljs$core$IFn$_invoke$arity$1(a):self__.afn.call(null,a)};cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2=function(a,b){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$2?self__.afn.cljs$core$IFn$_invoke$arity$2(a,b):self__.afn.call(null,a,b)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3=function(a,b,c){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$3?self__.afn.cljs$core$IFn$_invoke$arity$3(a,b,c):self__.afn.call(null,a,b,c)};cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4=function(a,b,c,d){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$4?self__.afn.cljs$core$IFn$_invoke$arity$4(a,b,c,d):self__.afn.call(null,a,b,c,d)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5=function(a,b,c,d,e){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$5?self__.afn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e):self__.afn.call(null,a,b,c,d,e)};cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6=function(a,b,c,d,e,f){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$6?self__.afn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f):self__.afn.call(null,a,b,c,d,e,f)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7=function(a,b,c,d,e,f,g){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$7?self__.afn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):self__.afn.call(null,a,b,c,d,e,f,g)};cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8=function(a,b,c,d,e,f,g,h){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$8?self__.afn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):self__.afn.call(null,a,b,c,d,e,f,g,h)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9=function(a,b,c,d,e,f,g,h,i){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$9?self__.afn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):self__.afn.call(null,a,b,c,d,e,f,g,h,i)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10=function(a,b,c,d,e,f,g,h,i,j){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$10?self__.afn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11=function(a,b,c,d,e,f,g,h,i,j,k){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$11?self__.afn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12=function(a,b,c,d,e,f,g,h,i,j,k,l){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$12?self__.afn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13=function(a,b,c,d,e,f,g,h,i,j,k,l,m){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$13?self__.afn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$14?self__.afn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$15?self__.afn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$16?self__.afn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$17?self__.afn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$18?self__.afn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$19?self__.afn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){var self__=this;var _=this;return self__.afn.cljs$core$IFn$_invoke$arity$20?self__.afn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){var self__=this;var _=this;return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0))};
cljs.core.MetaFn.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"afn","afn",216963467,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)],null)};cljs.core.MetaFn.cljs$lang$type=true;cljs.core.MetaFn.cljs$lang$ctorStr="cljs.core/MetaFn";cljs.core.MetaFn.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/MetaFn")};
cljs.core.__GT_MetaFn=function cljs$core$__GT_MetaFn(afn,meta){return new cljs.core.MetaFn(afn,meta)};cljs.core.with_meta=function cljs$core$with_meta(o,meta){if(goog.isFunction(o))return new cljs.core.MetaFn(o,meta);else if(o==null)return null;else return cljs.core._with_meta(o,meta)};
cljs.core.meta=function cljs$core$meta(o){if(function(){var and__7893__auto__=!(o==null);if(and__7893__auto__)if(!(o==null))if(o.cljs$lang$protocol_mask$partition0$&131072||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IMeta$)return true;else if(!o.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,o);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,o);else return and__7893__auto__}())return cljs.core._meta(o);else return null};
cljs.core.peek=function cljs$core$peek(coll){if(coll==null)return null;else return cljs.core._peek(coll)};cljs.core.pop=function cljs$core$pop(coll){if(coll==null)return null;else return cljs.core._pop(coll)};
cljs.core.disj=function cljs$core$disj(var_args){var G__10572=arguments.length;switch(G__10572){case 1:return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10574=arguments.length;var i__9108__auto___10575=0;while(true){if(i__9108__auto___10575<len__9107__auto___10574){args_arr__9132__auto__.push(arguments[i__9108__auto___10575]);
var G__10576=i__9108__auto___10575+1;i__9108__auto___10575=G__10576;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.disj.cljs$core$IFn$_invoke$arity$1=function(coll){return coll};cljs.core.disj.cljs$core$IFn$_invoke$arity$2=function(coll,k){if(coll==null)return null;else return cljs.core._disjoin(coll,k)};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic=function(coll,k,ks){while(true){if(coll==null)return null;else{var ret=cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll,k);if(cljs.core.truth_(ks)){var G__10577=ret;var G__10578=cljs.core.first(ks);var G__10579=cljs.core.next(ks);coll=G__10577;k=G__10578;ks=G__10579;continue}else return ret}break}};
cljs.core.disj.cljs$lang$applyTo=function(seq10569){var G__10570=cljs.core.first(seq10569);var seq10569__$1=cljs.core.next(seq10569);var G__10571=cljs.core.first(seq10569__$1);var seq10569__$2=cljs.core.next(seq10569__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10570,G__10571,seq10569__$2)};cljs.core.disj.cljs$lang$maxFixedArity=2;cljs.core.empty_QMARK_=function cljs$core$empty_QMARK_(coll){return coll==null||cljs.core.not(cljs.core.seq(coll))};
cljs.core.coll_QMARK_=function cljs$core$coll_QMARK_(x){if(x==null)return false;else if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&8||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$ICollection$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,x)};
cljs.core.set_QMARK_=function cljs$core$set_QMARK_(x){if(x==null)return false;else if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&4096||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$ISet$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x)};
cljs.core.associative_QMARK_=function cljs$core$associative_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&512||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IAssociative$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,x)};
cljs.core.ifind_QMARK_=function cljs$core$ifind_QMARK_(x){if(!(x==null))if(false||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IFind$)return true;else if(!x.cljs$lang$protocol_mask$partition$)return cljs.core.native_satisfies_QMARK_(cljs.core.IFind,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IFind,x)};
cljs.core.sequential_QMARK_=function cljs$core$sequential_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&16777216||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$ISequential$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x)};
cljs.core.sorted_QMARK_=function cljs$core$sorted_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&268435456||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$ISorted$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,x)};
cljs.core.reduceable_QMARK_=function cljs$core$reduceable_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&524288||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IReduce$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,x)};
cljs.core.map_QMARK_=function cljs$core$map_QMARK_(x){if(x==null)return false;else if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&1024||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IMap$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x)};
cljs.core.record_QMARK_=function cljs$core$record_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&67108864||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IRecord$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord,x)};
cljs.core.vector_QMARK_=function cljs$core$vector_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&16384||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IVector$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,x)};
cljs.core.chunked_seq_QMARK_=function cljs$core$chunked_seq_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition1$&512||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IChunkedSeq$)return true;else return false;else return false};
cljs.core.js_obj=function cljs$core$js_obj(var_args){var G__10593=arguments.length;switch(G__10593){case 0:return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();break;default:var args_arr__9132__auto__=[];var len__9107__auto___10597=arguments.length;var i__9108__auto___10598=0;while(true){if(i__9108__auto___10598<len__9107__auto___10597){args_arr__9132__auto__.push(arguments[i__9108__auto___10598]);var G__10599=i__9108__auto___10598+1;i__9108__auto___10598=G__10599;continue}else;break}var argseq__9133__auto__=
new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(0),0,null);return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__9133__auto__)}};cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0=function(){return{}};cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic=function(keyvals){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create,keyvals)};cljs.core.js_obj.cljs$lang$applyTo=function(seq10592){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10592))};
cljs.core.js_obj.cljs$lang$maxFixedArity=0;cljs.core.js_keys=function cljs$core$js_keys(obj){return goog.object.getKeys(obj)};cljs.core.js_delete=function cljs$core$js_delete(obj,key){return delete obj[key]};cljs.core.array_copy=function cljs$core$array_copy(from,i,to,j,len){var i__$1=i;var j__$1=j;var len__$1=len;while(true){if(len__$1===0)return to;else{to[j__$1]=from[i__$1];var G__10600=i__$1+1;var G__10601=j__$1+1;var G__10602=len__$1-1;i__$1=G__10600;j__$1=G__10601;len__$1=G__10602;continue}break}};
cljs.core.array_copy_downward=function cljs$core$array_copy_downward(from,i,to,j,len){var i__$1=i+(len-1);var j__$1=j+(len-1);var len__$1=len;while(true){if(len__$1===0)return to;else{to[j__$1]=from[i__$1];var G__10603=i__$1-1;var G__10604=j__$1-1;var G__10605=len__$1-1;i__$1=G__10603;j__$1=G__10604;len__$1=G__10605;continue}break}};cljs.core.lookup_sentinel={};cljs.core.false_QMARK_=function cljs$core$false_QMARK_(x){return x===false};
cljs.core.true_QMARK_=function cljs$core$true_QMARK_(x){return x===true};cljs.core.boolean_QMARK_=function cljs$core$boolean_QMARK_(x){return x===true||x===false};cljs.core.undefined_QMARK_=function cljs$core$undefined_QMARK_(x){return void 0===x};
cljs.core.seq_QMARK_=function cljs$core$seq_QMARK_(s){if(s==null)return false;else if(!(s==null))if(s.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===s.cljs$core$ISeq$)return true;else if(!s.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,s);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,s)};
cljs.core.seqable_QMARK_=function cljs$core$seqable_QMARK_(s){var or__7908__auto__=s==null;if(or__7908__auto__)return or__7908__auto__;else{var or__7908__auto____$1=!(s==null)?s.cljs$lang$protocol_mask$partition0$&8388608||cljs.core.PROTOCOL_SENTINEL===s.cljs$core$ISeqable$?true:!s.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,s):false:cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,s);if(or__7908__auto____$1)return or__7908__auto____$1;else return cljs.core.array_QMARK_(s)||
typeof s==="string"}};cljs.core.boolean$=function cljs$core$boolean(x){if(x==null)return false;else if(x===false)return false;else return true};
cljs.core.ifn_QMARK_=function cljs$core$ifn_QMARK_(f){var or__7908__auto__=cljs.core.fn_QMARK_(f);if(or__7908__auto__)return or__7908__auto__;else if(!(f==null))if(f.cljs$lang$protocol_mask$partition0$&1||cljs.core.PROTOCOL_SENTINEL===f.cljs$core$IFn$)return true;else if(!f.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,f);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,f)};
cljs.core.integer_QMARK_=function cljs$core$integer_QMARK_(n){return typeof n==="number"&&!isNaN(n)&&!(n===Infinity)&&parseFloat(n)===parseInt(n,10)};cljs.core.int_QMARK_=function cljs$core$int_QMARK_(x){return cljs.core.integer_QMARK_(x)||x instanceof goog.math.Integer||x instanceof goog.math.Long};
cljs.core.pos_int_QMARK_=function cljs$core$pos_int_QMARK_(x){if(cljs.core.integer_QMARK_(x))return x>0;else if(x instanceof goog.math.Integer)return cljs.core.not(x.isNegative())&&cljs.core.not(x.isZero());else if(x instanceof goog.math.Long)return cljs.core.not(x.isNegative())&&cljs.core.not(x.isZero());else return false};
cljs.core.neg_int_QMARK_=function cljs$core$neg_int_QMARK_(x){if(cljs.core.integer_QMARK_(x))return x<0;else if(x instanceof goog.math.Integer)return x.isNegative();else if(x instanceof goog.math.Long)return x.isNegative();else return false};cljs.core.nat_int_QMARK_=function cljs$core$nat_int_QMARK_(x){if(cljs.core.integer_QMARK_(x))return!(x<0);else if(x instanceof goog.math.Integer)return cljs.core.not(x.isNegative());else if(x instanceof goog.math.Long)return cljs.core.not(x.isNegative());else return false};
cljs.core.float_QMARK_=function cljs$core$float_QMARK_(x){return typeof x==="number"};cljs.core.double_QMARK_=function cljs$core$double_QMARK_(x){return typeof x==="number"};cljs.core.infinite_QMARK_=function cljs$core$infinite_QMARK_(x){return x===Number.POSITIVE_INFINITY||x===Number.NEGATIVE_INFINITY};cljs.core.contains_QMARK_=function cljs$core$contains_QMARK_(coll,v){if(cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel)===cljs.core.lookup_sentinel)return false;else return true};
cljs.core.find=function cljs$core$find(coll,k){if(cljs.core.ifind_QMARK_(coll))return cljs.core._find(coll,k);else if(!(coll==null)&&cljs.core.associative_QMARK_(coll)&&cljs.core.contains_QMARK_(coll,k))return new cljs.core.MapEntry(k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k),null);else return null};
cljs.core.distinct_QMARK_=function cljs$core$distinct_QMARK_(var_args){var G__10618=arguments.length;switch(G__10618){case 1:return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10620=arguments.length;var i__9108__auto___10621=0;while(true){if(i__9108__auto___10621<len__9107__auto___10620){args_arr__9132__auto__.push(arguments[i__9108__auto___10621]);
var G__10622=i__9108__auto___10621+1;i__9108__auto___10621=G__10622;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1=function(x){return true};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2=function(x,y){return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){if(!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){var s=cljs.core.PersistentHashSet.createAsIfByAssoc([x,y]);var xs=more;while(true){var x__$1=cljs.core.first(xs);var etc=cljs.core.next(xs);if(cljs.core.truth_(xs))if(cljs.core.contains_QMARK_(s,x__$1))return false;else{var G__10623=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);var G__10624=etc;s=G__10623;xs=G__10624;continue}else return true;break}}else return false};
cljs.core.distinct_QMARK_.cljs$lang$applyTo=function(seq10615){var G__10616=cljs.core.first(seq10615);var seq10615__$1=cljs.core.next(seq10615);var G__10617=cljs.core.first(seq10615__$1);var seq10615__$2=cljs.core.next(seq10615__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10616,G__10617,seq10615__$2)};cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity=2;
cljs.core.compare=function cljs$core$compare(x,y){if(x===y)return 0;else if(x==null)return-1;else if(y==null)return 1;else if(typeof x==="number")if(typeof y==="number")return goog.array.defaultCompare(x,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));else if(!(x==null)?x.cljs$lang$protocol_mask$partition1$&2048||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IComparable$?true:!x.cljs$lang$protocol_mask$partition1$?
cljs.core.native_satisfies_QMARK_(cljs.core.IComparable,x):false:cljs.core.native_satisfies_QMARK_(cljs.core.IComparable,x))return cljs.core._compare(x,y);else if((typeof x==="string"||cljs.core.array_QMARK_(x)||x===true||x===false)&&cljs.core.type(x)===cljs.core.type(y))return goog.array.defaultCompare(x,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};
cljs.core.compare_indexed=function cljs$core$compare_indexed(var_args){var G__10627=arguments.length;switch(G__10627){case 2:return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 4:return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2=function(xs,ys){var xl=cljs.core.count(xs);var yl=cljs.core.count(ys);if(xl<yl)return-1;else if(xl>yl)return 1;else if(xl===0)return 0;else return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,0)};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4=function(xs,ys,len,n){while(true){var d=cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));if(d===0&&n+1<len){var G__10629=xs;var G__10630=ys;var G__10631=len;var G__10632=n+1;xs=G__10629;ys=G__10630;len=G__10631;n=G__10632;continue}else return d;break}};cljs.core.compare_indexed.cljs$lang$maxFixedArity=4;
cljs.core.fn__GT_comparator=function cljs$core$fn__GT_comparator(f){if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare))return cljs.core.compare;else return function(x,y){var r=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(x,y):f.call(null,x,y);if(typeof r==="number")return r;else if(cljs.core.truth_(r))return-1;else if(cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(y,x):f.call(null,y,x)))return 1;else return 0}};
cljs.core.sort=function cljs$core$sort(var_args){var G__10634=arguments.length;switch(G__10634){case 1:return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1=function(coll){return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll)};cljs.core.sort.cljs$core$IFn$_invoke$arity$2=function(comp,coll){if(cljs.core.seq(coll)){var a=cljs.core.to_array(coll);var G__10635_10638=a;var G__10636_10639=cljs.core.fn__GT_comparator(comp);goog.array.stableSort(G__10635_10638,G__10636_10639);return cljs.core.seq(a)}else return cljs.core.List.EMPTY};cljs.core.sort.cljs$lang$maxFixedArity=2;
cljs.core.sort_by=function cljs$core$sort_by(var_args){var G__10641=arguments.length;switch(G__10641){case 2:return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2=function(keyfn,coll){return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll)};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3=function(keyfn,comp,coll){return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x,y){var G__10643=keyfn.cljs$core$IFn$_invoke$arity$1?keyfn.cljs$core$IFn$_invoke$arity$1(x):keyfn.call(null,x);var G__10644=keyfn.cljs$core$IFn$_invoke$arity$1?keyfn.cljs$core$IFn$_invoke$arity$1(y):keyfn.call(null,y);var fexpr__10642=cljs.core.fn__GT_comparator(comp);return fexpr__10642.cljs$core$IFn$_invoke$arity$2?fexpr__10642.cljs$core$IFn$_invoke$arity$2(G__10643,
G__10644):fexpr__10642.call(null,G__10643,G__10644)},coll)};cljs.core.sort_by.cljs$lang$maxFixedArity=3;
cljs.core.seq_reduce=function cljs$core$seq_reduce(var_args){var G__10647=arguments.length;switch(G__10647){case 2:return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2=function(f,coll){var temp__4655__auto__=cljs.core.seq(coll);if(temp__4655__auto__){var s=temp__4655__auto__;return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.next(s))}else return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null)};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3=function(f,val,coll){var val__$1=val;var coll__$1=cljs.core.seq(coll);while(true){if(coll__$1){var nval=function(){var G__10648=val__$1;var G__10649=cljs.core.first(coll__$1);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10648,G__10649):f.call(null,G__10648,G__10649)}();if(cljs.core.reduced_QMARK_(nval))return cljs.core.deref(nval);else{var G__10651=nval;var G__10652=cljs.core.next(coll__$1);val__$1=G__10651;coll__$1=G__10652;
continue}}else return val__$1;break}};cljs.core.seq_reduce.cljs$lang$maxFixedArity=3;cljs.core.shuffle=function cljs$core$shuffle(coll){var a=cljs.core.to_array(coll);goog.array.shuffle(a);return cljs.core.vec(a)};
cljs.core.iter_reduce=function cljs$core$iter_reduce(var_args){var G__10654=arguments.length;switch(G__10654){case 2:return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2=function(coll,f){var iter=cljs.core._iterator(coll);if(cljs.core.truth_(iter.hasNext())){var init=iter.next();var acc=init;while(true){if(iter.hasNext()){var nacc=function(){var G__10655=acc;var G__10656=iter.next();return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10655,G__10656):f.call(null,G__10655,G__10656)}();if(cljs.core.reduced_QMARK_(nacc))return cljs.core.deref(nacc);else{var G__10660=nacc;acc=G__10660;continue}}else return acc;
break}}else return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null)};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3=function(coll,f,init){var iter=cljs.core._iterator(coll);var acc=init;while(true){if(iter.hasNext()){var nacc=function(){var G__10657=acc;var G__10658=iter.next();return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__10657,G__10658):f.call(null,G__10657,G__10658)}();if(cljs.core.reduced_QMARK_(nacc))return cljs.core.deref(nacc);else{var G__10661=nacc;acc=G__10661;continue}}else return acc;break}};
cljs.core.iter_reduce.cljs$lang$maxFixedArity=3;cljs.core.reduce=function cljs$core$reduce(var_args){var G__10663=arguments.length;switch(G__10663){case 2:return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2=function(f,coll){if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&524288||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IReduce$?true:false:false)return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);else if(cljs.core.array_QMARK_(coll))return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);else if(typeof coll==="string")return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);else if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,
coll))return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);else if(cljs.core.iterable_QMARK_(coll))return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);else return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll)};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3=function(f,val,coll){if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&524288||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IReduce$?true:false:false)return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);else if(cljs.core.array_QMARK_(coll))return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);else if(typeof coll==="string")return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);else if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,
coll))return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);else if(cljs.core.iterable_QMARK_(coll))return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);else return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll)};cljs.core.reduce.cljs$lang$maxFixedArity=3;cljs.core.reduce_kv=function cljs$core$reduce_kv(f,init,coll){if(!(coll==null))return cljs.core._kv_reduce(coll,f,init);else return init};cljs.core.identity=function cljs$core$identity(x){return x};
cljs.core.completing=function cljs$core$completing(var_args){var G__10668=arguments.length;switch(G__10668){case 1:return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1=function(f){return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity)};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2=function(f,cf){return function(){var G__10670=null;var G__10670__0=function(){return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null)};var G__10670__1=function(x){return cf.cljs$core$IFn$_invoke$arity$1?cf.cljs$core$IFn$_invoke$arity$1(x):cf.call(null,x)};var G__10670__2=function(x,y){return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(x,y):f.call(null,x,y)};G__10670=function(x,y){switch(arguments.length){case 0:return G__10670__0.call(this);
case 1:return G__10670__1.call(this,x);case 2:return G__10670__2.call(this,x,y)}throw new Error("Invalid arity: "+arguments.length);};G__10670.cljs$core$IFn$_invoke$arity$0=G__10670__0;G__10670.cljs$core$IFn$_invoke$arity$1=G__10670__1;G__10670.cljs$core$IFn$_invoke$arity$2=G__10670__2;return G__10670}()};cljs.core.completing.cljs$lang$maxFixedArity=2;
cljs.core.transduce=function cljs$core$transduce(var_args){var G__10672=arguments.length;switch(G__10672){case 3:return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3=function(xform,f,coll){return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,f,f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null),coll)};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4=function(xform,f,init,coll){var f__$1=xform.cljs$core$IFn$_invoke$arity$1?xform.cljs$core$IFn$_invoke$arity$1(f):xform.call(null,f);var ret=cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);return f__$1.cljs$core$IFn$_invoke$arity$1?f__$1.cljs$core$IFn$_invoke$arity$1(ret):f__$1.call(null,ret)};cljs.core.transduce.cljs$lang$maxFixedArity=4;
cljs.core._PLUS_=function cljs$core$_PLUS_(var_args){var G__10678=arguments.length;switch(G__10678){case 0:return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10680=arguments.length;var i__9108__auto___10681=0;while(true){if(i__9108__auto___10681<len__9107__auto___10680){args_arr__9132__auto__.push(arguments[i__9108__auto___10681]);
var G__10682=i__9108__auto___10681+1;i__9108__auto___10681=G__10682;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0=function(){return 0};cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x+y};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,x+y,more)};cljs.core._PLUS_.cljs$lang$applyTo=function(seq10675){var G__10676=cljs.core.first(seq10675);var seq10675__$1=cljs.core.next(seq10675);var G__10677=cljs.core.first(seq10675__$1);var seq10675__$2=cljs.core.next(seq10675__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10676,G__10677,seq10675__$2)};
cljs.core._PLUS_.cljs$lang$maxFixedArity=2;
cljs.core._=function cljs$core$_(var_args){var G__10687=arguments.length;switch(G__10687){case 1:return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10689=arguments.length;var i__9108__auto___10690=0;while(true){if(i__9108__auto___10690<len__9107__auto___10689){args_arr__9132__auto__.push(arguments[i__9108__auto___10690]);var G__10691=
i__9108__auto___10690+1;i__9108__auto___10690=G__10691;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._.cljs$core$IFn$_invoke$arity$1=function(x){return-x};cljs.core._.cljs$core$IFn$_invoke$arity$2=function(x,y){return x-y};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._,x-y,more)};cljs.core._.cljs$lang$applyTo=function(seq10684){var G__10685=cljs.core.first(seq10684);var seq10684__$1=cljs.core.next(seq10684);var G__10686=cljs.core.first(seq10684__$1);var seq10684__$2=cljs.core.next(seq10684__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10685,G__10686,seq10684__$2)};
cljs.core._.cljs$lang$maxFixedArity=2;
cljs.core._STAR_=function cljs$core$_STAR_(var_args){var G__10696=arguments.length;switch(G__10696){case 0:return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10698=arguments.length;var i__9108__auto___10699=0;while(true){if(i__9108__auto___10699<len__9107__auto___10698){args_arr__9132__auto__.push(arguments[i__9108__auto___10699]);
var G__10700=i__9108__auto___10699+1;i__9108__auto___10699=G__10700;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0=function(){return 1};cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x*y};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_,x*y,more)};cljs.core._STAR_.cljs$lang$applyTo=function(seq10693){var G__10694=cljs.core.first(seq10693);var seq10693__$1=cljs.core.next(seq10693);var G__10695=cljs.core.first(seq10693__$1);var seq10693__$2=cljs.core.next(seq10693__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10694,G__10695,seq10693__$2)};
cljs.core._STAR_.cljs$lang$maxFixedArity=2;
cljs.core._SLASH_=function cljs$core$_SLASH_(var_args){var G__10705=arguments.length;switch(G__10705){case 1:return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10707=arguments.length;var i__9108__auto___10708=0;while(true){if(i__9108__auto___10708<len__9107__auto___10707){args_arr__9132__auto__.push(arguments[i__9108__auto___10708]);var G__10709=
i__9108__auto___10708+1;i__9108__auto___10708=G__10709;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1=function(x){return 1/x};cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x/y};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_,x/y,more)};cljs.core._SLASH_.cljs$lang$applyTo=function(seq10702){var G__10703=cljs.core.first(seq10702);var seq10702__$1=cljs.core.next(seq10702);var G__10704=cljs.core.first(seq10702__$1);var seq10702__$2=cljs.core.next(seq10702__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10703,G__10704,seq10702__$2)};
cljs.core._SLASH_.cljs$lang$maxFixedArity=2;
cljs.core._LT_=function cljs$core$_LT_(var_args){var G__10714=arguments.length;switch(G__10714){case 1:return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10716=arguments.length;var i__9108__auto___10717=0;while(true){if(i__9108__auto___10717<len__9107__auto___10716){args_arr__9132__auto__.push(arguments[i__9108__auto___10717]);var G__10718=
i__9108__auto___10717+1;i__9108__auto___10717=G__10718;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._LT_.cljs$core$IFn$_invoke$arity$1=function(x){return true};cljs.core._LT_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x<y};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){while(true){if(x<y)if(cljs.core.next(more)){var G__10719=y;var G__10720=cljs.core.first(more);var G__10721=cljs.core.next(more);x=G__10719;y=G__10720;more=G__10721;continue}else return y<cljs.core.first(more);else return false;break}};
cljs.core._LT_.cljs$lang$applyTo=function(seq10711){var G__10712=cljs.core.first(seq10711);var seq10711__$1=cljs.core.next(seq10711);var G__10713=cljs.core.first(seq10711__$1);var seq10711__$2=cljs.core.next(seq10711__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10712,G__10713,seq10711__$2)};cljs.core._LT_.cljs$lang$maxFixedArity=2;
cljs.core._LT__EQ_=function cljs$core$_LT__EQ_(var_args){var G__10726=arguments.length;switch(G__10726){case 1:return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10728=arguments.length;var i__9108__auto___10729=0;while(true){if(i__9108__auto___10729<len__9107__auto___10728){args_arr__9132__auto__.push(arguments[i__9108__auto___10729]);
var G__10730=i__9108__auto___10729+1;i__9108__auto___10729=G__10730;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1=function(x){return true};cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x<=y};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){while(true){if(x<=y)if(cljs.core.next(more)){var G__10731=y;var G__10732=cljs.core.first(more);var G__10733=cljs.core.next(more);x=G__10731;y=G__10732;more=G__10733;continue}else return y<=cljs.core.first(more);else return false;break}};
cljs.core._LT__EQ_.cljs$lang$applyTo=function(seq10723){var G__10724=cljs.core.first(seq10723);var seq10723__$1=cljs.core.next(seq10723);var G__10725=cljs.core.first(seq10723__$1);var seq10723__$2=cljs.core.next(seq10723__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10724,G__10725,seq10723__$2)};cljs.core._LT__EQ_.cljs$lang$maxFixedArity=2;
cljs.core._GT_=function cljs$core$_GT_(var_args){var G__10738=arguments.length;switch(G__10738){case 1:return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10740=arguments.length;var i__9108__auto___10741=0;while(true){if(i__9108__auto___10741<len__9107__auto___10740){args_arr__9132__auto__.push(arguments[i__9108__auto___10741]);
var G__10742=i__9108__auto___10741+1;i__9108__auto___10741=G__10742;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._GT_.cljs$core$IFn$_invoke$arity$1=function(x){return true};cljs.core._GT_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x>y};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){while(true){if(x>y)if(cljs.core.next(more)){var G__10743=y;var G__10744=cljs.core.first(more);var G__10745=cljs.core.next(more);x=G__10743;y=G__10744;more=G__10745;continue}else return y>cljs.core.first(more);else return false;break}};
cljs.core._GT_.cljs$lang$applyTo=function(seq10735){var G__10736=cljs.core.first(seq10735);var seq10735__$1=cljs.core.next(seq10735);var G__10737=cljs.core.first(seq10735__$1);var seq10735__$2=cljs.core.next(seq10735__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10736,G__10737,seq10735__$2)};cljs.core._GT_.cljs$lang$maxFixedArity=2;
cljs.core._GT__EQ_=function cljs$core$_GT__EQ_(var_args){var G__10750=arguments.length;switch(G__10750){case 1:return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10752=arguments.length;var i__9108__auto___10753=0;while(true){if(i__9108__auto___10753<len__9107__auto___10752){args_arr__9132__auto__.push(arguments[i__9108__auto___10753]);
var G__10754=i__9108__auto___10753+1;i__9108__auto___10753=G__10754;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1=function(x){return true};cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2=function(x,y){return x>=y};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){while(true){if(x>=y)if(cljs.core.next(more)){var G__10755=y;var G__10756=cljs.core.first(more);var G__10757=cljs.core.next(more);x=G__10755;y=G__10756;more=G__10757;continue}else return y>=cljs.core.first(more);else return false;break}};
cljs.core._GT__EQ_.cljs$lang$applyTo=function(seq10747){var G__10748=cljs.core.first(seq10747);var seq10747__$1=cljs.core.next(seq10747);var G__10749=cljs.core.first(seq10747__$1);var seq10747__$2=cljs.core.next(seq10747__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10748,G__10749,seq10747__$2)};cljs.core._GT__EQ_.cljs$lang$maxFixedArity=2;cljs.core.dec=function cljs$core$dec(x){return x-1};
cljs.core.max=function cljs$core$max(var_args){var G__10762=arguments.length;switch(G__10762){case 1:return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10764=arguments.length;var i__9108__auto___10765=0;while(true){if(i__9108__auto___10765<len__9107__auto___10764){args_arr__9132__auto__.push(arguments[i__9108__auto___10765]);var G__10766=
i__9108__auto___10765+1;i__9108__auto___10765=G__10766;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.max.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core.max.cljs$core$IFn$_invoke$arity$2=function(x,y){var x__8264__auto__=x;var y__8265__auto__=y;return x__8264__auto__>y__8265__auto__?x__8264__auto__:y__8265__auto__};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max,function(){var x__8264__auto__=x;var y__8265__auto__=y;return x__8264__auto__>y__8265__auto__?x__8264__auto__:y__8265__auto__}(),more)};
cljs.core.max.cljs$lang$applyTo=function(seq10759){var G__10760=cljs.core.first(seq10759);var seq10759__$1=cljs.core.next(seq10759);var G__10761=cljs.core.first(seq10759__$1);var seq10759__$2=cljs.core.next(seq10759__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10760,G__10761,seq10759__$2)};cljs.core.max.cljs$lang$maxFixedArity=2;
cljs.core.min=function cljs$core$min(var_args){var G__10771=arguments.length;switch(G__10771){case 1:return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10773=arguments.length;var i__9108__auto___10774=0;while(true){if(i__9108__auto___10774<len__9107__auto___10773){args_arr__9132__auto__.push(arguments[i__9108__auto___10774]);var G__10775=
i__9108__auto___10774+1;i__9108__auto___10774=G__10775;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.min.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core.min.cljs$core$IFn$_invoke$arity$2=function(x,y){var x__8271__auto__=x;var y__8272__auto__=y;return x__8271__auto__<y__8272__auto__?x__8271__auto__:y__8272__auto__};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min,function(){var x__8271__auto__=x;var y__8272__auto__=y;return x__8271__auto__<y__8272__auto__?x__8271__auto__:y__8272__auto__}(),more)};
cljs.core.min.cljs$lang$applyTo=function(seq10768){var G__10769=cljs.core.first(seq10768);var seq10768__$1=cljs.core.next(seq10768);var G__10770=cljs.core.first(seq10768__$1);var seq10768__$2=cljs.core.next(seq10768__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10769,G__10770,seq10768__$2)};cljs.core.min.cljs$lang$maxFixedArity=2;cljs.core.byte$=function cljs$core$byte(x){return x};
cljs.core.char$=function cljs$core$char(x){if(typeof x==="number")return String.fromCharCode(x);else if(typeof x==="string"&&x.length===1)return x;else throw new Error("Argument to char must be a character or number");};cljs.core.short$=function cljs$core$short(x){return x};cljs.core.float$=function cljs$core$float(x){return x};cljs.core.double$=function cljs$core$double(x){return x};cljs.core.unchecked_byte=function cljs$core$unchecked_byte(x){return x};cljs.core.unchecked_char=function cljs$core$unchecked_char(x){return x};
cljs.core.unchecked_short=function cljs$core$unchecked_short(x){return x};cljs.core.unchecked_float=function cljs$core$unchecked_float(x){return x};cljs.core.unchecked_double=function cljs$core$unchecked_double(x){return x};
cljs.core.unchecked_add=function cljs$core$unchecked_add(var_args){var G__10780=arguments.length;switch(G__10780){case 0:return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10782=arguments.length;var i__9108__auto___10783=0;while(true){if(i__9108__auto___10783<
len__9107__auto___10782){args_arr__9132__auto__.push(arguments[i__9108__auto___10783]);var G__10784=i__9108__auto___10783+1;i__9108__auto___10783=G__10784;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0=function(){return 0};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2=function(x,y){return x+y};cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add,x+y,more)};
cljs.core.unchecked_add.cljs$lang$applyTo=function(seq10777){var G__10778=cljs.core.first(seq10777);var seq10777__$1=cljs.core.next(seq10777);var G__10779=cljs.core.first(seq10777__$1);var seq10777__$2=cljs.core.next(seq10777__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10778,G__10779,seq10777__$2)};cljs.core.unchecked_add.cljs$lang$maxFixedArity=2;
cljs.core.unchecked_add_int=function cljs$core$unchecked_add_int(var_args){var G__10789=arguments.length;switch(G__10789){case 0:return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10791=arguments.length;var i__9108__auto___10792=
0;while(true){if(i__9108__auto___10792<len__9107__auto___10791){args_arr__9132__auto__.push(arguments[i__9108__auto___10792]);var G__10793=i__9108__auto___10792+1;i__9108__auto___10792=G__10793;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0=function(){return 0};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2=function(x,y){return x+y};cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int,x+y,more)};
cljs.core.unchecked_add_int.cljs$lang$applyTo=function(seq10786){var G__10787=cljs.core.first(seq10786);var seq10786__$1=cljs.core.next(seq10786);var G__10788=cljs.core.first(seq10786__$1);var seq10786__$2=cljs.core.next(seq10786__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10787,G__10788,seq10786__$2)};cljs.core.unchecked_add_int.cljs$lang$maxFixedArity=2;cljs.core.unchecked_dec=function cljs$core$unchecked_dec(x){return x-1};
cljs.core.unchecked_dec_int=function cljs$core$unchecked_dec_int(x){return x-1};
cljs.core.unchecked_divide_int=function cljs$core$unchecked_divide_int(var_args){var G__10798=arguments.length;switch(G__10798){case 1:return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10800=arguments.length;var i__9108__auto___10801=0;while(true){if(i__9108__auto___10801<len__9107__auto___10800){args_arr__9132__auto__.push(arguments[i__9108__auto___10801]);
var G__10802=i__9108__auto___10801+1;i__9108__auto___10801=G__10802;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1=function(x){return 1/x};cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2=function(x,y){return x/y};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int,x/y,more)};
cljs.core.unchecked_divide_int.cljs$lang$applyTo=function(seq10795){var G__10796=cljs.core.first(seq10795);var seq10795__$1=cljs.core.next(seq10795);var G__10797=cljs.core.first(seq10795__$1);var seq10795__$2=cljs.core.next(seq10795__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10796,G__10797,seq10795__$2)};cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity=2;cljs.core.unchecked_inc=function cljs$core$unchecked_inc(x){return x+1};
cljs.core.unchecked_inc_int=function cljs$core$unchecked_inc_int(x){return x+1};
cljs.core.unchecked_multiply=function cljs$core$unchecked_multiply(var_args){var G__10807=arguments.length;switch(G__10807){case 0:return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10809=arguments.length;var i__9108__auto___10810=
0;while(true){if(i__9108__auto___10810<len__9107__auto___10809){args_arr__9132__auto__.push(arguments[i__9108__auto___10810]);var G__10811=i__9108__auto___10810+1;i__9108__auto___10810=G__10811;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0=function(){return 1};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2=function(x,y){return x*y};cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply,x*y,more)};
cljs.core.unchecked_multiply.cljs$lang$applyTo=function(seq10804){var G__10805=cljs.core.first(seq10804);var seq10804__$1=cljs.core.next(seq10804);var G__10806=cljs.core.first(seq10804__$1);var seq10804__$2=cljs.core.next(seq10804__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10805,G__10806,seq10804__$2)};cljs.core.unchecked_multiply.cljs$lang$maxFixedArity=2;
cljs.core.unchecked_multiply_int=function cljs$core$unchecked_multiply_int(var_args){var G__10816=arguments.length;switch(G__10816){case 0:return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10818=arguments.length;
var i__9108__auto___10819=0;while(true){if(i__9108__auto___10819<len__9107__auto___10818){args_arr__9132__auto__.push(arguments[i__9108__auto___10819]);var G__10820=i__9108__auto___10819+1;i__9108__auto___10819=G__10820;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0=function(){return 1};cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1=function(x){return x};cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2=function(x,y){return x*y};cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int,x*y,more)};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo=function(seq10813){var G__10814=cljs.core.first(seq10813);var seq10813__$1=cljs.core.next(seq10813);var G__10815=cljs.core.first(seq10813__$1);var seq10813__$2=cljs.core.next(seq10813__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10814,G__10815,seq10813__$2)};cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity=2;cljs.core.unchecked_negate=function cljs$core$unchecked_negate(x){return-x};
cljs.core.unchecked_negate_int=function cljs$core$unchecked_negate_int(x){return-x};cljs.core.unchecked_remainder_int=function cljs$core$unchecked_remainder_int(x,n){return cljs.core.mod(x,n)};
cljs.core.unchecked_subtract=function cljs$core$unchecked_subtract(var_args){var G__10825=arguments.length;switch(G__10825){case 1:return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10827=arguments.length;var i__9108__auto___10828=0;while(true){if(i__9108__auto___10828<len__9107__auto___10827){args_arr__9132__auto__.push(arguments[i__9108__auto___10828]);
var G__10829=i__9108__auto___10828+1;i__9108__auto___10828=G__10829;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1=function(x){return-x};cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2=function(x,y){return x-y};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract,x-y,more)};
cljs.core.unchecked_subtract.cljs$lang$applyTo=function(seq10822){var G__10823=cljs.core.first(seq10822);var seq10822__$1=cljs.core.next(seq10822);var G__10824=cljs.core.first(seq10822__$1);var seq10822__$2=cljs.core.next(seq10822__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10823,G__10824,seq10822__$2)};cljs.core.unchecked_subtract.cljs$lang$maxFixedArity=2;
cljs.core.unchecked_subtract_int=function cljs$core$unchecked_subtract_int(var_args){var G__10834=arguments.length;switch(G__10834){case 1:return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10836=arguments.length;var i__9108__auto___10837=0;while(true){if(i__9108__auto___10837<len__9107__auto___10836){args_arr__9132__auto__.push(arguments[i__9108__auto___10837]);
var G__10838=i__9108__auto___10837+1;i__9108__auto___10837=G__10838;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1=function(x){return-x};cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2=function(x,y){return x-y};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int,x-y,more)};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo=function(seq10831){var G__10832=cljs.core.first(seq10831);var seq10831__$1=cljs.core.next(seq10831);var G__10833=cljs.core.first(seq10831__$1);var seq10831__$2=cljs.core.next(seq10831__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10832,G__10833,seq10831__$2)};cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity=2;cljs.core.fix=function cljs$core$fix(q){if(q>=0)return Math.floor(q);else return Math.ceil(q)};
cljs.core.int$=function cljs$core$int(x){return x|0};cljs.core.unchecked_int=function cljs$core$unchecked_int(x){return cljs.core.fix(x)};cljs.core.long$=function cljs$core$long(x){return cljs.core.fix(x)};cljs.core.unchecked_long=function cljs$core$unchecked_long(x){return cljs.core.fix(x)};cljs.core.booleans=function cljs$core$booleans(x){return x};cljs.core.bytes=function cljs$core$bytes(x){return x};cljs.core.chars=function cljs$core$chars(x){return x};cljs.core.shorts=function cljs$core$shorts(x){return x};
cljs.core.ints=function cljs$core$ints(x){return x};cljs.core.floats=function cljs$core$floats(x){return x};cljs.core.doubles=function cljs$core$doubles(x){return x};cljs.core.longs=function cljs$core$longs(x){return x};cljs.core.js_mod=function cljs$core$js_mod(n,d){return n%d};cljs.core.mod=function cljs$core$mod(n,d){return(n%d+d)%d};cljs.core.quot=function cljs$core$quot(n,d){var rem=n%d;return cljs.core.fix((n-rem)/d)};
cljs.core.rem=function cljs$core$rem(n,d){var q=cljs.core.quot(n,d);return n-d*q};
cljs.core.bit_xor=function cljs$core$bit_xor(var_args){var G__10843=arguments.length;switch(G__10843){case 2:return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10845=arguments.length;var i__9108__auto___10846=0;while(true){if(i__9108__auto___10846<len__9107__auto___10845){args_arr__9132__auto__.push(arguments[i__9108__auto___10846]);var G__10847=i__9108__auto___10846+1;i__9108__auto___10846=G__10847;continue}else;
break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2=function(x,y){return x^y};cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor,x^y,more)};
cljs.core.bit_xor.cljs$lang$applyTo=function(seq10840){var G__10841=cljs.core.first(seq10840);var seq10840__$1=cljs.core.next(seq10840);var G__10842=cljs.core.first(seq10840__$1);var seq10840__$2=cljs.core.next(seq10840__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10841,G__10842,seq10840__$2)};cljs.core.bit_xor.cljs$lang$maxFixedArity=2;
cljs.core.bit_and=function cljs$core$bit_and(var_args){var G__10852=arguments.length;switch(G__10852){case 2:return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10854=arguments.length;var i__9108__auto___10855=0;while(true){if(i__9108__auto___10855<len__9107__auto___10854){args_arr__9132__auto__.push(arguments[i__9108__auto___10855]);var G__10856=i__9108__auto___10855+1;i__9108__auto___10855=G__10856;continue}else;
break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2=function(x,y){return x&y};cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and,x&y,more)};
cljs.core.bit_and.cljs$lang$applyTo=function(seq10849){var G__10850=cljs.core.first(seq10849);var seq10849__$1=cljs.core.next(seq10849);var G__10851=cljs.core.first(seq10849__$1);var seq10849__$2=cljs.core.next(seq10849__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10850,G__10851,seq10849__$2)};cljs.core.bit_and.cljs$lang$maxFixedArity=2;
cljs.core.bit_or=function cljs$core$bit_or(var_args){var G__10861=arguments.length;switch(G__10861){case 2:return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10863=arguments.length;var i__9108__auto___10864=0;while(true){if(i__9108__auto___10864<len__9107__auto___10863){args_arr__9132__auto__.push(arguments[i__9108__auto___10864]);var G__10865=i__9108__auto___10864+1;i__9108__auto___10864=G__10865;continue}else;
break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2=function(x,y){return x|y};cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or,x|y,more)};
cljs.core.bit_or.cljs$lang$applyTo=function(seq10858){var G__10859=cljs.core.first(seq10858);var seq10858__$1=cljs.core.next(seq10858);var G__10860=cljs.core.first(seq10858__$1);var seq10858__$2=cljs.core.next(seq10858__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10859,G__10860,seq10858__$2)};cljs.core.bit_or.cljs$lang$maxFixedArity=2;
cljs.core.bit_and_not=function cljs$core$bit_and_not(var_args){var G__10870=arguments.length;switch(G__10870){case 2:return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10872=arguments.length;var i__9108__auto___10873=0;while(true){if(i__9108__auto___10873<len__9107__auto___10872){args_arr__9132__auto__.push(arguments[i__9108__auto___10873]);var G__10874=i__9108__auto___10873+1;i__9108__auto___10873=
G__10874;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2=function(x,y){return x&~y};cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not,x&~y,more)};
cljs.core.bit_and_not.cljs$lang$applyTo=function(seq10867){var G__10868=cljs.core.first(seq10867);var seq10867__$1=cljs.core.next(seq10867);var G__10869=cljs.core.first(seq10867__$1);var seq10867__$2=cljs.core.next(seq10867__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10868,G__10869,seq10867__$2)};cljs.core.bit_and_not.cljs$lang$maxFixedArity=2;cljs.core.bit_clear=function cljs$core$bit_clear(x,n){return x&~(1<<n)};
cljs.core.bit_flip=function cljs$core$bit_flip(x,n){return x^1<<n};cljs.core.bit_not=function cljs$core$bit_not(x){return~x};cljs.core.bit_set=function cljs$core$bit_set(x,n){return x|1<<n};cljs.core.bit_test=function cljs$core$bit_test(x,n){return(x&1<<n)!=0};cljs.core.bit_shift_left=function cljs$core$bit_shift_left(x,n){return x<<n};cljs.core.bit_shift_right=function cljs$core$bit_shift_right(x,n){return x>>n};
cljs.core.bit_shift_right_zero_fill=function cljs$core$bit_shift_right_zero_fill(x,n){return x>>>n};cljs.core.unsigned_bit_shift_right=function cljs$core$unsigned_bit_shift_right(x,n){return x>>>n};cljs.core.bit_count=function cljs$core$bit_count(v){var v__$1=v-(v>>1&1431655765);var v__$2=(v__$1&858993459)+(v__$1>>2&858993459);return(v__$2+(v__$2>>4)&252645135)*16843009>>24};
cljs.core._EQ__EQ_=function cljs$core$_EQ__EQ_(var_args){var G__10879=arguments.length;switch(G__10879){case 1:return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10881=arguments.length;var i__9108__auto___10882=0;while(true){if(i__9108__auto___10882<len__9107__auto___10881){args_arr__9132__auto__.push(arguments[i__9108__auto___10882]);
var G__10883=i__9108__auto___10882+1;i__9108__auto___10882=G__10883;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1=function(x){return true};cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2=function(x,y){return cljs.core._equiv(x,y)};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){while(true){if(x===y)if(cljs.core.next(more)){var G__10884=y;var G__10885=cljs.core.first(more);var G__10886=cljs.core.next(more);x=G__10884;y=G__10885;more=G__10886;continue}else return y===cljs.core.first(more);else return false;break}};
cljs.core._EQ__EQ_.cljs$lang$applyTo=function(seq10876){var G__10877=cljs.core.first(seq10876);var seq10876__$1=cljs.core.next(seq10876);var G__10878=cljs.core.first(seq10876__$1);var seq10876__$2=cljs.core.next(seq10876__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10877,G__10878,seq10876__$2)};cljs.core._EQ__EQ_.cljs$lang$maxFixedArity=2;cljs.core.pos_QMARK_=function cljs$core$pos_QMARK_(x){return x>0};
cljs.core.zero_QMARK_=function cljs$core$zero_QMARK_(x){return x===0};cljs.core.neg_QMARK_=function cljs$core$neg_QMARK_(x){return x<0};cljs.core.nthnext=function cljs$core$nthnext(coll,n){var n__$1=n;var xs=cljs.core.seq(coll);while(true){if(xs&&n__$1>0){var G__10887=n__$1-1;var G__10888=cljs.core.next(xs);n__$1=G__10887;xs=G__10888;continue}else return xs;break}};
cljs.core.str=function cljs$core$str(var_args){var G__10892=arguments.length;switch(G__10892){case 0:return cljs.core.str.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___10894=arguments.length;var i__9108__auto___10895=0;while(true){if(i__9108__auto___10895<len__9107__auto___10894){args_arr__9132__auto__.push(arguments[i__9108__auto___10895]);var G__10896=i__9108__auto___10895+
1;i__9108__auto___10895=G__10896;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(1),0,null);return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__9133__auto__)}};cljs.core.str.cljs$core$IFn$_invoke$arity$0=function(){return""};cljs.core.str.cljs$core$IFn$_invoke$arity$1=function(x){if(x==null)return"";else return[x].join("")};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic=function(x,ys){var sb=new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));var more=ys;while(true){if(cljs.core.truth_(more)){var G__10897=sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));var G__10898=cljs.core.next(more);sb=G__10897;more=G__10898;continue}else return sb.toString();break}};
cljs.core.str.cljs$lang$applyTo=function(seq10890){var G__10891=cljs.core.first(seq10890);var seq10890__$1=cljs.core.next(seq10890);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10891,seq10890__$1)};cljs.core.str.cljs$lang$maxFixedArity=1;
cljs.core.subs=function cljs$core$subs(var_args){var G__10900=arguments.length;switch(G__10900){case 2:return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.subs.cljs$core$IFn$_invoke$arity$2=function(s,start){return s.substring(start)};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3=function(s,start,end){return s.substring(start,end)};cljs.core.subs.cljs$lang$maxFixedArity=3;
cljs.core.equiv_sequential=function cljs$core$equiv_sequential(x,y){return cljs.core.boolean$(cljs.core.sequential_QMARK_(y)?cljs.core.counted_QMARK_(x)&&cljs.core.counted_QMARK_(y)&&!(cljs.core.count(x)===cljs.core.count(y))?false:function(){var xs=cljs.core.seq(x);var ys=cljs.core.seq(y);while(true){if(xs==null)return ys==null;else if(ys==null)return false;else if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){var G__10902=cljs.core.next(xs);var G__10903=
cljs.core.next(ys);xs=G__10902;ys=G__10903;continue}else return false;break}}():null)};cljs.core.hash_coll=function cljs$core$hash_coll(coll){if(cljs.core.seq(coll)){var res=cljs.core.hash(cljs.core.first(coll));var s=cljs.core.next(coll);while(true){if(s==null)return res;else{var G__10904=cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));var G__10905=cljs.core.next(s);res=G__10904;s=G__10905;continue}break}}else return 0};
cljs.core.hash_imap=function cljs$core$hash_imap(m){var h=0;var s=cljs.core.seq(m);while(true){if(s){var e=cljs.core.first(s);var G__10906=(h+(cljs.core.hash(cljs.core.key(e))^cljs.core.hash(cljs.core.val(e))))%4503599627370496;var G__10907=cljs.core.next(s);h=G__10906;s=G__10907;continue}else return h;break}};
cljs.core.hash_iset=function cljs$core$hash_iset(s){var h=0;var s__$1=cljs.core.seq(s);while(true){if(s__$1){var e=cljs.core.first(s__$1);var G__10908=(h+cljs.core.hash(e))%4503599627370496;var G__10909=cljs.core.next(s__$1);h=G__10908;s__$1=G__10909;continue}else return h;break}};
cljs.core.extend_object_BANG_=function cljs$core$extend_object_BANG_(obj,fn_map){var seq__10910_10926=cljs.core.seq(fn_map);var chunk__10911_10927=null;var count__10912_10928=0;var i__10913_10929=0;while(true){if(i__10913_10929<count__10912_10928){var vec__10920_10930=chunk__10911_10927.cljs$core$IIndexed$_nth$arity$2(null,i__10913_10929);var key_name_10931=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10920_10930,0,null);var f_10932=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10920_10930,
1,null);var str_name_10933=cljs.core.name(key_name_10931);goog.object.set(obj,str_name_10933,f_10932);var G__10934=seq__10910_10926;var G__10935=chunk__10911_10927;var G__10936=count__10912_10928;var G__10937=i__10913_10929+1;seq__10910_10926=G__10934;chunk__10911_10927=G__10935;count__10912_10928=G__10936;i__10913_10929=G__10937;continue}else{var temp__4657__auto___10938=cljs.core.seq(seq__10910_10926);if(temp__4657__auto___10938){var seq__10910_10939__$1=temp__4657__auto___10938;if(cljs.core.chunked_seq_QMARK_(seq__10910_10939__$1)){var c__8771__auto___10940=
cljs.core.chunk_first(seq__10910_10939__$1);var G__10941=cljs.core.chunk_rest(seq__10910_10939__$1);var G__10942=c__8771__auto___10940;var G__10943=cljs.core.count(c__8771__auto___10940);var G__10944=0;seq__10910_10926=G__10941;chunk__10911_10927=G__10942;count__10912_10928=G__10943;i__10913_10929=G__10944;continue}else{var vec__10923_10945=cljs.core.first(seq__10910_10939__$1);var key_name_10946=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10923_10945,0,null);var f_10947=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10923_10945,
1,null);var str_name_10948=cljs.core.name(key_name_10946);goog.object.set(obj,str_name_10948,f_10947);var G__10949=cljs.core.next(seq__10910_10939__$1);var G__10950=null;var G__10951=0;var G__10952=0;seq__10910_10926=G__10949;chunk__10911_10927=G__10950;count__10912_10928=G__10951;i__10913_10929=G__10952;continue}}else;}break}return obj};
cljs.core.List=function(meta,first,rest,count,__hash){this.meta=meta;this.first=first;this.rest=rest;this.count=count;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=65937646;this.cljs$lang$protocol_mask$partition1$=8192};cljs.core.List.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.List.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.List.prototype.indexOf=function(){var G__10953=null;var G__10953__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__10953__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10953=function(x,start){switch(arguments.length){case 1:return G__10953__1.call(this,x);case 2:return G__10953__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__10953.cljs$core$IFn$_invoke$arity$1=G__10953__1;G__10953.cljs$core$IFn$_invoke$arity$2=G__10953__2;return G__10953}();
cljs.core.List.prototype.lastIndexOf=function(){var G__10954=null;var G__10954__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count)};var G__10954__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10954=function(x,start){switch(arguments.length){case 1:return G__10954__1.call(this,x);case 2:return G__10954__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__10954.cljs$core$IFn$_invoke$arity$1=G__10954__1;G__10954.cljs$core$IFn$_invoke$arity$2=G__10954__2;return G__10954}();cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash)};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.count===1)return null;else return self__.rest};cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.count};cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.first};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ISeq$_rest$arity$1(null)};cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta)};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.first};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.count===1)return cljs.core.List.EMPTY;else return self__.rest};cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.List(new_meta,self__.first,self__.rest,self__.count,self__.__hash)};cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return new cljs.core.List(self__.meta,o,coll__$1,self__.count+1,null)};
cljs.core.List.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"first","first",996428481,null),new cljs.core.Symbol(null,"rest","rest",398835108,null),new cljs.core.Symbol(null,"count","count",-514511684,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.List.cljs$lang$type=true;cljs.core.List.cljs$lang$ctorStr="cljs.core/List";cljs.core.List.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/List")};cljs.core.__GT_List=function cljs$core$__GT_List(meta,first,rest,count,__hash){return new cljs.core.List(meta,first,rest,count,__hash)};
cljs.core.list_QMARK_=function cljs$core$list_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&33554432||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IList$)return true;else if(!x.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IList,x);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IList,x)};var G__10956_10959=cljs.core.List.prototype;var G__10957_10960=cljs.core.ITER_SYMBOL;
var G__10958_10961=function(G__10956_10959,G__10957_10960){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__10956_10959,G__10957_10960);goog.object.set(G__10956_10959,G__10957_10960,G__10958_10961);cljs.core.EmptyList=function(meta){this.meta=meta;this.cljs$lang$protocol_mask$partition0$=65937614;this.cljs$lang$protocol_mask$partition1$=8192};cljs.core.EmptyList.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.EmptyList.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.EmptyList.prototype.indexOf=function(){var G__10962=null;var G__10962__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__10962__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10962=function(x,start){switch(arguments.length){case 1:return G__10962__1.call(this,x);case 2:return G__10962__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__10962.cljs$core$IFn$_invoke$arity$1=G__10962__1;G__10962.cljs$core$IFn$_invoke$arity$2=G__10962__2;return G__10962}();
cljs.core.EmptyList.prototype.lastIndexOf=function(){var G__10963=null;var G__10963__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__10963__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10963=function(x,start){switch(arguments.length){case 1:return G__10963__1.call(this,x);case 2:return G__10963__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__10963.cljs$core$IFn$_invoke$arity$1=G__10963__1;G__10963.cljs$core$IFn$_invoke$arity$2=G__10963__2;return G__10963}();cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.EmptyList(self__.meta)};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;return null};cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return 0};cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1=function(coll){var self__=this;var coll__$1=this;return null};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1=function(coll){var self__=this;var coll__$1=this;throw new Error("Can't pop empty list");};cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.empty_ordered_hash};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;if(cljs.core.list_QMARK_(other)||cljs.core.sequential_QMARK_(other))return cljs.core.seq(other)==null;else return false};cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return null};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return null};cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.EmptyList(new_meta)};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return new cljs.core.List(self__.meta,o,null,1,null)};cljs.core.EmptyList.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null)],null)};cljs.core.EmptyList.cljs$lang$type=true;cljs.core.EmptyList.cljs$lang$ctorStr="cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/EmptyList")};cljs.core.__GT_EmptyList=function cljs$core$__GT_EmptyList(meta){return new cljs.core.EmptyList(meta)};cljs.core.List.EMPTY=new cljs.core.EmptyList(null);var G__10964_10967=cljs.core.EmptyList.prototype;var G__10965_10968=cljs.core.ITER_SYMBOL;
var G__10966_10969=function(G__10964_10967,G__10965_10968){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__10964_10967,G__10965_10968);goog.object.set(G__10964_10967,G__10965_10968,G__10966_10969);
cljs.core.reversible_QMARK_=function cljs$core$reversible_QMARK_(coll){if(!(coll==null))if(coll.cljs$lang$protocol_mask$partition0$&134217728||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$IReversible$)return true;else if(!coll.cljs$lang$protocol_mask$partition0$)return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,coll);else return false;else return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,coll)};cljs.core.rseq=function cljs$core$rseq(rev){return cljs.core._rseq(rev)};
cljs.core.reverse=function cljs$core$reverse(coll){if(cljs.core.reversible_QMARK_(coll)){var or__7908__auto__=cljs.core.rseq(coll);if(or__7908__auto__)return or__7908__auto__;else return cljs.core.List.EMPTY}else return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll)};
cljs.core.list=function cljs$core$list(var_args){var args__9117__auto__=[];var len__9107__auto___10972=arguments.length;var i__9108__auto___10973=0;while(true){if(i__9108__auto___10973<len__9107__auto___10972){args__9117__auto__.push(arguments[i__9108__auto___10973]);var G__10974=i__9108__auto___10973+1;i__9108__auto___10973=G__10974;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic=function(xs){var arr=xs instanceof cljs.core.IndexedSeq&&xs.i===0?xs.arr:function(){var arr=[];var xs__$1=xs;while(true){if(!(xs__$1==null)){arr.push(cljs.core._first(xs__$1));var G__10975=cljs.core._next(xs__$1);xs__$1=G__10975;continue}else return arr;break}}();var i=arr.length;var r=cljs.core.List.EMPTY;while(true){if(i>0){var G__10976=i-1;var G__10977=cljs.core._conj(r,arr[i-1]);i=G__10976;r=G__10977;continue}else return r;break}};
cljs.core.list.cljs$lang$maxFixedArity=0;cljs.core.list.cljs$lang$applyTo=function(seq10971){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10971))};cljs.core.Cons=function(meta,first,rest,__hash){this.meta=meta;this.first=first;this.rest=rest;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=65929452;this.cljs$lang$protocol_mask$partition1$=8192};cljs.core.Cons.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.Cons.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.Cons.prototype.indexOf=function(){var G__10978=null;var G__10978__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__10978__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10978=function(x,start){switch(arguments.length){case 1:return G__10978__1.call(this,x);case 2:return G__10978__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__10978.cljs$core$IFn$_invoke$arity$1=G__10978__1;G__10978.cljs$core$IFn$_invoke$arity$2=G__10978__2;return G__10978}();
cljs.core.Cons.prototype.lastIndexOf=function(){var G__10979=null;var G__10979__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__10979__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10979=function(x,start){switch(arguments.length){case 1:return G__10979__1.call(this,x);case 2:return G__10979__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__10979.cljs$core$IFn$_invoke$arity$1=G__10979__1;G__10979.cljs$core$IFn$_invoke$arity$2=G__10979__2;return G__10979}();cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash)};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.rest==null)return null;else return cljs.core.seq(self__.rest)};cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.first};cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.rest==null)return cljs.core.List.EMPTY;else return self__.rest};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.Cons(new_meta,self__.first,self__.rest,self__.__hash)};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return new cljs.core.Cons(null,o,coll__$1,null)};
cljs.core.Cons.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"first","first",996428481,null),new cljs.core.Symbol(null,"rest","rest",398835108,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.Cons.cljs$lang$type=true;cljs.core.Cons.cljs$lang$ctorStr="cljs.core/Cons";cljs.core.Cons.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Cons")};cljs.core.__GT_Cons=function cljs$core$__GT_Cons(meta,first,rest,__hash){return new cljs.core.Cons(meta,first,rest,__hash)};var G__10980_10983=cljs.core.Cons.prototype;var G__10981_10984=cljs.core.ITER_SYMBOL;
var G__10982_10985=function(G__10980_10983,G__10981_10984){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__10980_10983,G__10981_10984);goog.object.set(G__10980_10983,G__10981_10984,G__10982_10985);
cljs.core.cons=function cljs$core$cons(x,coll){if(coll==null)return new cljs.core.List(null,x,null,1,null);else if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$ISeq$?true:false:false)return new cljs.core.Cons(null,x,coll,null);else return new cljs.core.Cons(null,x,cljs.core.seq(coll),null)};cljs.core.hash_keyword=function cljs$core$hash_keyword(k){return cljs.core.hash_symbol(k)+2654435769|0};
cljs.core.compare_keywords=function cljs$core$compare_keywords(a,b){if(a.fqn===b.fqn)return 0;else if(cljs.core.truth_(function(){var and__7893__auto__=cljs.core.not(a.ns);if(and__7893__auto__)return b.ns;else return and__7893__auto__}()))return-1;else if(cljs.core.truth_(a.ns))if(cljs.core.not(b.ns))return 1;else{var nsc=function(){var G__10987=a.ns;var G__10988=b.ns;return goog.array.defaultCompare(G__10987,G__10988)}();if(0===nsc){var G__10989=a.name;var G__10990=b.name;return goog.array.defaultCompare(G__10989,
G__10990)}else return nsc}else{var G__10991=a.name;var G__10992=b.name;return goog.array.defaultCompare(G__10991,G__10992)}};cljs.core.Keyword=function(ns,name,fqn,_hash){this.ns=ns;this.name=name;this.fqn=fqn;this._hash=_hash;this.cljs$lang$protocol_mask$partition0$=2153775105;this.cljs$lang$protocol_mask$partition1$=4096};cljs.core.Keyword.prototype.toString=function(){var self__=this;var _=this;return[":",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("")};
cljs.core.Keyword.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2=function(_,other){var self__=this;var ___$1=this;if(other instanceof cljs.core.Keyword)return self__.fqn===other.fqn;else return false};
cljs.core.Keyword.prototype.call=function(){var G__10994=null;var G__10994__2=function(self__,coll){var self__=this;var self____$1=this;var kw=self____$1;return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw)};var G__10994__3=function(self__,coll,not_found){var self__=this;var self____$1=this;var kw=self____$1;return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found)};G__10994=function(self__,coll,not_found){switch(arguments.length){case 2:return G__10994__2.call(this,self__,coll);
case 3:return G__10994__3.call(this,self__,coll,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__10994.cljs$core$IFn$_invoke$arity$2=G__10994__2;G__10994.cljs$core$IFn$_invoke$arity$3=G__10994__3;return G__10994}();cljs.core.Keyword.prototype.apply=function(self__,args10993){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10993)))};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1=function(coll){var self__=this;var kw=this;return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw)};cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2=function(coll,not_found){var self__=this;var kw=this;return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found)};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1=function(this$){var self__=this;var this$__$1=this;var h__8368__auto__=self__._hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_keyword(this$__$1);self__._hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1=function(_){var self__=this;var ___$1=this;return self__.name};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1=function(_){var self__=this;var ___$1=this;return self__.ns};cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(o,writer,_){var self__=this;var o__$1=this;return cljs.core._write(writer,[":",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""))};
cljs.core.Keyword.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"fqn","fqn",-1749334463,null),cljs.core.with_meta(new cljs.core.Symbol(null,"_hash","_hash",-2130838312,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.Keyword.cljs$lang$type=true;cljs.core.Keyword.cljs$lang$ctorStr="cljs.core/Keyword";cljs.core.Keyword.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Keyword")};cljs.core.__GT_Keyword=function cljs$core$__GT_Keyword(ns,name,fqn,_hash){return new cljs.core.Keyword(ns,name,fqn,_hash)};cljs.core.keyword_QMARK_=function cljs$core$keyword_QMARK_(x){return x instanceof cljs.core.Keyword};
cljs.core.keyword_identical_QMARK_=function cljs$core$keyword_identical_QMARK_(x,y){if(x===y)return true;else if(x instanceof cljs.core.Keyword&&y instanceof cljs.core.Keyword)return x.fqn===y.fqn;else return false};cljs.core.symbol_identical_QMARK_=function cljs$core$symbol_identical_QMARK_(x,y){if(x===y)return true;else if(x instanceof cljs.core.Symbol&&y instanceof cljs.core.Symbol)return x.str===y.str;else return false};
cljs.core.namespace=function cljs$core$namespace(x){if(!(x==null)?x.cljs$lang$protocol_mask$partition1$&4096||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$INamed$?true:false:false)return cljs.core._namespace(x);else throw new Error(["Doesn't support namespace: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));};cljs.core.ident_QMARK_=function cljs$core$ident_QMARK_(x){return x instanceof cljs.core.Keyword||x instanceof cljs.core.Symbol};
cljs.core.simple_ident_QMARK_=function cljs$core$simple_ident_QMARK_(x){return cljs.core.ident_QMARK_(x)&&cljs.core.namespace(x)==null};cljs.core.qualified_ident_QMARK_=function cljs$core$qualified_ident_QMARK_(x){return cljs.core.boolean$(function(){var and__7893__auto__=cljs.core.ident_QMARK_(x);if(and__7893__auto__){var and__7893__auto____$1=cljs.core.namespace(x);if(cljs.core.truth_(and__7893__auto____$1))return true;else return and__7893__auto____$1}else return and__7893__auto__}())};
cljs.core.simple_symbol_QMARK_=function cljs$core$simple_symbol_QMARK_(x){return x instanceof cljs.core.Symbol&&cljs.core.namespace(x)==null};cljs.core.qualified_symbol_QMARK_=function cljs$core$qualified_symbol_QMARK_(x){return cljs.core.boolean$(function(){var and__7893__auto__=x instanceof cljs.core.Symbol;if(and__7893__auto__){var and__7893__auto____$1=cljs.core.namespace(x);if(cljs.core.truth_(and__7893__auto____$1))return true;else return and__7893__auto____$1}else return and__7893__auto__}())};
cljs.core.simple_keyword_QMARK_=function cljs$core$simple_keyword_QMARK_(x){return x instanceof cljs.core.Keyword&&cljs.core.namespace(x)==null};cljs.core.qualified_keyword_QMARK_=function cljs$core$qualified_keyword_QMARK_(x){return cljs.core.boolean$(function(){var and__7893__auto__=x instanceof cljs.core.Keyword;if(and__7893__auto__){var and__7893__auto____$1=cljs.core.namespace(x);if(cljs.core.truth_(and__7893__auto____$1))return true;else return and__7893__auto____$1}else return and__7893__auto__}())};
cljs.core.keyword=function cljs$core$keyword(var_args){var G__10997=arguments.length;switch(G__10997){case 1:return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1=function(name){if(name instanceof cljs.core.Keyword)return name;else if(name instanceof cljs.core.Symbol)return new cljs.core.Keyword(cljs.core.namespace(name),cljs.core.name(name),name.str,null);else if(typeof name==="string"){var parts=name.split("/");if(parts.length===2)return new cljs.core.Keyword(parts[0],parts[1],name,null);else return new cljs.core.Keyword(null,parts[0],name,null)}else return null};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2=function(ns,name){var ns__$1=ns instanceof cljs.core.Keyword?cljs.core.name(ns):ns instanceof cljs.core.Symbol?cljs.core.name(ns):ns;var name__$1=name instanceof cljs.core.Keyword?cljs.core.name(name):name instanceof cljs.core.Symbol?cljs.core.name(name):name;return new cljs.core.Keyword(ns__$1,name__$1,[cljs.core.truth_(ns__$1)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),"/"].join(""):null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""),
null)};cljs.core.keyword.cljs$lang$maxFixedArity=2;cljs.core.LazySeq=function(meta,fn,s,__hash){this.meta=meta;this.fn=fn;this.s=s;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32374988;this.cljs$lang$protocol_mask$partition1$=1};cljs.core.LazySeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.LazySeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.LazySeq.prototype.sval=function(){var self__=this;var coll=this;if(self__.fn==null)return self__.s;else{self__.s=self__.fn.cljs$core$IFn$_invoke$arity$0?self__.fn.cljs$core$IFn$_invoke$arity$0():self__.fn.call(null);self__.fn=null;return self__.s}};
cljs.core.LazySeq.prototype.indexOf=function(){var G__10999=null;var G__10999__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__10999__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__10999=function(x,start){switch(arguments.length){case 1:return G__10999__1.call(this,x);case 2:return G__10999__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__10999.cljs$core$IFn$_invoke$arity$1=G__10999__1;G__10999.cljs$core$IFn$_invoke$arity$2=G__10999__2;return G__10999}();
cljs.core.LazySeq.prototype.lastIndexOf=function(){var G__11000=null;var G__11000__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11000__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11000=function(x,start){switch(arguments.length){case 1:return G__11000__1.call(this,x);case 2:return G__11000__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11000.cljs$core$IFn$_invoke$arity$1=G__11000__1;G__11000.cljs$core$IFn$_invoke$arity$2=G__11000__2;return G__11000}();cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;coll__$1.cljs$core$ISeqable$_seq$arity$1(null);if(self__.s==null)return null;else return cljs.core.next(self__.s)};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta)};cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.not(self__.fn)};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;coll__$1.cljs$core$ISeqable$_seq$arity$1(null);if(self__.s==null)return null;else return cljs.core.first(self__.s)};cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;coll__$1.cljs$core$ISeqable$_seq$arity$1(null);if(!(self__.s==null))return cljs.core.rest(self__.s);else return cljs.core.List.EMPTY};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;coll__$1.sval();if(self__.s==null)return null;else{var ls=self__.s;while(true){if(ls instanceof cljs.core.LazySeq){var G__11001=ls.sval();ls=G__11001;continue}else{self__.s=ls;return cljs.core.seq(self__.s)}break}}};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.LazySeq(new_meta,function(coll__$1){return function(){return coll__$1.cljs$core$ISeqable$_seq$arity$1(null)}}(coll__$1),null,self__.__hash)};cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.LazySeq.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,"fn","fn",465265323,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.LazySeq.cljs$lang$type=true;cljs.core.LazySeq.cljs$lang$ctorStr="cljs.core/LazySeq";cljs.core.LazySeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/LazySeq")};
cljs.core.__GT_LazySeq=function cljs$core$__GT_LazySeq(meta,fn,s,__hash){return new cljs.core.LazySeq(meta,fn,s,__hash)};var G__11002_11005=cljs.core.LazySeq.prototype;var G__11003_11006=cljs.core.ITER_SYMBOL;var G__11004_11007=function(G__11002_11005,G__11003_11006){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11002_11005,G__11003_11006);goog.object.set(G__11002_11005,G__11003_11006,G__11004_11007);
cljs.core.ChunkBuffer=function(buf,end){this.buf=buf;this.end=end;this.cljs$lang$protocol_mask$partition0$=2;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.ChunkBuffer.prototype.add=function(o){var self__=this;var _=this;self__.buf[self__.end]=o;return self__.end=self__.end+1};cljs.core.ChunkBuffer.prototype.chunk=function(){var self__=this;var _=this;var ret=new cljs.core.ArrayChunk(self__.buf,0,self__.end);self__.buf=null;return ret};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;return self__.end};
cljs.core.ChunkBuffer.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"buf","buf",1426618187,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"end","end",1372345569,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],
null)};cljs.core.ChunkBuffer.cljs$lang$type=true;cljs.core.ChunkBuffer.cljs$lang$ctorStr="cljs.core/ChunkBuffer";cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ChunkBuffer")};cljs.core.__GT_ChunkBuffer=function cljs$core$__GT_ChunkBuffer(buf,end){return new cljs.core.ChunkBuffer(buf,end)};
cljs.core.chunk_buffer=function cljs$core$chunk_buffer(capacity){return new cljs.core.ChunkBuffer(new Array(capacity),0)};cljs.core.ArrayChunk=function(arr,off,end){this.arr=arr;this.off=off;this.end=end;this.cljs$lang$protocol_mask$partition0$=524306;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;return self__.end-self__.off};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,i){var self__=this;var coll__$1=this;return self__.arr[self__.off+i]};cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,i,not_found){var self__=this;var coll__$1=this;if(i>=0&&i<self__.end-self__.off)return self__.arr[self__.off+i];else return not_found};cljs.core.ArrayChunk.prototype.cljs$core$IChunk$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.off===self__.end)throw new Error("-drop-first of empty chunk");else return new cljs.core.ArrayChunk(self__.arr,self__.off+1,self__.end)};cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,self__.arr[self__.off],self__.off+1)};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off)};
cljs.core.ArrayChunk.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.Symbol(null,"off","off",-2047994980,null),new cljs.core.Symbol(null,"end","end",1372345569,null)],null)};cljs.core.ArrayChunk.cljs$lang$type=true;cljs.core.ArrayChunk.cljs$lang$ctorStr="cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ArrayChunk")};cljs.core.__GT_ArrayChunk=function cljs$core$__GT_ArrayChunk(arr,off,end){return new cljs.core.ArrayChunk(arr,off,end)};
cljs.core.array_chunk=function cljs$core$array_chunk(var_args){var G__11009=arguments.length;switch(G__11009){case 1:return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1=function(arr){return new cljs.core.ArrayChunk(arr,0,arr.length)};cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2=function(arr,off){return new cljs.core.ArrayChunk(arr,off,arr.length)};cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3=function(arr,off,end){return new cljs.core.ArrayChunk(arr,off,end)};cljs.core.array_chunk.cljs$lang$maxFixedArity=3;
cljs.core.ChunkedCons=function(chunk,more,meta,__hash){this.chunk=chunk;this.more=more;this.meta=meta;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=31850732;this.cljs$lang$protocol_mask$partition1$=1536};cljs.core.ChunkedCons.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.ChunkedCons.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.ChunkedCons.prototype.indexOf=function(){var G__11011=null;var G__11011__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11011__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11011=function(x,start){switch(arguments.length){case 1:return G__11011__1.call(this,x);case 2:return G__11011__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__11011.cljs$core$IFn$_invoke$arity$1=G__11011__1;G__11011.cljs$core$IFn$_invoke$arity$2=G__11011__2;return G__11011}();
cljs.core.ChunkedCons.prototype.lastIndexOf=function(){var G__11012=null;var G__11012__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11012__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11012=function(x,start){switch(arguments.length){case 1:return G__11012__1.call(this,x);case 2:return G__11012__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11012.cljs$core$IFn$_invoke$arity$1=G__11012__1;G__11012.cljs$core$IFn$_invoke$arity$2=G__11012__2;return G__11012}();cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(cljs.core._count(self__.chunk)>1)return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,null,null);else if(self__.more==null)return null;else return cljs.core._seq(self__.more)};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,0)};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(cljs.core._count(self__.chunk)>1)return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,null,null);else if(self__.more==null)return cljs.core.List.EMPTY;else return self__.more};cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.chunk};cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.more==null)return cljs.core.List.EMPTY;else return self__.more};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.ChunkedCons(self__.chunk,self__.more,new_meta,self__.__hash)};cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2=function(this$,o){var self__=this;var this$__$1=this;return cljs.core.cons(o,this$__$1)};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.more==null)return null;else return self__.more};
cljs.core.ChunkedCons.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"chunk","chunk",449371907,null),new cljs.core.Symbol(null,"more","more",-418290273,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.ChunkedCons.cljs$lang$type=true;cljs.core.ChunkedCons.cljs$lang$ctorStr="cljs.core/ChunkedCons";cljs.core.ChunkedCons.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ChunkedCons")};cljs.core.__GT_ChunkedCons=function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){return new cljs.core.ChunkedCons(chunk,more,meta,__hash)};var G__11013_11016=cljs.core.ChunkedCons.prototype;
var G__11014_11017=cljs.core.ITER_SYMBOL;var G__11015_11018=function(G__11013_11016,G__11014_11017){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11013_11016,G__11014_11017);goog.object.set(G__11013_11016,G__11014_11017,G__11015_11018);cljs.core.chunk_cons=function cljs$core$chunk_cons(chunk,rest){if(cljs.core._count(chunk)===0)return rest;else return new cljs.core.ChunkedCons(chunk,rest,null,null)};
cljs.core.chunk_append=function cljs$core$chunk_append(b,x){return b.add(x)};cljs.core.chunk=function cljs$core$chunk(b){return b.chunk()};cljs.core.chunk_first=function cljs$core$chunk_first(s){return cljs.core._chunked_first(s)};cljs.core.chunk_rest=function cljs$core$chunk_rest(s){return cljs.core._chunked_rest(s)};
cljs.core.chunk_next=function cljs$core$chunk_next(s){if(!(s==null)?s.cljs$lang$protocol_mask$partition1$&1024||cljs.core.PROTOCOL_SENTINEL===s.cljs$core$IChunkedNext$?true:false:false)return cljs.core._chunked_next(s);else return cljs.core.seq(cljs.core._chunked_rest(s))};cljs.core.to_array=function cljs$core$to_array(coll){var ary=[];var s=cljs.core.seq(coll);while(true){if(!(s==null)){ary.push(cljs.core.first(s));var G__11020=cljs.core.next(s);s=G__11020;continue}else return ary;break}};
cljs.core.to_array_2d=function cljs$core$to_array_2d(coll){var ret=new Array(cljs.core.count(coll));var i_11021=0;var xs_11022=cljs.core.seq(coll);while(true){if(xs_11022==null);else{ret[i_11021]=cljs.core.to_array(cljs.core.first(xs_11022));var G__11023=i_11021+1;var G__11024=cljs.core.next(xs_11022);i_11021=G__11023;xs_11022=G__11024;continue}break}return ret};
cljs.core.int_array=function cljs$core$int_array(var_args){var G__11026=arguments.length;switch(G__11026){case 1:return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1=function(size_or_seq){if(typeof size_or_seq==="number")return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);else return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq)};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2=function(size,init_val_or_seq){var a=new Array(size);if(cljs.core.seq_QMARK_(init_val_or_seq)){var s=cljs.core.seq(init_val_or_seq);var i=0;var s__$1=s;while(true){if(s__$1&&i<size){a[i]=cljs.core.first(s__$1);var G__11028=i+1;var G__11029=cljs.core.next(s__$1);i=G__11028;s__$1=G__11029;continue}else return a;break}}else{var n__8876__auto___11030=size;var i_11031=0;while(true){if(i_11031<n__8876__auto___11030){a[i_11031]=init_val_or_seq;var G__11032=
i_11031+1;i_11031=G__11032;continue}else;break}return a}};cljs.core.int_array.cljs$lang$maxFixedArity=2;
cljs.core.long_array=function cljs$core$long_array(var_args){var G__11034=arguments.length;switch(G__11034){case 1:return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1=function(size_or_seq){if(typeof size_or_seq==="number")return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);else return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq)};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2=function(size,init_val_or_seq){var a=new Array(size);if(cljs.core.seq_QMARK_(init_val_or_seq)){var s=cljs.core.seq(init_val_or_seq);var i=0;var s__$1=s;while(true){if(s__$1&&i<size){a[i]=cljs.core.first(s__$1);var G__11036=i+1;var G__11037=cljs.core.next(s__$1);i=G__11036;s__$1=G__11037;continue}else return a;break}}else{var n__8876__auto___11038=size;var i_11039=0;while(true){if(i_11039<n__8876__auto___11038){a[i_11039]=init_val_or_seq;var G__11040=
i_11039+1;i_11039=G__11040;continue}else;break}return a}};cljs.core.long_array.cljs$lang$maxFixedArity=2;
cljs.core.double_array=function cljs$core$double_array(var_args){var G__11042=arguments.length;switch(G__11042){case 1:return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1=function(size_or_seq){if(typeof size_or_seq==="number")return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);else return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq)};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2=function(size,init_val_or_seq){var a=new Array(size);if(cljs.core.seq_QMARK_(init_val_or_seq)){var s=cljs.core.seq(init_val_or_seq);var i=0;var s__$1=s;while(true){if(s__$1&&i<size){a[i]=cljs.core.first(s__$1);var G__11044=i+1;var G__11045=cljs.core.next(s__$1);i=G__11044;s__$1=G__11045;continue}else return a;break}}else{var n__8876__auto___11046=size;var i_11047=0;while(true){if(i_11047<n__8876__auto___11046){a[i_11047]=init_val_or_seq;var G__11048=
i_11047+1;i_11047=G__11048;continue}else;break}return a}};cljs.core.double_array.cljs$lang$maxFixedArity=2;
cljs.core.object_array=function cljs$core$object_array(var_args){var G__11050=arguments.length;switch(G__11050){case 1:return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1=function(size_or_seq){if(typeof size_or_seq==="number")return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);else return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq)};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2=function(size,init_val_or_seq){var a=new Array(size);if(cljs.core.seq_QMARK_(init_val_or_seq)){var s=cljs.core.seq(init_val_or_seq);var i=0;var s__$1=s;while(true){if(s__$1&&i<size){a[i]=cljs.core.first(s__$1);var G__11052=i+1;var G__11053=cljs.core.next(s__$1);i=G__11052;s__$1=G__11053;continue}else return a;break}}else{var n__8876__auto___11054=size;var i_11055=0;while(true){if(i_11055<n__8876__auto___11054){a[i_11055]=init_val_or_seq;var G__11056=
i_11055+1;i_11055=G__11056;continue}else;break}return a}};cljs.core.object_array.cljs$lang$maxFixedArity=2;cljs.core.bounded_count=function cljs$core$bounded_count(n,coll){if(cljs.core.counted_QMARK_(coll))return cljs.core.count(coll);else{var i=0;var s=cljs.core.seq(coll);while(true){if(!(s==null)&&i<n){var G__11057=i+1;var G__11058=cljs.core.next(s);i=G__11057;s=G__11058;continue}else return i;break}}};
cljs.core.spread=function cljs$core$spread(arglist){if(arglist==null)return null;else{var n=cljs.core.next(arglist);if(n==null)return cljs.core.seq(cljs.core.first(arglist));else return cljs.core.cons(cljs.core.first(arglist),cljs.core.spread.cljs$core$IFn$_invoke$arity$1?cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n):cljs.core.spread.call(null,n))}};
cljs.core.concat=function cljs$core$concat(var_args){var G__11063=arguments.length;switch(G__11063){case 0:return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11065=arguments.length;var i__9108__auto___11066=0;while(true){if(i__9108__auto___11066<len__9107__auto___11065){args_arr__9132__auto__.push(arguments[i__9108__auto___11066]);
var G__11067=i__9108__auto___11066+1;i__9108__auto___11066=G__11067;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.concat.cljs$core$IFn$_invoke$arity$0=function(){return new cljs.core.LazySeq(null,function(){return null},null,null)};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1=function(x){return new cljs.core.LazySeq(null,function(){return x},null,null)};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2=function(x,y){return new cljs.core.LazySeq(null,function(){var s=cljs.core.seq(x);if(s)if(cljs.core.chunked_seq_QMARK_(s))return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));else return cljs.core.cons(cljs.core.first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));else return y},null,null)};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic=function(x,y,zs){var cat=function cljs$core$cat(xys,zs__$1){return new cljs.core.LazySeq(null,function(){var xys__$1=cljs.core.seq(xys);if(xys__$1)if(cljs.core.chunked_seq_QMARK_(xys__$1))return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$cat(cljs.core.chunk_rest(xys__$1),zs__$1));else return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$cat(cljs.core.rest(xys__$1),zs__$1));else if(cljs.core.truth_(zs__$1))return cljs$core$cat(cljs.core.first(zs__$1),
cljs.core.next(zs__$1));else return null},null,null)};return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x,y),zs)};cljs.core.concat.cljs$lang$applyTo=function(seq11060){var G__11061=cljs.core.first(seq11060);var seq11060__$1=cljs.core.next(seq11060);var G__11062=cljs.core.first(seq11060__$1);var seq11060__$2=cljs.core.next(seq11060__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11061,G__11062,seq11060__$2)};
cljs.core.concat.cljs$lang$maxFixedArity=2;
cljs.core.list_STAR_=function cljs$core$list_STAR_(var_args){var G__11074=arguments.length;switch(G__11074){case 1:return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],
arguments[3]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11076=arguments.length;var i__9108__auto___11077=0;while(true){if(i__9108__auto___11077<len__9107__auto___11076){args_arr__9132__auto__.push(arguments[i__9108__auto___11077]);var G__11078=i__9108__auto___11077+1;i__9108__auto___11077=G__11078;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(4),0,null);return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
arguments[1],arguments[2],arguments[3],argseq__9133__auto__)}};cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1=function(args){return cljs.core.seq(args)};cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2=function(a,args){return cljs.core.cons(a,args)};cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3=function(a,b,args){return cljs.core.cons(a,cljs.core.cons(b,args))};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4=function(a,b,c,args){return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)))};cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic=function(a,b,c,d,more){return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))))};
cljs.core.list_STAR_.cljs$lang$applyTo=function(seq11069){var G__11070=cljs.core.first(seq11069);var seq11069__$1=cljs.core.next(seq11069);var G__11071=cljs.core.first(seq11069__$1);var seq11069__$2=cljs.core.next(seq11069__$1);var G__11072=cljs.core.first(seq11069__$2);var seq11069__$3=cljs.core.next(seq11069__$2);var G__11073=cljs.core.first(seq11069__$3);var seq11069__$4=cljs.core.next(seq11069__$3);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11070,
G__11071,G__11072,G__11073,seq11069__$4)};cljs.core.list_STAR_.cljs$lang$maxFixedArity=4;cljs.core.transient$=function cljs$core$transient(coll){return cljs.core._as_transient(coll)};cljs.core.persistent_BANG_=function cljs$core$persistent_BANG_(tcoll){return cljs.core._persistent_BANG_(tcoll)};
cljs.core.conj_BANG_=function cljs$core$conj_BANG_(var_args){var G__11083=arguments.length;switch(G__11083){case 0:return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11085=arguments.length;var i__9108__auto___11086=0;while(true){if(i__9108__auto___11086<
len__9107__auto___11085){args_arr__9132__auto__.push(arguments[i__9108__auto___11086]);var G__11087=i__9108__auto___11086+1;i__9108__auto___11086=G__11087;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.transient$(cljs.core.PersistentVector.EMPTY)};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1=function(tcoll){return tcoll};cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2=function(tcoll,val){return cljs.core._conj_BANG_(tcoll,val)};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(tcoll,val,vals){while(true){var ntcoll=cljs.core._conj_BANG_(tcoll,val);if(cljs.core.truth_(vals)){var G__11088=ntcoll;var G__11089=cljs.core.first(vals);var G__11090=cljs.core.next(vals);tcoll=G__11088;val=G__11089;vals=G__11090;continue}else return ntcoll;break}};
cljs.core.conj_BANG_.cljs$lang$applyTo=function(seq11080){var G__11081=cljs.core.first(seq11080);var seq11080__$1=cljs.core.next(seq11080);var G__11082=cljs.core.first(seq11080__$1);var seq11080__$2=cljs.core.next(seq11080__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11081,G__11082,seq11080__$2)};cljs.core.conj_BANG_.cljs$lang$maxFixedArity=2;
cljs.core.assoc_BANG_=function cljs$core$assoc_BANG_(var_args){var G__11096=arguments.length;switch(G__11096){case 3:return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11098=arguments.length;var i__9108__auto___11099=0;while(true){if(i__9108__auto___11099<len__9107__auto___11098){args_arr__9132__auto__.push(arguments[i__9108__auto___11099]);var G__11100=i__9108__auto___11099+1;i__9108__auto___11099=
G__11100;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3=function(tcoll,key,val){return cljs.core._assoc_BANG_(tcoll,key,val)};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(tcoll,key,val,kvs){while(true){var ntcoll=cljs.core._assoc_BANG_(tcoll,key,val);if(cljs.core.truth_(kvs)){var G__11101=ntcoll;var G__11102=cljs.core.first(kvs);var G__11103=cljs.core.second(kvs);var G__11104=cljs.core.nnext(kvs);tcoll=G__11101;key=G__11102;val=G__11103;kvs=G__11104;continue}else return ntcoll;break}};
cljs.core.assoc_BANG_.cljs$lang$applyTo=function(seq11092){var G__11093=cljs.core.first(seq11092);var seq11092__$1=cljs.core.next(seq11092);var G__11094=cljs.core.first(seq11092__$1);var seq11092__$2=cljs.core.next(seq11092__$1);var G__11095=cljs.core.first(seq11092__$2);var seq11092__$3=cljs.core.next(seq11092__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11093,G__11094,G__11095,seq11092__$3)};cljs.core.assoc_BANG_.cljs$lang$maxFixedArity=3;
cljs.core.dissoc_BANG_=function cljs$core$dissoc_BANG_(var_args){var G__11109=arguments.length;switch(G__11109){case 2:return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11111=arguments.length;var i__9108__auto___11112=0;while(true){if(i__9108__auto___11112<len__9107__auto___11111){args_arr__9132__auto__.push(arguments[i__9108__auto___11112]);var G__11113=i__9108__auto___11112+1;i__9108__auto___11112=
G__11113;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2=function(tcoll,key){return cljs.core._dissoc_BANG_(tcoll,key)};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(tcoll,key,ks){while(true){var ntcoll=cljs.core._dissoc_BANG_(tcoll,key);if(cljs.core.truth_(ks)){var G__11114=ntcoll;var G__11115=cljs.core.first(ks);var G__11116=cljs.core.next(ks);tcoll=G__11114;key=G__11115;ks=G__11116;continue}else return ntcoll;break}};
cljs.core.dissoc_BANG_.cljs$lang$applyTo=function(seq11106){var G__11107=cljs.core.first(seq11106);var seq11106__$1=cljs.core.next(seq11106);var G__11108=cljs.core.first(seq11106__$1);var seq11106__$2=cljs.core.next(seq11106__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11107,G__11108,seq11106__$2)};cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity=2;cljs.core.pop_BANG_=function cljs$core$pop_BANG_(tcoll){return cljs.core._pop_BANG_(tcoll)};
cljs.core.disj_BANG_=function cljs$core$disj_BANG_(var_args){var G__11121=arguments.length;switch(G__11121){case 2:return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11123=arguments.length;var i__9108__auto___11124=0;while(true){if(i__9108__auto___11124<len__9107__auto___11123){args_arr__9132__auto__.push(arguments[i__9108__auto___11124]);var G__11125=i__9108__auto___11124+1;i__9108__auto___11124=G__11125;
continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2=function(tcoll,val){return cljs.core._disjoin_BANG_(tcoll,val)};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(tcoll,val,vals){while(true){var ntcoll=cljs.core._disjoin_BANG_(tcoll,val);if(cljs.core.truth_(vals)){var G__11126=ntcoll;var G__11127=cljs.core.first(vals);var G__11128=cljs.core.next(vals);tcoll=G__11126;val=G__11127;vals=G__11128;continue}else return ntcoll;break}};
cljs.core.disj_BANG_.cljs$lang$applyTo=function(seq11118){var G__11119=cljs.core.first(seq11118);var seq11118__$1=cljs.core.next(seq11118);var G__11120=cljs.core.first(seq11118__$1);var seq11118__$2=cljs.core.next(seq11118__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11119,G__11120,seq11118__$2)};cljs.core.disj_BANG_.cljs$lang$maxFixedArity=2;
cljs.core.apply_to=function cljs$core$apply_to(f,argc,args){var args__$1=cljs.core.seq(args);if(argc===0)return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null);else{var a8920=cljs.core._first(args__$1);var args__$2=cljs.core._rest(args__$1);if(argc===1)return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(a8920):f.call(null,a8920);else{var b8921=cljs.core._first(args__$2);var args__$3=cljs.core._rest(args__$2);if(argc===2)return f.cljs$core$IFn$_invoke$arity$2?
f.cljs$core$IFn$_invoke$arity$2(a8920,b8921):f.call(null,a8920,b8921);else{var c8922=cljs.core._first(args__$3);var args__$4=cljs.core._rest(args__$3);if(argc===3)return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(a8920,b8921,c8922):f.call(null,a8920,b8921,c8922);else{var d8923=cljs.core._first(args__$4);var args__$5=cljs.core._rest(args__$4);if(argc===4)return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(a8920,b8921,c8922,d8923):f.call(null,a8920,b8921,c8922,
d8923);else{var e8924=cljs.core._first(args__$5);var args__$6=cljs.core._rest(args__$5);if(argc===5)return f.cljs$core$IFn$_invoke$arity$5?f.cljs$core$IFn$_invoke$arity$5(a8920,b8921,c8922,d8923,e8924):f.call(null,a8920,b8921,c8922,d8923,e8924);else{var f8925=cljs.core._first(args__$6);var args__$7=cljs.core._rest(args__$6);if(argc===6)return f.cljs$core$IFn$_invoke$arity$6?f.cljs$core$IFn$_invoke$arity$6(a8920,b8921,c8922,d8923,e8924,f8925):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925);else{var g8926=
cljs.core._first(args__$7);var args__$8=cljs.core._rest(args__$7);if(argc===7)return f.cljs$core$IFn$_invoke$arity$7?f.cljs$core$IFn$_invoke$arity$7(a8920,b8921,c8922,d8923,e8924,f8925,g8926):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926);else{var h8927=cljs.core._first(args__$8);var args__$9=cljs.core._rest(args__$8);if(argc===8)return f.cljs$core$IFn$_invoke$arity$8?f.cljs$core$IFn$_invoke$arity$8(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927):f.call(null,a8920,b8921,c8922,d8923,e8924,
f8925,g8926,h8927);else{var i8928=cljs.core._first(args__$9);var args__$10=cljs.core._rest(args__$9);if(argc===9)return f.cljs$core$IFn$_invoke$arity$9?f.cljs$core$IFn$_invoke$arity$9(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928);else{var j8929=cljs.core._first(args__$10);var args__$11=cljs.core._rest(args__$10);if(argc===10)return f.cljs$core$IFn$_invoke$arity$10?f.cljs$core$IFn$_invoke$arity$10(a8920,b8921,c8922,d8923,e8924,
f8925,g8926,h8927,i8928,j8929):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929);else{var k8930=cljs.core._first(args__$11);var args__$12=cljs.core._rest(args__$11);if(argc===11)return f.cljs$core$IFn$_invoke$arity$11?f.cljs$core$IFn$_invoke$arity$11(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930);else{var l8931=cljs.core._first(args__$12);var args__$13=cljs.core._rest(args__$12);
if(argc===12)return f.cljs$core$IFn$_invoke$arity$12?f.cljs$core$IFn$_invoke$arity$12(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931);else{var m8932=cljs.core._first(args__$13);var args__$14=cljs.core._rest(args__$13);if(argc===13)return f.cljs$core$IFn$_invoke$arity$13?f.cljs$core$IFn$_invoke$arity$13(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932):f.call(null,
a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932);else{var n8933=cljs.core._first(args__$14);var args__$15=cljs.core._rest(args__$14);if(argc===14)return f.cljs$core$IFn$_invoke$arity$14?f.cljs$core$IFn$_invoke$arity$14(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933);else{var o8934=cljs.core._first(args__$15);var args__$16=cljs.core._rest(args__$15);
if(argc===15)return f.cljs$core$IFn$_invoke$arity$15?f.cljs$core$IFn$_invoke$arity$15(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934);else{var p8935=cljs.core._first(args__$16);var args__$17=cljs.core._rest(args__$16);if(argc===16)return f.cljs$core$IFn$_invoke$arity$16?f.cljs$core$IFn$_invoke$arity$16(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,
j8929,k8930,l8931,m8932,n8933,o8934,p8935):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935);else{var q8936=cljs.core._first(args__$17);var args__$18=cljs.core._rest(args__$17);if(argc===17)return f.cljs$core$IFn$_invoke$arity$17?f.cljs$core$IFn$_invoke$arity$17(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,
l8931,m8932,n8933,o8934,p8935,q8936);else{var r8937=cljs.core._first(args__$18);var args__$19=cljs.core._rest(args__$18);if(argc===18)return f.cljs$core$IFn$_invoke$arity$18?f.cljs$core$IFn$_invoke$arity$18(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936,r8937):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936,r8937);else{var s8938=cljs.core._first(args__$19);var args__$20=cljs.core._rest(args__$19);
if(argc===19)return f.cljs$core$IFn$_invoke$arity$19?f.cljs$core$IFn$_invoke$arity$19(a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936,r8937,s8938):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936,r8937,s8938);else{var t8939=cljs.core._first(args__$20);var args__$21=cljs.core._rest(args__$20);if(argc===20)return f.cljs$core$IFn$_invoke$arity$20?f.cljs$core$IFn$_invoke$arity$20(a8920,
b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936,r8937,s8938,t8939):f.call(null,a8920,b8921,c8922,d8923,e8924,f8925,g8926,h8927,i8928,j8929,k8930,l8931,m8932,n8933,o8934,p8935,q8936,r8937,s8938,t8939);else throw new Error("Only up to 20 arguments supported on functions");}}}}}}}}}}}}}}}}}}}}};
cljs.core.next_STAR_=function cljs$core$next_STAR_(coll){if(!(coll==null)?coll.cljs$lang$protocol_mask$partition0$&128||cljs.core.PROTOCOL_SENTINEL===coll.cljs$core$INext$?true:false:false)return coll.cljs$core$INext$_next$arity$1(null);else return cljs.core.seq(cljs.core.rest(coll))};
cljs.core.apply_to_simple=function cljs$core$apply_to_simple(var_args){var G__11131=arguments.length;switch(G__11131){case 2:return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4]);break;case 6:return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2=function(f,args){if(args==null)if(f.cljs$core$IFn$_invoke$arity$0)return f.cljs$core$IFn$_invoke$arity$0();else return f.call(f);else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f,cljs.core._first(args),cljs.core.next_STAR_(args))};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3=function(f,a0,args){if(args==null)if(f.cljs$core$IFn$_invoke$arity$1)return f.cljs$core$IFn$_invoke$arity$1(a0);else return f.call(f,a0);else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f,a0,cljs.core._first(args),cljs.core.next_STAR_(args))};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4=function(f,a0,a1,args){if(args==null)if(f.cljs$core$IFn$_invoke$arity$2)return f.cljs$core$IFn$_invoke$arity$2(a0,a1);else return f.call(f,a0,a1);else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f,a0,a1,cljs.core._first(args),cljs.core.next_STAR_(args))};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5=function(f,a0,a1,a2,args){if(args==null)if(f.cljs$core$IFn$_invoke$arity$3)return f.cljs$core$IFn$_invoke$arity$3(a0,a1,a2);else return f.call(f,a0,a1,a2);else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f,a0,a1,a2,cljs.core._first(args),cljs.core.next_STAR_(args))};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6=function(f,a0,a1,a2,a3,args){if(args==null)if(f.cljs$core$IFn$_invoke$arity$4)return f.cljs$core$IFn$_invoke$arity$4(a0,a1,a2,a3);else return f.call(f,a0,a1,a2,a3);else{var a4=cljs.core._first(args);var next_4=cljs.core.next(args);if(next_4==null)if(f.cljs$core$IFn$_invoke$arity$5)return f.cljs$core$IFn$_invoke$arity$5(a0,a1,a2,a3,a4);else return f.call(f,a0,a1,a2,a3,a4);else{var a5=cljs.core._first(next_4);var next_5=cljs.core.next(next_4);
if(next_5==null)if(f.cljs$core$IFn$_invoke$arity$6)return f.cljs$core$IFn$_invoke$arity$6(a0,a1,a2,a3,a4,a5);else return f.call(f,a0,a1,a2,a3,a4,a5);else{var a6=cljs.core._first(next_5);var next_6=cljs.core.next(next_5);if(next_6==null)if(f.cljs$core$IFn$_invoke$arity$7)return f.cljs$core$IFn$_invoke$arity$7(a0,a1,a2,a3,a4,a5,a6);else return f.call(f,a0,a1,a2,a3,a4,a5,a6);else{var a7=cljs.core._first(next_6);var next_7=cljs.core.next(next_6);if(next_7==null)if(f.cljs$core$IFn$_invoke$arity$8)return f.cljs$core$IFn$_invoke$arity$8(a0,
a1,a2,a3,a4,a5,a6,a7);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7);else{var a8=cljs.core._first(next_7);var next_8=cljs.core.next(next_7);if(next_8==null)if(f.cljs$core$IFn$_invoke$arity$9)return f.cljs$core$IFn$_invoke$arity$9(a0,a1,a2,a3,a4,a5,a6,a7,a8);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8);else{var a9=cljs.core._first(next_8);var next_9=cljs.core.next(next_8);if(next_9==null)if(f.cljs$core$IFn$_invoke$arity$10)return f.cljs$core$IFn$_invoke$arity$10(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);else return f.call(f,
a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);else{var a10=cljs.core._first(next_9);var next_10=cljs.core.next(next_9);if(next_10==null)if(f.cljs$core$IFn$_invoke$arity$11)return f.cljs$core$IFn$_invoke$arity$11(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);else{var a11=cljs.core._first(next_10);var next_11=cljs.core.next(next_10);if(next_11==null)if(f.cljs$core$IFn$_invoke$arity$12)return f.cljs$core$IFn$_invoke$arity$12(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);else return f.call(f,
a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);else{var a12=cljs.core._first(next_11);var next_12=cljs.core.next(next_11);if(next_12==null)if(f.cljs$core$IFn$_invoke$arity$13)return f.cljs$core$IFn$_invoke$arity$13(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);else{var a13=cljs.core._first(next_12);var next_13=cljs.core.next(next_12);if(next_13==null)if(f.cljs$core$IFn$_invoke$arity$14)return f.cljs$core$IFn$_invoke$arity$14(a0,a1,a2,a3,a4,a5,a6,
a7,a8,a9,a10,a11,a12,a13);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);else{var a14=cljs.core._first(next_13);var next_14=cljs.core.next(next_13);if(next_14==null)if(f.cljs$core$IFn$_invoke$arity$15)return f.cljs$core$IFn$_invoke$arity$15(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);else{var a15=cljs.core._first(next_14);var next_15=cljs.core.next(next_14);if(next_15==null)if(f.cljs$core$IFn$_invoke$arity$16)return f.cljs$core$IFn$_invoke$arity$16(a0,
a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);else{var a16=cljs.core._first(next_15);var next_16=cljs.core.next(next_15);if(next_16==null)if(f.cljs$core$IFn$_invoke$arity$17)return f.cljs$core$IFn$_invoke$arity$17(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);else{var a17=cljs.core._first(next_16);var next_17=cljs.core.next(next_16);
if(next_17==null)if(f.cljs$core$IFn$_invoke$arity$18)return f.cljs$core$IFn$_invoke$arity$18(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);else{var a18=cljs.core._first(next_17);var next_18=cljs.core.next(next_17);if(next_18==null)if(f.cljs$core$IFn$_invoke$arity$19)return f.cljs$core$IFn$_invoke$arity$19(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);else return f.call(f,a0,a1,
a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);else{var a19=cljs.core._first(next_18);var next_19=cljs.core.next(next_18);if(next_19==null)if(f.cljs$core$IFn$_invoke$arity$20)return f.cljs$core$IFn$_invoke$arity$20(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19);else return f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19);else{var arr__8948__auto__=[a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19];var s__8949__auto___11133=
next_19;while(true){if(s__8949__auto___11133){arr__8948__auto__.push(cljs.core._first(s__8949__auto___11133));var G__11134=cljs.core.next(s__8949__auto___11133);s__8949__auto___11133=G__11134;continue}else;break}return f.apply(f,arr__8948__auto__)}}}}}}}}}}}}}}}}}};cljs.core.apply_to_simple.cljs$lang$maxFixedArity=6;
cljs.core.apply=function cljs$core$apply(var_args){var G__11142=arguments.length;switch(G__11142){case 2:return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],
arguments[2],arguments[3],arguments[4]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11144=arguments.length;var i__9108__auto___11145=0;while(true){if(i__9108__auto___11145<len__9107__auto___11144){args_arr__9132__auto__.push(arguments[i__9108__auto___11145]);var G__11146=i__9108__auto___11145+1;i__9108__auto___11145=G__11146;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(5),0,null);return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],argseq__9133__auto__)}};cljs.core.apply.cljs$core$IFn$_invoke$arity$2=function(f,args){if(f.cljs$lang$applyTo){var fixed_arity=f.cljs$lang$maxFixedArity;var bc=cljs.core.bounded_count(fixed_arity+1,args);if(bc<=fixed_arity)return cljs.core.apply_to(f,bc,args);else return f.cljs$lang$applyTo(args)}else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(args))};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3=function(f,x,args){if(f.cljs$lang$applyTo){var arglist=cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);var fixed_arity=f.cljs$lang$maxFixedArity;var bc=cljs.core.bounded_count(fixed_arity,args)+1;if(bc<=fixed_arity)return cljs.core.apply_to(f,bc,arglist);else return f.cljs$lang$applyTo(arglist)}else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f,x,cljs.core.seq(args))};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4=function(f,x,y,args){if(f.cljs$lang$applyTo){var arglist=cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);var fixed_arity=f.cljs$lang$maxFixedArity;var bc=2+cljs.core.bounded_count(fixed_arity-1,args);if(bc<=fixed_arity)return cljs.core.apply_to(f,bc,arglist);else return f.cljs$lang$applyTo(arglist)}else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f,x,y,cljs.core.seq(args))};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5=function(f,x,y,z,args){if(f.cljs$lang$applyTo){var arglist=cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);var fixed_arity=f.cljs$lang$maxFixedArity;var bc=3+cljs.core.bounded_count(fixed_arity-2,args);if(bc<=fixed_arity)return cljs.core.apply_to(f,bc,arglist);else return f.cljs$lang$applyTo(arglist)}else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f,x,y,z,cljs.core.seq(args))};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic=function(f,a,b,c,d,args){if(f.cljs$lang$applyTo){var spread_args=cljs.core.spread(args);var arglist=cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,spread_args))));var fixed_arity=f.cljs$lang$maxFixedArity;var bc=4+cljs.core.bounded_count(fixed_arity-3,spread_args);if(bc<=fixed_arity)return cljs.core.apply_to(f,bc,arglist);else return f.cljs$lang$applyTo(arglist)}else return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f,
a,b,c,d,cljs.core.spread(args))};
cljs.core.apply.cljs$lang$applyTo=function(seq11136){var G__11137=cljs.core.first(seq11136);var seq11136__$1=cljs.core.next(seq11136);var G__11138=cljs.core.first(seq11136__$1);var seq11136__$2=cljs.core.next(seq11136__$1);var G__11139=cljs.core.first(seq11136__$2);var seq11136__$3=cljs.core.next(seq11136__$2);var G__11140=cljs.core.first(seq11136__$3);var seq11136__$4=cljs.core.next(seq11136__$3);var G__11141=cljs.core.first(seq11136__$4);var seq11136__$5=cljs.core.next(seq11136__$4);var self__9094__auto__=
this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11137,G__11138,G__11139,G__11140,G__11141,seq11136__$5)};cljs.core.apply.cljs$lang$maxFixedArity=5;
cljs.core.vary_meta=function cljs$core$vary_meta(var_args){var G__11155=arguments.length;switch(G__11155){case 2:return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4]);break;case 6:return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11172=arguments.length;var i__9108__auto___11173=0;while(true){if(i__9108__auto___11173<len__9107__auto___11172){args_arr__9132__auto__.push(arguments[i__9108__auto___11173]);var G__11174=i__9108__auto___11173+1;i__9108__auto___11173=
G__11174;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(6),0,null);return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],argseq__9133__auto__)}};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2=function(obj,f){return cljs.core.with_meta(obj,function(){var G__11156=cljs.core.meta(obj);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11156):f.call(null,G__11156)}())};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3=function(obj,f,a){return cljs.core.with_meta(obj,function(){var G__11157=cljs.core.meta(obj);var G__11158=a;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11157,G__11158):f.call(null,G__11157,G__11158)}())};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4=function(obj,f,a,b){return cljs.core.with_meta(obj,function(){var G__11159=cljs.core.meta(obj);var G__11160=a;var G__11161=b;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11159,G__11160,G__11161):f.call(null,G__11159,G__11160,G__11161)}())};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5=function(obj,f,a,b,c){return cljs.core.with_meta(obj,function(){var G__11162=cljs.core.meta(obj);var G__11163=a;var G__11164=b;var G__11165=c;return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(G__11162,G__11163,G__11164,G__11165):f.call(null,G__11162,G__11163,G__11164,G__11165)}())};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6=function(obj,f,a,b,c,d){return cljs.core.with_meta(obj,function(){var G__11166=cljs.core.meta(obj);var G__11167=a;var G__11168=b;var G__11169=c;var G__11170=d;return f.cljs$core$IFn$_invoke$arity$5?f.cljs$core$IFn$_invoke$arity$5(G__11166,G__11167,G__11168,G__11169,G__11170):f.call(null,G__11166,G__11167,G__11168,G__11169,G__11170)}())};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic=function(obj,f,a,b,c,d,args){return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d,args],0)))};
cljs.core.vary_meta.cljs$lang$applyTo=function(seq11148){var G__11149=cljs.core.first(seq11148);var seq11148__$1=cljs.core.next(seq11148);var G__11150=cljs.core.first(seq11148__$1);var seq11148__$2=cljs.core.next(seq11148__$1);var G__11151=cljs.core.first(seq11148__$2);var seq11148__$3=cljs.core.next(seq11148__$2);var G__11152=cljs.core.first(seq11148__$3);var seq11148__$4=cljs.core.next(seq11148__$3);var G__11153=cljs.core.first(seq11148__$4);var seq11148__$5=cljs.core.next(seq11148__$4);var G__11154=
cljs.core.first(seq11148__$5);var seq11148__$6=cljs.core.next(seq11148__$5);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,seq11148__$6)};cljs.core.vary_meta.cljs$lang$maxFixedArity=6;
cljs.core.not_EQ_=function cljs$core$not_EQ_(var_args){var G__11179=arguments.length;switch(G__11179){case 1:return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11181=arguments.length;var i__9108__auto___11182=0;while(true){if(i__9108__auto___11182<len__9107__auto___11181){args_arr__9132__auto__.push(arguments[i__9108__auto___11182]);
var G__11183=i__9108__auto___11182+1;i__9108__auto___11182=G__11183;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1=function(x){return false};cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2=function(x,y){return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic=function(x,y,more){return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more))};
cljs.core.not_EQ_.cljs$lang$applyTo=function(seq11176){var G__11177=cljs.core.first(seq11176);var seq11176__$1=cljs.core.next(seq11176);var G__11178=cljs.core.first(seq11176__$1);var seq11176__$2=cljs.core.next(seq11176__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11177,G__11178,seq11176__$2)};cljs.core.not_EQ_.cljs$lang$maxFixedArity=2;cljs.core.not_empty=function cljs$core$not_empty(coll){if(cljs.core.seq(coll))return coll;else return null};
cljs.core.nil_iter=function cljs$core$nil_iter(){if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core.t_cljs$core11184!=="undefined");else{cljs.core.t_cljs$core11184=function(meta11185){this.meta11185=meta11185;this.cljs$lang$protocol_mask$partition0$=393216;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.t_cljs$core11184.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(_11186,meta11185__$1){var self__=this;var _11186__$1=this;return new cljs.core.t_cljs$core11184(meta11185__$1)};
cljs.core.t_cljs$core11184.prototype.cljs$core$IMeta$_meta$arity$1=function(_11186){var self__=this;var _11186__$1=this;return self__.meta11185};cljs.core.t_cljs$core11184.prototype.hasNext=function(){var self__=this;var _=this;return false};cljs.core.t_cljs$core11184.prototype.next=function(){var self__=this;var _=this;return new Error("No such element")};cljs.core.t_cljs$core11184.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};cljs.core.t_cljs$core11184.getBasis=
function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta11185","meta11185",1571633869,null)],null)};cljs.core.t_cljs$core11184.cljs$lang$type=true;cljs.core.t_cljs$core11184.cljs$lang$ctorStr="cljs.core/t_cljs$core11184";cljs.core.t_cljs$core11184.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/t_cljs$core11184")};cljs.core.__GT_t_cljs$core11184=
function cljs$core$nil_iter_$___GT_t_cljs$core11184(meta11185){return new cljs.core.t_cljs$core11184(meta11185)}}return new cljs.core.t_cljs$core11184(cljs.core.PersistentArrayMap.EMPTY)};cljs.core.StringIter=function(s,i){this.s=s;this.i=i};cljs.core.StringIter.prototype.hasNext=function(){var self__=this;var _=this;return self__.i<self__.s.length};cljs.core.StringIter.prototype.next=function(){var self__=this;var _=this;var ret=self__.s.charAt(self__.i);self__.i=self__.i+1;return ret};
cljs.core.StringIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};cljs.core.StringIter.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"s","s",-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.StringIter.cljs$lang$type=true;cljs.core.StringIter.cljs$lang$ctorStr="cljs.core/StringIter";cljs.core.StringIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/StringIter")};cljs.core.__GT_StringIter=function cljs$core$__GT_StringIter(s,i){return new cljs.core.StringIter(s,i)};cljs.core.string_iter=function cljs$core$string_iter(x){return new cljs.core.StringIter(x,0)};
cljs.core.ArrayIter=function(arr,i){this.arr=arr;this.i=i};cljs.core.ArrayIter.prototype.hasNext=function(){var self__=this;var _=this;return self__.i<self__.arr.length};cljs.core.ArrayIter.prototype.next=function(){var self__=this;var _=this;var ret=self__.arr[self__.i];self__.i=self__.i+1;return ret};cljs.core.ArrayIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.ArrayIter.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ArrayIter.cljs$lang$type=true;cljs.core.ArrayIter.cljs$lang$ctorStr="cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ArrayIter")};cljs.core.__GT_ArrayIter=function cljs$core$__GT_ArrayIter(arr,i){return new cljs.core.ArrayIter(arr,i)};cljs.core.array_iter=function cljs$core$array_iter(x){return new cljs.core.ArrayIter(x,0)};cljs.core.INIT={};cljs.core.START={};cljs.core.SeqIter=function(_seq,_next){this._seq=_seq;this._next=_next};
cljs.core.SeqIter.prototype.hasNext=function(){var self__=this;var _=this;if(self__._seq===cljs.core.INIT){self__._seq=cljs.core.START;self__._next=cljs.core.seq(self__._next)}else if(self__._seq===self__._next)self__._next=cljs.core.next(self__._seq);else;return!(self__._next==null)};cljs.core.SeqIter.prototype.next=function(){var self__=this;var this$=this;if(!this$.hasNext())throw new Error("No such element");else{self__._seq=self__._next;return cljs.core.first(self__._next)}};
cljs.core.SeqIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.SeqIter.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"_seq","_seq",-449557847,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"_next","_next",101877036,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],
null)};cljs.core.SeqIter.cljs$lang$type=true;cljs.core.SeqIter.cljs$lang$ctorStr="cljs.core/SeqIter";cljs.core.SeqIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/SeqIter")};cljs.core.__GT_SeqIter=function cljs$core$__GT_SeqIter(_seq,_next){return new cljs.core.SeqIter(_seq,_next)};cljs.core.seq_iter=function cljs$core$seq_iter(coll){return new cljs.core.SeqIter(cljs.core.INIT,coll)};
cljs.core.iter=function cljs$core$iter(coll){if(cljs.core.iterable_QMARK_(coll))return cljs.core._iterator(coll);else if(coll==null)return cljs.core.nil_iter();else if(typeof coll==="string")return cljs.core.string_iter(coll);else if(cljs.core.array_QMARK_(coll))return cljs.core.array_iter(coll);else if(cljs.core.seqable_QMARK_(coll))return cljs.core.seq_iter(coll);else throw new Error(["Cannot create iterator from ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));};
cljs.core.Many=function(vals){this.vals=vals};cljs.core.Many.prototype.add=function(o){var self__=this;var this$=this;self__.vals.push(o);return this$};cljs.core.Many.prototype.remove=function(){var self__=this;var this$=this;return self__.vals.shift()};cljs.core.Many.prototype.isEmpty=function(){var self__=this;var this$=this;return self__.vals.length===0};cljs.core.Many.prototype.toString=function(){var self__=this;var this$=this;return["Many: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("")};
cljs.core.Many.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"vals","vals",-1886377036,null)],null)};cljs.core.Many.cljs$lang$type=true;cljs.core.Many.cljs$lang$ctorStr="cljs.core/Many";cljs.core.Many.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Many")};cljs.core.__GT_Many=function cljs$core$__GT_Many(vals){return new cljs.core.Many(vals)};
cljs.core.NONE={};cljs.core.Single=function(val){this.val=val};cljs.core.Single.prototype.add=function(o){var self__=this;var this$=this;if(self__.val===cljs.core.NONE){self__.val=o;return this$}else return new cljs.core.Many([self__.val,o])};cljs.core.Single.prototype.remove=function(){var self__=this;var this$=this;if(self__.val===cljs.core.NONE)throw new Error("Removing object from empty buffer");else{var ret=self__.val;self__.val=cljs.core.NONE;return ret}};
cljs.core.Single.prototype.isEmpty=function(){var self__=this;var this$=this;return self__.val===cljs.core.NONE};cljs.core.Single.prototype.toString=function(){var self__=this;var this$=this;return["Single: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("")};
cljs.core.Single.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"val","val",1769233139,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Single.cljs$lang$type=true;cljs.core.Single.cljs$lang$ctorStr="cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Single")};cljs.core.__GT_Single=function cljs$core$__GT_Single(val){return new cljs.core.Single(val)};cljs.core.Empty=function(){};cljs.core.Empty.prototype.add=function(o){var self__=this;var this$=this;return new cljs.core.Single(o)};
cljs.core.Empty.prototype.remove=function(){var self__=this;var this$=this;throw new Error("Removing object from empty buffer");};cljs.core.Empty.prototype.isEmpty=function(){var self__=this;var this$=this;return true};cljs.core.Empty.prototype.toString=function(){var self__=this;var this$=this;return"Empty"};cljs.core.Empty.getBasis=function(){return cljs.core.PersistentVector.EMPTY};cljs.core.Empty.cljs$lang$type=true;cljs.core.Empty.cljs$lang$ctorStr="cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Empty")};cljs.core.__GT_Empty=function cljs$core$__GT_Empty(){return new cljs.core.Empty};cljs.core.EMPTY=new cljs.core.Empty;cljs.core.MultiIterator=function(iters){this.iters=iters};
cljs.core.MultiIterator.prototype.hasNext=function(){var self__=this;var _=this;var iters__$1=cljs.core.seq(self__.iters);while(true){if(!(iters__$1==null)){var iter=cljs.core.first(iters__$1);if(!iter.hasNext())return false;else{var G__11187=cljs.core.next(iters__$1);iters__$1=G__11187;continue}}else return true;break}};
cljs.core.MultiIterator.prototype.next=function(){var self__=this;var _=this;var nexts=[];var n__8876__auto___11188=self__.iters.length;var i_11189=0;while(true){if(i_11189<n__8876__auto___11188){nexts[i_11189]=self__.iters[i_11189].next();var G__11190=i_11189+1;i_11189=G__11190;continue}else;break}return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts,0)};
cljs.core.MultiIterator.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"iters","iters",719353031,null)],null)};cljs.core.MultiIterator.cljs$lang$type=true;cljs.core.MultiIterator.cljs$lang$ctorStr="cljs.core/MultiIterator";cljs.core.MultiIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/MultiIterator")};
cljs.core.__GT_MultiIterator=function cljs$core$__GT_MultiIterator(iters){return new cljs.core.MultiIterator(iters)};
cljs.core.chunkIteratorSeq=function cljs$core$chunkIteratorSeq(iter){return new cljs.core.LazySeq(null,function(){if(iter.hasNext()){var arr=[];var n=0;while(true){if(cljs.core.truth_(function(){var and__7893__auto__=iter.hasNext();if(cljs.core.truth_(and__7893__auto__))return n<32;else return and__7893__auto__}())){arr[n]=iter.next();var G__11191=n+1;n=G__11191;continue}else return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,0,n),cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1?
cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter):cljs.core.chunkIteratorSeq.call(null,iter));break}}else return null},null,null)};cljs.core.TransformerIterator=function(buffer,_next,completed,xf,sourceIter,multi){this.buffer=buffer;this._next=_next;this.completed=completed;this.xf=xf;this.sourceIter=sourceIter;this.multi=multi};
cljs.core.TransformerIterator.prototype.step=function(){var self__=this;var this$=this;if(!(self__._next===cljs.core.NONE))return true;else while(true){if(self__._next===cljs.core.NONE)if(self__.buffer.isEmpty())if(self__.completed)return false;else if(self__.sourceIter.hasNext()){var iter=self__.multi?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf,cljs.core.cons(null,self__.sourceIter.next())):function(){var G__11192=null;var G__11193=self__.sourceIter.next();return self__.xf.cljs$core$IFn$_invoke$arity$2?
self__.xf.cljs$core$IFn$_invoke$arity$2(G__11192,G__11193):self__.xf.call(null,G__11192,G__11193)}();if(cljs.core.reduced_QMARK_(iter)){self__.xf.cljs$core$IFn$_invoke$arity$1?self__.xf.cljs$core$IFn$_invoke$arity$1(null):self__.xf.call(null,null);self__.completed=true}else;continue}else{self__.xf.cljs$core$IFn$_invoke$arity$1?self__.xf.cljs$core$IFn$_invoke$arity$1(null):self__.xf.call(null,null);self__.completed=true;continue}else{self__._next=self__.buffer.remove();continue}else return true;break}};
cljs.core.TransformerIterator.prototype.hasNext=function(){var self__=this;var this$=this;return this$.step()};cljs.core.TransformerIterator.prototype.next=function(){var self__=this;var this$=this;if(this$.hasNext()){var ret=self__._next;self__._next=cljs.core.NONE;return ret}else throw new Error("No such element");};cljs.core.TransformerIterator.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.TransformerIterator.getBasis=function(){return new cljs.core.PersistentVector(null,6,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"buffer","buffer",-2037140571,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"_next","_next",101877036,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),
true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"completed","completed",1154475024,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"xf","xf",2042434515,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"sourceIter","sourceIter",1068220306,null),new cljs.core.Symbol(null,"multi","multi",
1450238522,null)],null)};cljs.core.TransformerIterator.cljs$lang$type=true;cljs.core.TransformerIterator.cljs$lang$ctorStr="cljs.core/TransformerIterator";cljs.core.TransformerIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/TransformerIterator")};
cljs.core.__GT_TransformerIterator=function cljs$core$__GT_TransformerIterator(buffer,_next,completed,xf,sourceIter,multi){return new cljs.core.TransformerIterator(buffer,_next,completed,xf,sourceIter,multi)};var G__11194_11197=cljs.core.TransformerIterator.prototype;var G__11195_11198=cljs.core.ITER_SYMBOL;var G__11196_11199=function(G__11194_11197,G__11195_11198){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11194_11197,G__11195_11198);
goog.object.set(G__11194_11197,G__11195_11198,G__11196_11199);
cljs.core.transformer_iterator=function cljs$core$transformer_iterator(xform,sourceIter,multi){var iterator=new cljs.core.TransformerIterator(cljs.core.EMPTY,cljs.core.NONE,false,null,sourceIter,multi);iterator.xf=function(){var G__11200=function(iterator){return function(){var G__11201=null;var G__11201__0=function(){return null};var G__11201__1=function(acc){return acc};var G__11201__2=function(acc,o){iterator.buffer=iterator.buffer.add(o);return acc};G__11201=function(acc,o){switch(arguments.length){case 0:return G__11201__0.call(this);
case 1:return G__11201__1.call(this,acc);case 2:return G__11201__2.call(this,acc,o)}throw new Error("Invalid arity: "+arguments.length);};G__11201.cljs$core$IFn$_invoke$arity$0=G__11201__0;G__11201.cljs$core$IFn$_invoke$arity$1=G__11201__1;G__11201.cljs$core$IFn$_invoke$arity$2=G__11201__2;return G__11201}()}(iterator);return xform.cljs$core$IFn$_invoke$arity$1?xform.cljs$core$IFn$_invoke$arity$1(G__11200):xform.call(null,G__11200)}();return iterator};
cljs.core.TransformerIterator.create=function(xform,source){return cljs.core.transformer_iterator(xform,source,false)};cljs.core.TransformerIterator.createMulti=function(xform,sources){return cljs.core.transformer_iterator(xform,new cljs.core.MultiIterator(cljs.core.to_array(sources)),true)};
cljs.core.sequence=function cljs$core$sequence(var_args){var G__11206=arguments.length;switch(G__11206){case 1:return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11208=arguments.length;var i__9108__auto___11209=0;while(true){if(i__9108__auto___11209<len__9107__auto___11208){args_arr__9132__auto__.push(arguments[i__9108__auto___11209]);
var G__11210=i__9108__auto___11209+1;i__9108__auto___11209=G__11210;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.sequence.cljs$core$IFn$_invoke$arity$1=function(coll){if(cljs.core.seq_QMARK_(coll))return coll;else{var or__7908__auto__=cljs.core.seq(coll);if(or__7908__auto__)return or__7908__auto__;else return cljs.core.List.EMPTY}};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2=function(xform,coll){var or__7908__auto__=cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform,cljs.core.iter(coll)));if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.List.EMPTY};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic=function(xform,coll,colls){var or__7908__auto__=cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter,cljs.core.cons(coll,colls))));if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.List.EMPTY};
cljs.core.sequence.cljs$lang$applyTo=function(seq11203){var G__11204=cljs.core.first(seq11203);var seq11203__$1=cljs.core.next(seq11203);var G__11205=cljs.core.first(seq11203__$1);var seq11203__$2=cljs.core.next(seq11203__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11204,G__11205,seq11203__$2)};cljs.core.sequence.cljs$lang$maxFixedArity=2;
cljs.core.every_QMARK_=function cljs$core$every_QMARK_(pred,coll){while(true){if(cljs.core.seq(coll)==null)return true;else if(cljs.core.truth_(function(){var G__11211=cljs.core.first(coll);return pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(G__11211):pred.call(null,G__11211)}())){var G__11212=pred;var G__11213=cljs.core.next(coll);pred=G__11212;coll=G__11213;continue}else return false;break}};
cljs.core.not_every_QMARK_=function cljs$core$not_every_QMARK_(pred,coll){return!cljs.core.every_QMARK_(pred,coll)};
cljs.core.some=function cljs$core$some(pred,coll){while(true){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;var or__7908__auto__=function(){var G__11215=cljs.core.first(s);return pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(G__11215):pred.call(null,G__11215)}();if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var G__11216=pred;var G__11217=cljs.core.next(s);pred=G__11216;coll=G__11217;continue}}else return null;
break}};cljs.core.not_any_QMARK_=function cljs$core$not_any_QMARK_(pred,coll){return cljs.core.not(cljs.core.some(pred,coll))};cljs.core.even_QMARK_=function cljs$core$even_QMARK_(n){if(cljs.core.integer_QMARK_(n))return(n&1)===0;else throw new Error(["Argument must be an integer: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));};cljs.core.odd_QMARK_=function cljs$core$odd_QMARK_(n){return!cljs.core.even_QMARK_(n)};
cljs.core.complement=function cljs$core$complement(f){return function(){var G__11218=null;var G__11218__0=function(){return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null))};var G__11218__1=function(x){return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(x):f.call(null,x))};var G__11218__2=function(x,y){return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(x,y):f.call(null,x,y))};var G__11218__3=
function(){var G__11219__delegate=function(x,y,zs){return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs))};var G__11219=function(x,y,var_args){var zs=null;if(arguments.length>2){var G__11220__i=0,G__11220__a=new Array(arguments.length-2);while(G__11220__i<G__11220__a.length){G__11220__a[G__11220__i]=arguments[G__11220__i+2];++G__11220__i}zs=new cljs.core.IndexedSeq(G__11220__a,0,null)}return G__11219__delegate.call(this,x,y,zs)};G__11219.cljs$lang$maxFixedArity=2;G__11219.cljs$lang$applyTo=
function(arglist__11221){var x=cljs.core.first(arglist__11221);arglist__11221=cljs.core.next(arglist__11221);var y=cljs.core.first(arglist__11221);var zs=cljs.core.rest(arglist__11221);return G__11219__delegate(x,y,zs)};G__11219.cljs$core$IFn$_invoke$arity$variadic=G__11219__delegate;return G__11219}();G__11218=function(x,y,var_args){var zs=var_args;switch(arguments.length){case 0:return G__11218__0.call(this);case 1:return G__11218__1.call(this,x);case 2:return G__11218__2.call(this,x,y);default:var G__11222=
null;if(arguments.length>2){var G__11223__i=0,G__11223__a=new Array(arguments.length-2);while(G__11223__i<G__11223__a.length){G__11223__a[G__11223__i]=arguments[G__11223__i+2];++G__11223__i}G__11222=new cljs.core.IndexedSeq(G__11223__a,0,null)}return G__11218__3.cljs$core$IFn$_invoke$arity$variadic(x,y,G__11222)}throw new Error("Invalid arity: "+arguments.length);};G__11218.cljs$lang$maxFixedArity=2;G__11218.cljs$lang$applyTo=G__11218__3.cljs$lang$applyTo;G__11218.cljs$core$IFn$_invoke$arity$0=G__11218__0;
G__11218.cljs$core$IFn$_invoke$arity$1=G__11218__1;G__11218.cljs$core$IFn$_invoke$arity$2=G__11218__2;G__11218.cljs$core$IFn$_invoke$arity$variadic=G__11218__3.cljs$core$IFn$_invoke$arity$variadic;return G__11218}()};
cljs.core.constantly=function cljs$core$constantly(x){return function(){var G__11224__delegate=function(args){return x};var G__11224=function(var_args){var args=null;if(arguments.length>0){var G__11225__i=0,G__11225__a=new Array(arguments.length-0);while(G__11225__i<G__11225__a.length){G__11225__a[G__11225__i]=arguments[G__11225__i+0];++G__11225__i}args=new cljs.core.IndexedSeq(G__11225__a,0,null)}return G__11224__delegate.call(this,args)};G__11224.cljs$lang$maxFixedArity=0;G__11224.cljs$lang$applyTo=
function(arglist__11226){var args=cljs.core.seq(arglist__11226);return G__11224__delegate(args)};G__11224.cljs$core$IFn$_invoke$arity$variadic=G__11224__delegate;return G__11224}()};
cljs.core.comp=function cljs$core$comp(var_args){var G__11232=arguments.length;switch(G__11232){case 0:return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11250=
arguments.length;var i__9108__auto___11251=0;while(true){if(i__9108__auto___11251<len__9107__auto___11250){args_arr__9132__auto__.push(arguments[i__9108__auto___11251]);var G__11252=i__9108__auto___11251+1;i__9108__auto___11251=G__11252;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.identity};cljs.core.comp.cljs$core$IFn$_invoke$arity$1=function(f){return f};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2=function(f,g){return function(){var G__11253=null;var G__11253__0=function(){var G__11233=g.cljs$core$IFn$_invoke$arity$0?g.cljs$core$IFn$_invoke$arity$0():g.call(null);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11233):f.call(null,G__11233)};var G__11253__1=function(x){var G__11234=g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(x):g.call(null,x);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11234):
f.call(null,G__11234)};var G__11253__2=function(x,y){var G__11235=g.cljs$core$IFn$_invoke$arity$2?g.cljs$core$IFn$_invoke$arity$2(x,y):g.call(null,x,y);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11235):f.call(null,G__11235)};var G__11253__3=function(x,y,z){var G__11236=g.cljs$core$IFn$_invoke$arity$3?g.cljs$core$IFn$_invoke$arity$3(x,y,z):g.call(null,x,y,z);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11236):f.call(null,G__11236)};var G__11253__4=
function(){var G__11254__delegate=function(x,y,z,args){var G__11237=cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11237):f.call(null,G__11237)};var G__11254=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11255__i=0,G__11255__a=new Array(arguments.length-3);while(G__11255__i<G__11255__a.length){G__11255__a[G__11255__i]=arguments[G__11255__i+3];++G__11255__i}args=new cljs.core.IndexedSeq(G__11255__a,
0,null)}return G__11254__delegate.call(this,x,y,z,args)};G__11254.cljs$lang$maxFixedArity=3;G__11254.cljs$lang$applyTo=function(arglist__11256){var x=cljs.core.first(arglist__11256);arglist__11256=cljs.core.next(arglist__11256);var y=cljs.core.first(arglist__11256);arglist__11256=cljs.core.next(arglist__11256);var z=cljs.core.first(arglist__11256);var args=cljs.core.rest(arglist__11256);return G__11254__delegate(x,y,z,args)};G__11254.cljs$core$IFn$_invoke$arity$variadic=G__11254__delegate;return G__11254}();
G__11253=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__11253__0.call(this);case 1:return G__11253__1.call(this,x);case 2:return G__11253__2.call(this,x,y);case 3:return G__11253__3.call(this,x,y,z);default:var G__11257=null;if(arguments.length>3){var G__11258__i=0,G__11258__a=new Array(arguments.length-3);while(G__11258__i<G__11258__a.length){G__11258__a[G__11258__i]=arguments[G__11258__i+3];++G__11258__i}G__11257=new cljs.core.IndexedSeq(G__11258__a,0,null)}return G__11253__4.cljs$core$IFn$_invoke$arity$variadic(x,
y,z,G__11257)}throw new Error("Invalid arity: "+arguments.length);};G__11253.cljs$lang$maxFixedArity=3;G__11253.cljs$lang$applyTo=G__11253__4.cljs$lang$applyTo;G__11253.cljs$core$IFn$_invoke$arity$0=G__11253__0;G__11253.cljs$core$IFn$_invoke$arity$1=G__11253__1;G__11253.cljs$core$IFn$_invoke$arity$2=G__11253__2;G__11253.cljs$core$IFn$_invoke$arity$3=G__11253__3;G__11253.cljs$core$IFn$_invoke$arity$variadic=G__11253__4.cljs$core$IFn$_invoke$arity$variadic;return G__11253}()};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3=function(f,g,h){return function(){var G__11259=null;var G__11259__0=function(){var G__11238=function(){var G__11239=h.cljs$core$IFn$_invoke$arity$0?h.cljs$core$IFn$_invoke$arity$0():h.call(null);return g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(G__11239):g.call(null,G__11239)}();return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11238):f.call(null,G__11238)};var G__11259__1=function(x){var G__11240=function(){var G__11241=
h.cljs$core$IFn$_invoke$arity$1?h.cljs$core$IFn$_invoke$arity$1(x):h.call(null,x);return g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(G__11241):g.call(null,G__11241)}();return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11240):f.call(null,G__11240)};var G__11259__2=function(x,y){var G__11242=function(){var G__11243=h.cljs$core$IFn$_invoke$arity$2?h.cljs$core$IFn$_invoke$arity$2(x,y):h.call(null,x,y);return g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(G__11243):
g.call(null,G__11243)}();return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11242):f.call(null,G__11242)};var G__11259__3=function(x,y,z){var G__11244=function(){var G__11245=h.cljs$core$IFn$_invoke$arity$3?h.cljs$core$IFn$_invoke$arity$3(x,y,z):h.call(null,x,y,z);return g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(G__11245):g.call(null,G__11245)}();return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11244):f.call(null,G__11244)};var G__11259__4=
function(){var G__11260__delegate=function(x,y,z,args){var G__11246=function(){var G__11247=cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);return g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(G__11247):g.call(null,G__11247)}();return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11246):f.call(null,G__11246)};var G__11260=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11261__i=0,G__11261__a=new Array(arguments.length-3);while(G__11261__i<
G__11261__a.length){G__11261__a[G__11261__i]=arguments[G__11261__i+3];++G__11261__i}args=new cljs.core.IndexedSeq(G__11261__a,0,null)}return G__11260__delegate.call(this,x,y,z,args)};G__11260.cljs$lang$maxFixedArity=3;G__11260.cljs$lang$applyTo=function(arglist__11262){var x=cljs.core.first(arglist__11262);arglist__11262=cljs.core.next(arglist__11262);var y=cljs.core.first(arglist__11262);arglist__11262=cljs.core.next(arglist__11262);var z=cljs.core.first(arglist__11262);var args=cljs.core.rest(arglist__11262);
return G__11260__delegate(x,y,z,args)};G__11260.cljs$core$IFn$_invoke$arity$variadic=G__11260__delegate;return G__11260}();G__11259=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__11259__0.call(this);case 1:return G__11259__1.call(this,x);case 2:return G__11259__2.call(this,x,y);case 3:return G__11259__3.call(this,x,y,z);default:var G__11263=null;if(arguments.length>3){var G__11264__i=0,G__11264__a=new Array(arguments.length-3);while(G__11264__i<G__11264__a.length){G__11264__a[G__11264__i]=
arguments[G__11264__i+3];++G__11264__i}G__11263=new cljs.core.IndexedSeq(G__11264__a,0,null)}return G__11259__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11263)}throw new Error("Invalid arity: "+arguments.length);};G__11259.cljs$lang$maxFixedArity=3;G__11259.cljs$lang$applyTo=G__11259__4.cljs$lang$applyTo;G__11259.cljs$core$IFn$_invoke$arity$0=G__11259__0;G__11259.cljs$core$IFn$_invoke$arity$1=G__11259__1;G__11259.cljs$core$IFn$_invoke$arity$2=G__11259__2;G__11259.cljs$core$IFn$_invoke$arity$3=
G__11259__3;G__11259.cljs$core$IFn$_invoke$arity$variadic=G__11259__4.cljs$core$IFn$_invoke$arity$variadic;return G__11259}()};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic=function(f1,f2,f3,fs){var fs__$1=cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));return function(fs__$1){return function(){var G__11265__delegate=function(args){var ret=cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);var fs__$2=cljs.core.next(fs__$1);while(true){if(fs__$2){var G__11266=function(){var fexpr__11248=cljs.core.first(fs__$2);return fexpr__11248.cljs$core$IFn$_invoke$arity$1?
fexpr__11248.cljs$core$IFn$_invoke$arity$1(ret):fexpr__11248.call(null,ret)}();var G__11267=cljs.core.next(fs__$2);ret=G__11266;fs__$2=G__11267;continue}else return ret;break}};var G__11265=function(var_args){var args=null;if(arguments.length>0){var G__11268__i=0,G__11268__a=new Array(arguments.length-0);while(G__11268__i<G__11268__a.length){G__11268__a[G__11268__i]=arguments[G__11268__i+0];++G__11268__i}args=new cljs.core.IndexedSeq(G__11268__a,0,null)}return G__11265__delegate.call(this,args)};
G__11265.cljs$lang$maxFixedArity=0;G__11265.cljs$lang$applyTo=function(arglist__11269){var args=cljs.core.seq(arglist__11269);return G__11265__delegate(args)};G__11265.cljs$core$IFn$_invoke$arity$variadic=G__11265__delegate;return G__11265}()}(fs__$1)};
cljs.core.comp.cljs$lang$applyTo=function(seq11228){var G__11229=cljs.core.first(seq11228);var seq11228__$1=cljs.core.next(seq11228);var G__11230=cljs.core.first(seq11228__$1);var seq11228__$2=cljs.core.next(seq11228__$1);var G__11231=cljs.core.first(seq11228__$2);var seq11228__$3=cljs.core.next(seq11228__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11229,G__11230,G__11231,seq11228__$3)};cljs.core.comp.cljs$lang$maxFixedArity=3;
cljs.core.partial=function cljs$core$partial(var_args){var G__11276=arguments.length;switch(G__11276){case 1:return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);
break;default:var args_arr__9132__auto__=[];var len__9107__auto___11278=arguments.length;var i__9108__auto___11279=0;while(true){if(i__9108__auto___11279<len__9107__auto___11278){args_arr__9132__auto__.push(arguments[i__9108__auto___11279]);var G__11280=i__9108__auto___11279+1;i__9108__auto___11279=G__11280;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(4),0,null);return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],
arguments[2],arguments[3],argseq__9133__auto__)}};cljs.core.partial.cljs$core$IFn$_invoke$arity$1=function(f){return f};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2=function(f,arg1){return function(){var G__11281=null;var G__11281__0=function(){return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(arg1):f.call(null,arg1)};var G__11281__1=function(x){return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(arg1,x):f.call(null,arg1,x)};var G__11281__2=function(x,y){return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(arg1,x,y):f.call(null,arg1,x,y)};var G__11281__3=
function(x,y,z){return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(arg1,x,y,z):f.call(null,arg1,x,y,z)};var G__11281__4=function(){var G__11282__delegate=function(x,y,z,args){return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args],0))};var G__11282=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11283__i=0,G__11283__a=new Array(arguments.length-3);while(G__11283__i<G__11283__a.length){G__11283__a[G__11283__i]=
arguments[G__11283__i+3];++G__11283__i}args=new cljs.core.IndexedSeq(G__11283__a,0,null)}return G__11282__delegate.call(this,x,y,z,args)};G__11282.cljs$lang$maxFixedArity=3;G__11282.cljs$lang$applyTo=function(arglist__11284){var x=cljs.core.first(arglist__11284);arglist__11284=cljs.core.next(arglist__11284);var y=cljs.core.first(arglist__11284);arglist__11284=cljs.core.next(arglist__11284);var z=cljs.core.first(arglist__11284);var args=cljs.core.rest(arglist__11284);return G__11282__delegate(x,y,
z,args)};G__11282.cljs$core$IFn$_invoke$arity$variadic=G__11282__delegate;return G__11282}();G__11281=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__11281__0.call(this);case 1:return G__11281__1.call(this,x);case 2:return G__11281__2.call(this,x,y);case 3:return G__11281__3.call(this,x,y,z);default:var G__11285=null;if(arguments.length>3){var G__11286__i=0,G__11286__a=new Array(arguments.length-3);while(G__11286__i<G__11286__a.length){G__11286__a[G__11286__i]=
arguments[G__11286__i+3];++G__11286__i}G__11285=new cljs.core.IndexedSeq(G__11286__a,0,null)}return G__11281__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11285)}throw new Error("Invalid arity: "+arguments.length);};G__11281.cljs$lang$maxFixedArity=3;G__11281.cljs$lang$applyTo=G__11281__4.cljs$lang$applyTo;G__11281.cljs$core$IFn$_invoke$arity$0=G__11281__0;G__11281.cljs$core$IFn$_invoke$arity$1=G__11281__1;G__11281.cljs$core$IFn$_invoke$arity$2=G__11281__2;G__11281.cljs$core$IFn$_invoke$arity$3=
G__11281__3;G__11281.cljs$core$IFn$_invoke$arity$variadic=G__11281__4.cljs$core$IFn$_invoke$arity$variadic;return G__11281}()};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3=function(f,arg1,arg2){return function(){var G__11287=null;var G__11287__0=function(){return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(arg1,arg2):f.call(null,arg1,arg2)};var G__11287__1=function(x){return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(arg1,arg2,x):f.call(null,arg1,arg2,x)};var G__11287__2=function(x,y){return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(arg1,arg2,x,y):f.call(null,
arg1,arg2,x,y)};var G__11287__3=function(x,y,z){return f.cljs$core$IFn$_invoke$arity$5?f.cljs$core$IFn$_invoke$arity$5(arg1,arg2,x,y,z):f.call(null,arg1,arg2,x,y,z)};var G__11287__4=function(){var G__11288__delegate=function(x,y,z,args){return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z,args],0))};var G__11288=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11289__i=0,G__11289__a=new Array(arguments.length-
3);while(G__11289__i<G__11289__a.length){G__11289__a[G__11289__i]=arguments[G__11289__i+3];++G__11289__i}args=new cljs.core.IndexedSeq(G__11289__a,0,null)}return G__11288__delegate.call(this,x,y,z,args)};G__11288.cljs$lang$maxFixedArity=3;G__11288.cljs$lang$applyTo=function(arglist__11290){var x=cljs.core.first(arglist__11290);arglist__11290=cljs.core.next(arglist__11290);var y=cljs.core.first(arglist__11290);arglist__11290=cljs.core.next(arglist__11290);var z=cljs.core.first(arglist__11290);var args=
cljs.core.rest(arglist__11290);return G__11288__delegate(x,y,z,args)};G__11288.cljs$core$IFn$_invoke$arity$variadic=G__11288__delegate;return G__11288}();G__11287=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__11287__0.call(this);case 1:return G__11287__1.call(this,x);case 2:return G__11287__2.call(this,x,y);case 3:return G__11287__3.call(this,x,y,z);default:var G__11291=null;if(arguments.length>3){var G__11292__i=0,G__11292__a=new Array(arguments.length-3);while(G__11292__i<
G__11292__a.length){G__11292__a[G__11292__i]=arguments[G__11292__i+3];++G__11292__i}G__11291=new cljs.core.IndexedSeq(G__11292__a,0,null)}return G__11287__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11291)}throw new Error("Invalid arity: "+arguments.length);};G__11287.cljs$lang$maxFixedArity=3;G__11287.cljs$lang$applyTo=G__11287__4.cljs$lang$applyTo;G__11287.cljs$core$IFn$_invoke$arity$0=G__11287__0;G__11287.cljs$core$IFn$_invoke$arity$1=G__11287__1;G__11287.cljs$core$IFn$_invoke$arity$2=G__11287__2;
G__11287.cljs$core$IFn$_invoke$arity$3=G__11287__3;G__11287.cljs$core$IFn$_invoke$arity$variadic=G__11287__4.cljs$core$IFn$_invoke$arity$variadic;return G__11287}()};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4=function(f,arg1,arg2,arg3){return function(){var G__11293=null;var G__11293__0=function(){return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(arg1,arg2,arg3):f.call(null,arg1,arg2,arg3)};var G__11293__1=function(x){return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(arg1,arg2,arg3,x):f.call(null,arg1,arg2,arg3,x)};var G__11293__2=function(x,y){return f.cljs$core$IFn$_invoke$arity$5?f.cljs$core$IFn$_invoke$arity$5(arg1,
arg2,arg3,x,y):f.call(null,arg1,arg2,arg3,x,y)};var G__11293__3=function(x,y,z){return f.cljs$core$IFn$_invoke$arity$6?f.cljs$core$IFn$_invoke$arity$6(arg1,arg2,arg3,x,y,z):f.call(null,arg1,arg2,arg3,x,y,z)};var G__11293__4=function(){var G__11294__delegate=function(x,y,z,args){return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y,z,args],0))};var G__11294=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11295__i=
0,G__11295__a=new Array(arguments.length-3);while(G__11295__i<G__11295__a.length){G__11295__a[G__11295__i]=arguments[G__11295__i+3];++G__11295__i}args=new cljs.core.IndexedSeq(G__11295__a,0,null)}return G__11294__delegate.call(this,x,y,z,args)};G__11294.cljs$lang$maxFixedArity=3;G__11294.cljs$lang$applyTo=function(arglist__11296){var x=cljs.core.first(arglist__11296);arglist__11296=cljs.core.next(arglist__11296);var y=cljs.core.first(arglist__11296);arglist__11296=cljs.core.next(arglist__11296);var z=
cljs.core.first(arglist__11296);var args=cljs.core.rest(arglist__11296);return G__11294__delegate(x,y,z,args)};G__11294.cljs$core$IFn$_invoke$arity$variadic=G__11294__delegate;return G__11294}();G__11293=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__11293__0.call(this);case 1:return G__11293__1.call(this,x);case 2:return G__11293__2.call(this,x,y);case 3:return G__11293__3.call(this,x,y,z);default:var G__11297=null;if(arguments.length>3){var G__11298__i=0,G__11298__a=
new Array(arguments.length-3);while(G__11298__i<G__11298__a.length){G__11298__a[G__11298__i]=arguments[G__11298__i+3];++G__11298__i}G__11297=new cljs.core.IndexedSeq(G__11298__a,0,null)}return G__11293__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11297)}throw new Error("Invalid arity: "+arguments.length);};G__11293.cljs$lang$maxFixedArity=3;G__11293.cljs$lang$applyTo=G__11293__4.cljs$lang$applyTo;G__11293.cljs$core$IFn$_invoke$arity$0=G__11293__0;G__11293.cljs$core$IFn$_invoke$arity$1=G__11293__1;
G__11293.cljs$core$IFn$_invoke$arity$2=G__11293__2;G__11293.cljs$core$IFn$_invoke$arity$3=G__11293__3;G__11293.cljs$core$IFn$_invoke$arity$variadic=G__11293__4.cljs$core$IFn$_invoke$arity$variadic;return G__11293}()};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic=function(f,arg1,arg2,arg3,more){return function(){var G__11299__delegate=function(args){return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args))};var G__11299=function(var_args){var args=null;if(arguments.length>0){var G__11300__i=0,G__11300__a=new Array(arguments.length-0);while(G__11300__i<G__11300__a.length){G__11300__a[G__11300__i]=arguments[G__11300__i+0];++G__11300__i}args=
new cljs.core.IndexedSeq(G__11300__a,0,null)}return G__11299__delegate.call(this,args)};G__11299.cljs$lang$maxFixedArity=0;G__11299.cljs$lang$applyTo=function(arglist__11301){var args=cljs.core.seq(arglist__11301);return G__11299__delegate(args)};G__11299.cljs$core$IFn$_invoke$arity$variadic=G__11299__delegate;return G__11299}()};
cljs.core.partial.cljs$lang$applyTo=function(seq11271){var G__11272=cljs.core.first(seq11271);var seq11271__$1=cljs.core.next(seq11271);var G__11273=cljs.core.first(seq11271__$1);var seq11271__$2=cljs.core.next(seq11271__$1);var G__11274=cljs.core.first(seq11271__$2);var seq11271__$3=cljs.core.next(seq11271__$2);var G__11275=cljs.core.first(seq11271__$3);var seq11271__$4=cljs.core.next(seq11271__$3);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11272,
G__11273,G__11274,G__11275,seq11271__$4)};cljs.core.partial.cljs$lang$maxFixedArity=4;
cljs.core.fnil=function cljs$core$fnil(var_args){var G__11303=arguments.length;switch(G__11303){case 2:return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2=function(f,x){return function(){var G__11321=null;var G__11321__1=function(a){var G__11304=a==null?x:a;return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11304):f.call(null,G__11304)};var G__11321__2=function(a,b){var G__11305=a==null?x:a;var G__11306=b;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11305,G__11306):f.call(null,G__11305,G__11306)};var G__11321__3=function(a,b,c){var G__11307=a==null?x:a;
var G__11308=b;var G__11309=c;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11307,G__11308,G__11309):f.call(null,G__11307,G__11308,G__11309)};var G__11321__4=function(){var G__11322__delegate=function(a,b,c,ds){return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a==null?x:a,b,c,ds)};var G__11322=function(a,b,c,var_args){var ds=null;if(arguments.length>3){var G__11323__i=0,G__11323__a=new Array(arguments.length-3);while(G__11323__i<G__11323__a.length){G__11323__a[G__11323__i]=
arguments[G__11323__i+3];++G__11323__i}ds=new cljs.core.IndexedSeq(G__11323__a,0,null)}return G__11322__delegate.call(this,a,b,c,ds)};G__11322.cljs$lang$maxFixedArity=3;G__11322.cljs$lang$applyTo=function(arglist__11324){var a=cljs.core.first(arglist__11324);arglist__11324=cljs.core.next(arglist__11324);var b=cljs.core.first(arglist__11324);arglist__11324=cljs.core.next(arglist__11324);var c=cljs.core.first(arglist__11324);var ds=cljs.core.rest(arglist__11324);return G__11322__delegate(a,b,c,ds)};
G__11322.cljs$core$IFn$_invoke$arity$variadic=G__11322__delegate;return G__11322}();G__11321=function(a,b,c,var_args){var ds=var_args;switch(arguments.length){case 1:return G__11321__1.call(this,a);case 2:return G__11321__2.call(this,a,b);case 3:return G__11321__3.call(this,a,b,c);default:var G__11325=null;if(arguments.length>3){var G__11326__i=0,G__11326__a=new Array(arguments.length-3);while(G__11326__i<G__11326__a.length){G__11326__a[G__11326__i]=arguments[G__11326__i+3];++G__11326__i}G__11325=
new cljs.core.IndexedSeq(G__11326__a,0,null)}return G__11321__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c,G__11325)}throw new Error("Invalid arity: "+arguments.length);};G__11321.cljs$lang$maxFixedArity=3;G__11321.cljs$lang$applyTo=G__11321__4.cljs$lang$applyTo;G__11321.cljs$core$IFn$_invoke$arity$1=G__11321__1;G__11321.cljs$core$IFn$_invoke$arity$2=G__11321__2;G__11321.cljs$core$IFn$_invoke$arity$3=G__11321__3;G__11321.cljs$core$IFn$_invoke$arity$variadic=G__11321__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11321}()};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3=function(f,x,y){return function(){var G__11327=null;var G__11327__2=function(a,b){var G__11310=a==null?x:a;var G__11311=b==null?y:b;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11310,G__11311):f.call(null,G__11310,G__11311)};var G__11327__3=function(a,b,c){var G__11312=a==null?x:a;var G__11313=b==null?y:b;var G__11314=c;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11312,G__11313,G__11314):f.call(null,
G__11312,G__11313,G__11314)};var G__11327__4=function(){var G__11328__delegate=function(a,b,c,ds){return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a==null?x:a,b==null?y:b,c,ds)};var G__11328=function(a,b,c,var_args){var ds=null;if(arguments.length>3){var G__11329__i=0,G__11329__a=new Array(arguments.length-3);while(G__11329__i<G__11329__a.length){G__11329__a[G__11329__i]=arguments[G__11329__i+3];++G__11329__i}ds=new cljs.core.IndexedSeq(G__11329__a,0,null)}return G__11328__delegate.call(this,
a,b,c,ds)};G__11328.cljs$lang$maxFixedArity=3;G__11328.cljs$lang$applyTo=function(arglist__11330){var a=cljs.core.first(arglist__11330);arglist__11330=cljs.core.next(arglist__11330);var b=cljs.core.first(arglist__11330);arglist__11330=cljs.core.next(arglist__11330);var c=cljs.core.first(arglist__11330);var ds=cljs.core.rest(arglist__11330);return G__11328__delegate(a,b,c,ds)};G__11328.cljs$core$IFn$_invoke$arity$variadic=G__11328__delegate;return G__11328}();G__11327=function(a,b,c,var_args){var ds=
var_args;switch(arguments.length){case 2:return G__11327__2.call(this,a,b);case 3:return G__11327__3.call(this,a,b,c);default:var G__11331=null;if(arguments.length>3){var G__11332__i=0,G__11332__a=new Array(arguments.length-3);while(G__11332__i<G__11332__a.length){G__11332__a[G__11332__i]=arguments[G__11332__i+3];++G__11332__i}G__11331=new cljs.core.IndexedSeq(G__11332__a,0,null)}return G__11327__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c,G__11331)}throw new Error("Invalid arity: "+arguments.length);
};G__11327.cljs$lang$maxFixedArity=3;G__11327.cljs$lang$applyTo=G__11327__4.cljs$lang$applyTo;G__11327.cljs$core$IFn$_invoke$arity$2=G__11327__2;G__11327.cljs$core$IFn$_invoke$arity$3=G__11327__3;G__11327.cljs$core$IFn$_invoke$arity$variadic=G__11327__4.cljs$core$IFn$_invoke$arity$variadic;return G__11327}()};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4=function(f,x,y,z){return function(){var G__11333=null;var G__11333__2=function(a,b){var G__11315=a==null?x:a;var G__11316=b==null?y:b;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11315,G__11316):f.call(null,G__11315,G__11316)};var G__11333__3=function(a,b,c){var G__11317=a==null?x:a;var G__11318=b==null?y:b;var G__11319=c==null?z:c;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11317,G__11318,G__11319):
f.call(null,G__11317,G__11318,G__11319)};var G__11333__4=function(){var G__11334__delegate=function(a,b,c,ds){return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a==null?x:a,b==null?y:b,c==null?z:c,ds)};var G__11334=function(a,b,c,var_args){var ds=null;if(arguments.length>3){var G__11335__i=0,G__11335__a=new Array(arguments.length-3);while(G__11335__i<G__11335__a.length){G__11335__a[G__11335__i]=arguments[G__11335__i+3];++G__11335__i}ds=new cljs.core.IndexedSeq(G__11335__a,0,null)}return G__11334__delegate.call(this,
a,b,c,ds)};G__11334.cljs$lang$maxFixedArity=3;G__11334.cljs$lang$applyTo=function(arglist__11336){var a=cljs.core.first(arglist__11336);arglist__11336=cljs.core.next(arglist__11336);var b=cljs.core.first(arglist__11336);arglist__11336=cljs.core.next(arglist__11336);var c=cljs.core.first(arglist__11336);var ds=cljs.core.rest(arglist__11336);return G__11334__delegate(a,b,c,ds)};G__11334.cljs$core$IFn$_invoke$arity$variadic=G__11334__delegate;return G__11334}();G__11333=function(a,b,c,var_args){var ds=
var_args;switch(arguments.length){case 2:return G__11333__2.call(this,a,b);case 3:return G__11333__3.call(this,a,b,c);default:var G__11337=null;if(arguments.length>3){var G__11338__i=0,G__11338__a=new Array(arguments.length-3);while(G__11338__i<G__11338__a.length){G__11338__a[G__11338__i]=arguments[G__11338__i+3];++G__11338__i}G__11337=new cljs.core.IndexedSeq(G__11338__a,0,null)}return G__11333__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c,G__11337)}throw new Error("Invalid arity: "+arguments.length);
};G__11333.cljs$lang$maxFixedArity=3;G__11333.cljs$lang$applyTo=G__11333__4.cljs$lang$applyTo;G__11333.cljs$core$IFn$_invoke$arity$2=G__11333__2;G__11333.cljs$core$IFn$_invoke$arity$3=G__11333__3;G__11333.cljs$core$IFn$_invoke$arity$variadic=G__11333__4.cljs$core$IFn$_invoke$arity$variadic;return G__11333}()};cljs.core.fnil.cljs$lang$maxFixedArity=4;
cljs.core.map_indexed=function cljs$core$map_indexed(var_args){var G__11340=arguments.length;switch(G__11340){case 1:return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1=function(f){return function(rf){var i=cljs.core.volatile_BANG_(-1);return function(i){return function(){var G__11354=null;var G__11354__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11354__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11354__2=function(result,input){var G__11341=result;var G__11342=function(){var G__11343=
i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,i.cljs$core$IDeref$_deref$arity$1(null)+1);var G__11344=input;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11343,G__11344):f.call(null,G__11343,G__11344)}();return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(G__11341,G__11342):rf.call(null,G__11341,G__11342)};G__11354=function(result,input){switch(arguments.length){case 0:return G__11354__0.call(this);case 1:return G__11354__1.call(this,result);case 2:return G__11354__2.call(this,
result,input)}throw new Error("Invalid arity: "+arguments.length);};G__11354.cljs$core$IFn$_invoke$arity$0=G__11354__0;G__11354.cljs$core$IFn$_invoke$arity$1=G__11354__1;G__11354.cljs$core$IFn$_invoke$arity$2=G__11354__2;return G__11354}()}(i)}};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2=function(f,coll){var mapi=function cljs$core$mapi(idx,coll__$1){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll__$1);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(s)){var c=cljs.core.chunk_first(s);var size=cljs.core.count(c);var b=cljs.core.chunk_buffer(size);var n__8876__auto___11355=size;var i_11356=0;while(true){if(i_11356<n__8876__auto___11355){cljs.core.chunk_append(b,
function(){var G__11349=idx+i_11356;var G__11350=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11356);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11349,G__11350):f.call(null,G__11349,G__11350)}());var G__11357=i_11356+1;i_11356=G__11357;continue}else;break}return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$mapi(idx+size,cljs.core.chunk_rest(s)))}else return cljs.core.cons(function(){var G__11351=idx;var G__11352=cljs.core.first(s);return f.cljs$core$IFn$_invoke$arity$2?
f.cljs$core$IFn$_invoke$arity$2(G__11351,G__11352):f.call(null,G__11351,G__11352)}(),cljs$core$mapi(idx+1,cljs.core.rest(s)))}else return null},null,null)};return mapi(0,coll)};cljs.core.map_indexed.cljs$lang$maxFixedArity=2;
cljs.core.keep=function cljs$core$keep(var_args){var G__11359=arguments.length;switch(G__11359){case 1:return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1=function(f){return function(rf){return function(){var G__11363=null;var G__11363__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11363__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11363__2=function(result,input){var v=f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(input):f.call(null,input);
if(v==null)return result;else return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,v):rf.call(null,result,v)};G__11363=function(result,input){switch(arguments.length){case 0:return G__11363__0.call(this);case 1:return G__11363__1.call(this,result);case 2:return G__11363__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__11363.cljs$core$IFn$_invoke$arity$0=G__11363__0;G__11363.cljs$core$IFn$_invoke$arity$1=G__11363__1;G__11363.cljs$core$IFn$_invoke$arity$2=
G__11363__2;return G__11363}()}};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2=function(f,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(s)){var c=cljs.core.chunk_first(s);var size=cljs.core.count(c);var b=cljs.core.chunk_buffer(size);var n__8876__auto___11364=size;var i_11365=0;while(true){if(i_11365<n__8876__auto___11364){var x_11366=function(){var G__11360=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11365);
return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11360):f.call(null,G__11360)}();if(x_11366==null);else cljs.core.chunk_append(b,x_11366);var G__11367=i_11365+1;i_11365=G__11367;continue}else;break}return cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)))}else{var x=function(){var G__11361=cljs.core.first(s);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11361):f.call(null,G__11361)}();
if(x==null)return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));else return cljs.core.cons(x,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)))}}else return null},null,null)};cljs.core.keep.cljs$lang$maxFixedArity=2;cljs.core.Atom=function(state,meta,validator,watches){this.state=state;this.meta=meta;this.validator=validator;this.watches=watches;this.cljs$lang$protocol_mask$partition1$=16386;this.cljs$lang$protocol_mask$partition0$=6455296};
cljs.core.Atom.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2=function(o,other){var self__=this;var o__$1=this;return o__$1===other};cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1=function(_){var self__=this;var ___$1=this;return self__.state};cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__.meta};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3=function(this$,oldval,newval){var self__=this;var this$__$1=this;var seq__11368=cljs.core.seq(self__.watches);var chunk__11369=null;var count__11370=0;var i__11371=0;while(true){if(i__11371<count__11370){var vec__11378=chunk__11369.cljs$core$IIndexed$_nth$arity$2(null,i__11371);var key=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11378,0,null);var f=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11378,1,null);f.cljs$core$IFn$_invoke$arity$4?
f.cljs$core$IFn$_invoke$arity$4(key,this$__$1,oldval,newval):f.call(null,key,this$__$1,oldval,newval);var G__11384=seq__11368;var G__11385=chunk__11369;var G__11386=count__11370;var G__11387=i__11371+1;seq__11368=G__11384;chunk__11369=G__11385;count__11370=G__11386;i__11371=G__11387;continue}else{var temp__4657__auto__=cljs.core.seq(seq__11368);if(temp__4657__auto__){var seq__11368__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__11368__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__11368__$1);
var G__11388=cljs.core.chunk_rest(seq__11368__$1);var G__11389=c__8771__auto__;var G__11390=cljs.core.count(c__8771__auto__);var G__11391=0;seq__11368=G__11388;chunk__11369=G__11389;count__11370=G__11390;i__11371=G__11391;continue}else{var vec__11381=cljs.core.first(seq__11368__$1);var key=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11381,0,null);var f=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11381,1,null);f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(key,this$__$1,
oldval,newval):f.call(null,key,this$__$1,oldval,newval);var G__11392=cljs.core.next(seq__11368__$1);var G__11393=null;var G__11394=0;var G__11395=0;seq__11368=G__11392;chunk__11369=G__11393;count__11370=G__11394;i__11371=G__11395;continue}}else return null}break}};cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3=function(this$,key,f){var self__=this;var this$__$1=this;this$__$1.watches=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);return this$__$1};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2=function(this$,key){var self__=this;var this$__$1=this;return this$__$1.watches=cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key)};cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1=function(this$){var self__=this;var this$__$1=this;return goog.getUid(this$__$1)};
cljs.core.Atom.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"validator","validator",-325659154,null),new cljs.core.Symbol(null,"watches","watches",1367433992,null)],null)};cljs.core.Atom.cljs$lang$type=true;cljs.core.Atom.cljs$lang$ctorStr="cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Atom")};cljs.core.__GT_Atom=function cljs$core$__GT_Atom(state,meta,validator,watches){return new cljs.core.Atom(state,meta,validator,watches)};
cljs.core.atom=function cljs$core$atom(var_args){var G__11399=arguments.length;switch(G__11399){case 1:return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11404=arguments.length;var i__9108__auto___11405=0;while(true){if(i__9108__auto___11405<len__9107__auto___11404){args_arr__9132__auto__.push(arguments[i__9108__auto___11405]);var G__11406=i__9108__auto___11405+1;i__9108__auto___11405=G__11406;continue}else;break}var argseq__9133__auto__=
new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(1),0,null);return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__9133__auto__)}};cljs.core.atom.cljs$core$IFn$_invoke$arity$1=function(x){return new cljs.core.Atom(x,null,null,null)};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic=function(x,p__11400){var map__11401=p__11400;var map__11401__$1=(!(map__11401==null)?map__11401.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__11401.cljs$core$ISeq$?true:false:false)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11401):map__11401;var meta=cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11401__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));var validator=cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11401__$1,
new cljs.core.Keyword(null,"validator","validator",-1966190681));return new cljs.core.Atom(x,meta,validator,null)};cljs.core.atom.cljs$lang$applyTo=function(seq11397){var G__11398=cljs.core.first(seq11397);var seq11397__$1=cljs.core.next(seq11397);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11398,seq11397__$1)};cljs.core.atom.cljs$lang$maxFixedArity=1;
cljs.core.reset_BANG_=function cljs$core$reset_BANG_(a,new_value){if(a instanceof cljs.core.Atom){var validate=a.validator;if(validate==null);else if(cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1?validate.cljs$core$IFn$_invoke$arity$1(new_value):validate.call(null,new_value)));else throw new Error("Validator rejected reference state");var old_value=a.state;a.state=new_value;if(a.watches==null);else a.cljs$core$IWatchable$_notify_watches$arity$3(null,old_value,new_value);return new_value}else return cljs.core._reset_BANG_(a,
new_value)};
cljs.core.reset_vals_BANG_=function cljs$core$reset_vals_BANG_(a,new_value){var validate=a.validator;if(validate==null);else if(cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1?validate.cljs$core$IFn$_invoke$arity$1(new_value):validate.call(null,new_value)));else throw new Error("Validator rejected reference state");var old_value=a.state;a.state=new_value;if(a.watches==null);else cljs.core._notify_watches(a,old_value,new_value);return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[old_value,
new_value],null)};
cljs.core.swap_BANG_=function cljs$core$swap_BANG_(var_args){var G__11413=arguments.length;switch(G__11413){case 2:return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11421=arguments.length;
var i__9108__auto___11422=0;while(true){if(i__9108__auto___11422<len__9107__auto___11421){args_arr__9132__auto__.push(arguments[i__9108__auto___11422]);var G__11423=i__9108__auto___11422+1;i__9108__auto___11422=G__11423;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(4),0,null);return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],arguments[3],argseq__9133__auto__)}};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2=function(a,f){if(a instanceof cljs.core.Atom)return cljs.core.reset_BANG_(a,function(){var G__11414=a.state;return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11414):f.call(null,G__11414)}());else return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f)};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3=function(a,f,x){if(a instanceof cljs.core.Atom)return cljs.core.reset_BANG_(a,function(){var G__11415=a.state;var G__11416=x;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11415,G__11416):f.call(null,G__11415,G__11416)}());else return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x)};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4=function(a,f,x,y){if(a instanceof cljs.core.Atom)return cljs.core.reset_BANG_(a,function(){var G__11417=a.state;var G__11418=x;var G__11419=y;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11417,G__11418,G__11419):f.call(null,G__11417,G__11418,G__11419)}());else return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y)};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(a,f,x,y,more){if(a instanceof cljs.core.Atom)return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));else return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more)};
cljs.core.swap_BANG_.cljs$lang$applyTo=function(seq11408){var G__11409=cljs.core.first(seq11408);var seq11408__$1=cljs.core.next(seq11408);var G__11410=cljs.core.first(seq11408__$1);var seq11408__$2=cljs.core.next(seq11408__$1);var G__11411=cljs.core.first(seq11408__$2);var seq11408__$3=cljs.core.next(seq11408__$2);var G__11412=cljs.core.first(seq11408__$3);var seq11408__$4=cljs.core.next(seq11408__$3);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11409,
G__11410,G__11411,G__11412,seq11408__$4)};cljs.core.swap_BANG_.cljs$lang$maxFixedArity=4;
cljs.core.swap_vals_BANG_=function cljs$core$swap_vals_BANG_(var_args){var G__11430=arguments.length;switch(G__11430){case 2:return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:var args_arr__9132__auto__=
[];var len__9107__auto___11438=arguments.length;var i__9108__auto___11439=0;while(true){if(i__9108__auto___11439<len__9107__auto___11438){args_arr__9132__auto__.push(arguments[i__9108__auto___11439]);var G__11440=i__9108__auto___11439+1;i__9108__auto___11439=G__11440;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(4),0,null);return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],arguments[3],argseq__9133__auto__)}};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2=function(a,f){return cljs.core.reset_vals_BANG_(a,function(){var G__11431=a.state;return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11431):f.call(null,G__11431)}())};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3=function(a,f,x){return cljs.core.reset_vals_BANG_(a,function(){var G__11432=a.state;var G__11433=x;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11432,G__11433):f.call(null,G__11432,G__11433)}())};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4=function(a,f,x,y){return cljs.core.reset_vals_BANG_(a,function(){var G__11434=a.state;var G__11435=x;var G__11436=y;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11434,G__11435,G__11436):f.call(null,G__11434,G__11435,G__11436)}())};cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(a,f,x,y,more){return cljs.core.reset_vals_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more))};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo=function(seq11425){var G__11426=cljs.core.first(seq11425);var seq11425__$1=cljs.core.next(seq11425);var G__11427=cljs.core.first(seq11425__$1);var seq11425__$2=cljs.core.next(seq11425__$1);var G__11428=cljs.core.first(seq11425__$2);var seq11425__$3=cljs.core.next(seq11425__$2);var G__11429=cljs.core.first(seq11425__$3);var seq11425__$4=cljs.core.next(seq11425__$3);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11426,
G__11427,G__11428,G__11429,seq11425__$4)};cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity=4;cljs.core.compare_and_set_BANG_=function cljs$core$compare_and_set_BANG_(a,oldval,newval){if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){cljs.core.reset_BANG_(a,newval);return true}else return false};
cljs.core.set_validator_BANG_=function cljs$core$set_validator_BANG_(iref,val){if(!(val==null)&&cljs.core.not(function(){var G__11442=cljs.core._deref(iref);return val.cljs$core$IFn$_invoke$arity$1?val.cljs$core$IFn$_invoke$arity$1(G__11442):val.call(null,G__11442)}()))throw new Error("Validator rejected reference state");else;return iref.validator=val};cljs.core.get_validator=function cljs$core$get_validator(iref){return iref.validator};
cljs.core.Volatile=function(state){this.state=state;this.cljs$lang$protocol_mask$partition0$=32768;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.Volatile.prototype.cljs$core$IVolatile$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2=function(_,new_state){var self__=this;var ___$1=this;return self__.state=new_state};cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1=function(_){var self__=this;var ___$1=this;return self__.state};
cljs.core.Volatile.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Volatile.cljs$lang$type=true;cljs.core.Volatile.cljs$lang$ctorStr="cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Volatile")};cljs.core.__GT_Volatile=function cljs$core$__GT_Volatile(state){return new cljs.core.Volatile(state)};cljs.core.volatile_BANG_=function cljs$core$volatile_BANG_(val){return new cljs.core.Volatile(val)};cljs.core.volatile_QMARK_=function cljs$core$volatile_QMARK_(x){return x instanceof cljs.core.Volatile};
cljs.core.vreset_BANG_=function cljs$core$vreset_BANG_(vol,newval){return cljs.core._vreset_BANG_(vol,newval)};
cljs.core.keep_indexed=function cljs$core$keep_indexed(var_args){var G__11444=arguments.length;switch(G__11444){case 1:return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1=function(f){return function(rf){var ia=cljs.core.volatile_BANG_(-1);return function(ia){return function(){var G__11454=null;var G__11454__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11454__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11454__2=function(result,input){var i=ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,
ia.cljs$core$IDeref$_deref$arity$1(null)+1);var v=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(i,input):f.call(null,i,input);if(v==null)return result;else return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,v):rf.call(null,result,v)};G__11454=function(result,input){switch(arguments.length){case 0:return G__11454__0.call(this);case 1:return G__11454__1.call(this,result);case 2:return G__11454__2.call(this,result,input)}throw new Error("Invalid arity: "+
arguments.length);};G__11454.cljs$core$IFn$_invoke$arity$0=G__11454__0;G__11454.cljs$core$IFn$_invoke$arity$1=G__11454__1;G__11454.cljs$core$IFn$_invoke$arity$2=G__11454__2;return G__11454}()}(ia)}};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2=function(f,coll){var keepi=function cljs$core$keepi(idx,coll__$1){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll__$1);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(s)){var c=cljs.core.chunk_first(s);var size=cljs.core.count(c);var b=cljs.core.chunk_buffer(size);var n__8876__auto___11455=size;var i_11456=0;while(true){if(i_11456<n__8876__auto___11455){var x_11457=function(){var G__11449=
idx+i_11456;var G__11450=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11456);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11449,G__11450):f.call(null,G__11449,G__11450)}();if(x_11457==null);else cljs.core.chunk_append(b,x_11457);var G__11458=i_11456+1;i_11456=G__11458;continue}else;break}return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keepi(idx+size,cljs.core.chunk_rest(s)))}else{var x=function(){var G__11451=idx;var G__11452=cljs.core.first(s);return f.cljs$core$IFn$_invoke$arity$2?
f.cljs$core$IFn$_invoke$arity$2(G__11451,G__11452):f.call(null,G__11451,G__11452)}();if(x==null)return cljs$core$keepi(idx+1,cljs.core.rest(s));else return cljs.core.cons(x,cljs$core$keepi(idx+1,cljs.core.rest(s)))}}else return null},null,null)};return keepi(0,coll)};cljs.core.keep_indexed.cljs$lang$maxFixedArity=2;
cljs.core.every_pred=function cljs$core$every_pred(var_args){var G__11470=arguments.length;switch(G__11470){case 1:return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11472=arguments.length;var i__9108__auto___11473=
0;while(true){if(i__9108__auto___11473<len__9107__auto___11472){args_arr__9132__auto__.push(arguments[i__9108__auto___11473]);var G__11474=i__9108__auto___11473+1;i__9108__auto___11473=G__11474;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1=function(p){return function(){var cljs$core$ep1=null;var cljs$core$ep1__0=function(){return true};var cljs$core$ep1__1=function(x){return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(x):p.call(null,x))};var cljs$core$ep1__2=function(x,y){return cljs.core.boolean$(function(){var and__7893__auto__=p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(x):p.call(null,x);if(cljs.core.truth_(and__7893__auto__))return p.cljs$core$IFn$_invoke$arity$1?
p.cljs$core$IFn$_invoke$arity$1(y):p.call(null,y);else return and__7893__auto__}())};var cljs$core$ep1__3=function(x,y,z){return cljs.core.boolean$(function(){var and__7893__auto__=p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(x):p.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(y):p.call(null,y);if(cljs.core.truth_(and__7893__auto____$1))return p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(z):
p.call(null,z);else return and__7893__auto____$1}else return and__7893__auto__}())};var cljs$core$ep1__4=function(){var G__11475__delegate=function(x,y,z,args){return cljs.core.boolean$(function(){var and__7893__auto__=cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(and__7893__auto__))return cljs.core.every_QMARK_(p,args);else return and__7893__auto__}())};var G__11475=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11476__i=0,G__11476__a=new Array(arguments.length-
3);while(G__11476__i<G__11476__a.length){G__11476__a[G__11476__i]=arguments[G__11476__i+3];++G__11476__i}args=new cljs.core.IndexedSeq(G__11476__a,0,null)}return G__11475__delegate.call(this,x,y,z,args)};G__11475.cljs$lang$maxFixedArity=3;G__11475.cljs$lang$applyTo=function(arglist__11477){var x=cljs.core.first(arglist__11477);arglist__11477=cljs.core.next(arglist__11477);var y=cljs.core.first(arglist__11477);arglist__11477=cljs.core.next(arglist__11477);var z=cljs.core.first(arglist__11477);var args=
cljs.core.rest(arglist__11477);return G__11475__delegate(x,y,z,args)};G__11475.cljs$core$IFn$_invoke$arity$variadic=G__11475__delegate;return G__11475}();cljs$core$ep1=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$ep1__0.call(this);case 1:return cljs$core$ep1__1.call(this,x);case 2:return cljs$core$ep1__2.call(this,x,y);case 3:return cljs$core$ep1__3.call(this,x,y,z);default:var G__11478=null;if(arguments.length>3){var G__11479__i=0,G__11479__a=new Array(arguments.length-
3);while(G__11479__i<G__11479__a.length){G__11479__a[G__11479__i]=arguments[G__11479__i+3];++G__11479__i}G__11478=new cljs.core.IndexedSeq(G__11479__a,0,null)}return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11478)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$ep1.cljs$lang$maxFixedArity=3;cljs$core$ep1.cljs$lang$applyTo=cljs$core$ep1__4.cljs$lang$applyTo;cljs$core$ep1.cljs$core$IFn$_invoke$arity$0=cljs$core$ep1__0;cljs$core$ep1.cljs$core$IFn$_invoke$arity$1=
cljs$core$ep1__1;cljs$core$ep1.cljs$core$IFn$_invoke$arity$2=cljs$core$ep1__2;cljs$core$ep1.cljs$core$IFn$_invoke$arity$3=cljs$core$ep1__3;cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic=cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$ep1}()};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2=function(p1,p2){return function(){var cljs$core$ep2=null;var cljs$core$ep2__0=function(){return true};var cljs$core$ep2__1=function(x){return cljs.core.boolean$(function(){var and__7893__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(and__7893__auto__))return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);else return and__7893__auto__}())};var cljs$core$ep2__2=
function(x,y){return cljs.core.boolean$(function(){var and__7893__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(and__7893__auto____$1)){var and__7893__auto____$2=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(and__7893__auto____$2))return p2.cljs$core$IFn$_invoke$arity$1?
p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);else return and__7893__auto____$2}else return and__7893__auto____$1}else return and__7893__auto__}())};var cljs$core$ep2__3=function(x,y,z){return cljs.core.boolean$(function(){var and__7893__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(and__7893__auto____$1)){var and__7893__auto____$2=
p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(z):p1.call(null,z);if(cljs.core.truth_(and__7893__auto____$2)){var and__7893__auto____$3=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(and__7893__auto____$3)){var and__7893__auto____$4=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);if(cljs.core.truth_(and__7893__auto____$4))return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(z):
p2.call(null,z);else return and__7893__auto____$4}else return and__7893__auto____$3}else return and__7893__auto____$2}else return and__7893__auto____$1}else return and__7893__auto__}())};var cljs$core$ep2__4=function(){var G__11480__delegate=function(x,y,z,args){return cljs.core.boolean$(function(){var and__7893__auto__=cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(and__7893__auto__))return cljs.core.every_QMARK_(function(and__7893__auto__){return function(p1__11459_SHARP_){var and__7893__auto____$1=
p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(p1__11459_SHARP_):p1.call(null,p1__11459_SHARP_);if(cljs.core.truth_(and__7893__auto____$1))return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(p1__11459_SHARP_):p2.call(null,p1__11459_SHARP_);else return and__7893__auto____$1}}(and__7893__auto__),args);else return and__7893__auto__}())};var G__11480=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11481__i=0,G__11481__a=new Array(arguments.length-
3);while(G__11481__i<G__11481__a.length){G__11481__a[G__11481__i]=arguments[G__11481__i+3];++G__11481__i}args=new cljs.core.IndexedSeq(G__11481__a,0,null)}return G__11480__delegate.call(this,x,y,z,args)};G__11480.cljs$lang$maxFixedArity=3;G__11480.cljs$lang$applyTo=function(arglist__11482){var x=cljs.core.first(arglist__11482);arglist__11482=cljs.core.next(arglist__11482);var y=cljs.core.first(arglist__11482);arglist__11482=cljs.core.next(arglist__11482);var z=cljs.core.first(arglist__11482);var args=
cljs.core.rest(arglist__11482);return G__11480__delegate(x,y,z,args)};G__11480.cljs$core$IFn$_invoke$arity$variadic=G__11480__delegate;return G__11480}();cljs$core$ep2=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$ep2__0.call(this);case 1:return cljs$core$ep2__1.call(this,x);case 2:return cljs$core$ep2__2.call(this,x,y);case 3:return cljs$core$ep2__3.call(this,x,y,z);default:var G__11483=null;if(arguments.length>3){var G__11484__i=0,G__11484__a=new Array(arguments.length-
3);while(G__11484__i<G__11484__a.length){G__11484__a[G__11484__i]=arguments[G__11484__i+3];++G__11484__i}G__11483=new cljs.core.IndexedSeq(G__11484__a,0,null)}return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11483)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$ep2.cljs$lang$maxFixedArity=3;cljs$core$ep2.cljs$lang$applyTo=cljs$core$ep2__4.cljs$lang$applyTo;cljs$core$ep2.cljs$core$IFn$_invoke$arity$0=cljs$core$ep2__0;cljs$core$ep2.cljs$core$IFn$_invoke$arity$1=
cljs$core$ep2__1;cljs$core$ep2.cljs$core$IFn$_invoke$arity$2=cljs$core$ep2__2;cljs$core$ep2.cljs$core$IFn$_invoke$arity$3=cljs$core$ep2__3;cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic=cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$ep2}()};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3=function(p1,p2,p3){return function(){var cljs$core$ep3=null;var cljs$core$ep3__0=function(){return true};var cljs$core$ep3__1=function(x){return cljs.core.boolean$(function(){var and__7893__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(and__7893__auto____$1))return p3.cljs$core$IFn$_invoke$arity$1?
p3.cljs$core$IFn$_invoke$arity$1(x):p3.call(null,x);else return and__7893__auto____$1}else return and__7893__auto__}())};var cljs$core$ep3__2=function(x,y){return cljs.core.boolean$(function(){var and__7893__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(and__7893__auto____$1)){var and__7893__auto____$2=
p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(x):p3.call(null,x);if(cljs.core.truth_(and__7893__auto____$2)){var and__7893__auto____$3=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(and__7893__auto____$3)){var and__7893__auto____$4=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);if(cljs.core.truth_(and__7893__auto____$4))return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(y):
p3.call(null,y);else return and__7893__auto____$4}else return and__7893__auto____$3}else return and__7893__auto____$2}else return and__7893__auto____$1}else return and__7893__auto__}())};var cljs$core$ep3__3=function(x,y,z){return cljs.core.boolean$(function(){var and__7893__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):
p2.call(null,x);if(cljs.core.truth_(and__7893__auto____$1)){var and__7893__auto____$2=p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(x):p3.call(null,x);if(cljs.core.truth_(and__7893__auto____$2)){var and__7893__auto____$3=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(and__7893__auto____$3)){var and__7893__auto____$4=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);if(cljs.core.truth_(and__7893__auto____$4)){var and__7893__auto____$5=
p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(y):p3.call(null,y);if(cljs.core.truth_(and__7893__auto____$5)){var and__7893__auto____$6=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(z):p1.call(null,z);if(cljs.core.truth_(and__7893__auto____$6)){var and__7893__auto____$7=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(z):p2.call(null,z);if(cljs.core.truth_(and__7893__auto____$7))return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(z):
p3.call(null,z);else return and__7893__auto____$7}else return and__7893__auto____$6}else return and__7893__auto____$5}else return and__7893__auto____$4}else return and__7893__auto____$3}else return and__7893__auto____$2}else return and__7893__auto____$1}else return and__7893__auto__}())};var cljs$core$ep3__4=function(){var G__11485__delegate=function(x,y,z,args){return cljs.core.boolean$(function(){var and__7893__auto__=cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(and__7893__auto__))return cljs.core.every_QMARK_(function(and__7893__auto__){return function(p1__11460_SHARP_){var and__7893__auto____$1=
p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(p1__11460_SHARP_):p1.call(null,p1__11460_SHARP_);if(cljs.core.truth_(and__7893__auto____$1)){var and__7893__auto____$2=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(p1__11460_SHARP_):p2.call(null,p1__11460_SHARP_);if(cljs.core.truth_(and__7893__auto____$2))return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(p1__11460_SHARP_):p3.call(null,p1__11460_SHARP_);else return and__7893__auto____$2}else return and__7893__auto____$1}}(and__7893__auto__),
args);else return and__7893__auto__}())};var G__11485=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11486__i=0,G__11486__a=new Array(arguments.length-3);while(G__11486__i<G__11486__a.length){G__11486__a[G__11486__i]=arguments[G__11486__i+3];++G__11486__i}args=new cljs.core.IndexedSeq(G__11486__a,0,null)}return G__11485__delegate.call(this,x,y,z,args)};G__11485.cljs$lang$maxFixedArity=3;G__11485.cljs$lang$applyTo=function(arglist__11487){var x=cljs.core.first(arglist__11487);
arglist__11487=cljs.core.next(arglist__11487);var y=cljs.core.first(arglist__11487);arglist__11487=cljs.core.next(arglist__11487);var z=cljs.core.first(arglist__11487);var args=cljs.core.rest(arglist__11487);return G__11485__delegate(x,y,z,args)};G__11485.cljs$core$IFn$_invoke$arity$variadic=G__11485__delegate;return G__11485}();cljs$core$ep3=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$ep3__0.call(this);case 1:return cljs$core$ep3__1.call(this,x);case 2:return cljs$core$ep3__2.call(this,
x,y);case 3:return cljs$core$ep3__3.call(this,x,y,z);default:var G__11488=null;if(arguments.length>3){var G__11489__i=0,G__11489__a=new Array(arguments.length-3);while(G__11489__i<G__11489__a.length){G__11489__a[G__11489__i]=arguments[G__11489__i+3];++G__11489__i}G__11488=new cljs.core.IndexedSeq(G__11489__a,0,null)}return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11488)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$ep3.cljs$lang$maxFixedArity=3;cljs$core$ep3.cljs$lang$applyTo=
cljs$core$ep3__4.cljs$lang$applyTo;cljs$core$ep3.cljs$core$IFn$_invoke$arity$0=cljs$core$ep3__0;cljs$core$ep3.cljs$core$IFn$_invoke$arity$1=cljs$core$ep3__1;cljs$core$ep3.cljs$core$IFn$_invoke$arity$2=cljs$core$ep3__2;cljs$core$ep3.cljs$core$IFn$_invoke$arity$3=cljs$core$ep3__3;cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic=cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$ep3}()};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic=function(p1,p2,p3,ps){var ps__$1=cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);return function(ps__$1){return function(){var cljs$core$epn=null;var cljs$core$epn__0=function(){return true};var cljs$core$epn__1=function(x){return cljs.core.every_QMARK_(function(ps__$1){return function(p1__11461_SHARP_){return p1__11461_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11461_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p1__11461_SHARP_.call(null,
x)}}(ps__$1),ps__$1)};var cljs$core$epn__2=function(x,y){return cljs.core.every_QMARK_(function(ps__$1){return function(p1__11462_SHARP_){var and__7893__auto__=p1__11462_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11462_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p1__11462_SHARP_.call(null,x);if(cljs.core.truth_(and__7893__auto__))return p1__11462_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11462_SHARP_.cljs$core$IFn$_invoke$arity$1(y):p1__11462_SHARP_.call(null,y);else return and__7893__auto__}}(ps__$1),ps__$1)};
var cljs$core$epn__3=function(x,y,z){return cljs.core.every_QMARK_(function(ps__$1){return function(p1__11463_SHARP_){var and__7893__auto__=p1__11463_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11463_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p1__11463_SHARP_.call(null,x);if(cljs.core.truth_(and__7893__auto__)){var and__7893__auto____$1=p1__11463_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11463_SHARP_.cljs$core$IFn$_invoke$arity$1(y):p1__11463_SHARP_.call(null,y);if(cljs.core.truth_(and__7893__auto____$1))return p1__11463_SHARP_.cljs$core$IFn$_invoke$arity$1?
p1__11463_SHARP_.cljs$core$IFn$_invoke$arity$1(z):p1__11463_SHARP_.call(null,z);else return and__7893__auto____$1}else return and__7893__auto__}}(ps__$1),ps__$1)};var cljs$core$epn__4=function(){var G__11490__delegate=function(x,y,z,args){return cljs.core.boolean$(function(){var and__7893__auto__=cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(and__7893__auto__))return cljs.core.every_QMARK_(function(and__7893__auto__,ps__$1){return function(p1__11464_SHARP_){return cljs.core.every_QMARK_(p1__11464_SHARP_,
args)}}(and__7893__auto__,ps__$1),ps__$1);else return and__7893__auto__}())};var G__11490=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11491__i=0,G__11491__a=new Array(arguments.length-3);while(G__11491__i<G__11491__a.length){G__11491__a[G__11491__i]=arguments[G__11491__i+3];++G__11491__i}args=new cljs.core.IndexedSeq(G__11491__a,0,null)}return G__11490__delegate.call(this,x,y,z,args)};G__11490.cljs$lang$maxFixedArity=3;G__11490.cljs$lang$applyTo=function(arglist__11492){var x=
cljs.core.first(arglist__11492);arglist__11492=cljs.core.next(arglist__11492);var y=cljs.core.first(arglist__11492);arglist__11492=cljs.core.next(arglist__11492);var z=cljs.core.first(arglist__11492);var args=cljs.core.rest(arglist__11492);return G__11490__delegate(x,y,z,args)};G__11490.cljs$core$IFn$_invoke$arity$variadic=G__11490__delegate;return G__11490}();cljs$core$epn=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$epn__0.call(this);case 1:return cljs$core$epn__1.call(this,
x);case 2:return cljs$core$epn__2.call(this,x,y);case 3:return cljs$core$epn__3.call(this,x,y,z);default:var G__11493=null;if(arguments.length>3){var G__11494__i=0,G__11494__a=new Array(arguments.length-3);while(G__11494__i<G__11494__a.length){G__11494__a[G__11494__i]=arguments[G__11494__i+3];++G__11494__i}G__11493=new cljs.core.IndexedSeq(G__11494__a,0,null)}return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11493)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$epn.cljs$lang$maxFixedArity=
3;cljs$core$epn.cljs$lang$applyTo=cljs$core$epn__4.cljs$lang$applyTo;cljs$core$epn.cljs$core$IFn$_invoke$arity$0=cljs$core$epn__0;cljs$core$epn.cljs$core$IFn$_invoke$arity$1=cljs$core$epn__1;cljs$core$epn.cljs$core$IFn$_invoke$arity$2=cljs$core$epn__2;cljs$core$epn.cljs$core$IFn$_invoke$arity$3=cljs$core$epn__3;cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic=cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$epn}()}(ps__$1)};
cljs.core.every_pred.cljs$lang$applyTo=function(seq11466){var G__11467=cljs.core.first(seq11466);var seq11466__$1=cljs.core.next(seq11466);var G__11468=cljs.core.first(seq11466__$1);var seq11466__$2=cljs.core.next(seq11466__$1);var G__11469=cljs.core.first(seq11466__$2);var seq11466__$3=cljs.core.next(seq11466__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11467,G__11468,G__11469,seq11466__$3)};cljs.core.every_pred.cljs$lang$maxFixedArity=3;
cljs.core.some_fn=function cljs$core$some_fn(var_args){var G__11506=arguments.length;switch(G__11506){case 1:return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11508=arguments.length;var i__9108__auto___11509=0;while(true){if(i__9108__auto___11509<
len__9107__auto___11508){args_arr__9132__auto__.push(arguments[i__9108__auto___11509]);var G__11510=i__9108__auto___11509+1;i__9108__auto___11509=G__11510;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1=function(p){return function(){var cljs$core$sp1=null;var cljs$core$sp1__0=function(){return null};var cljs$core$sp1__1=function(x){return p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(x):p.call(null,x)};var cljs$core$sp1__2=function(x,y){var or__7908__auto__=p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(x):p.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return p.cljs$core$IFn$_invoke$arity$1?
p.cljs$core$IFn$_invoke$arity$1(y):p.call(null,y)};var cljs$core$sp1__3=function(x,y,z){var or__7908__auto__=p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(x):p.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(y):p.call(null,y);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else return p.cljs$core$IFn$_invoke$arity$1?p.cljs$core$IFn$_invoke$arity$1(z):
p.call(null,z)}};var cljs$core$sp1__4=function(){var G__11511__delegate=function(x,y,z,args){var or__7908__auto__=cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.some(p,args)};var G__11511=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11512__i=0,G__11512__a=new Array(arguments.length-3);while(G__11512__i<G__11512__a.length){G__11512__a[G__11512__i]=arguments[G__11512__i+3];++G__11512__i}args=
new cljs.core.IndexedSeq(G__11512__a,0,null)}return G__11511__delegate.call(this,x,y,z,args)};G__11511.cljs$lang$maxFixedArity=3;G__11511.cljs$lang$applyTo=function(arglist__11513){var x=cljs.core.first(arglist__11513);arglist__11513=cljs.core.next(arglist__11513);var y=cljs.core.first(arglist__11513);arglist__11513=cljs.core.next(arglist__11513);var z=cljs.core.first(arglist__11513);var args=cljs.core.rest(arglist__11513);return G__11511__delegate(x,y,z,args)};G__11511.cljs$core$IFn$_invoke$arity$variadic=
G__11511__delegate;return G__11511}();cljs$core$sp1=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$sp1__0.call(this);case 1:return cljs$core$sp1__1.call(this,x);case 2:return cljs$core$sp1__2.call(this,x,y);case 3:return cljs$core$sp1__3.call(this,x,y,z);default:var G__11514=null;if(arguments.length>3){var G__11515__i=0,G__11515__a=new Array(arguments.length-3);while(G__11515__i<G__11515__a.length){G__11515__a[G__11515__i]=arguments[G__11515__i+3];++G__11515__i}G__11514=
new cljs.core.IndexedSeq(G__11515__a,0,null)}return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11514)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$sp1.cljs$lang$maxFixedArity=3;cljs$core$sp1.cljs$lang$applyTo=cljs$core$sp1__4.cljs$lang$applyTo;cljs$core$sp1.cljs$core$IFn$_invoke$arity$0=cljs$core$sp1__0;cljs$core$sp1.cljs$core$IFn$_invoke$arity$1=cljs$core$sp1__1;cljs$core$sp1.cljs$core$IFn$_invoke$arity$2=cljs$core$sp1__2;cljs$core$sp1.cljs$core$IFn$_invoke$arity$3=
cljs$core$sp1__3;cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic=cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$sp1}()};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2=function(p1,p2){return function(){var cljs$core$sp2=null;var cljs$core$sp2__0=function(){return null};var cljs$core$sp2__1=function(x){var or__7908__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x)};var cljs$core$sp2__2=function(x,y){var or__7908__auto__=
p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else{var or__7908__auto____$2=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(or__7908__auto____$2))return or__7908__auto____$2;
else return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y)}}};var cljs$core$sp2__3=function(x,y,z){var or__7908__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else{var or__7908__auto____$2=
p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(z):p1.call(null,z);if(cljs.core.truth_(or__7908__auto____$2))return or__7908__auto____$2;else{var or__7908__auto____$3=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(or__7908__auto____$3))return or__7908__auto____$3;else{var or__7908__auto____$4=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);if(cljs.core.truth_(or__7908__auto____$4))return or__7908__auto____$4;
else return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(z):p2.call(null,z)}}}}};var cljs$core$sp2__4=function(){var G__11516__delegate=function(x,y,z,args){var or__7908__auto__=cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.some(function(or__7908__auto__){return function(p1__11495_SHARP_){var or__7908__auto____$1=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(p1__11495_SHARP_):
p1.call(null,p1__11495_SHARP_);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else return p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(p1__11495_SHARP_):p2.call(null,p1__11495_SHARP_)}}(or__7908__auto__),args)};var G__11516=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11517__i=0,G__11517__a=new Array(arguments.length-3);while(G__11517__i<G__11517__a.length){G__11517__a[G__11517__i]=arguments[G__11517__i+3];++G__11517__i}args=new cljs.core.IndexedSeq(G__11517__a,
0,null)}return G__11516__delegate.call(this,x,y,z,args)};G__11516.cljs$lang$maxFixedArity=3;G__11516.cljs$lang$applyTo=function(arglist__11518){var x=cljs.core.first(arglist__11518);arglist__11518=cljs.core.next(arglist__11518);var y=cljs.core.first(arglist__11518);arglist__11518=cljs.core.next(arglist__11518);var z=cljs.core.first(arglist__11518);var args=cljs.core.rest(arglist__11518);return G__11516__delegate(x,y,z,args)};G__11516.cljs$core$IFn$_invoke$arity$variadic=G__11516__delegate;return G__11516}();
cljs$core$sp2=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$sp2__0.call(this);case 1:return cljs$core$sp2__1.call(this,x);case 2:return cljs$core$sp2__2.call(this,x,y);case 3:return cljs$core$sp2__3.call(this,x,y,z);default:var G__11519=null;if(arguments.length>3){var G__11520__i=0,G__11520__a=new Array(arguments.length-3);while(G__11520__i<G__11520__a.length){G__11520__a[G__11520__i]=arguments[G__11520__i+3];++G__11520__i}G__11519=new cljs.core.IndexedSeq(G__11520__a,
0,null)}return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11519)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$sp2.cljs$lang$maxFixedArity=3;cljs$core$sp2.cljs$lang$applyTo=cljs$core$sp2__4.cljs$lang$applyTo;cljs$core$sp2.cljs$core$IFn$_invoke$arity$0=cljs$core$sp2__0;cljs$core$sp2.cljs$core$IFn$_invoke$arity$1=cljs$core$sp2__1;cljs$core$sp2.cljs$core$IFn$_invoke$arity$2=cljs$core$sp2__2;cljs$core$sp2.cljs$core$IFn$_invoke$arity$3=cljs$core$sp2__3;cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic=
cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$sp2}()};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3=function(p1,p2,p3){return function(){var cljs$core$sp3=null;var cljs$core$sp3__0=function(){return null};var cljs$core$sp3__1=function(x){var or__7908__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;
else return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(x):p3.call(null,x)}};var cljs$core$sp3__2=function(x,y){var or__7908__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else{var or__7908__auto____$2=
p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(x):p3.call(null,x);if(cljs.core.truth_(or__7908__auto____$2))return or__7908__auto____$2;else{var or__7908__auto____$3=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(or__7908__auto____$3))return or__7908__auto____$3;else{var or__7908__auto____$4=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);if(cljs.core.truth_(or__7908__auto____$4))return or__7908__auto____$4;
else return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(y):p3.call(null,y)}}}}};var cljs$core$sp3__3=function(x,y,z){var or__7908__auto__=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(x):p1.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(x):p2.call(null,x);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else{var or__7908__auto____$2=
p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(x):p3.call(null,x);if(cljs.core.truth_(or__7908__auto____$2))return or__7908__auto____$2;else{var or__7908__auto____$3=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(y):p1.call(null,y);if(cljs.core.truth_(or__7908__auto____$3))return or__7908__auto____$3;else{var or__7908__auto____$4=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(y):p2.call(null,y);if(cljs.core.truth_(or__7908__auto____$4))return or__7908__auto____$4;
else{var or__7908__auto____$5=p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(y):p3.call(null,y);if(cljs.core.truth_(or__7908__auto____$5))return or__7908__auto____$5;else{var or__7908__auto____$6=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(z):p1.call(null,z);if(cljs.core.truth_(or__7908__auto____$6))return or__7908__auto____$6;else{var or__7908__auto____$7=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(z):p2.call(null,z);if(cljs.core.truth_(or__7908__auto____$7))return or__7908__auto____$7;
else return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(z):p3.call(null,z)}}}}}}}};var cljs$core$sp3__4=function(){var G__11521__delegate=function(x,y,z,args){var or__7908__auto__=cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.some(function(or__7908__auto__){return function(p1__11496_SHARP_){var or__7908__auto____$1=p1.cljs$core$IFn$_invoke$arity$1?p1.cljs$core$IFn$_invoke$arity$1(p1__11496_SHARP_):
p1.call(null,p1__11496_SHARP_);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else{var or__7908__auto____$2=p2.cljs$core$IFn$_invoke$arity$1?p2.cljs$core$IFn$_invoke$arity$1(p1__11496_SHARP_):p2.call(null,p1__11496_SHARP_);if(cljs.core.truth_(or__7908__auto____$2))return or__7908__auto____$2;else return p3.cljs$core$IFn$_invoke$arity$1?p3.cljs$core$IFn$_invoke$arity$1(p1__11496_SHARP_):p3.call(null,p1__11496_SHARP_)}}}(or__7908__auto__),args)};var G__11521=function(x,y,z,var_args){var args=
null;if(arguments.length>3){var G__11522__i=0,G__11522__a=new Array(arguments.length-3);while(G__11522__i<G__11522__a.length){G__11522__a[G__11522__i]=arguments[G__11522__i+3];++G__11522__i}args=new cljs.core.IndexedSeq(G__11522__a,0,null)}return G__11521__delegate.call(this,x,y,z,args)};G__11521.cljs$lang$maxFixedArity=3;G__11521.cljs$lang$applyTo=function(arglist__11523){var x=cljs.core.first(arglist__11523);arglist__11523=cljs.core.next(arglist__11523);var y=cljs.core.first(arglist__11523);arglist__11523=
cljs.core.next(arglist__11523);var z=cljs.core.first(arglist__11523);var args=cljs.core.rest(arglist__11523);return G__11521__delegate(x,y,z,args)};G__11521.cljs$core$IFn$_invoke$arity$variadic=G__11521__delegate;return G__11521}();cljs$core$sp3=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$sp3__0.call(this);case 1:return cljs$core$sp3__1.call(this,x);case 2:return cljs$core$sp3__2.call(this,x,y);case 3:return cljs$core$sp3__3.call(this,x,y,z);default:var G__11524=
null;if(arguments.length>3){var G__11525__i=0,G__11525__a=new Array(arguments.length-3);while(G__11525__i<G__11525__a.length){G__11525__a[G__11525__i]=arguments[G__11525__i+3];++G__11525__i}G__11524=new cljs.core.IndexedSeq(G__11525__a,0,null)}return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11524)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$sp3.cljs$lang$maxFixedArity=3;cljs$core$sp3.cljs$lang$applyTo=cljs$core$sp3__4.cljs$lang$applyTo;cljs$core$sp3.cljs$core$IFn$_invoke$arity$0=
cljs$core$sp3__0;cljs$core$sp3.cljs$core$IFn$_invoke$arity$1=cljs$core$sp3__1;cljs$core$sp3.cljs$core$IFn$_invoke$arity$2=cljs$core$sp3__2;cljs$core$sp3.cljs$core$IFn$_invoke$arity$3=cljs$core$sp3__3;cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic=cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$sp3}()};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic=function(p1,p2,p3,ps){var ps__$1=cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);return function(ps__$1){return function(){var cljs$core$spn=null;var cljs$core$spn__0=function(){return null};var cljs$core$spn__1=function(x){return cljs.core.some(function(ps__$1){return function(p1__11497_SHARP_){return p1__11497_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11497_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p1__11497_SHARP_.call(null,x)}}(ps__$1),
ps__$1)};var cljs$core$spn__2=function(x,y){return cljs.core.some(function(ps__$1){return function(p1__11498_SHARP_){var or__7908__auto__=p1__11498_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11498_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p1__11498_SHARP_.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return p1__11498_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11498_SHARP_.cljs$core$IFn$_invoke$arity$1(y):p1__11498_SHARP_.call(null,y)}}(ps__$1),ps__$1)};var cljs$core$spn__3=
function(x,y,z){return cljs.core.some(function(ps__$1){return function(p1__11499_SHARP_){var or__7908__auto__=p1__11499_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11499_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p1__11499_SHARP_.call(null,x);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=p1__11499_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11499_SHARP_.cljs$core$IFn$_invoke$arity$1(y):p1__11499_SHARP_.call(null,y);if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;
else return p1__11499_SHARP_.cljs$core$IFn$_invoke$arity$1?p1__11499_SHARP_.cljs$core$IFn$_invoke$arity$1(z):p1__11499_SHARP_.call(null,z)}}}(ps__$1),ps__$1)};var cljs$core$spn__4=function(){var G__11526__delegate=function(x,y,z,args){var or__7908__auto__=cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x,y,z);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.some(function(or__7908__auto__,ps__$1){return function(p1__11500_SHARP_){return cljs.core.some(p1__11500_SHARP_,
args)}}(or__7908__auto__,ps__$1),ps__$1)};var G__11526=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__11527__i=0,G__11527__a=new Array(arguments.length-3);while(G__11527__i<G__11527__a.length){G__11527__a[G__11527__i]=arguments[G__11527__i+3];++G__11527__i}args=new cljs.core.IndexedSeq(G__11527__a,0,null)}return G__11526__delegate.call(this,x,y,z,args)};G__11526.cljs$lang$maxFixedArity=3;G__11526.cljs$lang$applyTo=function(arglist__11528){var x=cljs.core.first(arglist__11528);
arglist__11528=cljs.core.next(arglist__11528);var y=cljs.core.first(arglist__11528);arglist__11528=cljs.core.next(arglist__11528);var z=cljs.core.first(arglist__11528);var args=cljs.core.rest(arglist__11528);return G__11526__delegate(x,y,z,args)};G__11526.cljs$core$IFn$_invoke$arity$variadic=G__11526__delegate;return G__11526}();cljs$core$spn=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return cljs$core$spn__0.call(this);case 1:return cljs$core$spn__1.call(this,x);case 2:return cljs$core$spn__2.call(this,
x,y);case 3:return cljs$core$spn__3.call(this,x,y,z);default:var G__11529=null;if(arguments.length>3){var G__11530__i=0,G__11530__a=new Array(arguments.length-3);while(G__11530__i<G__11530__a.length){G__11530__a[G__11530__i]=arguments[G__11530__i+3];++G__11530__i}G__11529=new cljs.core.IndexedSeq(G__11530__a,0,null)}return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__11529)}throw new Error("Invalid arity: "+arguments.length);};cljs$core$spn.cljs$lang$maxFixedArity=3;cljs$core$spn.cljs$lang$applyTo=
cljs$core$spn__4.cljs$lang$applyTo;cljs$core$spn.cljs$core$IFn$_invoke$arity$0=cljs$core$spn__0;cljs$core$spn.cljs$core$IFn$_invoke$arity$1=cljs$core$spn__1;cljs$core$spn.cljs$core$IFn$_invoke$arity$2=cljs$core$spn__2;cljs$core$spn.cljs$core$IFn$_invoke$arity$3=cljs$core$spn__3;cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic=cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;return cljs$core$spn}()}(ps__$1)};
cljs.core.some_fn.cljs$lang$applyTo=function(seq11502){var G__11503=cljs.core.first(seq11502);var seq11502__$1=cljs.core.next(seq11502);var G__11504=cljs.core.first(seq11502__$1);var seq11502__$2=cljs.core.next(seq11502__$1);var G__11505=cljs.core.first(seq11502__$2);var seq11502__$3=cljs.core.next(seq11502__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11503,G__11504,G__11505,seq11502__$3)};cljs.core.some_fn.cljs$lang$maxFixedArity=3;
cljs.core.map=function cljs$core$map(var_args){var G__11538=arguments.length;switch(G__11538){case 1:return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:var args_arr__9132__auto__=
[];var len__9107__auto___11551=arguments.length;var i__9108__auto___11552=0;while(true){if(i__9108__auto___11552<len__9107__auto___11551){args_arr__9132__auto__.push(arguments[i__9108__auto___11552]);var G__11553=i__9108__auto___11552+1;i__9108__auto___11552=G__11553;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(4),0,null);return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],arguments[3],argseq__9133__auto__)}};
cljs.core.map.cljs$core$IFn$_invoke$arity$1=function(f){return function(rf){return function(){var G__11554=null;var G__11554__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11554__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11554__2=function(result,input){var G__11539=result;var G__11540=f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(input):
f.call(null,input);return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(G__11539,G__11540):rf.call(null,G__11539,G__11540)};var G__11554__3=function(){var G__11555__delegate=function(result,input,inputs){var G__11541=result;var G__11542=cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(G__11541,G__11542):rf.call(null,G__11541,G__11542)};var G__11555=function(result,input,var_args){var inputs=null;
if(arguments.length>2){var G__11556__i=0,G__11556__a=new Array(arguments.length-2);while(G__11556__i<G__11556__a.length){G__11556__a[G__11556__i]=arguments[G__11556__i+2];++G__11556__i}inputs=new cljs.core.IndexedSeq(G__11556__a,0,null)}return G__11555__delegate.call(this,result,input,inputs)};G__11555.cljs$lang$maxFixedArity=2;G__11555.cljs$lang$applyTo=function(arglist__11557){var result=cljs.core.first(arglist__11557);arglist__11557=cljs.core.next(arglist__11557);var input=cljs.core.first(arglist__11557);
var inputs=cljs.core.rest(arglist__11557);return G__11555__delegate(result,input,inputs)};G__11555.cljs$core$IFn$_invoke$arity$variadic=G__11555__delegate;return G__11555}();G__11554=function(result,input,var_args){var inputs=var_args;switch(arguments.length){case 0:return G__11554__0.call(this);case 1:return G__11554__1.call(this,result);case 2:return G__11554__2.call(this,result,input);default:var G__11558=null;if(arguments.length>2){var G__11559__i=0,G__11559__a=new Array(arguments.length-2);while(G__11559__i<
G__11559__a.length){G__11559__a[G__11559__i]=arguments[G__11559__i+2];++G__11559__i}G__11558=new cljs.core.IndexedSeq(G__11559__a,0,null)}return G__11554__3.cljs$core$IFn$_invoke$arity$variadic(result,input,G__11558)}throw new Error("Invalid arity: "+arguments.length);};G__11554.cljs$lang$maxFixedArity=2;G__11554.cljs$lang$applyTo=G__11554__3.cljs$lang$applyTo;G__11554.cljs$core$IFn$_invoke$arity$0=G__11554__0;G__11554.cljs$core$IFn$_invoke$arity$1=G__11554__1;G__11554.cljs$core$IFn$_invoke$arity$2=
G__11554__2;G__11554.cljs$core$IFn$_invoke$arity$variadic=G__11554__3.cljs$core$IFn$_invoke$arity$variadic;return G__11554}()}};
cljs.core.map.cljs$core$IFn$_invoke$arity$2=function(f,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(s)){var c=cljs.core.chunk_first(s);var size=cljs.core.count(c);var b=cljs.core.chunk_buffer(size);var n__8876__auto___11560=size;var i_11561=0;while(true){if(i_11561<n__8876__auto___11560){cljs.core.chunk_append(b,function(){var G__11543=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,
i_11561);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11543):f.call(null,G__11543)}());var G__11562=i_11561+1;i_11561=G__11562;continue}else;break}return cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)))}else return cljs.core.cons(function(){var G__11544=cljs.core.first(s);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11544):f.call(null,G__11544)}(),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,
cljs.core.rest(s)))}else return null},null,null)};
cljs.core.map.cljs$core$IFn$_invoke$arity$3=function(f,c1,c2){return new cljs.core.LazySeq(null,function(){var s1=cljs.core.seq(c1);var s2=cljs.core.seq(c2);if(s1&&s2)return cljs.core.cons(function(){var G__11545=cljs.core.first(s1);var G__11546=cljs.core.first(s2);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11545,G__11546):f.call(null,G__11545,G__11546)}(),cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));else return null},null,null)};
cljs.core.map.cljs$core$IFn$_invoke$arity$4=function(f,c1,c2,c3){return new cljs.core.LazySeq(null,function(){var s1=cljs.core.seq(c1);var s2=cljs.core.seq(c2);var s3=cljs.core.seq(c3);if(s1&&s2&&s3)return cljs.core.cons(function(){var G__11547=cljs.core.first(s1);var G__11548=cljs.core.first(s2);var G__11549=cljs.core.first(s3);return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11547,G__11548,G__11549):f.call(null,G__11547,G__11548,G__11549)}(),cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,
cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));else return null},null,null)};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic=function(f,c1,c2,c3,colls){var step=function cljs$core$step(cs){return new cljs.core.LazySeq(null,function(){var ss=cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);if(cljs.core.every_QMARK_(cljs.core.identity,ss))return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));else return null},null,null)};return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step){return function(p1__11531_SHARP_){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,
p1__11531_SHARP_)}}(step),step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2,c1],0))))};
cljs.core.map.cljs$lang$applyTo=function(seq11533){var G__11534=cljs.core.first(seq11533);var seq11533__$1=cljs.core.next(seq11533);var G__11535=cljs.core.first(seq11533__$1);var seq11533__$2=cljs.core.next(seq11533__$1);var G__11536=cljs.core.first(seq11533__$2);var seq11533__$3=cljs.core.next(seq11533__$2);var G__11537=cljs.core.first(seq11533__$3);var seq11533__$4=cljs.core.next(seq11533__$3);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11534,G__11535,
G__11536,G__11537,seq11533__$4)};cljs.core.map.cljs$lang$maxFixedArity=4;cljs.core.take=function cljs$core$take(var_args){var G__11564=arguments.length;switch(G__11564){case 1:return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.take.cljs$core$IFn$_invoke$arity$1=function(n){if(typeof n==="number");else throw new Error("Assert failed: (number? n)");return function(rf){var na=cljs.core.volatile_BANG_(n);return function(na){return function(){var G__11566=null;var G__11566__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11566__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11566__2=
function(result,input){var n__$1=cljs.core.deref(na);var nn=na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,na.cljs$core$IDeref$_deref$arity$1(null)-1);var result__$1=n__$1>0?rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input):result;if(!(nn>0))return cljs.core.ensure_reduced(result__$1);else return result__$1};G__11566=function(result,input){switch(arguments.length){case 0:return G__11566__0.call(this);case 1:return G__11566__1.call(this,result);
case 2:return G__11566__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__11566.cljs$core$IFn$_invoke$arity$0=G__11566__0;G__11566.cljs$core$IFn$_invoke$arity$1=G__11566__1;G__11566.cljs$core$IFn$_invoke$arity$2=G__11566__2;return G__11566}()}(na)}};
cljs.core.take.cljs$core$IFn$_invoke$arity$2=function(n,coll){if(typeof n==="number");else throw new Error("Assert failed: (number? n)");return new cljs.core.LazySeq(null,function(){if(n>0){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;return cljs.core.cons(cljs.core.first(s),cljs.core.take.cljs$core$IFn$_invoke$arity$2(n-1,cljs.core.rest(s)))}else return null}else return null},null,null)};cljs.core.take.cljs$lang$maxFixedArity=2;
cljs.core.drop=function cljs$core$drop(var_args){var G__11568=arguments.length;switch(G__11568){case 1:return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1=function(n){if(typeof n==="number");else throw new Error("Assert failed: (number? n)");return function(rf){var na=cljs.core.volatile_BANG_(n);return function(na){return function(){var G__11570=null;var G__11570__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11570__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11570__2=
function(result,input){var n__$1=cljs.core.deref(na);na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,na.cljs$core$IDeref$_deref$arity$1(null)-1);if(n__$1>0)return result;else return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input)};G__11570=function(result,input){switch(arguments.length){case 0:return G__11570__0.call(this);case 1:return G__11570__1.call(this,result);case 2:return G__11570__2.call(this,result,input)}throw new Error("Invalid arity: "+
arguments.length);};G__11570.cljs$core$IFn$_invoke$arity$0=G__11570__0;G__11570.cljs$core$IFn$_invoke$arity$1=G__11570__1;G__11570.cljs$core$IFn$_invoke$arity$2=G__11570__2;return G__11570}()}(na)}};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2=function(n,coll){if(typeof n==="number");else throw new Error("Assert failed: (number? n)");var step=function(n__$1,coll__$1){while(true){var s=cljs.core.seq(coll__$1);if(n__$1>0&&s){var G__11571=n__$1-1;var G__11572=cljs.core.rest(s);n__$1=G__11571;coll__$1=G__11572;continue}else return s;break}};return new cljs.core.LazySeq(null,function(step){return function(){return step(n,coll)}}(step),null,null)};cljs.core.drop.cljs$lang$maxFixedArity=2;
cljs.core.drop_last=function cljs$core$drop_last(var_args){var G__11574=arguments.length;switch(G__11574){case 1:return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1=function(s){return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1,s)};cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2=function(n,s){return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x,_){return x},s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s))};cljs.core.drop_last.cljs$lang$maxFixedArity=2;
cljs.core.take_last=function cljs$core$take_last(n,coll){var s=cljs.core.seq(coll);var lead=cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));while(true){if(lead){var G__11576=cljs.core.next(s);var G__11577=cljs.core.next(lead);s=G__11576;lead=G__11577;continue}else return s;break}};
cljs.core.drop_while=function cljs$core$drop_while(var_args){var G__11579=arguments.length;switch(G__11579){case 1:return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1=function(pred){return function(rf){var da=cljs.core.volatile_BANG_(true);return function(da){return function(){var G__11583=null;var G__11583__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11583__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11583__2=function(result,input){var drop_QMARK_=cljs.core.deref(da);
if(cljs.core.truth_(function(){var and__7893__auto__=drop_QMARK_;if(cljs.core.truth_(and__7893__auto__))return pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(input):pred.call(null,input);else return and__7893__auto__}()))return result;else{cljs.core.vreset_BANG_(da,null);return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input)}};G__11583=function(result,input){switch(arguments.length){case 0:return G__11583__0.call(this);
case 1:return G__11583__1.call(this,result);case 2:return G__11583__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__11583.cljs$core$IFn$_invoke$arity$0=G__11583__0;G__11583.cljs$core$IFn$_invoke$arity$1=G__11583__1;G__11583.cljs$core$IFn$_invoke$arity$2=G__11583__2;return G__11583}()}(da)}};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2=function(pred,coll){var step=function(pred__$1,coll__$1){while(true){var s=cljs.core.seq(coll__$1);if(cljs.core.truth_(function(){var and__7893__auto__=s;if(and__7893__auto__){var G__11581=cljs.core.first(s);return pred__$1.cljs$core$IFn$_invoke$arity$1?pred__$1.cljs$core$IFn$_invoke$arity$1(G__11581):pred__$1.call(null,G__11581)}else return and__7893__auto__}())){var G__11584=pred__$1;var G__11585=cljs.core.rest(s);pred__$1=G__11584;coll__$1=G__11585;
continue}else return s;break}};return new cljs.core.LazySeq(null,function(step){return function(){return step(pred,coll)}}(step),null,null)};cljs.core.drop_while.cljs$lang$maxFixedArity=2;cljs.core.Cycle=function(meta,all,prev,current,_next){this.meta=meta;this.all=all;this.prev=prev;this.current=current;this._next=_next;this.cljs$lang$protocol_mask$partition0$=26083532;this.cljs$lang$protocol_mask$partition1$=1};cljs.core.Cycle.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.Cycle.prototype.currentval=function(){var self__=this;var coll=this;if(self__.current);else{var temp__4655__auto___11592=cljs.core.next(self__.prev);if(temp__4655__auto___11592){var c_11593=temp__4655__auto___11592;self__.current=c_11593}else self__.current=self__.all}return self__.current};cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ISeq$_rest$arity$1(null)};cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1=function(coll){var self__=this;var coll__$1=this;return!(self__.current==null)};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;var s=coll__$1.currentval();var ret=cljs.core.first(s);while(true){var s__$1=function(){var or__7908__auto__=cljs.core.next(s);if(or__7908__auto__)return or__7908__auto__;else return self__.all}();var ret__$1=function(){var G__11588=ret;var G__11589=cljs.core.first(s__$1);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11588,G__11589):f.call(null,G__11588,G__11589)}();
if(cljs.core.reduced_QMARK_(ret__$1))return cljs.core.deref(ret__$1);else{var G__11594=s__$1;var G__11595=ret__$1;s=G__11594;ret=G__11595;continue}break}};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;var s=coll__$1.currentval();var ret=start;while(true){var ret__$1=function(){var G__11590=ret;var G__11591=cljs.core.first(s);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11590,G__11591):f.call(null,G__11590,G__11591)}();if(cljs.core.reduced_QMARK_(ret__$1))return cljs.core.deref(ret__$1);else{var G__11596=function(){var or__7908__auto__=cljs.core.next(s);
if(or__7908__auto__)return or__7908__auto__;else return self__.all}();var G__11597=ret__$1;s=G__11596;ret=G__11597;continue}break}};cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.first(coll__$1.currentval())};cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__._next==null)self__._next=new cljs.core.Cycle(null,self__.all,coll__$1.currentval(),null,null);else;return self__._next};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.Cycle(new_meta,self__.all,self__.prev,self__.current,self__._next)};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.Cycle.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"all","all",-1762306027,null),new cljs.core.Symbol(null,"prev","prev",43462301,null),cljs.core.with_meta(new cljs.core.Symbol(null,"current","current",552492924,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,
"_next","_next",101877036,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Cycle.cljs$lang$type=true;cljs.core.Cycle.cljs$lang$ctorStr="cljs.core/Cycle";cljs.core.Cycle.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Cycle")};
cljs.core.__GT_Cycle=function cljs$core$__GT_Cycle(meta,all,prev,current,_next){return new cljs.core.Cycle(meta,all,prev,current,_next)};cljs.core.cycle=function cljs$core$cycle(coll){var temp__4655__auto__=cljs.core.seq(coll);if(temp__4655__auto__){var vals=temp__4655__auto__;return new cljs.core.Cycle(null,vals,null,vals,null)}else return cljs.core.List.EMPTY};
cljs.core.split_at=function cljs$core$split_at(n,coll){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)],null)};cljs.core.Repeat=function(meta,count,val,next,__hash){this.meta=meta;this.count=count;this.val=val;this.next=next;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32374988;this.cljs$lang$protocol_mask$partition1$=1};
cljs.core.Repeat.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.Repeat.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.Repeat.prototype.indexOf=function(){var G__11598=null;var G__11598__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11598__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11598=function(x,start){switch(arguments.length){case 1:return G__11598__1.call(this,x);case 2:return G__11598__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__11598.cljs$core$IFn$_invoke$arity$1=G__11598__1;G__11598.cljs$core$IFn$_invoke$arity$2=G__11598__2;return G__11598}();
cljs.core.Repeat.prototype.lastIndexOf=function(){var G__11599=null;var G__11599__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count)};var G__11599__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11599=function(x,start){switch(arguments.length){case 1:return G__11599__1.call(this,x);case 2:return G__11599__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11599.cljs$core$IFn$_invoke$arity$1=G__11599__1;G__11599.cljs$core$IFn$_invoke$arity$2=G__11599__2;return G__11599}();cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.next==null)if(self__.count>1){self__.next=new cljs.core.Repeat(null,self__.count-1,self__.val,null,null);return self__.next}else if(-1===self__.count)return coll__$1;else return null;else return self__.next};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1=function(coll){var self__=this;var coll__$1=this;return false};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;if(self__.count===-1){var ret=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(self__.val,self__.val):f.call(null,self__.val,self__.val);while(true){if(cljs.core.reduced_QMARK_(ret))return cljs.core.deref(ret);else{var G__11600=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(ret,self__.val):f.call(null,ret,self__.val);ret=G__11600;continue}break}}else{var i=
1;var ret=self__.val;while(true){if(i<self__.count){var ret__$1=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(ret,self__.val):f.call(null,ret,self__.val);if(cljs.core.reduced_QMARK_(ret__$1))return cljs.core.deref(ret__$1);else{var G__11601=i+1;var G__11602=ret__$1;i=G__11601;ret=G__11602;continue}}else return ret;break}}};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;if(self__.count===-1){var ret=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(start,self__.val):f.call(null,start,self__.val);while(true){if(cljs.core.reduced_QMARK_(ret))return cljs.core.deref(ret);else{var G__11603=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(ret,self__.val):f.call(null,ret,self__.val);ret=G__11603;continue}break}}else{var i=0;
var ret=start;while(true){if(i<self__.count){var ret__$1=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(ret,self__.val):f.call(null,ret,self__.val);if(cljs.core.reduced_QMARK_(ret__$1))return cljs.core.deref(ret__$1);else{var G__11604=i+1;var G__11605=ret__$1;i=G__11604;ret=G__11605;continue}}else return ret;break}}};cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.val};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.next==null)if(self__.count>1){self__.next=new cljs.core.Repeat(null,self__.count-1,self__.val,null,null);return self__.next}else if(-1===self__.count)return coll__$1;else return cljs.core.List.EMPTY;else return self__.next};cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.Repeat(new_meta,self__.count,self__.val,self__.next,null)};cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.Repeat.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.Symbol(null,"val","val",1769233139,null),cljs.core.with_meta(new cljs.core.Symbol(null,"next","next",1522830042,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,
"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Repeat.cljs$lang$type=true;cljs.core.Repeat.cljs$lang$ctorStr="cljs.core/Repeat";cljs.core.Repeat.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Repeat")};
cljs.core.__GT_Repeat=function cljs$core$__GT_Repeat(meta,count,val,next,__hash){return new cljs.core.Repeat(meta,count,val,next,__hash)};
cljs.core.repeat=function cljs$core$repeat(var_args){var G__11607=arguments.length;switch(G__11607){case 1:return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.repeat.cljs$core$IFn$_invoke$arity$1=function(x){return new cljs.core.Repeat(null,-1,x,null,null)};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2=function(n,x){if(n>0)return new cljs.core.Repeat(null,n,x,null,null);else return cljs.core.List.EMPTY};cljs.core.repeat.cljs$lang$maxFixedArity=2;cljs.core.replicate=function cljs$core$replicate(n,x){return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x))};
cljs.core.repeatedly=function cljs$core$repeatedly(var_args){var G__11610=arguments.length;switch(G__11610){case 1:return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1=function(f){return new cljs.core.LazySeq(null,function(){return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null),cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f))},null,null)};cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2=function(n,f){return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f))};cljs.core.repeatedly.cljs$lang$maxFixedArity=2;
cljs.core.UNREALIZED_SEED={};cljs.core.Iterate=function(meta,f,prev_seed,seed,next){this.meta=meta;this.f=f;this.prev_seed=prev_seed;this.seed=seed;this.next=next;this.cljs$lang$protocol_mask$partition0$=26083532;this.cljs$lang$protocol_mask$partition1$=1};cljs.core.Iterate.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ISeq$_rest$arity$1(null)};cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1=function(coll){var self__=this;var coll__$1=this;return!(self__.seed===cljs.core.UNREALIZED_SEED)};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,rf){var self__=this;var coll__$1=this;var first=coll__$1.cljs$core$ISeq$_first$arity$1(null);var v=self__.f.cljs$core$IFn$_invoke$arity$1?self__.f.cljs$core$IFn$_invoke$arity$1(first):self__.f.call(null,first);var ret=rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(first,v):rf.call(null,first,v);var v__$1=v;while(true){if(cljs.core.reduced_QMARK_(ret))return cljs.core.deref(ret);else{var v__$2=self__.f.cljs$core$IFn$_invoke$arity$1?
self__.f.cljs$core$IFn$_invoke$arity$1(v__$1):self__.f.call(null,v__$1);var G__11612=rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(ret,v__$2):rf.call(null,ret,v__$2);var G__11613=v__$2;ret=G__11612;v__$1=G__11613;continue}break}};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,rf,start){var self__=this;var coll__$1=this;var v=coll__$1.cljs$core$ISeq$_first$arity$1(null);var ret=rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(start,v):rf.call(null,start,v);var v__$1=v;while(true){if(cljs.core.reduced_QMARK_(ret))return cljs.core.deref(ret);else{var v__$2=self__.f.cljs$core$IFn$_invoke$arity$1?self__.f.cljs$core$IFn$_invoke$arity$1(v__$1):self__.f.call(null,v__$1);var G__11614=rf.cljs$core$IFn$_invoke$arity$2?
rf.cljs$core$IFn$_invoke$arity$2(ret,v__$2):rf.call(null,ret,v__$2);var G__11615=v__$2;ret=G__11614;v__$1=G__11615;continue}break}};cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;if(cljs.core.UNREALIZED_SEED===self__.seed)self__.seed=self__.f.cljs$core$IFn$_invoke$arity$1?self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed):self__.f.call(null,self__.prev_seed);else;return self__.seed};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.next==null)self__.next=new cljs.core.Iterate(null,self__.f,coll__$1.cljs$core$ISeq$_first$arity$1(null),cljs.core.UNREALIZED_SEED,null);else;return self__.next};cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.Iterate(new_meta,self__.f,self__.prev_seed,self__.seed,self__.next)};cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.Iterate.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prev-seed","prev-seed",2126381367,null),cljs.core.with_meta(new cljs.core.Symbol(null,"seed","seed",1709144854,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,
"next","next",1522830042,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Iterate.cljs$lang$type=true;cljs.core.Iterate.cljs$lang$ctorStr="cljs.core/Iterate";cljs.core.Iterate.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Iterate")};
cljs.core.__GT_Iterate=function cljs$core$__GT_Iterate(meta,f,prev_seed,seed,next){return new cljs.core.Iterate(meta,f,prev_seed,seed,next)};cljs.core.iterate=function cljs$core$iterate(f,x){return new cljs.core.Iterate(null,f,null,x,null)};
cljs.core.interleave=function cljs$core$interleave(var_args){var G__11620=arguments.length;switch(G__11620){case 0:return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11622=arguments.length;var i__9108__auto___11623=0;while(true){if(i__9108__auto___11623<
len__9107__auto___11622){args_arr__9132__auto__.push(arguments[i__9108__auto___11623]);var G__11624=i__9108__auto___11623+1;i__9108__auto___11623=G__11624;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(2),0,null);return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__9133__auto__)}};cljs.core.interleave.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.List.EMPTY};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1=function(c1){return new cljs.core.LazySeq(null,function(){return c1},null,null)};cljs.core.interleave.cljs$core$IFn$_invoke$arity$2=function(c1,c2){return new cljs.core.LazySeq(null,function(){var s1=cljs.core.seq(c1);var s2=cljs.core.seq(c2);if(s1&&s2)return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));else return null},null,null)};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic=function(c1,c2,colls){return new cljs.core.LazySeq(null,function(){var ss=cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1],0)));if(cljs.core.every_QMARK_(cljs.core.identity,ss))return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave,
cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));else return null},null,null)};cljs.core.interleave.cljs$lang$applyTo=function(seq11617){var G__11618=cljs.core.first(seq11617);var seq11617__$1=cljs.core.next(seq11617);var G__11619=cljs.core.first(seq11617__$1);var seq11617__$2=cljs.core.next(seq11617__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11618,G__11619,seq11617__$2)};cljs.core.interleave.cljs$lang$maxFixedArity=2;
cljs.core.interpose=function cljs$core$interpose(var_args){var G__11626=arguments.length;switch(G__11626){case 1:return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1=function(sep){return function(rf){var started=cljs.core.volatile_BANG_(false);return function(started){return function(){var G__11628=null;var G__11628__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11628__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11628__2=function(result,input){if(cljs.core.truth_(cljs.core.deref(started))){var sepr=
rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,sep):rf.call(null,result,sep);if(cljs.core.reduced_QMARK_(sepr))return sepr;else return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(sepr,input):rf.call(null,sepr,input)}else{cljs.core.vreset_BANG_(started,true);return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input)}};G__11628=function(result,input){switch(arguments.length){case 0:return G__11628__0.call(this);
case 1:return G__11628__1.call(this,result);case 2:return G__11628__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__11628.cljs$core$IFn$_invoke$arity$0=G__11628__0;G__11628.cljs$core$IFn$_invoke$arity$1=G__11628__1;G__11628.cljs$core$IFn$_invoke$arity$2=G__11628__2;return G__11628}()}(started)}};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2=function(sep,coll){return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll))};cljs.core.interpose.cljs$lang$maxFixedArity=2;
cljs.core.flatten1=function cljs$core$flatten1(colls){var cat=function cljs$core$flatten1_$_cat(coll,colls__$1){return new cljs.core.LazySeq(null,function(){var temp__4655__auto__=cljs.core.seq(coll);if(temp__4655__auto__){var coll__$1=temp__4655__auto__;return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1))}else if(cljs.core.seq(colls__$1))return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));else return null},
null,null)};return cat(null,colls)};
cljs.core.mapcat=function cljs$core$mapcat(var_args){var G__11632=arguments.length;switch(G__11632){case 1:return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11634=arguments.length;var i__9108__auto___11635=0;while(true){if(i__9108__auto___11635<len__9107__auto___11634){args_arr__9132__auto__.push(arguments[i__9108__auto___11635]);var G__11636=i__9108__auto___11635+1;i__9108__auto___11635=G__11636;continue}else;break}var argseq__9133__auto__=
new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(1),0,null);return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__9133__auto__)}};cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1=function(f){return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat)};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic=function(f,colls){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls))};cljs.core.mapcat.cljs$lang$applyTo=function(seq11630){var G__11631=cljs.core.first(seq11630);var seq11630__$1=cljs.core.next(seq11630);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11631,seq11630__$1)};
cljs.core.mapcat.cljs$lang$maxFixedArity=1;cljs.core.filter=function cljs$core$filter(var_args){var G__11638=arguments.length;switch(G__11638){case 1:return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1=function(pred){return function(rf){return function(){var G__11641=null;var G__11641__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__11641__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__11641__2=function(result,input){if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(input):
pred.call(null,input)))return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input);else return result};G__11641=function(result,input){switch(arguments.length){case 0:return G__11641__0.call(this);case 1:return G__11641__1.call(this,result);case 2:return G__11641__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__11641.cljs$core$IFn$_invoke$arity$0=G__11641__0;G__11641.cljs$core$IFn$_invoke$arity$1=G__11641__1;
G__11641.cljs$core$IFn$_invoke$arity$2=G__11641__2;return G__11641}()}};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2=function(pred,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(s)){var c=cljs.core.chunk_first(s);var size=cljs.core.count(c);var b=cljs.core.chunk_buffer(size);var n__8876__auto___11642=size;var i_11643=0;while(true){if(i_11643<n__8876__auto___11642){if(cljs.core.truth_(function(){var G__11639=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,
i_11643);return pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(G__11639):pred.call(null,G__11639)}()))cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11643));else;var G__11644=i_11643+1;i_11643=G__11644;continue}else;break}return cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)))}else{var f=cljs.core.first(s);var r=cljs.core.rest(s);if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1?
pred.cljs$core$IFn$_invoke$arity$1(f):pred.call(null,f)))return cljs.core.cons(f,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r));else return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r)}}else return null},null,null)};cljs.core.filter.cljs$lang$maxFixedArity=2;
cljs.core.remove=function cljs$core$remove(var_args){var G__11646=arguments.length;switch(G__11646){case 1:return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.remove.cljs$core$IFn$_invoke$arity$1=function(pred){return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred))};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2=function(pred,coll){return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll)};cljs.core.remove.cljs$lang$maxFixedArity=2;
cljs.core.tree_seq=function cljs$core$tree_seq(branch_QMARK_,children,root){var walk=function cljs$core$tree_seq_$_walk(node){return new cljs.core.LazySeq(null,function(){return cljs.core.cons(node,cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1?branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node):branch_QMARK_.call(null,node))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1?
children.cljs$core$IFn$_invoke$arity$1(node):children.call(null,node)],0)):null)},null,null)};return walk(root)};cljs.core.flatten=function cljs$core$flatten(x){return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__11648_SHARP_){return!cljs.core.sequential_QMARK_(p1__11648_SHARP_)},cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)))};
cljs.core.into=function cljs$core$into(var_args){var G__11650=arguments.length;switch(G__11650){case 0:return cljs.core.into.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.core.into.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.PersistentVector.EMPTY};cljs.core.into.cljs$core$IFn$_invoke$arity$1=function(to){return to};
cljs.core.into.cljs$core$IFn$_invoke$arity$2=function(to,from){if(!(to==null))if(!(to==null)?to.cljs$lang$protocol_mask$partition1$&4||cljs.core.PROTOCOL_SENTINEL===to.cljs$core$IEditableCollection$?true:false:false)return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));else return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);else return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,
cljs.core.List.EMPTY,from)};
cljs.core.into.cljs$core$IFn$_invoke$arity$3=function(to,xform,from){if(!(to==null)?to.cljs$lang$protocol_mask$partition1$&4||cljs.core.PROTOCOL_SENTINEL===to.cljs$core$IEditableCollection$?true:false:false)return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));else return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from)};
cljs.core.into.cljs$lang$maxFixedArity=3;
cljs.core.mapv=function cljs$core$mapv(var_args){var G__11660=arguments.length;switch(G__11660){case 2:return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11662=arguments.length;var i__9108__auto___11663=
0;while(true){if(i__9108__auto___11663<len__9107__auto___11662){args_arr__9132__auto__.push(arguments[i__9108__auto___11663]);var G__11664=i__9108__auto___11663+1;i__9108__auto___11663=G__11664;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(4),0,null);return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],arguments[3],argseq__9133__auto__)}};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2=function(f,coll){return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v,o){return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(o):f.call(null,o))},cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll))};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3=function(f,c1,c2){return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2))};cljs.core.mapv.cljs$core$IFn$_invoke$arity$4=function(f,c1,c2,c3){return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3))};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic=function(f,c1,c2,c3,colls){return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls],0)))};
cljs.core.mapv.cljs$lang$applyTo=function(seq11655){var G__11656=cljs.core.first(seq11655);var seq11655__$1=cljs.core.next(seq11655);var G__11657=cljs.core.first(seq11655__$1);var seq11655__$2=cljs.core.next(seq11655__$1);var G__11658=cljs.core.first(seq11655__$2);var seq11655__$3=cljs.core.next(seq11655__$2);var G__11659=cljs.core.first(seq11655__$3);var seq11655__$4=cljs.core.next(seq11655__$3);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11656,G__11657,
G__11658,G__11659,seq11655__$4)};cljs.core.mapv.cljs$lang$maxFixedArity=4;cljs.core.filterv=function cljs$core$filterv(pred,coll){return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v,o){if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(o):pred.call(null,o)))return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);else return v},cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll))};
cljs.core.partition=function cljs$core$partition(var_args){var G__11666=arguments.length;switch(G__11666){case 2:return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.core.partition.cljs$core$IFn$_invoke$arity$2=function(n,coll){return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,n,coll)};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3=function(n,step,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;var p=cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);if(n===cljs.core.count(p))return cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));else return null}else return null},null,null)};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4=function(n,step,pad,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;var p=cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);if(n===cljs.core.count(p))return cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));else return new cljs.core.List(null,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,
cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)),null,1,null)}else return null},null,null)};cljs.core.partition.cljs$lang$maxFixedArity=4;
cljs.core.get_in=function cljs$core$get_in(var_args){var G__11669=arguments.length;switch(G__11669){case 2:return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2=function(m,ks){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get,m,ks)};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3=function(m,ks,not_found){var sentinel=cljs.core.lookup_sentinel;var m__$1=m;var ks__$1=cljs.core.seq(ks);while(true){if(!(ks__$1==null)){var m__$2=cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);if(sentinel===m__$2)return not_found;else{var G__11671=sentinel;var G__11672=m__$2;var G__11673=cljs.core.next(ks__$1);sentinel=G__11671;m__$1=G__11672;ks__$1=G__11673;continue}}else return m__$1;break}};
cljs.core.get_in.cljs$lang$maxFixedArity=3;
cljs.core.assoc_in=function cljs$core$assoc_in(m,p__11674,v){var vec__11675=p__11674;var seq__11676=cljs.core.seq(vec__11675);var first__11677=cljs.core.first(seq__11676);var seq__11676__$1=cljs.core.next(seq__11676);var k=first__11677;var ks=seq__11676__$1;if(ks)return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,function(){var G__11678=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11679=ks;var G__11680=v;return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3?cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__11678,
G__11679,G__11680):cljs.core.assoc_in.call(null,G__11678,G__11679,G__11680)}());else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v)};
cljs.core.update_in=function cljs$core$update_in(var_args){var G__11689=arguments.length;switch(G__11689){case 3:return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;case 6:return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11721=arguments.length;var i__9108__auto___11722=0;while(true){if(i__9108__auto___11722<len__9107__auto___11721){args_arr__9132__auto__.push(arguments[i__9108__auto___11722]);var G__11723=i__9108__auto___11722+1;i__9108__auto___11722=G__11723;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(6),0,null);return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],argseq__9133__auto__)}};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3=function(m,p__11690,f){var vec__11691=p__11690;var seq__11692=cljs.core.seq(vec__11691);var first__11693=cljs.core.first(seq__11692);var seq__11692__$1=cljs.core.next(seq__11692);var k=first__11693;var ks=seq__11692__$1;if(ks)return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,
function(){var G__11694=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11694):f.call(null,G__11694)}())};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4=function(m,p__11695,f,a){var vec__11696=p__11695;var seq__11697=cljs.core.seq(vec__11696);var first__11698=cljs.core.first(seq__11697);var seq__11697__$1=cljs.core.next(seq__11697);var k=first__11698;var ks=seq__11697__$1;if(ks)return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,
k,function(){var G__11699=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11700=a;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11699,G__11700):f.call(null,G__11699,G__11700)}())};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5=function(m,p__11701,f,a,b){var vec__11702=p__11701;var seq__11703=cljs.core.seq(vec__11702);var first__11704=cljs.core.first(seq__11703);var seq__11703__$1=cljs.core.next(seq__11703);var k=first__11704;var ks=seq__11703__$1;if(ks)return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,
k,function(){var G__11705=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11706=a;var G__11707=b;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11705,G__11706,G__11707):f.call(null,G__11705,G__11706,G__11707)}())};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6=function(m,p__11708,f,a,b,c){var vec__11709=p__11708;var seq__11710=cljs.core.seq(vec__11709);var first__11711=cljs.core.first(seq__11710);var seq__11710__$1=cljs.core.next(seq__11710);var k=first__11711;var ks=seq__11710__$1;if(ks)return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,
k,function(){var G__11712=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11713=a;var G__11714=b;var G__11715=c;return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(G__11712,G__11713,G__11714,G__11715):f.call(null,G__11712,G__11713,G__11714,G__11715)}())};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic=function(m,p__11716,f,a,b,c,args){var vec__11717=p__11716;var seq__11718=cljs.core.seq(vec__11717);var first__11719=cljs.core.first(seq__11718);var seq__11718__$1=cljs.core.next(seq__11718);var k=first__11719;var ks=seq__11718__$1;if(ks)return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b,
c,args],0)));else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args],0)))};
cljs.core.update_in.cljs$lang$applyTo=function(seq11682){var G__11683=cljs.core.first(seq11682);var seq11682__$1=cljs.core.next(seq11682);var G__11684=cljs.core.first(seq11682__$1);var seq11682__$2=cljs.core.next(seq11682__$1);var G__11685=cljs.core.first(seq11682__$2);var seq11682__$3=cljs.core.next(seq11682__$2);var G__11686=cljs.core.first(seq11682__$3);var seq11682__$4=cljs.core.next(seq11682__$3);var G__11687=cljs.core.first(seq11682__$4);var seq11682__$5=cljs.core.next(seq11682__$4);var G__11688=
cljs.core.first(seq11682__$5);var seq11682__$6=cljs.core.next(seq11682__$5);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,seq11682__$6)};cljs.core.update_in.cljs$lang$maxFixedArity=6;
cljs.core.update=function cljs$core$update(var_args){var G__11732=arguments.length;switch(G__11732){case 3:return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;case 6:return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___11744=arguments.length;var i__9108__auto___11745=0;while(true){if(i__9108__auto___11745<len__9107__auto___11744){args_arr__9132__auto__.push(arguments[i__9108__auto___11745]);var G__11746=i__9108__auto___11745+1;i__9108__auto___11745=G__11746;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(6),0,null);return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],argseq__9133__auto__)}};cljs.core.update.cljs$core$IFn$_invoke$arity$3=function(m,k,f){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,function(){var G__11733=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);return f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(G__11733):f.call(null,G__11733)}())};
cljs.core.update.cljs$core$IFn$_invoke$arity$4=function(m,k,f,x){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,function(){var G__11734=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11735=x;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11734,G__11735):f.call(null,G__11734,G__11735)}())};
cljs.core.update.cljs$core$IFn$_invoke$arity$5=function(m,k,f,x,y){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,function(){var G__11736=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11737=x;var G__11738=y;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11736,G__11737,G__11738):f.call(null,G__11736,G__11737,G__11738)}())};
cljs.core.update.cljs$core$IFn$_invoke$arity$6=function(m,k,f,x,y,z){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,function(){var G__11739=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__11740=x;var G__11741=y;var G__11742=z;return f.cljs$core$IFn$_invoke$arity$4?f.cljs$core$IFn$_invoke$arity$4(G__11739,G__11740,G__11741,G__11742):f.call(null,G__11739,G__11740,G__11741,G__11742)}())};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic=function(m,k,f,x,y,z,more){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more],0)))};
cljs.core.update.cljs$lang$applyTo=function(seq11725){var G__11726=cljs.core.first(seq11725);var seq11725__$1=cljs.core.next(seq11725);var G__11727=cljs.core.first(seq11725__$1);var seq11725__$2=cljs.core.next(seq11725__$1);var G__11728=cljs.core.first(seq11725__$2);var seq11725__$3=cljs.core.next(seq11725__$2);var G__11729=cljs.core.first(seq11725__$3);var seq11725__$4=cljs.core.next(seq11725__$3);var G__11730=cljs.core.first(seq11725__$4);var seq11725__$5=cljs.core.next(seq11725__$4);var G__11731=
cljs.core.first(seq11725__$5);var seq11725__$6=cljs.core.next(seq11725__$5);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,seq11725__$6)};cljs.core.update.cljs$lang$maxFixedArity=6;cljs.core.VectorNode=function(edit,arr){this.edit=edit;this.arr=arr};
cljs.core.VectorNode.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"edit","edit",-1302639,null),new cljs.core.Symbol(null,"arr","arr",2115492975,null)],null)};cljs.core.VectorNode.cljs$lang$type=true;cljs.core.VectorNode.cljs$lang$ctorStr="cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/VectorNode")};cljs.core.__GT_VectorNode=function cljs$core$__GT_VectorNode(edit,arr){return new cljs.core.VectorNode(edit,arr)};
cljs.core.pv_fresh_node=function cljs$core$pv_fresh_node(edit){return new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])};cljs.core.pv_aget=function cljs$core$pv_aget(node,idx){return node.arr[idx]};cljs.core.pv_aset=function cljs$core$pv_aset(node,idx,val){return node.arr[idx]=val};
cljs.core.pv_clone_node=function cljs$core$pv_clone_node(node){return new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr))};cljs.core.tail_off=function cljs$core$tail_off(pv){var cnt=pv.cnt;if(cnt<32)return 0;else return cnt-1>>>5<<5};
cljs.core.new_path=function cljs$core$new_path(edit,level,node){var ll=level;var ret=node;while(true){if(ll===0)return ret;else{var embed=ret;var r=cljs.core.pv_fresh_node(edit);var _=cljs.core.pv_aset(r,0,embed);var G__11747=ll-5;var G__11748=r;ll=G__11747;ret=G__11748;continue}break}};
cljs.core.push_tail=function cljs$core$push_tail(pv,level,parent,tailnode){var ret=cljs.core.pv_clone_node(parent);var subidx=pv.cnt-1>>>level&31;if(5===level){cljs.core.pv_aset(ret,subidx,tailnode);return ret}else{var child=cljs.core.pv_aget(parent,subidx);if(!(child==null)){var node_to_insert=function(){var G__11749=pv;var G__11750=level-5;var G__11751=child;var G__11752=tailnode;return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4?cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__11749,
G__11750,G__11751,G__11752):cljs.core.push_tail.call(null,G__11749,G__11750,G__11751,G__11752)}();cljs.core.pv_aset(ret,subidx,node_to_insert);return ret}else{var node_to_insert=cljs.core.new_path(null,level-5,tailnode);cljs.core.pv_aset(ret,subidx,node_to_insert);return ret}}};
cljs.core.vector_index_out_of_bounds=function cljs$core$vector_index_out_of_bounds(i,cnt){throw new Error(["No item ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i)," in vector of length ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));};
cljs.core.first_array_for_longvec=function cljs$core$first_array_for_longvec(pv){var node=pv.root;var level=pv.shift;while(true){if(level>0){var G__11753=cljs.core.pv_aget(node,0);var G__11754=level-5;node=G__11753;level=G__11754;continue}else return node.arr;break}};
cljs.core.unchecked_array_for=function cljs$core$unchecked_array_for(pv,i){if(i>=cljs.core.tail_off(pv))return pv.tail;else{var node=pv.root;var level=pv.shift;while(true){if(level>0){var G__11755=cljs.core.pv_aget(node,i>>>level&31);var G__11756=level-5;node=G__11755;level=G__11756;continue}else return node.arr;break}}};cljs.core.array_for=function cljs$core$array_for(pv,i){if(0<=i&&i<pv.cnt)return cljs.core.unchecked_array_for(pv,i);else return cljs.core.vector_index_out_of_bounds(i,pv.cnt)};
cljs.core.do_assoc=function cljs$core$do_assoc(pv,level,node,i,val){var ret=cljs.core.pv_clone_node(node);if(level===0){cljs.core.pv_aset(ret,i&31,val);return ret}else{var subidx=i>>>level&31;cljs.core.pv_aset(ret,subidx,function(){var G__11757=pv;var G__11758=level-5;var G__11759=cljs.core.pv_aget(node,subidx);var G__11760=i;var G__11761=val;return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5?cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__11757,G__11758,G__11759,G__11760,G__11761):cljs.core.do_assoc.call(null,
G__11757,G__11758,G__11759,G__11760,G__11761)}());return ret}};
cljs.core.pop_tail=function cljs$core$pop_tail(pv,level,node){var subidx=pv.cnt-2>>>level&31;if(level>5){var new_child=function(){var G__11762=pv;var G__11763=level-5;var G__11764=cljs.core.pv_aget(node,subidx);return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3?cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__11762,G__11763,G__11764):cljs.core.pop_tail.call(null,G__11762,G__11763,G__11764)}();if(new_child==null&&subidx===0)return null;else{var ret=cljs.core.pv_clone_node(node);cljs.core.pv_aset(ret,
subidx,new_child);return ret}}else if(subidx===0)return null;else{var ret=cljs.core.pv_clone_node(node);cljs.core.pv_aset(ret,subidx,null);return ret}};cljs.core.RangedIterator=function(i,base,arr,v,start,end){this.i=i;this.base=base;this.arr=arr;this.v=v;this.start=start;this.end=end};cljs.core.RangedIterator.prototype.hasNext=function(){var self__=this;var this$=this;return self__.i<self__.end};
cljs.core.RangedIterator.prototype.next=function(){var self__=this;var this$=this;if(self__.i-self__.base===32){self__.arr=cljs.core.unchecked_array_for(self__.v,self__.i);self__.base=self__.base+32}else;var ret=self__.arr[self__.i&31];self__.i=self__.i+1;return ret};
cljs.core.RangedIterator.getBasis=function(){return new cljs.core.PersistentVector(null,6,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"base","base",1825810849,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),
cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"end","end",1372345569,null)],null)};cljs.core.RangedIterator.cljs$lang$type=true;cljs.core.RangedIterator.cljs$lang$ctorStr="cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/RangedIterator")};cljs.core.__GT_RangedIterator=function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){return new cljs.core.RangedIterator(i,base,arr,v,start,end)};
cljs.core.ranged_iterator=function cljs$core$ranged_iterator(v,start,end){var i=start;return new cljs.core.RangedIterator(i,i-i%32,start<cljs.core.count(v)?cljs.core.unchecked_array_for(v,i):null,v,start,end)};
cljs.core.pv_reduce=function cljs$core$pv_reduce(var_args){var G__11766=arguments.length;switch(G__11766){case 4:return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4=function(pv,f,start,end){if(start<end)return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv,f,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv,start),start+1,end);else return f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null)};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5=function(pv,f,init,start,end){var acc=init;var i=start;var arr=cljs.core.unchecked_array_for(pv,start);while(true){if(i<end){var j=i&31;var arr__$1=j===0?cljs.core.unchecked_array_for(pv,i):arr;var nacc=function(){var G__11767=acc;var G__11768=arr__$1[j];return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11767,G__11768):f.call(null,G__11767,G__11768)}();if(cljs.core.reduced_QMARK_(nacc))return cljs.core.deref(nacc);else{var G__11770=
nacc;var G__11771=i+1;var G__11772=arr__$1;acc=G__11770;i=G__11771;arr=G__11772;continue}}else return acc;break}};cljs.core.pv_reduce.cljs$lang$maxFixedArity=5;cljs.core.APersistentVector=function(){};cljs.core.PersistentVector=function(meta,cnt,shift,root,tail,__hash){this.meta=meta;this.cnt=cnt;this.shift=shift;this.root=root;this.tail=tail;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=167666463;this.cljs$lang$protocol_mask$partition1$=139268};
cljs.core.PersistentVector.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2=function(coll,n){var self__=this;var coll__$1=this;if(0<=n&&n<self__.cnt)return new cljs.core.MapEntry(n,cljs.core.unchecked_array_for(coll__$1,n)[n&31],null);else return null};cljs.core.PersistentVector.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.PersistentVector.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentVector.prototype.indexOf=function(){var G__11779=null;var G__11779__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11779__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11779=function(x,start){switch(arguments.length){case 1:return G__11779__1.call(this,x);case 2:return G__11779__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11779.cljs$core$IFn$_invoke$arity$1=G__11779__1;G__11779.cljs$core$IFn$_invoke$arity$2=G__11779__2;return G__11779}();
cljs.core.PersistentVector.prototype.lastIndexOf=function(){var G__11780=null;var G__11780__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11780__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11780=function(x,start){switch(arguments.length){case 1:return G__11780__1.call(this,x);case 2:return G__11780__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11780.cljs$core$IFn$_invoke$arity$1=G__11780__1;G__11780.cljs$core$IFn$_invoke$arity$2=G__11780__2;return G__11780}();cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;if(typeof k==="number")return coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);else return not_found};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(v,f,init){var self__=this;var v__$1=this;var i=0;var init__$1=init;while(true){if(i<self__.cnt){var arr=cljs.core.unchecked_array_for(v__$1,i);var len=arr.length;var init__$2=function(){var j=0;var init__$2=init__$1;while(true){if(j<len){var init__$3=function(){var G__11774=init__$2;var G__11775=j+i;var G__11776=arr[j];return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11774,G__11775,G__11776):
f.call(null,G__11774,G__11775,G__11776)}();if(cljs.core.reduced_QMARK_(init__$3))return init__$3;else{var G__11781=j+1;var G__11782=init__$3;j=G__11781;init__$2=G__11782;continue}}else return init__$2;break}}();if(cljs.core.reduced_QMARK_(init__$2))return cljs.core.deref(init__$2);else{var G__11783=i+len;var G__11784=init__$2;i=G__11783;init__$1=G__11784;continue}}else return init__$1;break}};cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,n){var self__=this;var coll__$1=this;return cljs.core.array_for(coll__$1,n)[n&31]};cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,n,not_found){var self__=this;var coll__$1=this;if(0<=n&&n<self__.cnt)return cljs.core.unchecked_array_for(coll__$1,n)[n&31];else return not_found};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3=function(coll,n,val){var self__=this;var coll__$1=this;if(0<=n&&n<self__.cnt)if(cljs.core.tail_off(coll__$1)<=n){var new_tail=cljs.core.aclone(self__.tail);new_tail[n&31]=val;return new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null)}else return new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null);
else if(n===self__.cnt)return coll__$1.cljs$core$ICollection$_conj$arity$2(null,val);else throw new Error(["Index ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," out of bounds  [0,",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt),"]"].join(""));};cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1=function(this$){var self__=this;var this$__$1=this;return cljs.core.ranged_iterator(this$__$1,0,self__.cnt)};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash)};cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.cnt};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt>0)return coll__$1.cljs$core$IIndexed$_nth$arity$2(null,self__.cnt-1);else return null};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt===0)throw new Error("Can't pop empty vector");else if(1===self__.cnt)return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);else if(1<self__.cnt-cljs.core.tail_off(coll__$1))return new cljs.core.PersistentVector(self__.meta,self__.cnt-1,self__.shift,self__.root,self__.tail.slice(0,-1),null);else{var new_tail=cljs.core.unchecked_array_for(coll__$1,self__.cnt-
2);var nr=cljs.core.pop_tail(coll__$1,self__.shift,self__.root);var new_root=nr==null?cljs.core.PersistentVector.EMPTY_NODE:nr;var cnt_1=self__.cnt-1;if(5<self__.shift&&cljs.core.pv_aget(new_root,1)==null)return new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift-5,cljs.core.pv_aget(new_root,0),new_tail,null);else return new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null)}};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt>0)return new cljs.core.RSeq(coll__$1,self__.cnt-1,null);else return null};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;if(other instanceof cljs.core.PersistentVector)if(self__.cnt===cljs.core.count(other)){var me_iter=coll__$1.cljs$core$IIterable$_iterator$arity$1(null);var you_iter=other.cljs$core$IIterable$_iterator$arity$1(null);while(true){if(me_iter.hasNext()){var x=me_iter.next();var y=you_iter.next();if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))continue;else return false}else return true;
break}}else return false;else return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.TransientVector(self__.cnt,self__.shift,cljs.core.tv_editable_root(self__.root),cljs.core.tv_editable_tail(self__.tail))};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta)};cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2=function(v,f){var self__=this;var v__$1=this;return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1,f,0,self__.cnt)};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3=function(v,f,init){var self__=this;var v__$1=this;var i=0;var init__$1=init;while(true){if(i<self__.cnt){var arr=cljs.core.unchecked_array_for(v__$1,i);var len=arr.length;var init__$2=function(){var j=0;var init__$2=init__$1;while(true){if(j<len){var init__$3=function(){var G__11777=init__$2;var G__11778=arr[j];return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__11777,G__11778):f.call(null,G__11777,G__11778)}();
if(cljs.core.reduced_QMARK_(init__$3))return init__$3;else{var G__11785=j+1;var G__11786=init__$3;j=G__11785;init__$2=G__11786;continue}}else return init__$2;break}}();if(cljs.core.reduced_QMARK_(init__$2))return cljs.core.deref(init__$2);else{var G__11787=i+len;var G__11788=init__$2;i=G__11787;init__$1=G__11788;continue}}else return init__$1;break}};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,k,v){var self__=this;var coll__$1=this;if(typeof k==="number")return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null,k,v);else throw new Error("Vector's key for assoc must be a number.");};cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(cljs.core.integer_QMARK_(k))return 0<=k&&k<self__.cnt;else return false};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt===0)return null;else if(self__.cnt<=32)return new cljs.core.IndexedSeq(self__.tail,0,null);else return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1,cljs.core.first_array_for_longvec(coll__$1),0,0)};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentVector(new_meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash)};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;if(self__.cnt-cljs.core.tail_off(coll__$1)<32){var len=self__.tail.length;var new_tail=new Array(len+1);var n__8876__auto___11789=len;var i_11790=0;while(true){if(i_11790<n__8876__auto___11789){new_tail[i_11790]=self__.tail[i_11790];var G__11791=i_11790+1;i_11790=G__11791;continue}else;break}new_tail[len]=o;return new cljs.core.PersistentVector(self__.meta,self__.cnt+1,self__.shift,
self__.root,new_tail,null)}else{var root_overflow_QMARK_=self__.cnt>>>5>1<<self__.shift;var new_shift=root_overflow_QMARK_?self__.shift+5:self__.shift;var new_root=root_overflow_QMARK_?function(){var n_r=cljs.core.pv_fresh_node(null);cljs.core.pv_aset(n_r,0,self__.root);cljs.core.pv_aset(n_r,1,cljs.core.new_path(null,self__.shift,new cljs.core.VectorNode(null,self__.tail)));return n_r}():cljs.core.push_tail(coll__$1,self__.shift,self__.root,new cljs.core.VectorNode(null,self__.tail));return new cljs.core.PersistentVector(self__.meta,
self__.cnt+1,new_shift,new_root,[o],null)}};
cljs.core.PersistentVector.prototype.call=function(){var G__11792=null;var G__11792__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$IIndexed$_nth$arity$2(null,k)};var G__11792__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};G__11792=function(self__,k,not_found){switch(arguments.length){case 2:return G__11792__2.call(this,self__,k);case 3:return G__11792__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11792.cljs$core$IFn$_invoke$arity$2=G__11792__2;G__11792.cljs$core$IFn$_invoke$arity$3=G__11792__3;return G__11792}();cljs.core.PersistentVector.prototype.apply=function(self__,args11773){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11773)))};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$IIndexed$_nth$arity$2(null,k)};cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};
cljs.core.PersistentVector.getBasis=function(){return new cljs.core.PersistentVector(null,6,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.Symbol(null,"shift","shift",-1657295705,null),new cljs.core.Symbol(null,"root","root",1191874074,null),new cljs.core.Symbol(null,"tail","tail",494507963,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),
new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.PersistentVector.cljs$lang$type=true;cljs.core.PersistentVector.cljs$lang$ctorStr="cljs.core/PersistentVector";cljs.core.PersistentVector.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentVector")};
cljs.core.__GT_PersistentVector=function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){return new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash)};cljs.core.PersistentVector.EMPTY_NODE=new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]);
cljs.core.PersistentVector.EMPTY=new cljs.core.PersistentVector(null,0,5,cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray=function(xs,no_clone){var l=xs.length;var xs__$1=no_clone?xs:cljs.core.aclone(xs);if(l<32)return new cljs.core.PersistentVector(null,l,5,cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null);else{var node=xs__$1.slice(0,32);var v=new cljs.core.PersistentVector(null,32,5,cljs.core.PersistentVector.EMPTY_NODE,node,null);var i=32;var out=v.cljs$core$IEditableCollection$_as_transient$arity$1(null);while(true){if(i<l){var G__11793=i+1;var G__11794=cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,
xs__$1[i]);i=G__11793;out=G__11794;continue}else return cljs.core.persistent_BANG_(out);break}}};var G__11795_11798=cljs.core.PersistentVector.prototype;var G__11796_11799=cljs.core.ITER_SYMBOL;var G__11797_11800=function(G__11795_11798,G__11796_11799){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11795_11798,G__11796_11799);goog.object.set(G__11795_11798,G__11796_11799,G__11797_11800);
cljs.core.vec=function cljs$core$vec(coll){if(cljs.core.map_entry_QMARK_(coll))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.key(coll),cljs.core.val(coll)],null);else if(cljs.core.vector_QMARK_(coll))return cljs.core.with_meta(coll,null);else if(cljs.core.array_QMARK_(coll))return cljs.core.PersistentVector.fromArray(coll,true);else return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),
coll))};cljs.core.vector=function cljs$core$vector(var_args){var args__9117__auto__=[];var len__9107__auto___11802=arguments.length;var i__9108__auto___11803=0;while(true){if(i__9108__auto___11803<len__9107__auto___11802){args__9117__auto__.push(arguments[i__9108__auto___11803]);var G__11804=i__9108__auto___11803+1;i__9108__auto___11803=G__11804;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic=function(args){if(args instanceof cljs.core.IndexedSeq&&args.i===0)return cljs.core.PersistentVector.fromArray(args.arr,true);else return cljs.core.vec(args)};cljs.core.vector.cljs$lang$maxFixedArity=0;cljs.core.vector.cljs$lang$applyTo=function(seq11801){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11801))};
cljs.core.ChunkedSeq=function(vec,node,i,off,meta,__hash){this.vec=vec;this.node=node;this.i=i;this.off=off;this.meta=meta;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32375020;this.cljs$lang$protocol_mask$partition1$=1536};cljs.core.ChunkedSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.ChunkedSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.ChunkedSeq.prototype.indexOf=function(){var G__11805=null;var G__11805__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11805__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11805=function(x,start){switch(arguments.length){case 1:return G__11805__1.call(this,x);case 2:return G__11805__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__11805.cljs$core$IFn$_invoke$arity$1=G__11805__1;G__11805.cljs$core$IFn$_invoke$arity$2=G__11805__2;return G__11805}();
cljs.core.ChunkedSeq.prototype.lastIndexOf=function(){var G__11806=null;var G__11806__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11806__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11806=function(x,start){switch(arguments.length){case 1:return G__11806__1.call(this,x);case 2:return G__11806__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11806.cljs$core$IFn$_invoke$arity$1=G__11806__1;G__11806.cljs$core$IFn$_invoke$arity$2=G__11806__2;return G__11806}();cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.off+1<self__.node.length){var s=cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec,self__.node,self__.i,self__.off+1);if(s==null)return null;else return s}else return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null)};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec,f,self__.i+self__.off,cljs.core.count(self__.vec))};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec,f,start,self__.i+self__.off,cljs.core.count(self__.vec))};cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.node[self__.off]};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.off+1<self__.node.length){var s=cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec,self__.node,self__.i,self__.off+1);if(s==null)return cljs.core.List.EMPTY;else return s}else return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null)};cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off)};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1=function(coll){var self__=this;var coll__$1=this;var end=self__.i+self__.node.length;if(end<cljs.core._count(self__.vec))return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec,cljs.core.unchecked_array_for(self__.vec,end),end,0);else return cljs.core.List.EMPTY};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec,self__.node,self__.i,self__.off,new_meta)};cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1=function(coll){var self__=this;var coll__$1=this;var end=self__.i+self__.node.length;if(end<cljs.core._count(self__.vec))return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec,cljs.core.unchecked_array_for(self__.vec,end),end,0);else return null};
cljs.core.ChunkedSeq.getBasis=function(){return new cljs.core.PersistentVector(null,6,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"vec","vec",982683596,null),new cljs.core.Symbol(null,"node","node",-2073234571,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"off","off",-2047994980,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ChunkedSeq.cljs$lang$type=true;cljs.core.ChunkedSeq.cljs$lang$ctorStr="cljs.core/ChunkedSeq";cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ChunkedSeq")};
cljs.core.__GT_ChunkedSeq=function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){return new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash)};var G__11807_11810=cljs.core.ChunkedSeq.prototype;var G__11808_11811=cljs.core.ITER_SYMBOL;var G__11809_11812=function(G__11807_11810,G__11808_11811){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11807_11810,G__11808_11811);goog.object.set(G__11807_11810,G__11808_11811,G__11809_11812);
cljs.core.chunked_seq=function cljs$core$chunked_seq(var_args){var G__11814=arguments.length;switch(G__11814){case 3:return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",
cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3=function(vec,i,off){return new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null)};cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4=function(vec,node,i,off){return new cljs.core.ChunkedSeq(vec,node,i,off,null,null)};cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5=function(vec,node,i,off,meta){return new cljs.core.ChunkedSeq(vec,node,i,off,meta,null)};
cljs.core.chunked_seq.cljs$lang$maxFixedArity=5;cljs.core.Subvec=function(meta,v,start,end,__hash){this.meta=meta;this.v=v;this.start=start;this.end=end;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=167666463;this.cljs$lang$protocol_mask$partition1$=139264};cljs.core.Subvec.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2=function(coll,n){var self__=this;var coll__$1=this;if(n<0)return null;else{var idx=self__.start+n;if(idx<self__.end)return new cljs.core.MapEntry(n,cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v,idx),null);else return null}};cljs.core.Subvec.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.Subvec.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.Subvec.prototype.indexOf=function(){var G__11823=null;var G__11823__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11823__2=function(x,start__$1){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1)};G__11823=function(x,start__$1){switch(arguments.length){case 1:return G__11823__1.call(this,x);case 2:return G__11823__2.call(this,x,start__$1)}throw new Error("Invalid arity: "+
arguments.length);};G__11823.cljs$core$IFn$_invoke$arity$1=G__11823__1;G__11823.cljs$core$IFn$_invoke$arity$2=G__11823__2;return G__11823}();
cljs.core.Subvec.prototype.lastIndexOf=function(){var G__11824=null;var G__11824__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11824__2=function(x,start__$1){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1)};G__11824=function(x,start__$1){switch(arguments.length){case 1:return G__11824__1.call(this,x);case 2:return G__11824__2.call(this,x,start__$1)}throw new Error("Invalid arity: "+
arguments.length);};G__11824.cljs$core$IFn$_invoke$arity$1=G__11824__1;G__11824.cljs$core$IFn$_invoke$arity$2=G__11824__2;return G__11824}();cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;if(typeof k==="number")return coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);else return not_found};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(coll,f,init){var self__=this;var coll__$1=this;var i=self__.start;var j=0;var init__$1=init;while(true){if(i<self__.end){var init__$2=function(){var G__11817=init__$1;var G__11818=j;var G__11819=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11817,G__11818,G__11819):f.call(null,G__11817,G__11818,G__11819)}();if(cljs.core.reduced_QMARK_(init__$2))return cljs.core.deref(init__$2);
else{var G__11825=i+1;var G__11826=j+1;var G__11827=init__$2;i=G__11825;j=G__11826;init__$1=G__11827;continue}}else return init__$1;break}};cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,n){var self__=this;var coll__$1=this;if(n<0||self__.end<=self__.start+n)return cljs.core.vector_index_out_of_bounds(n,self__.end-self__.start);else return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,self__.start+n)};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,n,not_found){var self__=this;var coll__$1=this;if(n<0||self__.end<=self__.start+n)return not_found;else return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,self__.start+n,not_found)};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3=function(coll,n,val){var self__=this;var coll__$1=this;var v_pos=self__.start+n;if(n<0||self__.end+1<=v_pos)throw new Error(["Index ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," out of bounds [0,",cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)),"]"].join(""));else return cljs.core.build_subvec(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val),self__.start,function(){var x__8264__auto__=
self__.end;var y__8265__auto__=v_pos+1;return x__8264__auto__>y__8265__auto__?x__8264__auto__:y__8265__auto__}(),null)};cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;if(!(self__.v==null)?false||cljs.core.PROTOCOL_SENTINEL===self__.v.cljs$core$APersistentVector$?true:false:false)return cljs.core.ranged_iterator(self__.v,self__.start,self__.end);else return cljs.core.seq_iter(coll__$1)};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash)};cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.end-self__.start};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,self__.end-1)};cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.start===self__.end)throw new Error("Can't pop empty vector");else return cljs.core.build_subvec(self__.meta,self__.v,self__.start,self__.end-1,null)};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1=function(coll){var self__=this;var coll__$1=this;if(!(self__.start===self__.end))return new cljs.core.RSeq(coll__$1,self__.end-self__.start-1,null);else return null};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta)};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;if(!(self__.v==null)?false||cljs.core.PROTOCOL_SENTINEL===self__.v.cljs$core$APersistentVector$?true:false:false)return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v,f,self__.start,self__.end);else return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f)};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,init){var self__=this;var coll__$1=this;if(!(self__.v==null)?false||cljs.core.PROTOCOL_SENTINEL===self__.v.cljs$core$APersistentVector$?true:false:false)return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v,f,init,self__.start,self__.end);else return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,init)};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,key,val){var self__=this;var coll__$1=this;if(typeof key==="number")return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null,key,val);else throw new Error("Subvec's key for assoc must be a number.");};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;var subvec_seq=function(coll__$1){return function cljs$core$subvec_seq(i){if(i===self__.end)return null;else return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),new cljs.core.LazySeq(null,function(coll__$1){return function(){return cljs$core$subvec_seq(i+1)}}(coll__$1),null,null))}}(coll__$1);return subvec_seq(self__.start)};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return cljs.core.build_subvec(new_meta,self__.v,self__.start,self__.end,self__.__hash)};cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.build_subvec(self__.meta,cljs.core._assoc_n(self__.v,self__.end,o),self__.start,self__.end+1,null)};
cljs.core.Subvec.prototype.call=function(){var G__11828=null;var G__11828__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$IIndexed$_nth$arity$2(null,k)};var G__11828__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};G__11828=function(self__,k,not_found){switch(arguments.length){case 2:return G__11828__2.call(this,self__,k);case 3:return G__11828__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11828.cljs$core$IFn$_invoke$arity$2=G__11828__2;G__11828.cljs$core$IFn$_invoke$arity$3=G__11828__3;return G__11828}();cljs.core.Subvec.prototype.apply=function(self__,args11816){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11816)))};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$IIndexed$_nth$arity$2(null,k)};cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};
cljs.core.Subvec.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"end","end",1372345569,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable",
"mutable",875778266),true],null))],null)};cljs.core.Subvec.cljs$lang$type=true;cljs.core.Subvec.cljs$lang$ctorStr="cljs.core/Subvec";cljs.core.Subvec.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Subvec")};cljs.core.__GT_Subvec=function cljs$core$__GT_Subvec(meta,v,start,end,__hash){return new cljs.core.Subvec(meta,v,start,end,__hash)};var G__11829_11832=cljs.core.Subvec.prototype;
var G__11830_11833=cljs.core.ITER_SYMBOL;var G__11831_11834=function(G__11829_11832,G__11830_11833){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11829_11832,G__11830_11833);goog.object.set(G__11829_11832,G__11830_11833,G__11831_11834);
cljs.core.build_subvec=function cljs$core$build_subvec(meta,v,start,end,__hash){while(true){if(v instanceof cljs.core.Subvec){var G__11835=meta;var G__11836=v.v;var G__11837=v.start+start;var G__11838=v.start+end;var G__11839=__hash;meta=G__11835;v=G__11836;start=G__11837;end=G__11838;__hash=G__11839;continue}else{if(cljs.core.vector_QMARK_(v));else throw new Error("v must satisfy IVector");var c_11840=cljs.core.count(v);if(start<0||end<0||start>c_11840||end>c_11840)throw new Error("Index out of bounds");
else;return new cljs.core.Subvec(meta,v,start,end,__hash)}break}};cljs.core.subvec=function cljs$core$subvec(var_args){var G__11842=arguments.length;switch(G__11842){case 2:return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2=function(v,start){return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v))};cljs.core.subvec.cljs$core$IFn$_invoke$arity$3=function(v,start,end){if(!(start==null)&&!(end==null));else throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");return cljs.core.build_subvec(null,v,start|0,end|0,null)};cljs.core.subvec.cljs$lang$maxFixedArity=3;
cljs.core.tv_ensure_editable=function cljs$core$tv_ensure_editable(edit,node){if(edit===node.edit)return node;else return new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr))};cljs.core.tv_editable_root=function cljs$core$tv_editable_root(node){return new cljs.core.VectorNode({},cljs.core.aclone(node.arr))};
cljs.core.tv_editable_tail=function cljs$core$tv_editable_tail(tl){var ret=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];cljs.core.array_copy(tl,0,ret,0,tl.length);return ret};
cljs.core.tv_push_tail=function cljs$core$tv_push_tail(tv,level,parent,tail_node){var ret=cljs.core.tv_ensure_editable(tv.root.edit,parent);var subidx=tv.cnt-1>>>level&31;cljs.core.pv_aset(ret,subidx,level===5?tail_node:function(){var child=cljs.core.pv_aget(ret,subidx);if(!(child==null)){var G__11846=tv;var G__11847=level-5;var G__11848=child;var G__11849=tail_node;return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4?cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__11846,G__11847,G__11848,
G__11849):cljs.core.tv_push_tail.call(null,G__11846,G__11847,G__11848,G__11849)}else return cljs.core.new_path(tv.root.edit,level-5,tail_node)}());return ret};
cljs.core.tv_pop_tail=function cljs$core$tv_pop_tail(tv,level,node){var node__$1=cljs.core.tv_ensure_editable(tv.root.edit,node);var subidx=tv.cnt-2>>>level&31;if(level>5){var new_child=function(){var G__11850=tv;var G__11851=level-5;var G__11852=cljs.core.pv_aget(node__$1,subidx);return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3?cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__11850,G__11851,G__11852):cljs.core.tv_pop_tail.call(null,G__11850,G__11851,G__11852)}();if(new_child==null&&
subidx===0)return null;else{cljs.core.pv_aset(node__$1,subidx,new_child);return node__$1}}else if(subidx===0)return null;else{cljs.core.pv_aset(node__$1,subidx,null);return node__$1}};
cljs.core.unchecked_editable_array_for=function cljs$core$unchecked_editable_array_for(tv,i){if(i>=cljs.core.tail_off(tv))return tv.tail;else{var root=tv.root;var node=root;var level=tv.shift;while(true){if(level>0){var G__11853=cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,i>>>level&31));var G__11854=level-5;node=G__11853;level=G__11854;continue}else return node.arr;break}}};
cljs.core.TransientVector=function(cnt,shift,root,tail){this.cnt=cnt;this.shift=shift;this.root=root;this.tail=tail;this.cljs$lang$protocol_mask$partition1$=88;this.cljs$lang$protocol_mask$partition0$=275};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2=function(tcoll,o){var self__=this;var tcoll__$1=this;if(self__.root.edit)if(self__.cnt-cljs.core.tail_off(tcoll__$1)<32){self__.tail[self__.cnt&31]=o;self__.cnt=self__.cnt+1;return tcoll__$1}else{var tail_node=new cljs.core.VectorNode(self__.root.edit,self__.tail);var new_tail=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null];new_tail[0]=o;self__.tail=new_tail;if(self__.cnt>>>5>1<<self__.shift){var new_root_array=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];var new_shift=self__.shift+5;new_root_array[0]=self__.root;new_root_array[1]=cljs.core.new_path(self__.root.edit,self__.shift,tail_node);self__.root=new cljs.core.VectorNode(self__.root.edit,new_root_array);self__.shift=new_shift;
self__.cnt=self__.cnt+1;return tcoll__$1}else{var new_root=cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);self__.root=new_root;self__.cnt=self__.cnt+1;return tcoll__$1}}else throw new Error("conj! after persistent!");};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;if(self__.root.edit){self__.root.edit=null;var len=self__.cnt-cljs.core.tail_off(tcoll__$1);var trimmed_tail=new Array(len);cljs.core.array_copy(self__.tail,0,trimmed_tail,0,len);return new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null)}else throw new Error("persistent! called twice");};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3=function(tcoll,key,val){var self__=this;var tcoll__$1=this;if(typeof key==="number")return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null,key,val);else throw new Error("TransientVector's key for assoc! must be a number.");};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3=function(tcoll,n,val){var self__=this;var tcoll__$1=this;if(self__.root.edit)if(0<=n&&n<self__.cnt)if(cljs.core.tail_off(tcoll__$1)<=n){self__.tail[n&31]=val;return tcoll__$1}else{var new_root=function(){var fexpr__11856=function(tcoll__$1){return function cljs$core$go(level,node){var node__$1=cljs.core.tv_ensure_editable(self__.root.edit,node);if(level===0){cljs.core.pv_aset(node__$1,n&31,val);return node__$1}else{var subidx=
n>>>level&31;cljs.core.pv_aset(node__$1,subidx,cljs$core$go(level-5,cljs.core.pv_aget(node__$1,subidx)));return node__$1}}}(tcoll__$1);return fexpr__11856(self__.shift,self__.root)}();self__.root=new_root;return tcoll__$1}else if(n===self__.cnt)return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,val);else throw new Error(["Index ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," out of bounds for TransientVector of length",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
else throw new Error("assoc! after persistent!");};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;if(self__.root.edit)if(self__.cnt===0)throw new Error("Can't pop empty vector");else if(1===self__.cnt){self__.cnt=0;return tcoll__$1}else if((self__.cnt-1&31)>0){self__.cnt=self__.cnt-1;return tcoll__$1}else{var new_tail=cljs.core.unchecked_editable_array_for(tcoll__$1,self__.cnt-2);var new_root=function(){var nr=cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!(nr==null))return nr;else return new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])}();if(5<self__.shift&&cljs.core.pv_aget(new_root,1)==null){var new_root__$1=cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,0));self__.root=new_root__$1;self__.shift=self__.shift-5;self__.cnt=self__.cnt-1;self__.tail=new_tail;return tcoll__$1}else{self__.root=
new_root;self__.cnt=self__.cnt-1;self__.tail=new_tail;return tcoll__$1}}else throw new Error("pop! after persistent!");};cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.root.edit)return self__.cnt;else throw new Error("count after persistent!");};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,n){var self__=this;var coll__$1=this;if(self__.root.edit)return cljs.core.array_for(coll__$1,n)[n&31];else throw new Error("nth after persistent!");};cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,n,not_found){var self__=this;var coll__$1=this;if(0<=n&&n<self__.cnt)return coll__$1.cljs$core$IIndexed$_nth$arity$2(null,n);else return not_found};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;if(typeof k==="number")return coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);else return not_found};
cljs.core.TransientVector.prototype.call=function(){var G__11857=null;var G__11857__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__11857__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__11857=function(self__,k,not_found){switch(arguments.length){case 2:return G__11857__2.call(this,self__,k);case 3:return G__11857__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11857.cljs$core$IFn$_invoke$arity$2=G__11857__2;G__11857.cljs$core$IFn$_invoke$arity$3=G__11857__3;return G__11857}();cljs.core.TransientVector.prototype.apply=function(self__,args11855){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11855)))};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.TransientVector.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"shift","shift",-1657295705,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],
null)),cljs.core.with_meta(new cljs.core.Symbol(null,"root","root",1191874074,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"tail","tail",494507963,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.TransientVector.cljs$lang$type=true;cljs.core.TransientVector.cljs$lang$ctorStr="cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/TransientVector")};cljs.core.__GT_TransientVector=function cljs$core$__GT_TransientVector(cnt,shift,root,tail){return new cljs.core.TransientVector(cnt,shift,root,tail)};cljs.core.PersistentQueueIter=function(fseq,riter){this.fseq=fseq;this.riter=riter};
cljs.core.PersistentQueueIter.prototype.hasNext=function(){var self__=this;var _=this;var or__7908__auto__=!(self__.fseq==null)&&cljs.core.seq(self__.fseq);if(or__7908__auto__)return or__7908__auto__;else{var and__7893__auto__=!(self__.riter==null);if(and__7893__auto__)return self__.riter.hasNext();else return and__7893__auto__}};
cljs.core.PersistentQueueIter.prototype.next=function(){var self__=this;var _=this;if(!(self__.fseq==null)){var ret=cljs.core.first(self__.fseq);self__.fseq=cljs.core.next(self__.fseq);return ret}else if(!(self__.riter==null)&&self__.riter.hasNext())return self__.riter.next();else throw new Error("No such element");};cljs.core.PersistentQueueIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.PersistentQueueIter.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"fseq","fseq",-1466412450,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"riter","riter",-237834262,null)],null)};cljs.core.PersistentQueueIter.cljs$lang$type=true;cljs.core.PersistentQueueIter.cljs$lang$ctorStr="cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentQueueIter")};cljs.core.__GT_PersistentQueueIter=function cljs$core$__GT_PersistentQueueIter(fseq,riter){return new cljs.core.PersistentQueueIter(fseq,riter)};
cljs.core.PersistentQueueSeq=function(meta,front,rear,__hash){this.meta=meta;this.front=front;this.rear=rear;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=31850700;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.PersistentQueueSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.PersistentQueueSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentQueueSeq.prototype.indexOf=function(){var G__11858=null;var G__11858__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11858__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11858=function(x,start){switch(arguments.length){case 1:return G__11858__1.call(this,x);case 2:return G__11858__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11858.cljs$core$IFn$_invoke$arity$1=G__11858__1;G__11858.cljs$core$IFn$_invoke$arity$2=G__11858__2;return G__11858}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf=function(){var G__11859=null;var G__11859__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11859__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11859=function(x,start){switch(arguments.length){case 1:return G__11859__1.call(this,x);case 2:return G__11859__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11859.cljs$core$IFn$_invoke$arity$1=G__11859__1;G__11859.cljs$core$IFn$_invoke$arity$2=G__11859__2;return G__11859}();cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;var temp__4655__auto__=cljs.core.next(self__.front);if(temp__4655__auto__){var f1=temp__4655__auto__;return new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null)}else if(!(self__.rear==null))return new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null);else return null};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta)};cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.first(self__.front)};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;var temp__4655__auto__=cljs.core.next(self__.front);if(temp__4655__auto__){var f1=temp__4655__auto__;return new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null)}else if(self__.rear==null)return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);else return new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null)};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentQueueSeq(new_meta,self__.front,self__.rear,self__.__hash)};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.PersistentQueueSeq.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"front","front",117022539,null),new cljs.core.Symbol(null,"rear","rear",-900164830,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],
null)};cljs.core.PersistentQueueSeq.cljs$lang$type=true;cljs.core.PersistentQueueSeq.cljs$lang$ctorStr="cljs.core/PersistentQueueSeq";cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentQueueSeq")};cljs.core.__GT_PersistentQueueSeq=function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){return new cljs.core.PersistentQueueSeq(meta,front,rear,__hash)};
var G__11860_11863=cljs.core.PersistentQueueSeq.prototype;var G__11861_11864=cljs.core.ITER_SYMBOL;var G__11862_11865=function(G__11860_11863,G__11861_11864){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11860_11863,G__11861_11864);goog.object.set(G__11860_11863,G__11861_11864,G__11862_11865);
cljs.core.PersistentQueue=function(meta,count,front,rear,__hash){this.meta=meta;this.count=count;this.front=front;this.rear=rear;this.__hash=__hash;this.cljs$lang$protocol_mask$partition1$=139264;this.cljs$lang$protocol_mask$partition0$=31858766};cljs.core.PersistentQueue.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.PersistentQueue.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentQueue.prototype.indexOf=function(){var G__11866=null;var G__11866__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11866__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11866=function(x,start){switch(arguments.length){case 1:return G__11866__1.call(this,x);case 2:return G__11866__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11866.cljs$core$IFn$_invoke$arity$1=G__11866__1;G__11866.cljs$core$IFn$_invoke$arity$2=G__11866__2;return G__11866}();
cljs.core.PersistentQueue.prototype.lastIndexOf=function(){var G__11867=null;var G__11867__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count.cljs$core$IFn$_invoke$arity$1?self__.count.cljs$core$IFn$_invoke$arity$1(coll):self__.count.call(null,coll))};var G__11867__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11867=function(x,start){switch(arguments.length){case 1:return G__11867__1.call(this,
x);case 2:return G__11867__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);};G__11867.cljs$core$IFn$_invoke$arity$1=G__11867__1;G__11867.cljs$core$IFn$_invoke$arity$2=G__11867__2;return G__11867}();cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.PersistentQueueIter(self__.front,cljs.core._iterator(self__.rear))};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash)};cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.count};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.first(self__.front)};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1=function(coll){var self__=this;var coll__$1=this;if(cljs.core.truth_(self__.front)){var temp__4655__auto__=cljs.core.next(self__.front);if(temp__4655__auto__){var f1=temp__4655__auto__;return new cljs.core.PersistentQueue(self__.meta,self__.count-1,f1,self__.rear,null)}else return new cljs.core.PersistentQueue(self__.meta,self__.count-1,cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null)}else return coll__$1};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta)};cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.first(self__.front)};cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.rest(cljs.core.seq(coll__$1))};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;var rear__$1=cljs.core.seq(self__.rear);if(cljs.core.truth_(function(){var or__7908__auto__=self__.front;if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return rear__$1}()))return new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null);else return null};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentQueue(new_meta,self__.count,self__.front,self__.rear,self__.__hash)};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;if(cljs.core.truth_(self__.front))return new cljs.core.PersistentQueue(self__.meta,self__.count+1,self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function(){var or__7908__auto__=self__.rear;if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.PersistentVector.EMPTY}(),o),null);else return new cljs.core.PersistentQueue(self__.meta,self__.count+
1,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null)};
cljs.core.PersistentQueue.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.Symbol(null,"front","front",117022539,null),new cljs.core.Symbol(null,"rear","rear",-900164830,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.PersistentQueue.cljs$lang$type=true;cljs.core.PersistentQueue.cljs$lang$ctorStr="cljs.core/PersistentQueue";cljs.core.PersistentQueue.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentQueue")};
cljs.core.__GT_PersistentQueue=function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){return new cljs.core.PersistentQueue(meta,count,front,rear,__hash)};cljs.core.PersistentQueue.EMPTY=new cljs.core.PersistentQueue(null,0,null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash);var G__11868_11871=cljs.core.PersistentQueue.prototype;var G__11869_11872=cljs.core.ITER_SYMBOL;
var G__11870_11873=function(G__11868_11871,G__11869_11872){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11868_11871,G__11869_11872);goog.object.set(G__11868_11871,G__11869_11872,G__11870_11873);cljs.core.NeverEquiv=function(){this.cljs$lang$protocol_mask$partition0$=2097152;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.NeverEquiv.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2=function(o,other){var self__=this;var o__$1=this;return false};cljs.core.NeverEquiv.getBasis=function(){return cljs.core.PersistentVector.EMPTY};cljs.core.NeverEquiv.cljs$lang$type=true;cljs.core.NeverEquiv.cljs$lang$ctorStr="cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/NeverEquiv")};cljs.core.__GT_NeverEquiv=function cljs$core$__GT_NeverEquiv(){return new cljs.core.NeverEquiv};cljs.core.never_equiv=new cljs.core.NeverEquiv;
cljs.core.equiv_map=function cljs$core$equiv_map(x,y){return cljs.core.boolean$(cljs.core.map_QMARK_(y)&&!cljs.core.record_QMARK_(y)?cljs.core.count(x)===cljs.core.count(y)?(!(x==null)?x.cljs$lang$protocol_mask$partition0$&1048576||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IKVReduce$?true:!x.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce,x):false:cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce,x))?cljs.core.reduce_kv(function(_,k,v){if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,
k,cljs.core.never_equiv),v))return true;else return cljs.core.reduced(false)},true,x):cljs.core.every_QMARK_(function(xkv){return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv))},x):null:null)};
cljs.core.scan_array=function cljs$core$scan_array(incr,k,array){var len=array.length;var i=0;while(true){if(i<len)if(k===array[i])return i;else{var G__11875=i+incr;i=G__11875;continue}else return null;break}};cljs.core.obj_map_compare_keys=function cljs$core$obj_map_compare_keys(a,b){var a__$1=cljs.core.hash(a);var b__$1=cljs.core.hash(b);if(a__$1<b__$1)return-1;else if(a__$1>b__$1)return 1;else return 0};
cljs.core.obj_map__GT_hash_map=function cljs$core$obj_map__GT_hash_map(m,k,v){var ks=m.keys;var len=ks.length;var so=m.strobj;var mm=cljs.core.meta(m);var i=0;var out=cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);while(true){if(i<len){var k__$1=ks[i];var G__11876=i+1;var G__11877=cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,goog.object.get(so,k__$1));i=G__11876;out=G__11877;continue}else return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,
k,v)),mm);break}};cljs.core.obj_clone=function cljs$core$obj_clone(obj,ks){var new_obj={};var l=ks.length;var i_11883=0;while(true){if(i_11883<l){var k_11884=ks[i_11883];var G__11880_11885=new_obj;var G__11881_11886=k_11884;var G__11882_11887=goog.object.get(obj,k_11884);goog.object.set(G__11880_11885,G__11881_11886,G__11882_11887);var G__11888=i_11883+1;i_11883=G__11888;continue}else;break}return new_obj};
cljs.core.ObjMap=function(meta,keys,strobj,update_count,__hash){this.meta=meta;this.keys=keys;this.strobj=strobj;this.update_count=update_count;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=16123663;this.cljs$lang$protocol_mask$partition1$=4};cljs.core.ObjMap.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(goog.isString(k)&&!(cljs.core.scan_array(1,k,self__.keys)==null))return new cljs.core.MapEntry(k,self__.strobj[k],null);else return null};cljs.core.ObjMap.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.ObjMap.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;if(goog.isString(k)&&!(cljs.core.scan_array(1,k,self__.keys)==null))return self__.strobj[k];else return not_found};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(coll,f,init){var self__=this;var coll__$1=this;var len=self__.keys.length;var keys__$1=self__.keys.sort(cljs.core.obj_map_compare_keys);var init__$1=init;while(true){if(cljs.core.seq(keys__$1)){var k=cljs.core.first(keys__$1);var init__$2=function(){var G__11891=init__$1;var G__11892=k;var G__11893=self__.strobj[k];return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11891,G__11892,G__11893):f.call(null,
G__11891,G__11892,G__11893)}();if(cljs.core.reduced_QMARK_(init__$2))return cljs.core.deref(init__$2);else{var G__11894=cljs.core.rest(keys__$1);var G__11895=init__$2;keys__$1=G__11894;init__$1=G__11895;continue}}else return init__$1;break}};cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.keys.length};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_unordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_map(coll__$1,other)};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1))};cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.ObjMap.EMPTY,self__.meta)};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(goog.isString(k)&&!(cljs.core.scan_array(1,k,self__.keys)==null)){var new_keys=cljs.core.aclone(self__.keys);var new_strobj=cljs.core.obj_clone(self__.strobj,self__.keys);new_keys.splice(cljs.core.scan_array(1,k,new_keys),1);delete new_strobj[k];return new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,self__.update_count+1,null)}else return coll__$1};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,k,v){var self__=this;var coll__$1=this;if(goog.isString(k))if(self__.update_count>cljs.core.ObjMap.HASHMAP_THRESHOLD||self__.keys.length>=cljs.core.ObjMap.HASHMAP_THRESHOLD)return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);else if(!(cljs.core.scan_array(1,k,self__.keys)==null)){var new_strobj=cljs.core.obj_clone(self__.strobj,self__.keys);goog.object.set(new_strobj,k,v);return new cljs.core.ObjMap(self__.meta,self__.keys,
new_strobj,self__.update_count+1,null)}else{var new_strobj=cljs.core.obj_clone(self__.strobj,self__.keys);var new_keys=cljs.core.aclone(self__.keys);goog.object.set(new_strobj,k,v);new_keys.push(k);return new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,self__.update_count+1,null)}else return cljs.core.obj_map__GT_hash_map(coll__$1,k,v)};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(goog.isString(k)&&!(cljs.core.scan_array(1,k,self__.keys)==null))return true;else return false};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.keys.length>0)return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1){return function(p1__11889_SHARP_){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[p1__11889_SHARP_,self__.strobj[p1__11889_SHARP_]],null)}}(coll__$1),self__.keys.sort(cljs.core.obj_map_compare_keys));else return null};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.ObjMap(new_meta,self__.keys,self__.strobj,self__.update_count,self__.__hash)};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,entry){var self__=this;var coll__$1=this;if(cljs.core.vector_QMARK_(entry))return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,1));else return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry)};
cljs.core.ObjMap.prototype.call=function(){var G__11896=null;var G__11896__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__11896__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__11896=function(self__,k,not_found){switch(arguments.length){case 2:return G__11896__2.call(this,self__,k);case 3:return G__11896__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11896.cljs$core$IFn$_invoke$arity$2=G__11896__2;G__11896.cljs$core$IFn$_invoke$arity$3=G__11896__3;return G__11896}();cljs.core.ObjMap.prototype.apply=function(self__,args11890){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11890)))};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.ObjMap.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"keys","keys",-1586012071,null),new cljs.core.Symbol(null,"strobj","strobj",1088091283,null),new cljs.core.Symbol(null,"update-count","update-count",-411982269,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.ObjMap.cljs$lang$type=true;cljs.core.ObjMap.cljs$lang$ctorStr="cljs.core/ObjMap";cljs.core.ObjMap.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ObjMap")};cljs.core.__GT_ObjMap=function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){return new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash)};
cljs.core.ObjMap.EMPTY=new cljs.core.ObjMap(null,[],{},0,cljs.core.empty_unordered_hash);cljs.core.ObjMap.HASHMAP_THRESHOLD=8;cljs.core.ObjMap.fromObject=function(ks,obj){return new cljs.core.ObjMap(null,ks,obj,0,null)};cljs.core.RecordIter=function(i,record,base_count,fields,ext_map_iter){this.i=i;this.record=record;this.base_count=base_count;this.fields=fields;this.ext_map_iter=ext_map_iter};
cljs.core.RecordIter.prototype.hasNext=function(){var self__=this;var _=this;var or__7908__auto__=self__.i<self__.base_count;if(or__7908__auto__)return or__7908__auto__;else return self__.ext_map_iter.hasNext()};
cljs.core.RecordIter.prototype.next=function(){var self__=this;var _=this;if(self__.i<self__.base_count){var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields,self__.i);self__.i=self__.i+1;return new cljs.core.MapEntry(k,cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record,k),null)}else return self__.ext_map_iter.next()};cljs.core.RecordIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.RecordIter.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"record","record",861424668,null),new cljs.core.Symbol(null,"base-count","base-count",-1180647182,null),new cljs.core.Symbol(null,"fields","fields",-291534703,null),new cljs.core.Symbol(null,
"ext-map-iter","ext-map-iter",-1215982757,null)],null)};cljs.core.RecordIter.cljs$lang$type=true;cljs.core.RecordIter.cljs$lang$ctorStr="cljs.core/RecordIter";cljs.core.RecordIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/RecordIter")};
cljs.core.__GT_RecordIter=function cljs$core$__GT_RecordIter(i,record,base_count,fields,ext_map_iter){return new cljs.core.RecordIter(i,record,base_count,fields,ext_map_iter)};cljs.core.ES6EntriesIterator=function(s){this.s=s};
cljs.core.ES6EntriesIterator.prototype.next=function(){var self__=this;var _=this;if(!(self__.s==null)){var vec__11899=cljs.core.first(self__.s);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11899,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11899,1,null);self__.s=cljs.core.next(self__.s);return{"value":[k,v],"done":false}}else return{"value":null,"done":true}};
cljs.core.ES6EntriesIterator.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ES6EntriesIterator.cljs$lang$type=true;cljs.core.ES6EntriesIterator.cljs$lang$ctorStr="cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ES6EntriesIterator")};cljs.core.__GT_ES6EntriesIterator=function cljs$core$__GT_ES6EntriesIterator(s){return new cljs.core.ES6EntriesIterator(s)};cljs.core.es6_entries_iterator=function cljs$core$es6_entries_iterator(coll){return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll))};
cljs.core.ES6SetEntriesIterator=function(s){this.s=s};cljs.core.ES6SetEntriesIterator.prototype.next=function(){var self__=this;var _=this;if(!(self__.s==null)){var x=cljs.core.first(self__.s);self__.s=cljs.core.next(self__.s);return{"value":[x,x],"done":false}}else return{"value":null,"done":true}};
cljs.core.ES6SetEntriesIterator.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ES6SetEntriesIterator.cljs$lang$type=true;cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr="cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ES6SetEntriesIterator")};cljs.core.__GT_ES6SetEntriesIterator=function cljs$core$__GT_ES6SetEntriesIterator(s){return new cljs.core.ES6SetEntriesIterator(s)};cljs.core.es6_set_entries_iterator=function cljs$core$es6_set_entries_iterator(coll){return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll))};
cljs.core.array_index_of_nil_QMARK_=function cljs$core$array_index_of_nil_QMARK_(arr){var len=arr.length;var i=0;while(true){if(len<=i)return-1;else if(arr[i]==null)return i;else{var G__11902=i+2;i=G__11902;continue}break}};cljs.core.array_index_of_keyword_QMARK_=function cljs$core$array_index_of_keyword_QMARK_(arr,k){var len=arr.length;var kstr=k.fqn;var i=0;while(true){if(len<=i)return-1;else if(arr[i]instanceof cljs.core.Keyword&&kstr===arr[i].fqn)return i;else{var G__11903=i+2;i=G__11903;continue}break}};
cljs.core.array_index_of_symbol_QMARK_=function cljs$core$array_index_of_symbol_QMARK_(arr,k){var len=arr.length;var kstr=k.str;var i=0;while(true){if(len<=i)return-1;else if(arr[i]instanceof cljs.core.Symbol&&kstr===arr[i].str)return i;else{var G__11904=i+2;i=G__11904;continue}break}};
cljs.core.array_index_of_identical_QMARK_=function cljs$core$array_index_of_identical_QMARK_(arr,k){var len=arr.length;var i=0;while(true){if(len<=i)return-1;else if(k===arr[i])return i;else{var G__11905=i+2;i=G__11905;continue}break}};cljs.core.array_index_of_equiv_QMARK_=function cljs$core$array_index_of_equiv_QMARK_(arr,k){var len=arr.length;var i=0;while(true){if(len<=i)return-1;else if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,arr[i]))return i;else{var G__11906=i+2;i=G__11906;continue}break}};
cljs.core.array_index_of=function cljs$core$array_index_of(arr,k){if(k instanceof cljs.core.Keyword)return cljs.core.array_index_of_keyword_QMARK_(arr,k);else if(goog.isString(k)||typeof k==="number")return cljs.core.array_index_of_identical_QMARK_(arr,k);else if(k instanceof cljs.core.Symbol)return cljs.core.array_index_of_symbol_QMARK_(arr,k);else if(k==null)return cljs.core.array_index_of_nil_QMARK_(arr);else return cljs.core.array_index_of_equiv_QMARK_(arr,k)};
cljs.core.array_map_index_of=function cljs$core$array_map_index_of(m,k){return cljs.core.array_index_of(m.arr,k)};cljs.core.array_extend_kv=function cljs$core$array_extend_kv(arr,k,v){var l=arr.length;var narr=new Array(l+2);var i_11907=0;while(true){if(i_11907<l){narr[i_11907]=arr[i_11907];var G__11908=i_11907+1;i_11907=G__11908;continue}else;break}narr[l]=k;narr[l+1]=v;return narr};
cljs.core.array_map_extend_kv=function cljs$core$array_map_extend_kv(m,k,v){return cljs.core.array_extend_kv(m.arr,k,v)};cljs.core.MapEntry=function(key,val,__hash){this.key=key;this.val=val;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=166619935;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.MapEntry.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2=function(node,k){var self__=this;var node__$1=this;var G__11910=k;switch(G__11910){case 0:return new cljs.core.MapEntry(0,self__.key,null);break;case 1:return new cljs.core.MapEntry(1,self__.val,null);break;default:return null}};
cljs.core.MapEntry.prototype.indexOf=function(){var G__11912=null;var G__11912__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11912__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11912=function(x,start){switch(arguments.length){case 1:return G__11912__1.call(this,x);case 2:return G__11912__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__11912.cljs$core$IFn$_invoke$arity$1=G__11912__1;G__11912.cljs$core$IFn$_invoke$arity$2=G__11912__2;return G__11912}();
cljs.core.MapEntry.prototype.lastIndexOf=function(){var G__11913=null;var G__11913__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11913__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11913=function(x,start){switch(arguments.length){case 1:return G__11913__1.call(this,x);case 2:return G__11913__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11913.cljs$core$IFn$_invoke$arity$1=G__11913__1;G__11913.cljs$core$IFn$_invoke$arity$2=G__11913__2;return G__11913}();cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2=function(node,k){var self__=this;var node__$1=this;return node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null)};cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3=function(node,k,not_found){var self__=this;var node__$1=this;return node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2=function(node,n){var self__=this;var node__$1=this;if(n===0)return self__.key;else if(n===1)return self__.val;else throw new Error("Index out of bounds");};cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3=function(node,n,not_found){var self__=this;var node__$1=this;if(n===0)return self__.key;else if(n===1)return self__.val;else return not_found};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3=function(node,n,v){var self__=this;var node__$1=this;return(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null)).cljs$core$IVector$_assoc_n$arity$3(null,n,v)};cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1=function(node){var self__=this;var node__$1=this;return null};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1=function(node){var self__=this;var node__$1=this;return 2};cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1=function(node){var self__=this;var node__$1=this;return self__.key};cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1=function(node){var self__=this;var node__$1=this;return self__.val};cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1=function(node){var self__=this;var node__$1=this;return self__.val};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key],null)};cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.IndexedSeq([self__.val,self__.key],0,null)};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(node){var self__=this;var node__$1=this;return null};cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2=function(node,f){var self__=this;var node__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f)};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3=function(node,f,start){var self__=this;var node__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start)};cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3=function(node,k,v){var self__=this;var node__$1=this;return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null),k,v)};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(node,k){var self__=this;var node__$1=this;return k===0||k===1};cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.IndexedSeq([self__.key,self__.val],0,null)};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(node,meta){var self__=this;var node__$1=this;return cljs.core.with_meta(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null),meta)};cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2=function(node,o){var self__=this;var node__$1=this;return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val,o],null)};
cljs.core.MapEntry.prototype.call=function(){var G__11914=null;var G__11914__2=function(self__,k){var self__=this;var self____$1=this;var node=self____$1;return node.cljs$core$IIndexed$_nth$arity$2(null,k)};var G__11914__3=function(self__,k,not_found){var self__=this;var self____$1=this;var node=self____$1;return node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};G__11914=function(self__,k,not_found){switch(arguments.length){case 2:return G__11914__2.call(this,self__,k);case 3:return G__11914__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11914.cljs$core$IFn$_invoke$arity$2=G__11914__2;G__11914.cljs$core$IFn$_invoke$arity$3=G__11914__3;return G__11914}();cljs.core.MapEntry.prototype.apply=function(self__,args11909){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11909)))};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var node=this;return node.cljs$core$IIndexed$_nth$arity$2(null,k)};cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var node=this;return node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};
cljs.core.MapEntry.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"key","key",124488940,null),new cljs.core.Symbol(null,"val","val",1769233139,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.MapEntry.cljs$lang$type=true;
cljs.core.MapEntry.cljs$lang$ctorStr="cljs.core/MapEntry";cljs.core.MapEntry.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/MapEntry")};cljs.core.__GT_MapEntry=function cljs$core$__GT_MapEntry(key,val,__hash){return new cljs.core.MapEntry(key,val,__hash)};
cljs.core.map_entry_QMARK_=function cljs$core$map_entry_QMARK_(x){if(!(x==null))if(x.cljs$lang$protocol_mask$partition0$&2048||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IMapEntry$)return true;else return false;else return false};cljs.core.PersistentArrayMapSeq=function(arr,i,_meta){this.arr=arr;this.i=i;this._meta=_meta;this.cljs$lang$protocol_mask$partition0$=32374990;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.PersistentArrayMapSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.PersistentArrayMapSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentArrayMapSeq.prototype.indexOf=function(){var G__11916=null;var G__11916__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__11916__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11916=function(x,start){switch(arguments.length){case 1:return G__11916__1.call(this,x);case 2:return G__11916__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11916.cljs$core$IFn$_invoke$arity$1=G__11916__1;G__11916.cljs$core$IFn$_invoke$arity$2=G__11916__2;return G__11916}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf=function(){var G__11917=null;var G__11917__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__11917__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__11917=function(x,start){switch(arguments.length){case 1:return G__11917__1.call(this,x);case 2:return G__11917__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__11917.cljs$core$IFn$_invoke$arity$1=G__11917__1;G__11917.cljs$core$IFn$_invoke$arity$2=G__11917__2;return G__11917}();cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__._meta};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.i<self__.arr.length-2)return new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i+2,null);else return null};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return(self__.arr.length-self__.i)/2};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll(coll__$1)};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.MapEntry(self__.arr[self__.i],self__.arr[self__.i+1],null)};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.i<self__.arr.length-2)return new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i+2,null);else return cljs.core.List.EMPTY};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__._meta)return coll__$1;else return new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta)};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};cljs.core.PersistentArrayMapSeq.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"_meta","_meta",-1716892533,null)],null)};
cljs.core.PersistentArrayMapSeq.cljs$lang$type=true;cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr="cljs.core/PersistentArrayMapSeq";cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentArrayMapSeq")};cljs.core.__GT_PersistentArrayMapSeq=function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){return new cljs.core.PersistentArrayMapSeq(arr,i,_meta)};
var G__11918_11921=cljs.core.PersistentArrayMapSeq.prototype;var G__11919_11922=cljs.core.ITER_SYMBOL;var G__11920_11923=function(G__11918_11921,G__11919_11922){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11918_11921,G__11919_11922);goog.object.set(G__11918_11921,G__11919_11922,G__11920_11923);
cljs.core.persistent_array_map_seq=function cljs$core$persistent_array_map_seq(arr,i,_meta){if(i<=arr.length-2)return new cljs.core.PersistentArrayMapSeq(arr,i,_meta);else return null};cljs.core.PersistentArrayMapIterator=function(arr,i,cnt){this.arr=arr;this.i=i;this.cnt=cnt};cljs.core.PersistentArrayMapIterator.prototype.hasNext=function(){var self__=this;var _=this;return self__.i<self__.cnt};
cljs.core.PersistentArrayMapIterator.prototype.next=function(){var self__=this;var _=this;var ret=new cljs.core.MapEntry(self__.arr[self__.i],self__.arr[self__.i+1],null);self__.i=self__.i+2;return ret};
cljs.core.PersistentArrayMapIterator.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null)],null)};cljs.core.PersistentArrayMapIterator.cljs$lang$type=true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr="cljs.core/PersistentArrayMapIterator";cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentArrayMapIterator")};cljs.core.__GT_PersistentArrayMapIterator=function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){return new cljs.core.PersistentArrayMapIterator(arr,i,cnt)};
cljs.core.PersistentArrayMap=function(meta,cnt,arr,__hash){this.meta=meta;this.cnt=cnt;this.arr=arr;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=16647951;this.cljs$lang$protocol_mask$partition1$=139268};cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2=function(coll,k){var self__=this;var coll__$1=this;var idx=cljs.core.array_map_index_of(coll__$1,k);if(idx===-1)return null;else return new cljs.core.MapEntry(self__.arr[idx],self__.arr[idx+1],null)};cljs.core.PersistentArrayMap.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.PersistentArrayMap.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.PersistentArrayMap.prototype.keys=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.keys(coll))};cljs.core.PersistentArrayMap.prototype.entries=function(){var self__=this;var coll=this;return cljs.core.es6_entries_iterator(cljs.core.seq(coll))};
cljs.core.PersistentArrayMap.prototype.values=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.vals(coll))};cljs.core.PersistentArrayMap.prototype.has=function(k){var self__=this;var coll=this;return cljs.core.contains_QMARK_(coll,k)};cljs.core.PersistentArrayMap.prototype.get=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentArrayMap.prototype.forEach=function(f){var self__=this;var coll=this;var seq__11925=cljs.core.seq(coll);var chunk__11926=null;var count__11927=0;var i__11928=0;while(true){if(i__11928<count__11927){var vec__11935=chunk__11926.cljs$core$IIndexed$_nth$arity$2(null,i__11928);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11935,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11935,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,
v,k);var G__11947=seq__11925;var G__11948=chunk__11926;var G__11949=count__11927;var G__11950=i__11928+1;seq__11925=G__11947;chunk__11926=G__11948;count__11927=G__11949;i__11928=G__11950;continue}else{var temp__4657__auto__=cljs.core.seq(seq__11925);if(temp__4657__auto__){var seq__11925__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__11925__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__11925__$1);var G__11951=cljs.core.chunk_rest(seq__11925__$1);var G__11952=c__8771__auto__;var G__11953=
cljs.core.count(c__8771__auto__);var G__11954=0;seq__11925=G__11951;chunk__11926=G__11952;count__11927=G__11953;i__11928=G__11954;continue}else{var vec__11938=cljs.core.first(seq__11925__$1);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11938,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11938,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,v,k);var G__11955=cljs.core.next(seq__11925__$1);var G__11956=null;var G__11957=0;var G__11958=
0;seq__11925=G__11955;chunk__11926=G__11956;count__11927=G__11957;i__11928=G__11958;continue}}else return null}break}};cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;var idx=cljs.core.array_map_index_of(coll__$1,k);if(idx===-1)return not_found;else return self__.arr[idx+1]};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(coll,f,init){var self__=this;var coll__$1=this;var len=self__.arr.length;var i=0;var init__$1=init;while(true){if(i<len){var init__$2=function(){var G__11941=init__$1;var G__11942=self__.arr[i];var G__11943=self__.arr[i+1];return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__11941,G__11942,G__11943):f.call(null,G__11941,G__11942,G__11943)}();if(cljs.core.reduced_QMARK_(init__$2))return cljs.core.deref(init__$2);
else{var G__11959=i+2;var G__11960=init__$2;i=G__11959;init__$1=G__11960;continue}}else return init__$1;break}};cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1=function(this$){var self__=this;var this$__$1=this;return new cljs.core.PersistentArrayMapIterator(self__.arr,0,self__.cnt*2)};cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash)};cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.cnt};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_unordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;if(cljs.core.map_QMARK_(other)&&!cljs.core.record_QMARK_(other)){var alen=self__.arr.length;var other__$1=other;if(self__.cnt===other__$1.cljs$core$ICounted$_count$arity$1(null)){var i=0;while(true){if(i<alen){var v=other__$1.cljs$core$ILookup$_lookup$arity$3(null,self__.arr[i],cljs.core.lookup_sentinel);if(!(v===cljs.core.lookup_sentinel))if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i+
1],v)){var G__11961=i+2;i=G__11961;continue}else return false;else return false}else return true;break}}else return false}else return false};cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.TransientArrayMap({},self__.arr.length,cljs.core.aclone(self__.arr))};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta)};cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f)};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start)};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2=function(coll,k){var self__=this;var coll__$1=this;var idx=cljs.core.array_map_index_of(coll__$1,k);if(idx>=0){var len=self__.arr.length;var new_len=len-2;if(new_len===0)return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);else{var new_arr=new Array(new_len);var s=0;var d=0;while(true){if(s>=len)return new cljs.core.PersistentArrayMap(self__.meta,self__.cnt-1,new_arr,null);else if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,
self__.arr[s])){var G__11962=s+2;var G__11963=d;s=G__11962;d=G__11963;continue}else{new_arr[d]=self__.arr[s];new_arr[d+1]=self__.arr[s+1];var G__11964=s+2;var G__11965=d+2;s=G__11964;d=G__11965;continue}break}}}else return coll__$1};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,k,v){var self__=this;var coll__$1=this;var idx=cljs.core.array_map_index_of(coll__$1,k);if(idx===-1)if(self__.cnt<cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD){var arr__$1=cljs.core.array_map_extend_kv(coll__$1,k,v);return new cljs.core.PersistentArrayMap(self__.meta,self__.cnt+1,arr__$1,null)}else return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,
coll__$1),k,v),self__.meta);else if(v===self__.arr[idx+1])return coll__$1;else{var arr__$1=function(){var G__11946=cljs.core.aclone(self__.arr);G__11946[idx+1]=v;return G__11946}();return new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null)}};cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;return!(cljs.core.array_map_index_of(coll__$1,k)===-1)};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.persistent_array_map_seq(self__.arr,0,null)};cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentArrayMap(new_meta,self__.cnt,self__.arr,self__.__hash)};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,entry){var self__=this;var coll__$1=this;if(cljs.core.vector_QMARK_(entry))return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,1));else{var ret=coll__$1;var es=cljs.core.seq(entry);while(true){if(es==null)return ret;else{var e=cljs.core.first(es);if(cljs.core.vector_QMARK_(e)){var G__11966=cljs.core._assoc(ret,
cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,1));var G__11967=cljs.core.next(es);ret=G__11966;es=G__11967;continue}else throw new Error("conj on a map takes map entries or seqables of map entries");}break}}};
cljs.core.PersistentArrayMap.prototype.call=function(){var G__11968=null;var G__11968__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__11968__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__11968=function(self__,k,not_found){switch(arguments.length){case 2:return G__11968__2.call(this,self__,k);case 3:return G__11968__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11968.cljs$core$IFn$_invoke$arity$2=G__11968__2;G__11968.cljs$core$IFn$_invoke$arity$3=G__11968__3;return G__11968}();cljs.core.PersistentArrayMap.prototype.apply=function(self__,args11924){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11924)))};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentArrayMap.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.PersistentArrayMap.cljs$lang$type=true;cljs.core.PersistentArrayMap.cljs$lang$ctorStr="cljs.core/PersistentArrayMap";cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentArrayMap")};cljs.core.__GT_PersistentArrayMap=function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){return new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash)};
cljs.core.PersistentArrayMap.EMPTY=new cljs.core.PersistentArrayMap(null,0,[],cljs.core.empty_unordered_hash);cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD=8;
cljs.core.PersistentArrayMap.fromArray=function(arr,no_clone,no_check){var arr__$1=no_clone?arr:cljs.core.aclone(arr);var arr__$2=no_check?arr__$1:function(){var ret=[];var i_11969=0;while(true){if(i_11969<arr__$1.length){var k_11970=arr__$1[i_11969];var v_11971=arr__$1[i_11969+1];var idx_11972=cljs.core.array_index_of(ret,k_11970);if(idx_11972===-1){ret.push(k_11970);ret.push(v_11971)}else;var G__11973=i_11969+2;i_11969=G__11973;continue}else;break}return ret}();var cnt=arr__$2.length/2;return new cljs.core.PersistentArrayMap(null,
cnt,arr__$2,null)};
cljs.core.PersistentArrayMap.createWithCheck=function(arr){var ret=[];var i_11975=0;while(true){if(i_11975<arr.length){var k_11976=arr[i_11975];var v_11977=arr[i_11975+1];var idx_11978=cljs.core.array_index_of(ret,k_11976);if(idx_11978===-1){var G__11974_11979=ret;G__11974_11979.push(k_11976);G__11974_11979.push(v_11977)}else throw new Error(["Duplicate key: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_11976)].join(""));var G__11980=i_11975+2;i_11975=G__11980;continue}else;break}var cnt=arr.length/
2;return new cljs.core.PersistentArrayMap(null,cnt,arr,null)};
cljs.core.PersistentArrayMap.createAsIfByAssoc=function(arr){var ret=[];var i_11982=0;while(true){if(i_11982<arr.length){var k_11983=arr[i_11982];var v_11984=arr[i_11982+1];var idx_11985=cljs.core.array_index_of(ret,k_11983);if(idx_11985===-1){var G__11981_11986=ret;G__11981_11986.push(k_11983);G__11981_11986.push(v_11984)}else ret[idx_11985+1]=v_11984;var G__11987=i_11982+2;i_11982=G__11987;continue}else;break}return new cljs.core.PersistentArrayMap(null,ret.length/2,ret,null)};
var G__11988_11991=cljs.core.PersistentArrayMap.prototype;var G__11989_11992=cljs.core.ITER_SYMBOL;var G__11990_11993=function(G__11988_11991,G__11989_11992){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__11988_11991,G__11989_11992);goog.object.set(G__11988_11991,G__11989_11992,G__11990_11993);
cljs.core.TransientArrayMap=function(editable_QMARK_,len,arr){this.editable_QMARK_=editable_QMARK_;this.len=len;this.arr=arr;this.cljs$lang$protocol_mask$partition0$=259;this.cljs$lang$protocol_mask$partition1$=56};cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;if(cljs.core.truth_(self__.editable_QMARK_))return cljs.core.quot(self__.len,2);else throw new Error("count after persistent!");};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2=function(tcoll,k){var self__=this;var tcoll__$1=this;return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3=function(tcoll,k,not_found){var self__=this;var tcoll__$1=this;if(cljs.core.truth_(self__.editable_QMARK_)){var idx=cljs.core.array_map_index_of(tcoll__$1,k);if(idx===-1)return not_found;else return self__.arr[idx+1]}else throw new Error("lookup after persistent!");};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2=function(tcoll,o){var self__=this;var tcoll__$1=this;if(cljs.core.truth_(self__.editable_QMARK_))if(cljs.core.map_entry_QMARK_(o))return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,cljs.core.key(o),cljs.core.val(o));else if(cljs.core.vector_QMARK_(o))return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,o.cljs$core$IFn$_invoke$arity$1?o.cljs$core$IFn$_invoke$arity$1(0):
o.call(null,0),o.cljs$core$IFn$_invoke$arity$1?o.cljs$core$IFn$_invoke$arity$1(1):o.call(null,1));else{var es=cljs.core.seq(o);var tcoll__$2=tcoll__$1;while(true){var temp__4655__auto__=cljs.core.first(es);if(cljs.core.truth_(temp__4655__auto__)){var e=temp__4655__auto__;var G__11996=cljs.core.next(es);var G__11997=cljs.core._assoc_BANG_(tcoll__$2,cljs.core.key(e),cljs.core.val(e));es=G__11996;tcoll__$2=G__11997;continue}else return tcoll__$2;break}}else throw new Error("conj! after persistent!");
};cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;if(cljs.core.truth_(self__.editable_QMARK_)){self__.editable_QMARK_=false;return new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,2),self__.arr,null)}else throw new Error("persistent! called twice");};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3=function(tcoll,key,val){var self__=this;var tcoll__$1=this;if(cljs.core.truth_(self__.editable_QMARK_)){var idx=cljs.core.array_map_index_of(tcoll__$1,key);if(idx===-1)if(self__.len+2<=2*cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD){self__.len=self__.len+2;self__.arr.push(key);self__.arr.push(val);return tcoll__$1}else return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len,
self__.arr),key,val);else if(val===self__.arr[idx+1])return tcoll__$1;else{self__.arr[idx+1]=val;return tcoll__$1}}else throw new Error("assoc! after persistent!");};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2=function(tcoll,key){var self__=this;var tcoll__$1=this;if(cljs.core.truth_(self__.editable_QMARK_)){var idx=cljs.core.array_map_index_of(tcoll__$1,key);if(idx>=0){self__.arr[idx]=self__.arr[self__.len-2];self__.arr[idx+1]=self__.arr[self__.len-1];var G__11995_11998=self__.arr;G__11995_11998.pop();G__11995_11998.pop();self__.len=self__.len-2}else;return tcoll__$1}else throw new Error("dissoc! after persistent!");};
cljs.core.TransientArrayMap.prototype.call=function(){var G__11999=null;var G__11999__2=function(self__,key){var self__=this;var self____$1=this;var tcoll=self____$1;return tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,null)};var G__11999__3=function(self__,key,not_found){var self__=this;var self____$1=this;var tcoll=self____$1;return tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found)};G__11999=function(self__,key,not_found){switch(arguments.length){case 2:return G__11999__2.call(this,
self__,key);case 3:return G__11999__3.call(this,self__,key,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__11999.cljs$core$IFn$_invoke$arity$2=G__11999__2;G__11999.cljs$core$IFn$_invoke$arity$3=G__11999__3;return G__11999}();cljs.core.TransientArrayMap.prototype.apply=function(self__,args11994){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11994)))};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1=function(key){var self__=this;var tcoll=this;return tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,null)};cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2=function(key,not_found){var self__=this;var tcoll=this;return tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found)};
cljs.core.TransientArrayMap.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"editable?","editable?",-164945806,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"len","len",-1230778691,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),
true],null)),new cljs.core.Symbol(null,"arr","arr",2115492975,null)],null)};cljs.core.TransientArrayMap.cljs$lang$type=true;cljs.core.TransientArrayMap.cljs$lang$ctorStr="cljs.core/TransientArrayMap";cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/TransientArrayMap")};
cljs.core.__GT_TransientArrayMap=function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){return new cljs.core.TransientArrayMap(editable_QMARK_,len,arr)};
cljs.core.array__GT_transient_hash_map=function cljs$core$array__GT_transient_hash_map(len,arr){var out=cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);var i=0;while(true){if(i<len){var G__12000=cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,arr[i],arr[i+1]);var G__12001=i+2;out=G__12000;i=G__12001;continue}else return out;break}};cljs.core.Box=function(val){this.val=val};
cljs.core.Box.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"val","val",1769233139,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Box.cljs$lang$type=true;cljs.core.Box.cljs$lang$ctorStr="cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Box")};cljs.core.__GT_Box=function cljs$core$__GT_Box(val){return new cljs.core.Box(val)};cljs.core.key_test=function cljs$core$key_test(key,other){if(key===other)return true;else if(cljs.core.keyword_identical_QMARK_(key,other))return true;else return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other)};
cljs.core.mask=function cljs$core$mask(hash,shift){return hash>>>shift&31};
cljs.core.clone_and_set=function cljs$core$clone_and_set(var_args){var G__12003=arguments.length;switch(G__12003){case 3:return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 5:return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3=function(arr,i,a){var G__12004=cljs.core.aclone(arr);G__12004[i]=a;return G__12004};cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5=function(arr,i,a,j,b){var G__12005=cljs.core.aclone(arr);G__12005[i]=a;G__12005[j]=b;return G__12005};cljs.core.clone_and_set.cljs$lang$maxFixedArity=5;
cljs.core.remove_pair=function cljs$core$remove_pair(arr,i){var new_arr=new Array(arr.length-2);cljs.core.array_copy(arr,0,new_arr,0,2*i);cljs.core.array_copy(arr,2*(i+1),new_arr,2*i,new_arr.length-2*i);return new_arr};cljs.core.bitmap_indexed_node_index=function cljs$core$bitmap_indexed_node_index(bitmap,bit){return cljs.core.bit_count(bitmap&bit-1)};cljs.core.bitpos=function cljs$core$bitpos(hash,shift){return 1<<(hash>>>shift&31)};
cljs.core.edit_and_set=function cljs$core$edit_and_set(var_args){var G__12008=arguments.length;switch(G__12008){case 4:return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 6:return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4=function(inode,edit,i,a){var editable=inode.ensure_editable(edit);editable.arr[i]=a;return editable};cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6=function(inode,edit,i,a,j,b){var editable=inode.ensure_editable(edit);editable.arr[i]=a;editable.arr[j]=b;return editable};cljs.core.edit_and_set.cljs$lang$maxFixedArity=6;
cljs.core.inode_kv_reduce=function cljs$core$inode_kv_reduce(arr,f,init){var len=arr.length;var i=0;var init__$1=init;while(true){if(i<len){var init__$2=function(){var k=arr[i];if(!(k==null)){var G__12010=init__$1;var G__12011=k;var G__12012=arr[i+1];return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__12010,G__12011,G__12012):f.call(null,G__12010,G__12011,G__12012)}else{var node=arr[i+1];if(!(node==null))return node.kv_reduce(f,init__$1);else return init__$1}}();if(cljs.core.reduced_QMARK_(init__$2))return init__$2;
else{var G__12013=i+2;var G__12014=init__$2;i=G__12013;init__$1=G__12014;continue}}else return init__$1;break}};cljs.core.NodeIterator=function(arr,i,next_entry,next_iter){this.arr=arr;this.i=i;this.next_entry=next_entry;this.next_iter=next_iter};
cljs.core.NodeIterator.prototype.advance=function(){var self__=this;var this$=this;var len=self__.arr.length;while(true){if(self__.i<len){var key=self__.arr[self__.i];var node_or_val=self__.arr[self__.i+1];var found=!(key==null)?self__.next_entry=new cljs.core.MapEntry(key,node_or_val,null):!(node_or_val==null)?function(){var new_iter=cljs.core._iterator(node_or_val);if(new_iter.hasNext())return self__.next_iter=new_iter;else return false}():false;self__.i=self__.i+2;if(found)return true;else continue}else return false;
break}};cljs.core.NodeIterator.prototype.hasNext=function(){var self__=this;var this$=this;var or__7908__auto__=!(self__.next_entry==null);if(or__7908__auto__)return or__7908__auto__;else{var or__7908__auto____$1=!(self__.next_iter==null);if(or__7908__auto____$1)return or__7908__auto____$1;else return this$.advance()}};
cljs.core.NodeIterator.prototype.next=function(){var self__=this;var this$=this;if(!(self__.next_entry==null)){var ret=self__.next_entry;self__.next_entry=null;return ret}else if(!(self__.next_iter==null)){var ret=self__.next_iter.next();if(self__.next_iter.hasNext());else self__.next_iter=null;return ret}else if(this$.advance())return this$.next();else throw new Error("No such element");};cljs.core.NodeIterator.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.NodeIterator.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"next-entry","next-entry",1091342476,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"next-iter","next-iter",1526626239,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.NodeIterator.cljs$lang$type=true;cljs.core.NodeIterator.cljs$lang$ctorStr="cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/NodeIterator")};cljs.core.__GT_NodeIterator=function cljs$core$__GT_NodeIterator(arr,i,next_entry,next_iter){return new cljs.core.NodeIterator(arr,i,next_entry,next_iter)};
cljs.core.BitmapIndexedNode=function(edit,bitmap,arr){this.edit=edit;this.bitmap=bitmap;this.arr=arr;this.cljs$lang$protocol_mask$partition1$=131072;this.cljs$lang$protocol_mask$partition0$=0};
cljs.core.BitmapIndexedNode.prototype.ensure_editable=function(e){var self__=this;var inode=this;if(e===self__.edit)return inode;else{var n=cljs.core.bit_count(self__.bitmap);var new_arr=new Array(n<0?4:2*(n+1));cljs.core.array_copy(self__.arr,0,new_arr,0,2*n);return new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr)}};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_=function(edit__$1,shift,hash,key,removed_leaf_QMARK_){var self__=this;var inode=this;var bit=1<<(hash>>>shift&31);if((self__.bitmap&bit)===0)return inode;else{var idx=cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);var key_or_nil=self__.arr[2*idx];var val_or_node=self__.arr[2*idx+1];if(key_or_nil==null){var n=val_or_node.inode_without_BANG_(edit__$1,shift+5,hash,key,removed_leaf_QMARK_);if(n===val_or_node)return inode;else if(!(n==null))return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,
edit__$1,2*idx+1,n);else if(self__.bitmap===bit)return null;else return inode.edit_and_remove_pair(edit__$1,bit,idx)}else if(cljs.core.key_test(key,key_or_nil)){removed_leaf_QMARK_.val=true;return inode.edit_and_remove_pair(edit__$1,bit,idx)}else return inode}};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair=function(e,bit,i){var self__=this;var inode=this;if(self__.bitmap===bit)return null;else{var editable=inode.ensure_editable(e);var earr=editable.arr;var len=earr.length;editable.bitmap=bit^editable.bitmap;cljs.core.array_copy(earr,2*(i+1),earr,2*i,len-2*(i+1));earr[len-2]=null;earr[len-1]=null;return editable}};cljs.core.BitmapIndexedNode.prototype.inode_seq=function(){var self__=this;var inode=this;return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr)};
cljs.core.BitmapIndexedNode.prototype.kv_reduce=function(f,init){var self__=this;var inode=this;return cljs.core.inode_kv_reduce(self__.arr,f,init)};
cljs.core.BitmapIndexedNode.prototype.inode_lookup=function(shift,hash,key,not_found){var self__=this;var inode=this;var bit=1<<(hash>>>shift&31);if((self__.bitmap&bit)===0)return not_found;else{var idx=cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);var key_or_nil=self__.arr[2*idx];var val_or_node=self__.arr[2*idx+1];if(key_or_nil==null)return val_or_node.inode_lookup(shift+5,hash,key,not_found);else if(cljs.core.key_test(key,key_or_nil))return val_or_node;else return not_found}};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_=function(edit__$1,shift,hash,key,val,added_leaf_QMARK_){var self__=this;var inode=this;var bit=1<<(hash>>>shift&31);var idx=cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);if((self__.bitmap&bit)===0){var n=cljs.core.bit_count(self__.bitmap);if(2*n<self__.arr.length){var editable=inode.ensure_editable(edit__$1);var earr=editable.arr;added_leaf_QMARK_.val=true;cljs.core.array_copy_downward(earr,2*idx,earr,2*(idx+1),2*(n-idx));earr[2*idx]=
key;earr[2*idx+1]=val;editable.bitmap=editable.bitmap|bit;return editable}else if(n>=16){var nodes=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];var jdx=hash>>>shift&31;nodes[jdx]=cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,shift+5,hash,key,val,added_leaf_QMARK_);var i_12015=0;var j_12016=0;while(true){if(i_12015<32)if((self__.bitmap>>>i_12015&1)===0){var G__12017=i_12015+
1;var G__12018=j_12016;i_12015=G__12017;j_12016=G__12018;continue}else{nodes[i_12015]=!(self__.arr[j_12016]==null)?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,shift+5,cljs.core.hash(self__.arr[j_12016]),self__.arr[j_12016],self__.arr[j_12016+1],added_leaf_QMARK_):self__.arr[j_12016+1];var G__12019=i_12015+1;var G__12020=j_12016+2;i_12015=G__12019;j_12016=G__12020;continue}else;break}return new cljs.core.ArrayNode(edit__$1,n+1,nodes)}else{var new_arr=new Array(2*(n+4));cljs.core.array_copy(self__.arr,
0,new_arr,0,2*idx);new_arr[2*idx]=key;new_arr[2*idx+1]=val;cljs.core.array_copy(self__.arr,2*idx,new_arr,2*(idx+1),2*(n-idx));added_leaf_QMARK_.val=true;var editable=inode.ensure_editable(edit__$1);editable.arr=new_arr;editable.bitmap=editable.bitmap|bit;return editable}}else{var key_or_nil=self__.arr[2*idx];var val_or_node=self__.arr[2*idx+1];if(key_or_nil==null){var n=val_or_node.inode_assoc_BANG_(edit__$1,shift+5,hash,key,val,added_leaf_QMARK_);if(n===val_or_node)return inode;else return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,
edit__$1,2*idx+1,n)}else if(cljs.core.key_test(key,key_or_nil))if(val===val_or_node)return inode;else return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,2*idx+1,val);else{added_leaf_QMARK_.val=true;return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,2*idx,null,2*idx+1,cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1,shift+5,key_or_nil,val_or_node,hash,key,val))}}};
cljs.core.BitmapIndexedNode.prototype.inode_assoc=function(shift,hash,key,val,added_leaf_QMARK_){var self__=this;var inode=this;var bit=1<<(hash>>>shift&31);var idx=cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);if((self__.bitmap&bit)===0){var n=cljs.core.bit_count(self__.bitmap);if(n>=16){var nodes=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];var jdx=hash>>>shift&31;nodes[jdx]=
cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift+5,hash,key,val,added_leaf_QMARK_);var i_12021=0;var j_12022=0;while(true){if(i_12021<32)if((self__.bitmap>>>i_12021&1)===0){var G__12023=i_12021+1;var G__12024=j_12022;i_12021=G__12023;j_12022=G__12024;continue}else{nodes[i_12021]=!(self__.arr[j_12022]==null)?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift+5,cljs.core.hash(self__.arr[j_12022]),self__.arr[j_12022],self__.arr[j_12022+1],added_leaf_QMARK_):self__.arr[j_12022+1];var G__12025=i_12021+
1;var G__12026=j_12022+2;i_12021=G__12025;j_12022=G__12026;continue}else;break}return new cljs.core.ArrayNode(null,n+1,nodes)}else{var new_arr=new Array(2*(n+1));cljs.core.array_copy(self__.arr,0,new_arr,0,2*idx);new_arr[2*idx]=key;new_arr[2*idx+1]=val;cljs.core.array_copy(self__.arr,2*idx,new_arr,2*(idx+1),2*(n-idx));added_leaf_QMARK_.val=true;return new cljs.core.BitmapIndexedNode(null,self__.bitmap|bit,new_arr)}}else{var key_or_nil=self__.arr[2*idx];var val_or_node=self__.arr[2*idx+1];if(key_or_nil==
null){var n=val_or_node.inode_assoc(shift+5,hash,key,val,added_leaf_QMARK_);if(n===val_or_node)return inode;else return new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,2*idx+1,n))}else if(cljs.core.key_test(key,key_or_nil))if(val===val_or_node)return inode;else return new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,2*idx+1,val));else{added_leaf_QMARK_.val=true;return new cljs.core.BitmapIndexedNode(null,
self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,2*idx,null,2*idx+1,cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift+5,key_or_nil,val_or_node,hash,key,val)))}}};
cljs.core.BitmapIndexedNode.prototype.inode_find=function(shift,hash,key,not_found){var self__=this;var inode=this;var bit=1<<(hash>>>shift&31);if((self__.bitmap&bit)===0)return not_found;else{var idx=cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);var key_or_nil=self__.arr[2*idx];var val_or_node=self__.arr[2*idx+1];if(key_or_nil==null)return val_or_node.inode_find(shift+5,hash,key,not_found);else if(cljs.core.key_test(key,key_or_nil))return new cljs.core.MapEntry(key_or_nil,val_or_node,null);
else return not_found}};
cljs.core.BitmapIndexedNode.prototype.inode_without=function(shift,hash,key){var self__=this;var inode=this;var bit=1<<(hash>>>shift&31);if((self__.bitmap&bit)===0)return inode;else{var idx=cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);var key_or_nil=self__.arr[2*idx];var val_or_node=self__.arr[2*idx+1];if(key_or_nil==null){var n=val_or_node.inode_without(shift+5,hash,key);if(n===val_or_node)return inode;else if(!(n==null))return new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,
2*idx+1,n));else if(self__.bitmap===bit)return null;else return new cljs.core.BitmapIndexedNode(null,self__.bitmap^bit,cljs.core.remove_pair(self__.arr,idx))}else if(cljs.core.key_test(key,key_or_nil))return new cljs.core.BitmapIndexedNode(null,self__.bitmap^bit,cljs.core.remove_pair(self__.arr,idx));else return inode}};cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.NodeIterator(self__.arr,0,null,null)};
cljs.core.BitmapIndexedNode.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"edit","edit",-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,"bitmap","bitmap",501334601,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.BitmapIndexedNode.cljs$lang$type=true;cljs.core.BitmapIndexedNode.cljs$lang$ctorStr="cljs.core/BitmapIndexedNode";cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/BitmapIndexedNode")};
cljs.core.__GT_BitmapIndexedNode=function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){return new cljs.core.BitmapIndexedNode(edit,bitmap,arr)};cljs.core.BitmapIndexedNode.EMPTY=new cljs.core.BitmapIndexedNode(null,0,[]);
cljs.core.pack_array_node=function cljs$core$pack_array_node(array_node,edit,idx){var arr=array_node.arr;var len=arr.length;var new_arr=new Array(2*(array_node.cnt-1));var i=0;var j=1;var bitmap=0;while(true){if(i<len)if(!(i===idx)&&!(arr[i]==null)){new_arr[j]=arr[i];var G__12027=i+1;var G__12028=j+2;var G__12029=bitmap|1<<i;i=G__12027;j=G__12028;bitmap=G__12029;continue}else{var G__12030=i+1;var G__12031=j;var G__12032=bitmap;i=G__12030;j=G__12031;bitmap=G__12032;continue}else return new cljs.core.BitmapIndexedNode(edit,
bitmap,new_arr);break}};cljs.core.ArrayNodeIterator=function(arr,i,next_iter){this.arr=arr;this.i=i;this.next_iter=next_iter};cljs.core.ArrayNodeIterator.prototype.hasNext=function(){var self__=this;var this$=this;var len=self__.arr.length;while(true){if(!(!(self__.next_iter==null)&&self__.next_iter.hasNext()))if(self__.i<len){var node=self__.arr[self__.i];self__.i=self__.i+1;if(!(node==null))self__.next_iter=cljs.core._iterator(node);else;continue}else return false;else return true;break}};
cljs.core.ArrayNodeIterator.prototype.next=function(){var self__=this;var this$=this;if(this$.hasNext())return self__.next_iter.next();else throw new Error("No such element");};cljs.core.ArrayNodeIterator.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.ArrayNodeIterator.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"next-iter","next-iter",1526626239,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.ArrayNodeIterator.cljs$lang$type=true;cljs.core.ArrayNodeIterator.cljs$lang$ctorStr="cljs.core/ArrayNodeIterator";cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ArrayNodeIterator")};
cljs.core.__GT_ArrayNodeIterator=function cljs$core$__GT_ArrayNodeIterator(arr,i,next_iter){return new cljs.core.ArrayNodeIterator(arr,i,next_iter)};cljs.core.ArrayNode=function(edit,cnt,arr){this.edit=edit;this.cnt=cnt;this.arr=arr;this.cljs$lang$protocol_mask$partition1$=131072;this.cljs$lang$protocol_mask$partition0$=0};cljs.core.ArrayNode.prototype.ensure_editable=function(e){var self__=this;var inode=this;if(e===self__.edit)return inode;else return new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr))};
cljs.core.ArrayNode.prototype.inode_without_BANG_=function(edit__$1,shift,hash,key,removed_leaf_QMARK_){var self__=this;var inode=this;var idx=hash>>>shift&31;var node=self__.arr[idx];if(node==null)return inode;else{var n=node.inode_without_BANG_(edit__$1,shift+5,hash,key,removed_leaf_QMARK_);if(n===node)return inode;else if(n==null)if(self__.cnt<=8)return cljs.core.pack_array_node(inode,edit__$1,idx);else{var editable=cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);editable.cnt=
editable.cnt-1;return editable}else return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n)}};cljs.core.ArrayNode.prototype.inode_seq=function(){var self__=this;var inode=this;return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr)};
cljs.core.ArrayNode.prototype.kv_reduce=function(f,init){var self__=this;var inode=this;var len=self__.arr.length;var i=0;var init__$1=init;while(true){if(i<len){var node=self__.arr[i];if(!(node==null)){var init__$2=node.kv_reduce(f,init__$1);if(cljs.core.reduced_QMARK_(init__$2))return init__$2;else{var G__12033=i+1;var G__12034=init__$2;i=G__12033;init__$1=G__12034;continue}}else{var G__12035=i+1;var G__12036=init__$1;i=G__12035;init__$1=G__12036;continue}}else return init__$1;break}};
cljs.core.ArrayNode.prototype.inode_lookup=function(shift,hash,key,not_found){var self__=this;var inode=this;var idx=hash>>>shift&31;var node=self__.arr[idx];if(!(node==null))return node.inode_lookup(shift+5,hash,key,not_found);else return not_found};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_=function(edit__$1,shift,hash,key,val,added_leaf_QMARK_){var self__=this;var inode=this;var idx=hash>>>shift&31;var node=self__.arr[idx];if(node==null){var editable=cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,shift+5,hash,key,val,added_leaf_QMARK_));editable.cnt=editable.cnt+1;return editable}else{var n=node.inode_assoc_BANG_(edit__$1,shift+5,hash,key,val,added_leaf_QMARK_);
if(n===node)return inode;else return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n)}};
cljs.core.ArrayNode.prototype.inode_assoc=function(shift,hash,key,val,added_leaf_QMARK_){var self__=this;var inode=this;var idx=hash>>>shift&31;var node=self__.arr[idx];if(node==null)return new cljs.core.ArrayNode(null,self__.cnt+1,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift+5,hash,key,val,added_leaf_QMARK_)));else{var n=node.inode_assoc(shift+5,hash,key,val,added_leaf_QMARK_);if(n===node)return inode;else return new cljs.core.ArrayNode(null,
self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n))}};cljs.core.ArrayNode.prototype.inode_find=function(shift,hash,key,not_found){var self__=this;var inode=this;var idx=hash>>>shift&31;var node=self__.arr[idx];if(!(node==null))return node.inode_find(shift+5,hash,key,not_found);else return not_found};
cljs.core.ArrayNode.prototype.inode_without=function(shift,hash,key){var self__=this;var inode=this;var idx=hash>>>shift&31;var node=self__.arr[idx];if(!(node==null)){var n=node.inode_without(shift+5,hash,key);if(n===node)return inode;else if(n==null)if(self__.cnt<=8)return cljs.core.pack_array_node(inode,null,idx);else return new cljs.core.ArrayNode(null,self__.cnt-1,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n));else return new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,
idx,n))}else return inode};cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.ArrayNodeIterator(self__.arr,0,null)};
cljs.core.ArrayNode.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"edit","edit",-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.ArrayNode.cljs$lang$type=true;cljs.core.ArrayNode.cljs$lang$ctorStr="cljs.core/ArrayNode";cljs.core.ArrayNode.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ArrayNode")};cljs.core.__GT_ArrayNode=function cljs$core$__GT_ArrayNode(edit,cnt,arr){return new cljs.core.ArrayNode(edit,cnt,arr)};
cljs.core.hash_collision_node_find_index=function cljs$core$hash_collision_node_find_index(arr,cnt,key){var lim=2*cnt;var i=0;while(true){if(i<lim)if(cljs.core.key_test(key,arr[i]))return i;else{var G__12037=i+2;i=G__12037;continue}else return-1;break}};cljs.core.HashCollisionNode=function(edit,collision_hash,cnt,arr){this.edit=edit;this.collision_hash=collision_hash;this.cnt=cnt;this.arr=arr;this.cljs$lang$protocol_mask$partition1$=131072;this.cljs$lang$protocol_mask$partition0$=0};
cljs.core.HashCollisionNode.prototype.ensure_editable=function(e){var self__=this;var inode=this;if(e===self__.edit)return inode;else{var new_arr=new Array(2*(self__.cnt+1));cljs.core.array_copy(self__.arr,0,new_arr,0,2*self__.cnt);return new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr)}};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_=function(edit__$1,shift,hash,key,removed_leaf_QMARK_){var self__=this;var inode=this;var idx=cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);if(idx===-1)return inode;else{removed_leaf_QMARK_.val=true;if(self__.cnt===1)return null;else{var editable=inode.ensure_editable(edit__$1);var earr=editable.arr;earr[idx]=earr[2*self__.cnt-2];earr[idx+1]=earr[2*self__.cnt-1];earr[2*self__.cnt-1]=null;earr[2*self__.cnt-2]=null;editable.cnt=
editable.cnt-1;return editable}}};cljs.core.HashCollisionNode.prototype.inode_seq=function(){var self__=this;var inode=this;return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr)};cljs.core.HashCollisionNode.prototype.kv_reduce=function(f,init){var self__=this;var inode=this;return cljs.core.inode_kv_reduce(self__.arr,f,init)};
cljs.core.HashCollisionNode.prototype.inode_lookup=function(shift,hash,key,not_found){var self__=this;var inode=this;var idx=cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);if(idx<0)return not_found;else if(cljs.core.key_test(key,self__.arr[idx]))return self__.arr[idx+1];else return not_found};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_=function(edit__$1,shift,hash,key,val,added_leaf_QMARK_){var self__=this;var inode=this;if(hash===self__.collision_hash){var idx=cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);if(idx===-1)if(self__.arr.length>2*self__.cnt){var editable=cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,2*self__.cnt,key,2*self__.cnt+1,val);added_leaf_QMARK_.val=true;editable.cnt=editable.cnt+1;return editable}else{var len=
self__.arr.length;var new_arr=new Array(len+2);cljs.core.array_copy(self__.arr,0,new_arr,0,len);new_arr[len]=key;new_arr[len+1]=val;added_leaf_QMARK_.val=true;return inode.ensure_editable_array(edit__$1,self__.cnt+1,new_arr)}else if(self__.arr[idx+1]===val)return inode;else return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx+1,val)}else return(new cljs.core.BitmapIndexedNode(edit__$1,1<<(self__.collision_hash>>>shift&31),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,
shift,hash,key,val,added_leaf_QMARK_)};
cljs.core.HashCollisionNode.prototype.inode_assoc=function(shift,hash,key,val,added_leaf_QMARK_){var self__=this;var inode=this;if(hash===self__.collision_hash){var idx=cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);if(idx===-1){var len=2*self__.cnt;var new_arr=new Array(len+2);cljs.core.array_copy(self__.arr,0,new_arr,0,len);new_arr[len]=key;new_arr[len+1]=val;added_leaf_QMARK_.val=true;return new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt+1,new_arr)}else if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx+
1],val))return inode;else return new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx+1,val))}else return(new cljs.core.BitmapIndexedNode(null,1<<(self__.collision_hash>>>shift&31),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_)};
cljs.core.HashCollisionNode.prototype.ensure_editable_array=function(e,count,array){var self__=this;var inode=this;if(e===self__.edit){self__.arr=array;self__.cnt=count;return inode}else return new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array)};
cljs.core.HashCollisionNode.prototype.inode_find=function(shift,hash,key,not_found){var self__=this;var inode=this;var idx=cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);if(idx<0)return not_found;else if(cljs.core.key_test(key,self__.arr[idx]))return new cljs.core.MapEntry(self__.arr[idx],self__.arr[idx+1],null);else return not_found};
cljs.core.HashCollisionNode.prototype.inode_without=function(shift,hash,key){var self__=this;var inode=this;var idx=cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);if(idx===-1)return inode;else if(self__.cnt===1)return null;else return new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt-1,cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,2)))};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.NodeIterator(self__.arr,0,null,null)};
cljs.core.HashCollisionNode.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"edit","edit",-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,"collision-hash","collision-hash",-35831342,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.HashCollisionNode.cljs$lang$type=true;cljs.core.HashCollisionNode.cljs$lang$ctorStr="cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/HashCollisionNode")};cljs.core.__GT_HashCollisionNode=function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){return new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr)};
cljs.core.create_node=function cljs$core$create_node(var_args){var G__12039=arguments.length;switch(G__12039){case 6:return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;case 7:return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.core.create_node.cljs$core$IFn$_invoke$arity$6=function(shift,key1,val1,key2hash,key2,val2){var key1hash=cljs.core.hash(key1);if(key1hash===key2hash)return new cljs.core.HashCollisionNode(null,key1hash,2,[key1,val1,key2,val2]);else{var added_leaf_QMARK_=new cljs.core.Box(false);return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_)}};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7=function(edit,shift,key1,val1,key2hash,key2,val2){var key1hash=cljs.core.hash(key1);if(key1hash===key2hash)return new cljs.core.HashCollisionNode(null,key1hash,2,[key1,val1,key2,val2]);else{var added_leaf_QMARK_=new cljs.core.Box(false);return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_)}};
cljs.core.create_node.cljs$lang$maxFixedArity=7;cljs.core.NodeSeq=function(meta,nodes,i,s,__hash){this.meta=meta;this.nodes=nodes;this.i=i;this.s=s;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32374988;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.NodeSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.NodeSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.NodeSeq.prototype.indexOf=function(){var G__12041=null;var G__12041__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12041__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12041=function(x,start){switch(arguments.length){case 1:return G__12041__1.call(this,x);case 2:return G__12041__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__12041.cljs$core$IFn$_invoke$arity$1=G__12041__1;G__12041.cljs$core$IFn$_invoke$arity$2=G__12041__2;return G__12041}();
cljs.core.NodeSeq.prototype.lastIndexOf=function(){var G__12042=null;var G__12042__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12042__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12042=function(x,start){switch(arguments.length){case 1:return G__12042__1.call(this,x);case 2:return G__12042__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12042.cljs$core$IFn$_invoke$arity$1=G__12042__1;G__12042.cljs$core$IFn$_invoke$arity$2=G__12042__2;return G__12042}();cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.s==null)return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes,self__.i+2,null);else return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes,self__.i,cljs.core.next(self__.s))};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.s==null)return new cljs.core.MapEntry(self__.nodes[self__.i],self__.nodes[self__.i+1],null);else return cljs.core.first(self__.s)};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;var ret=self__.s==null?cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes,self__.i+2,null):cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes,self__.i,cljs.core.next(self__.s));if(!(ret==null))return ret;else return cljs.core.List.EMPTY};cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;return this$__$1};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.NodeSeq(new_meta,self__.nodes,self__.i,self__.s,self__.__hash)};cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.NodeSeq.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"nodes","nodes",-459054278,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"s","s",-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable",
"mutable",875778266),true],null))],null)};cljs.core.NodeSeq.cljs$lang$type=true;cljs.core.NodeSeq.cljs$lang$ctorStr="cljs.core/NodeSeq";cljs.core.NodeSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/NodeSeq")};cljs.core.__GT_NodeSeq=function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){return new cljs.core.NodeSeq(meta,nodes,i,s,__hash)};var G__12043_12046=cljs.core.NodeSeq.prototype;
var G__12044_12047=cljs.core.ITER_SYMBOL;var G__12045_12048=function(G__12043_12046,G__12044_12047){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12043_12046,G__12044_12047);goog.object.set(G__12043_12046,G__12044_12047,G__12045_12048);
cljs.core.create_inode_seq=function cljs$core$create_inode_seq(var_args){var G__12050=arguments.length;switch(G__12050){case 1:return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 3:return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1=function(nodes){return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,0,null)};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3=function(nodes,i,s){if(s==null){var len=nodes.length;var j=i;while(true){if(j<len)if(!(nodes[j]==null))return new cljs.core.NodeSeq(null,nodes,j,null,null);else{var temp__4655__auto__=nodes[j+1];if(cljs.core.truth_(temp__4655__auto__)){var node=temp__4655__auto__;var temp__4655__auto____$1=node.inode_seq();if(cljs.core.truth_(temp__4655__auto____$1)){var node_seq=temp__4655__auto____$1;return new cljs.core.NodeSeq(null,nodes,j+2,node_seq,null)}else{var G__12052=
j+2;j=G__12052;continue}}else{var G__12053=j+2;j=G__12053;continue}}else return null;break}}else return new cljs.core.NodeSeq(null,nodes,i,s,null)};cljs.core.create_inode_seq.cljs$lang$maxFixedArity=3;cljs.core.ArrayNodeSeq=function(meta,nodes,i,s,__hash){this.meta=meta;this.nodes=nodes;this.i=i;this.s=s;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32374988;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.ArrayNodeSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.ArrayNodeSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.ArrayNodeSeq.prototype.indexOf=function(){var G__12054=null;var G__12054__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12054__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12054=function(x,start){switch(arguments.length){case 1:return G__12054__1.call(this,x);case 2:return G__12054__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__12054.cljs$core$IFn$_invoke$arity$1=G__12054__1;G__12054.cljs$core$IFn$_invoke$arity$2=G__12054__2;return G__12054}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf=function(){var G__12055=null;var G__12055__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12055__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12055=function(x,start){switch(arguments.length){case 1:return G__12055__1.call(this,x);case 2:return G__12055__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12055.cljs$core$IFn$_invoke$arity$1=G__12055__1;G__12055.cljs$core$IFn$_invoke$arity$2=G__12055__2;return G__12055}();cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes,self__.i,cljs.core.next(self__.s))};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.first(self__.s)};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;var ret=cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes,self__.i,cljs.core.next(self__.s));if(!(ret==null))return ret;else return cljs.core.List.EMPTY};cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;return this$__$1};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.ArrayNodeSeq(new_meta,self__.nodes,self__.i,self__.s,self__.__hash)};cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.ArrayNodeSeq.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"nodes","nodes",-459054278,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"s","s",-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable",
"mutable",875778266),true],null))],null)};cljs.core.ArrayNodeSeq.cljs$lang$type=true;cljs.core.ArrayNodeSeq.cljs$lang$ctorStr="cljs.core/ArrayNodeSeq";cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ArrayNodeSeq")};cljs.core.__GT_ArrayNodeSeq=function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){return new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash)};
var G__12056_12059=cljs.core.ArrayNodeSeq.prototype;var G__12057_12060=cljs.core.ITER_SYMBOL;var G__12058_12061=function(G__12056_12059,G__12057_12060){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12056_12059,G__12057_12060);goog.object.set(G__12056_12059,G__12057_12060,G__12058_12061);
cljs.core.create_array_node_seq=function cljs$core$create_array_node_seq(var_args){var G__12063=arguments.length;switch(G__12063){case 1:return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 3:return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1=function(nodes){return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes,0,null)};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3=function(nodes,i,s){if(s==null){var len=nodes.length;var j=i;while(true){if(j<len){var temp__4655__auto__=nodes[j];if(cljs.core.truth_(temp__4655__auto__)){var nj=temp__4655__auto__;var temp__4655__auto____$1=nj.inode_seq();if(cljs.core.truth_(temp__4655__auto____$1)){var ns=temp__4655__auto____$1;return new cljs.core.ArrayNodeSeq(null,nodes,j+1,ns,null)}else{var G__12065=j+1;j=G__12065;continue}}else{var G__12066=j+1;j=G__12066;continue}}else return null;
break}}else return new cljs.core.ArrayNodeSeq(null,nodes,i,s,null)};cljs.core.create_array_node_seq.cljs$lang$maxFixedArity=3;cljs.core.HashMapIter=function(nil_val,root_iter,seen){this.nil_val=nil_val;this.root_iter=root_iter;this.seen=seen};cljs.core.HashMapIter.prototype.hasNext=function(){var self__=this;var _=this;return!self__.seen||self__.root_iter.hasNext()};
cljs.core.HashMapIter.prototype.next=function(){var self__=this;var _=this;if(!self__.seen){self__.seen=true;return new cljs.core.MapEntry(null,self__.nil_val,null)}else return self__.root_iter.next()};cljs.core.HashMapIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};
cljs.core.HashMapIter.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"nil-val","nil-val",-513933559,null),new cljs.core.Symbol(null,"root-iter","root-iter",1974672108,null),cljs.core.with_meta(new cljs.core.Symbol(null,"seen","seen",1121531738,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.HashMapIter.cljs$lang$type=true;
cljs.core.HashMapIter.cljs$lang$ctorStr="cljs.core/HashMapIter";cljs.core.HashMapIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/HashMapIter")};cljs.core.__GT_HashMapIter=function cljs$core$__GT_HashMapIter(nil_val,root_iter,seen){return new cljs.core.HashMapIter(nil_val,root_iter,seen)};
cljs.core.PersistentHashMap=function(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){this.meta=meta;this.cnt=cnt;this.root=root;this.has_nil_QMARK_=has_nil_QMARK_;this.nil_val=nil_val;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=16123663;this.cljs$lang$protocol_mask$partition1$=139268};cljs.core.PersistentHashMap.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(k==null)if(self__.has_nil_QMARK_)return new cljs.core.MapEntry(null,self__.nil_val,null);else return null;else if(self__.root==null)return null;else return self__.root.inode_find(0,cljs.core.hash(k),k,null)};cljs.core.PersistentHashMap.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.PersistentHashMap.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.PersistentHashMap.prototype.keys=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.keys(coll))};cljs.core.PersistentHashMap.prototype.entries=function(){var self__=this;var coll=this;return cljs.core.es6_entries_iterator(cljs.core.seq(coll))};
cljs.core.PersistentHashMap.prototype.values=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.vals(coll))};cljs.core.PersistentHashMap.prototype.has=function(k){var self__=this;var coll=this;return cljs.core.contains_QMARK_(coll,k)};cljs.core.PersistentHashMap.prototype.get=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentHashMap.prototype.forEach=function(f){var self__=this;var coll=this;var seq__12068=cljs.core.seq(coll);var chunk__12069=null;var count__12070=0;var i__12071=0;while(true){if(i__12071<count__12070){var vec__12078=chunk__12069.cljs$core$IIndexed$_nth$arity$2(null,i__12071);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12078,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12078,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,
v,k);var G__12086=seq__12068;var G__12087=chunk__12069;var G__12088=count__12070;var G__12089=i__12071+1;seq__12068=G__12086;chunk__12069=G__12087;count__12070=G__12088;i__12071=G__12089;continue}else{var temp__4657__auto__=cljs.core.seq(seq__12068);if(temp__4657__auto__){var seq__12068__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__12068__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__12068__$1);var G__12090=cljs.core.chunk_rest(seq__12068__$1);var G__12091=c__8771__auto__;var G__12092=
cljs.core.count(c__8771__auto__);var G__12093=0;seq__12068=G__12090;chunk__12069=G__12091;count__12070=G__12092;i__12071=G__12093;continue}else{var vec__12081=cljs.core.first(seq__12068__$1);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12081,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12081,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,v,k);var G__12094=cljs.core.next(seq__12068__$1);var G__12095=null;var G__12096=0;var G__12097=
0;seq__12068=G__12094;chunk__12069=G__12095;count__12070=G__12096;i__12071=G__12097;continue}}else return null}break}};cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;if(k==null)if(self__.has_nil_QMARK_)return self__.nil_val;else return not_found;else if(self__.root==null)return not_found;else return self__.root.inode_lookup(0,cljs.core.hash(k),k,not_found)};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(coll,f,init){var self__=this;var coll__$1=this;var init__$1=self__.has_nil_QMARK_?f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(init,null,self__.nil_val):f.call(null,init,null,self__.nil_val):init;if(cljs.core.reduced_QMARK_(init__$1))return cljs.core.deref(init__$1);else if(!(self__.root==null))return cljs.core.unreduced(self__.root.kv_reduce(f,init__$1));else return init__$1};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;var root_iter=self__.root?cljs.core._iterator(self__.root):cljs.core.nil_iter();if(self__.has_nil_QMARK_)return new cljs.core.HashMapIter(self__.nil_val,root_iter,false);else return root_iter};cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash)};cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.cnt};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_unordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_map(coll__$1,other)};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.TransientHashMap({},self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val)};cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta)};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(k==null)if(self__.has_nil_QMARK_)return new cljs.core.PersistentHashMap(self__.meta,self__.cnt-1,self__.root,false,null,null);else return coll__$1;else if(self__.root==null)return coll__$1;else{var new_root=self__.root.inode_without(0,cljs.core.hash(k),k);if(new_root===self__.root)return coll__$1;else return new cljs.core.PersistentHashMap(self__.meta,self__.cnt-1,new_root,self__.has_nil_QMARK_,
self__.nil_val,null)}};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,k,v){var self__=this;var coll__$1=this;if(k==null)if(self__.has_nil_QMARK_&&v===self__.nil_val)return coll__$1;else return new cljs.core.PersistentHashMap(self__.meta,self__.has_nil_QMARK_?self__.cnt:self__.cnt+1,self__.root,true,v,null);else{var added_leaf_QMARK_=new cljs.core.Box(false);var new_root=(self__.root==null?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc(0,cljs.core.hash(k),k,v,added_leaf_QMARK_);
if(new_root===self__.root)return coll__$1;else return new cljs.core.PersistentHashMap(self__.meta,added_leaf_QMARK_.val?self__.cnt+1:self__.cnt,new_root,self__.has_nil_QMARK_,self__.nil_val,null)}};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;if(k==null)return self__.has_nil_QMARK_;else if(self__.root==null)return false;else return!(self__.root.inode_lookup(0,cljs.core.hash(k),k,cljs.core.lookup_sentinel)===cljs.core.lookup_sentinel)};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt>0){var s=!(self__.root==null)?self__.root.inode_seq():null;if(self__.has_nil_QMARK_)return cljs.core.cons(new cljs.core.MapEntry(null,self__.nil_val,null),s);else return s}else return null};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentHashMap(new_meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash)};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,entry){var self__=this;var coll__$1=this;if(cljs.core.vector_QMARK_(entry))return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,1));else{var ret=coll__$1;var es=cljs.core.seq(entry);while(true){if(es==null)return ret;else{var e=cljs.core.first(es);if(cljs.core.vector_QMARK_(e)){var G__12098=cljs.core._assoc(ret,
cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,1));var G__12099=cljs.core.next(es);ret=G__12098;es=G__12099;continue}else throw new Error("conj on a map takes map entries or seqables of map entries");}break}}};
cljs.core.PersistentHashMap.prototype.call=function(){var G__12100=null;var G__12100__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__12100__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__12100=function(self__,k,not_found){switch(arguments.length){case 2:return G__12100__2.call(this,self__,k);case 3:return G__12100__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12100.cljs$core$IFn$_invoke$arity$2=G__12100__2;G__12100.cljs$core$IFn$_invoke$arity$3=G__12100__3;return G__12100}();cljs.core.PersistentHashMap.prototype.apply=function(self__,args12067){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12067)))};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentHashMap.getBasis=function(){return new cljs.core.PersistentVector(null,6,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.Symbol(null,"root","root",1191874074,null),cljs.core.with_meta(new cljs.core.Symbol(null,"has-nil?","has-nil?",825886722,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,
"boolean","boolean",-278886877,null)],null)),new cljs.core.Symbol(null,"nil-val","nil-val",-513933559,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.PersistentHashMap.cljs$lang$type=true;cljs.core.PersistentHashMap.cljs$lang$ctorStr="cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentHashMap")};cljs.core.__GT_PersistentHashMap=function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){return new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash)};cljs.core.PersistentHashMap.EMPTY=new cljs.core.PersistentHashMap(null,0,null,false,null,cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray=function(arr,no_clone){var arr__$1=no_clone?arr:cljs.core.aclone(arr);var len=arr__$1.length;var i=0;var ret=cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);while(true){if(i<len){var G__12101=i+2;var G__12102=cljs.core._assoc_BANG_(ret,arr__$1[i],arr__$1[i+1]);i=G__12101;ret=G__12102;continue}else return cljs.core._persistent_BANG_(ret);break}};
cljs.core.PersistentHashMap.fromArrays=function(ks,vs){var len=ks.length;var i=0;var out=cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);while(true){if(i<len){var G__12103=i+1;var G__12104=cljs.core._assoc_BANG_(out,ks[i],vs[i]);i=G__12103;out=G__12104;continue}else return cljs.core.persistent_BANG_(out);break}};
cljs.core.PersistentHashMap.createWithCheck=function(arr){var len=arr.length;var ret=cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);var i_12105=0;while(true){if(i_12105<len){cljs.core._assoc_BANG_(ret,arr[i_12105],arr[i_12105+1]);if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret),i_12105/2+1))throw new Error(["Duplicate key: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_12105])].join(""));else{var G__12106=i_12105+2;i_12105=G__12106;continue}}else;break}return cljs.core._persistent_BANG_(ret)};
var G__12107_12110=cljs.core.PersistentHashMap.prototype;var G__12108_12111=cljs.core.ITER_SYMBOL;var G__12109_12112=function(G__12107_12110,G__12108_12111){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12107_12110,G__12108_12111);goog.object.set(G__12107_12110,G__12108_12111,G__12109_12112);
cljs.core.TransientHashMap=function(edit,root,count,has_nil_QMARK_,nil_val){this.edit=edit;this.root=root;this.count=count;this.has_nil_QMARK_=has_nil_QMARK_;this.nil_val=nil_val;this.cljs$lang$protocol_mask$partition0$=259;this.cljs$lang$protocol_mask$partition1$=56};
cljs.core.TransientHashMap.prototype.conj_BANG_=function(o){var self__=this;var tcoll=this;if(self__.edit)if(cljs.core.map_entry_QMARK_(o))return tcoll.assoc_BANG_(cljs.core.key(o),cljs.core.val(o));else if(cljs.core.vector_QMARK_(o))return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1?o.cljs$core$IFn$_invoke$arity$1(0):o.call(null,0),o.cljs$core$IFn$_invoke$arity$1?o.cljs$core$IFn$_invoke$arity$1(1):o.call(null,1));else{var es=cljs.core.seq(o);var tcoll__$1=tcoll;while(true){var temp__4655__auto__=
cljs.core.first(es);if(cljs.core.truth_(temp__4655__auto__)){var e=temp__4655__auto__;var G__12114=cljs.core.next(es);var G__12115=tcoll__$1.assoc_BANG_(cljs.core.key(e),cljs.core.val(e));es=G__12114;tcoll__$1=G__12115;continue}else return tcoll__$1;break}}else throw new Error("conj! after persistent");};
cljs.core.TransientHashMap.prototype.assoc_BANG_=function(k,v){var self__=this;var tcoll=this;if(self__.edit)if(k==null){if(self__.nil_val===v);else self__.nil_val=v;if(self__.has_nil_QMARK_);else{self__.count=self__.count+1;self__.has_nil_QMARK_=true}return tcoll}else{var added_leaf_QMARK_=new cljs.core.Box(false);var node=(self__.root==null?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,0,cljs.core.hash(k),k,v,added_leaf_QMARK_);if(node===self__.root);else self__.root=
node;if(added_leaf_QMARK_.val)self__.count=self__.count+1;else;return tcoll}else throw new Error("assoc! after persistent!");};
cljs.core.TransientHashMap.prototype.without_BANG_=function(k){var self__=this;var tcoll=this;if(self__.edit)if(k==null)if(self__.has_nil_QMARK_){self__.has_nil_QMARK_=false;self__.nil_val=null;self__.count=self__.count-1;return tcoll}else return tcoll;else if(self__.root==null)return tcoll;else{var removed_leaf_QMARK_=new cljs.core.Box(false);var node=self__.root.inode_without_BANG_(self__.edit,0,cljs.core.hash(k),k,removed_leaf_QMARK_);if(node===self__.root);else self__.root=node;if(removed_leaf_QMARK_.val)self__.count=
self__.count-1;else;return tcoll}else throw new Error("dissoc! after persistent!");};cljs.core.TransientHashMap.prototype.persistent_BANG_=function(){var self__=this;var tcoll=this;if(self__.edit){self__.edit=null;return new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null)}else throw new Error("persistent! called twice");};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.edit)return self__.count;else throw new Error("count after persistent!");};cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2=function(tcoll,k){var self__=this;var tcoll__$1=this;if(k==null)if(self__.has_nil_QMARK_)return self__.nil_val;else return null;else if(self__.root==null)return null;else return self__.root.inode_lookup(0,cljs.core.hash(k),k)};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3=function(tcoll,k,not_found){var self__=this;var tcoll__$1=this;if(k==null)if(self__.has_nil_QMARK_)return self__.nil_val;else return not_found;else if(self__.root==null)return not_found;else return self__.root.inode_lookup(0,cljs.core.hash(k),k,not_found)};cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2=function(tcoll,val){var self__=this;var tcoll__$1=this;return tcoll__$1.conj_BANG_(val)};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;return tcoll__$1.persistent_BANG_()};cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3=function(tcoll,key,val){var self__=this;var tcoll__$1=this;return tcoll__$1.assoc_BANG_(key,val)};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2=function(tcoll,key){var self__=this;var tcoll__$1=this;return tcoll__$1.without_BANG_(key)};
cljs.core.TransientHashMap.prototype.call=function(){var G__12116=null;var G__12116__2=function(self__,key){var self__=this;var self____$1=this;var tcoll=self____$1;return tcoll.cljs$core$ILookup$_lookup$arity$2(null,key)};var G__12116__3=function(self__,key,not_found){var self__=this;var self____$1=this;var tcoll=self____$1;return tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found)};G__12116=function(self__,key,not_found){switch(arguments.length){case 2:return G__12116__2.call(this,self__,
key);case 3:return G__12116__3.call(this,self__,key,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12116.cljs$core$IFn$_invoke$arity$2=G__12116__2;G__12116.cljs$core$IFn$_invoke$arity$3=G__12116__3;return G__12116}();cljs.core.TransientHashMap.prototype.apply=function(self__,args12113){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12113)))};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1=function(key){var self__=this;var tcoll=this;return tcoll.cljs$core$ILookup$_lookup$arity$2(null,key)};cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2=function(key,not_found){var self__=this;var tcoll=this;return tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found)};
cljs.core.TransientHashMap.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"edit","edit",-1302639,null),new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"root","root",1191874074,
null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"has-nil?","has-nil?",825886722,null),new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,
"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"nil-val","nil-val",-513933559,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.TransientHashMap.cljs$lang$type=true;cljs.core.TransientHashMap.cljs$lang$ctorStr="cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/TransientHashMap")};cljs.core.__GT_TransientHashMap=function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){return new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val)};
cljs.core.tree_map_seq_push=function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){var t=node;var stack__$1=stack;while(true){if(!(t==null)){var G__12117=ascending_QMARK_?t.left:t.right;var G__12118=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);t=G__12117;stack__$1=G__12118;continue}else return stack__$1;break}};
cljs.core.PersistentTreeMapSeq=function(meta,stack,ascending_QMARK_,cnt,__hash){this.meta=meta;this.stack=stack;this.ascending_QMARK_=ascending_QMARK_;this.cnt=cnt;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32374990;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.PersistentTreeMapSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.PersistentTreeMapSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentTreeMapSeq.prototype.indexOf=function(){var G__12119=null;var G__12119__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12119__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12119=function(x,start){switch(arguments.length){case 1:return G__12119__1.call(this,x);case 2:return G__12119__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12119.cljs$core$IFn$_invoke$arity$1=G__12119__1;G__12119.cljs$core$IFn$_invoke$arity$2=G__12119__2;return G__12119}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf=function(){var G__12120=null;var G__12120__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12120__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12120=function(x,start){switch(arguments.length){case 1:return G__12120__1.call(this,x);case 2:return G__12120__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12120.cljs$core$IFn$_invoke$arity$1=G__12120__1;G__12120.cljs$core$IFn$_invoke$arity$2=G__12120__2;return G__12120}();cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1=function(this$){var self__=this;var this$__$1=this;var t=cljs.core.first(self__.stack);var next_stack=cljs.core.tree_map_seq_push(self__.ascending_QMARK_?t.right:t.left,cljs.core.next(self__.stack),self__.ascending_QMARK_);if(next_stack==null)return null;else return new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,self__.cnt-1,null)};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt<0)return cljs.core.count(cljs.core.next(coll__$1))+1;else return self__.cnt};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1=function(this$){var self__=this;var this$__$1=this;return cljs.core.peek(self__.stack)};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(this$){var self__=this;var this$__$1=this;var t=cljs.core.first(self__.stack);var next_stack=cljs.core.tree_map_seq_push(self__.ascending_QMARK_?t.right:t.left,cljs.core.next(self__.stack),self__.ascending_QMARK_);if(!(next_stack==null))return new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,self__.cnt-1,null);else return cljs.core.List.EMPTY};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;return this$__$1};cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentTreeMapSeq(new_meta,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash)};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.PersistentTreeMapSeq.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"stack","stack",847125597,null),cljs.core.with_meta(new cljs.core.Symbol(null,"ascending?","ascending?",-1938452653,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)],null)),
new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.PersistentTreeMapSeq.cljs$lang$type=true;cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr="cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentTreeMapSeq")};cljs.core.__GT_PersistentTreeMapSeq=function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){return new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash)};var G__12121_12124=cljs.core.PersistentTreeMapSeq.prototype;var G__12122_12125=cljs.core.ITER_SYMBOL;
var G__12123_12126=function(G__12121_12124,G__12122_12125){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12121_12124,G__12122_12125);goog.object.set(G__12121_12124,G__12122_12125,G__12123_12126);cljs.core.create_tree_map_seq=function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){return new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null)};
cljs.core.balance_left=function cljs$core$balance_left(key,val,ins,right){if(ins instanceof cljs.core.RedNode)if(ins.left instanceof cljs.core.RedNode)return new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),new cljs.core.BlackNode(key,val,ins.right,right,null),null);else if(ins.right instanceof cljs.core.RedNode)return new cljs.core.RedNode(ins.right.key,ins.right.val,new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null),new cljs.core.BlackNode(key,val,ins.right.right,right,
null),null);else return new cljs.core.BlackNode(key,val,ins,right,null);else return new cljs.core.BlackNode(key,val,ins,right,null)};
cljs.core.balance_right=function cljs$core$balance_right(key,val,left,ins){if(ins instanceof cljs.core.RedNode)if(ins.right instanceof cljs.core.RedNode)return new cljs.core.RedNode(ins.key,ins.val,new cljs.core.BlackNode(key,val,left,ins.left,null),ins.right.blacken(),null);else if(ins.left instanceof cljs.core.RedNode)return new cljs.core.RedNode(ins.left.key,ins.left.val,new cljs.core.BlackNode(key,val,left,ins.left.left,null),new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null),
null);else return new cljs.core.BlackNode(key,val,left,ins,null);else return new cljs.core.BlackNode(key,val,left,ins,null)};
cljs.core.balance_left_del=function cljs$core$balance_left_del(key,val,del,right){if(del instanceof cljs.core.RedNode)return new cljs.core.RedNode(key,val,del.blacken(),right,null);else if(right instanceof cljs.core.BlackNode)return cljs.core.balance_right(key,val,del,right.redden());else if(right instanceof cljs.core.RedNode&&right.left instanceof cljs.core.BlackNode)return new cljs.core.RedNode(right.left.key,right.left.val,new cljs.core.BlackNode(key,val,del,right.left.left,null),cljs.core.balance_right(right.key,
right.val,right.left.right,right.right.redden()),null);else throw new Error("red-black tree invariant violation");};
cljs.core.balance_right_del=function cljs$core$balance_right_del(key,val,left,del){if(del instanceof cljs.core.RedNode)return new cljs.core.RedNode(key,val,left,del.blacken(),null);else if(left instanceof cljs.core.BlackNode)return cljs.core.balance_left(key,val,left.redden(),del);else if(left instanceof cljs.core.RedNode&&left.right instanceof cljs.core.BlackNode)return new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),
new cljs.core.BlackNode(key,val,left.right.right,del,null),null);else throw new Error("red-black tree invariant violation");};
cljs.core.tree_map_kv_reduce=function cljs$core$tree_map_kv_reduce(node,f,init){var init__$1=!(node.left==null)?function(){var G__12127=node.left;var G__12128=f;var G__12129=init;return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3?cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__12127,G__12128,G__12129):cljs.core.tree_map_kv_reduce.call(null,G__12127,G__12128,G__12129)}():init;if(cljs.core.reduced_QMARK_(init__$1))return init__$1;else{var init__$2=function(){var G__12130=
init__$1;var G__12131=node.key;var G__12132=node.val;return f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(G__12130,G__12131,G__12132):f.call(null,G__12130,G__12131,G__12132)}();if(cljs.core.reduced_QMARK_(init__$2))return init__$2;else if(!(node.right==null)){var G__12133=node.right;var G__12134=f;var G__12135=init__$2;return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3?cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__12133,G__12134,G__12135):cljs.core.tree_map_kv_reduce.call(null,
G__12133,G__12134,G__12135)}else return init__$2}};cljs.core.BlackNode=function(key,val,left,right,__hash){this.key=key;this.val=val;this.left=left;this.right=right;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=166619935;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.BlackNode.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2=function(node,k){var self__=this;var node__$1=this;var G__12137=k;switch(G__12137){case 0:return new cljs.core.MapEntry(0,self__.key,null);break;case 1:return new cljs.core.MapEntry(1,self__.val,null);break;default:return null}};
cljs.core.BlackNode.prototype.lastIndexOf=function(){var G__12139=null;var G__12139__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12139__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12139=function(x,start){switch(arguments.length){case 1:return G__12139__1.call(this,x);case 2:return G__12139__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12139.cljs$core$IFn$_invoke$arity$1=G__12139__1;G__12139.cljs$core$IFn$_invoke$arity$2=G__12139__2;return G__12139}();
cljs.core.BlackNode.prototype.indexOf=function(){var G__12140=null;var G__12140__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12140__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12140=function(x,start){switch(arguments.length){case 1:return G__12140__1.call(this,x);case 2:return G__12140__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__12140.cljs$core$IFn$_invoke$arity$1=G__12140__1;G__12140.cljs$core$IFn$_invoke$arity$2=G__12140__2;return G__12140}();cljs.core.BlackNode.prototype.add_right=function(ins){var self__=this;var node=this;return ins.balance_right(node)};cljs.core.BlackNode.prototype.redden=function(){var self__=this;var node=this;return new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null)};cljs.core.BlackNode.prototype.blacken=function(){var self__=this;var node=this;return node};
cljs.core.BlackNode.prototype.add_left=function(ins){var self__=this;var node=this;return ins.balance_left(node)};cljs.core.BlackNode.prototype.replace=function(key__$1,val__$1,left__$1,right__$1){var self__=this;var node=this;return new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null)};cljs.core.BlackNode.prototype.balance_left=function(parent){var self__=this;var node=this;return new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null)};
cljs.core.BlackNode.prototype.balance_right=function(parent){var self__=this;var node=this;return new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null)};cljs.core.BlackNode.prototype.remove_left=function(del){var self__=this;var node=this;return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right)};cljs.core.BlackNode.prototype.kv_reduce=function(f,init){var self__=this;var node=this;return cljs.core.tree_map_kv_reduce(node,f,init)};
cljs.core.BlackNode.prototype.remove_right=function(del){var self__=this;var node=this;return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del)};cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2=function(node,k){var self__=this;var node__$1=this;return node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null)};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3=function(node,k,not_found){var self__=this;var node__$1=this;return node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2=function(node,n){var self__=this;var node__$1=this;if(n===0)return self__.key;else if(n===1)return self__.val;else throw new Error("Index out of bounds");};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3=function(node,n,not_found){var self__=this;var node__$1=this;if(n===0)return self__.key;else if(n===1)return self__.val;else return not_found};cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3=function(node,n,v){var self__=this;var node__$1=this;return(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null)).cljs$core$IVector$_assoc_n$arity$3(null,n,v)};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1=function(node){var self__=this;var node__$1=this;return null};cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1=function(node){var self__=this;var node__$1=this;return 2};cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1=function(node){var self__=this;var node__$1=this;return self__.key};cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1=function(node){var self__=this;var node__$1=this;return self__.val};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1=function(node){var self__=this;var node__$1=this;return self__.val};cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key],null)};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.IndexedSeq([self__.val,self__.key],0,null)};cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(node){var self__=this;var node__$1=this;return null};cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2=function(node,f){var self__=this;var node__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f)};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3=function(node,f,start){var self__=this;var node__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start)};cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3=function(node,k,v){var self__=this;var node__$1=this;return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null),k,v)};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(node,k){var self__=this;var node__$1=this;return k===0||k===1};cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.IndexedSeq([self__.key,self__.val],0,null)};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(node,meta){var self__=this;var node__$1=this;return cljs.core._with_meta(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null),meta)};cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2=function(node,o){var self__=this;var node__$1=this;return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val,o],null)};
cljs.core.BlackNode.prototype.call=function(){var G__12141=null;var G__12141__2=function(self__,k){var self__=this;var self____$1=this;var node=self____$1;return node.cljs$core$IIndexed$_nth$arity$2(null,k)};var G__12141__3=function(self__,k,not_found){var self__=this;var self____$1=this;var node=self____$1;return node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};G__12141=function(self__,k,not_found){switch(arguments.length){case 2:return G__12141__2.call(this,self__,k);case 3:return G__12141__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12141.cljs$core$IFn$_invoke$arity$2=G__12141__2;G__12141.cljs$core$IFn$_invoke$arity$3=G__12141__3;return G__12141}();cljs.core.BlackNode.prototype.apply=function(self__,args12136){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12136)))};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var node=this;return node.cljs$core$IIndexed$_nth$arity$2(null,k)};cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var node=this;return node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};
cljs.core.BlackNode.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"key","key",124488940,null),new cljs.core.Symbol(null,"val","val",1769233139,null),new cljs.core.Symbol(null,"left","left",1241415590,null),new cljs.core.Symbol(null,"right","right",1187949694,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.BlackNode.cljs$lang$type=true;cljs.core.BlackNode.cljs$lang$ctorStr="cljs.core/BlackNode";cljs.core.BlackNode.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/BlackNode")};cljs.core.__GT_BlackNode=function cljs$core$__GT_BlackNode(key,val,left,right,__hash){return new cljs.core.BlackNode(key,val,left,right,__hash)};var G__12142_12145=cljs.core.BlackNode.prototype;
var G__12143_12146=cljs.core.ITER_SYMBOL;var G__12144_12147=function(G__12142_12145,G__12143_12146){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12142_12145,G__12143_12146);goog.object.set(G__12142_12145,G__12143_12146,G__12144_12147);
cljs.core.RedNode=function(key,val,left,right,__hash){this.key=key;this.val=val;this.left=left;this.right=right;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=166619935;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.RedNode.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2=function(node,k){var self__=this;var node__$1=this;var G__12149=k;switch(G__12149){case 0:return new cljs.core.MapEntry(0,self__.key,null);break;case 1:return new cljs.core.MapEntry(1,self__.val,null);break;default:return null}};
cljs.core.RedNode.prototype.lastIndexOf=function(){var G__12151=null;var G__12151__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12151__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12151=function(x,start){switch(arguments.length){case 1:return G__12151__1.call(this,x);case 2:return G__12151__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12151.cljs$core$IFn$_invoke$arity$1=G__12151__1;G__12151.cljs$core$IFn$_invoke$arity$2=G__12151__2;return G__12151}();
cljs.core.RedNode.prototype.indexOf=function(){var G__12152=null;var G__12152__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12152__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12152=function(x,start){switch(arguments.length){case 1:return G__12152__1.call(this,x);case 2:return G__12152__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__12152.cljs$core$IFn$_invoke$arity$1=G__12152__1;G__12152.cljs$core$IFn$_invoke$arity$2=G__12152__2;return G__12152}();cljs.core.RedNode.prototype.add_right=function(ins){var self__=this;var node=this;return new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null)};cljs.core.RedNode.prototype.redden=function(){var self__=this;var node=this;throw new Error("red-black tree invariant violation");};
cljs.core.RedNode.prototype.blacken=function(){var self__=this;var node=this;return new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null)};cljs.core.RedNode.prototype.add_left=function(ins){var self__=this;var node=this;return new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null)};cljs.core.RedNode.prototype.replace=function(key__$1,val__$1,left__$1,right__$1){var self__=this;var node=this;return new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null)};
cljs.core.RedNode.prototype.balance_left=function(parent){var self__=this;var node=this;if(self__.left instanceof cljs.core.RedNode)return new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null),null);else if(self__.right instanceof cljs.core.RedNode)return new cljs.core.RedNode(self__.right.key,self__.right.val,new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null),new cljs.core.BlackNode(parent.key,
parent.val,self__.right.right,parent.right,null),null);else return new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null)};
cljs.core.RedNode.prototype.balance_right=function(parent){var self__=this;var node=this;if(self__.right instanceof cljs.core.RedNode)return new cljs.core.RedNode(self__.key,self__.val,new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null),self__.right.blacken(),null);else if(self__.left instanceof cljs.core.RedNode)return new cljs.core.RedNode(self__.left.key,self__.left.val,new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null),new cljs.core.BlackNode(self__.key,
self__.val,self__.left.right,self__.right,null),null);else return new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null)};cljs.core.RedNode.prototype.remove_left=function(del){var self__=this;var node=this;return new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null)};cljs.core.RedNode.prototype.kv_reduce=function(f,init){var self__=this;var node=this;return cljs.core.tree_map_kv_reduce(node,f,init)};
cljs.core.RedNode.prototype.remove_right=function(del){var self__=this;var node=this;return new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null)};cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2=function(node,k){var self__=this;var node__$1=this;return node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null)};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3=function(node,k,not_found){var self__=this;var node__$1=this;return node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2=function(node,n){var self__=this;var node__$1=this;if(n===0)return self__.key;else if(n===1)return self__.val;else throw new Error("Index out of bounds");};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3=function(node,n,not_found){var self__=this;var node__$1=this;if(n===0)return self__.key;else if(n===1)return self__.val;else return not_found};cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3=function(node,n,v){var self__=this;var node__$1=this;return(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null)).cljs$core$IVector$_assoc_n$arity$3(null,n,v)};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1=function(node){var self__=this;var node__$1=this;return null};cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1=function(node){var self__=this;var node__$1=this;return 2};cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1=function(node){var self__=this;var node__$1=this;return self__.key};cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1=function(node){var self__=this;var node__$1=this;return self__.val};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1=function(node){var self__=this;var node__$1=this;return self__.val};cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key],null)};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.IndexedSeq([self__.val,self__.key],0,null)};cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(node){var self__=this;var node__$1=this;return null};cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2=function(node,f){var self__=this;var node__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f)};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3=function(node,f,start){var self__=this;var node__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start)};cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3=function(node,k,v){var self__=this;var node__$1=this;return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null),k,v)};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(node,k){var self__=this;var node__$1=this;return k===0||k===1};cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1=function(node){var self__=this;var node__$1=this;return new cljs.core.IndexedSeq([self__.key,self__.val],0,null)};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(node,meta){var self__=this;var node__$1=this;return cljs.core._with_meta(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val],null),meta)};cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2=function(node,o){var self__=this;var node__$1=this;return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[self__.key,self__.val,o],null)};
cljs.core.RedNode.prototype.call=function(){var G__12153=null;var G__12153__2=function(self__,k){var self__=this;var self____$1=this;var node=self____$1;return node.cljs$core$IIndexed$_nth$arity$2(null,k)};var G__12153__3=function(self__,k,not_found){var self__=this;var self____$1=this;var node=self____$1;return node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};G__12153=function(self__,k,not_found){switch(arguments.length){case 2:return G__12153__2.call(this,self__,k);case 3:return G__12153__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12153.cljs$core$IFn$_invoke$arity$2=G__12153__2;G__12153.cljs$core$IFn$_invoke$arity$3=G__12153__3;return G__12153}();cljs.core.RedNode.prototype.apply=function(self__,args12148){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12148)))};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var node=this;return node.cljs$core$IIndexed$_nth$arity$2(null,k)};cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var node=this;return node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found)};
cljs.core.RedNode.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"key","key",124488940,null),new cljs.core.Symbol(null,"val","val",1769233139,null),new cljs.core.Symbol(null,"left","left",1241415590,null),new cljs.core.Symbol(null,"right","right",1187949694,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable",
"mutable",875778266),true],null))],null)};cljs.core.RedNode.cljs$lang$type=true;cljs.core.RedNode.cljs$lang$ctorStr="cljs.core/RedNode";cljs.core.RedNode.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/RedNode")};cljs.core.__GT_RedNode=function cljs$core$__GT_RedNode(key,val,left,right,__hash){return new cljs.core.RedNode(key,val,left,right,__hash)};var G__12154_12157=cljs.core.RedNode.prototype;
var G__12155_12158=cljs.core.ITER_SYMBOL;var G__12156_12159=function(G__12154_12157,G__12155_12158){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12154_12157,G__12155_12158);goog.object.set(G__12154_12157,G__12155_12158,G__12156_12159);
cljs.core.tree_map_add=function cljs$core$tree_map_add(comp,tree,k,v,found){if(tree==null)return new cljs.core.RedNode(k,v,null,null,null);else{var c=function(){var G__12160=k;var G__12161=tree.key;return comp.cljs$core$IFn$_invoke$arity$2?comp.cljs$core$IFn$_invoke$arity$2(G__12160,G__12161):comp.call(null,G__12160,G__12161)}();if(c===0){found[0]=tree;return null}else if(c<0){var ins=function(){var G__12162=comp;var G__12163=tree.left;var G__12164=k;var G__12165=v;var G__12166=found;return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5?
cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__12162,G__12163,G__12164,G__12165,G__12166):cljs.core.tree_map_add.call(null,G__12162,G__12163,G__12164,G__12165,G__12166)}();if(!(ins==null))return tree.add_left(ins);else return null}else{var ins=function(){var G__12167=comp;var G__12168=tree.right;var G__12169=k;var G__12170=v;var G__12171=found;return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5?cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__12167,G__12168,G__12169,G__12170,
G__12171):cljs.core.tree_map_add.call(null,G__12167,G__12168,G__12169,G__12170,G__12171)}();if(!(ins==null))return tree.add_right(ins);else return null}}};
cljs.core.tree_map_append=function cljs$core$tree_map_append(left,right){if(left==null)return right;else if(right==null)return left;else if(left instanceof cljs.core.RedNode)if(right instanceof cljs.core.RedNode){var app=function(){var G__12172=left.right;var G__12173=right.left;return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2?cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12172,G__12173):cljs.core.tree_map_append.call(null,G__12172,G__12173)}();if(app instanceof cljs.core.RedNode)return new cljs.core.RedNode(app.key,
app.val,new cljs.core.RedNode(left.key,left.val,left.left,app.left,null),new cljs.core.RedNode(right.key,right.val,app.right,right.right,null),null);else return new cljs.core.RedNode(left.key,left.val,left.left,new cljs.core.RedNode(right.key,right.val,app,right.right,null),null)}else return new cljs.core.RedNode(left.key,left.val,left.left,function(){var G__12174=left.right;var G__12175=right;return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2?cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12174,
G__12175):cljs.core.tree_map_append.call(null,G__12174,G__12175)}(),null);else if(right instanceof cljs.core.RedNode)return new cljs.core.RedNode(right.key,right.val,function(){var G__12176=left;var G__12177=right.left;return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2?cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12176,G__12177):cljs.core.tree_map_append.call(null,G__12176,G__12177)}(),right.right,null);else{var app=function(){var G__12178=left.right;var G__12179=right.left;
return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2?cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12178,G__12179):cljs.core.tree_map_append.call(null,G__12178,G__12179)}();if(app instanceof cljs.core.RedNode)return new cljs.core.RedNode(app.key,app.val,new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null),new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null),null);else return cljs.core.balance_left_del(left.key,left.val,left.left,new cljs.core.BlackNode(right.key,
right.val,app,right.right,null))}};
cljs.core.tree_map_remove=function cljs$core$tree_map_remove(comp,tree,k,found){if(!(tree==null)){var c=function(){var G__12180=k;var G__12181=tree.key;return comp.cljs$core$IFn$_invoke$arity$2?comp.cljs$core$IFn$_invoke$arity$2(G__12180,G__12181):comp.call(null,G__12180,G__12181)}();if(c===0){found[0]=tree;return cljs.core.tree_map_append(tree.left,tree.right)}else if(c<0){var del=function(){var G__12182=comp;var G__12183=tree.left;var G__12184=k;var G__12185=found;return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4?
cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__12182,G__12183,G__12184,G__12185):cljs.core.tree_map_remove.call(null,G__12182,G__12183,G__12184,G__12185)}();if(!(del==null)||!(found[0]==null))if(tree.left instanceof cljs.core.BlackNode)return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);else return new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null);else return null}else{var del=function(){var G__12186=comp;var G__12187=tree.right;var G__12188=k;var G__12189=found;
return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4?cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__12186,G__12187,G__12188,G__12189):cljs.core.tree_map_remove.call(null,G__12186,G__12187,G__12188,G__12189)}();if(!(del==null)||!(found[0]==null))if(tree.right instanceof cljs.core.BlackNode)return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);else return new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null);else return null}}else return null};
cljs.core.tree_map_replace=function cljs$core$tree_map_replace(comp,tree,k,v){var tk=tree.key;var c=comp.cljs$core$IFn$_invoke$arity$2?comp.cljs$core$IFn$_invoke$arity$2(k,tk):comp.call(null,k,tk);if(c===0)return tree.replace(tk,v,tree.left,tree.right);else if(c<0)return tree.replace(tk,tree.val,function(){var G__12190=comp;var G__12191=tree.left;var G__12192=k;var G__12193=v;return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4?cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__12190,
G__12191,G__12192,G__12193):cljs.core.tree_map_replace.call(null,G__12190,G__12191,G__12192,G__12193)}(),tree.right);else return tree.replace(tk,tree.val,tree.left,function(){var G__12194=comp;var G__12195=tree.right;var G__12196=k;var G__12197=v;return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4?cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__12194,G__12195,G__12196,G__12197):cljs.core.tree_map_replace.call(null,G__12194,G__12195,G__12196,G__12197)}())};
cljs.core.PersistentTreeMap=function(comp,tree,cnt,meta,__hash){this.comp=comp;this.tree=tree;this.cnt=cnt;this.meta=meta;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=418776847;this.cljs$lang$protocol_mask$partition1$=8192};cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.entry_at(k)};
cljs.core.PersistentTreeMap.prototype.forEach=function(f){var self__=this;var coll=this;var seq__12199=cljs.core.seq(coll);var chunk__12200=null;var count__12201=0;var i__12202=0;while(true){if(i__12202<count__12201){var vec__12209=chunk__12200.cljs$core$IIndexed$_nth$arity$2(null,i__12202);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12209,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12209,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,
v,k);var G__12221=seq__12199;var G__12222=chunk__12200;var G__12223=count__12201;var G__12224=i__12202+1;seq__12199=G__12221;chunk__12200=G__12222;count__12201=G__12223;i__12202=G__12224;continue}else{var temp__4657__auto__=cljs.core.seq(seq__12199);if(temp__4657__auto__){var seq__12199__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__12199__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__12199__$1);var G__12225=cljs.core.chunk_rest(seq__12199__$1);var G__12226=c__8771__auto__;var G__12227=
cljs.core.count(c__8771__auto__);var G__12228=0;seq__12199=G__12225;chunk__12200=G__12226;count__12201=G__12227;i__12202=G__12228;continue}else{var vec__12212=cljs.core.first(seq__12199__$1);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12212,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12212,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,v,k);var G__12229=cljs.core.next(seq__12199__$1);var G__12230=null;var G__12231=0;var G__12232=
0;seq__12199=G__12229;chunk__12200=G__12230;count__12201=G__12231;i__12202=G__12232;continue}}else return null}break}};cljs.core.PersistentTreeMap.prototype.get=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};cljs.core.PersistentTreeMap.prototype.entries=function(){var self__=this;var coll=this;return cljs.core.es6_entries_iterator(cljs.core.seq(coll))};
cljs.core.PersistentTreeMap.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.PersistentTreeMap.prototype.keys=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.keys(coll))};cljs.core.PersistentTreeMap.prototype.values=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.vals(coll))};
cljs.core.PersistentTreeMap.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentTreeMap.prototype.entry_at=function(k){var self__=this;var coll=this;var t=self__.tree;while(true){if(!(t==null)){var c=function(){var G__12215=k;var G__12216=t.key;return self__.comp.cljs$core$IFn$_invoke$arity$2?self__.comp.cljs$core$IFn$_invoke$arity$2(G__12215,G__12216):self__.comp.call(null,G__12215,G__12216)}();if(c===0)return t;else if(c<0){var G__12233=t.left;t=G__12233;continue}else{var G__12234=t.right;t=G__12234;continue}}else return null;break}};
cljs.core.PersistentTreeMap.prototype.has=function(k){var self__=this;var coll=this;return cljs.core.contains_QMARK_(coll,k)};cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null)};cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;var n=coll__$1.entry_at(k);if(!(n==null))return n.val;else return not_found};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(coll,f,init){var self__=this;var coll__$1=this;if(!(self__.tree==null))return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree,f,init));else return init};cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash)};cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.cnt};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt>0)return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);else return null};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_unordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_map(coll__$1,other)};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.PersistentTreeMap(self__.comp,null,0,self__.meta,0)};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2=function(coll,k){var self__=this;var coll__$1=this;var found=[null];var t=cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);if(t==null)if(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,0)==null)return coll__$1;else return new cljs.core.PersistentTreeMap(self__.comp,null,0,self__.meta,null);else return new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),self__.cnt-1,self__.meta,null)};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,k,v){var self__=this;var coll__$1=this;var found=[null];var t=cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);if(t==null){var found_node=cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,0);if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val))return coll__$1;else return new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,
null)}else return new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),self__.cnt+1,self__.meta,null)};cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;return!(coll__$1.entry_at(k)==null)};cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.cnt>0)return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);else return null};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,new_meta,self__.__hash)};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,entry){var self__=this;var coll__$1=this;if(cljs.core.vector_QMARK_(entry))return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,1));else{var ret=coll__$1;var es=cljs.core.seq(entry);while(true){if(es==null)return ret;else{var e=cljs.core.first(es);if(cljs.core.vector_QMARK_(e)){var G__12235=cljs.core._assoc(ret,
cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,1));var G__12236=cljs.core.next(es);ret=G__12235;es=G__12236;continue}else throw new Error("conj on a map takes map entries or seqables of map entries");}break}}};
cljs.core.PersistentTreeMap.prototype.call=function(){var G__12237=null;var G__12237__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__12237__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__12237=function(self__,k,not_found){switch(arguments.length){case 2:return G__12237__2.call(this,self__,k);case 3:return G__12237__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12237.cljs$core$IFn$_invoke$arity$2=G__12237__2;G__12237.cljs$core$IFn$_invoke$arity$3=G__12237__3;return G__12237}();cljs.core.PersistentTreeMap.prototype.apply=function(self__,args12198){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12198)))};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2=function(coll,ascending_QMARK_){var self__=this;var coll__$1=this;if(self__.cnt>0)return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);else return null};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3=function(coll,k,ascending_QMARK_){var self__=this;var coll__$1=this;if(self__.cnt>0){var stack=null;var t=self__.tree;while(true){if(!(t==null)){var c=function(){var G__12219=k;var G__12220=t.key;return self__.comp.cljs$core$IFn$_invoke$arity$2?self__.comp.cljs$core$IFn$_invoke$arity$2(G__12219,G__12220):self__.comp.call(null,G__12219,G__12220)}();if(c===0)return new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,
t),ascending_QMARK_,-1,null);else if(cljs.core.truth_(ascending_QMARK_))if(c<0){var G__12238=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);var G__12239=t.left;stack=G__12238;t=G__12239;continue}else{var G__12240=stack;var G__12241=t.right;stack=G__12240;t=G__12241;continue}else if(c>0){var G__12242=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);var G__12243=t.right;stack=G__12242;t=G__12243;continue}else{var G__12244=stack;var G__12245=t.left;stack=G__12244;t=G__12245;continue}}else if(stack==
null)return null;else return new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,-1,null);break}}else return null};cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2=function(coll,entry){var self__=this;var coll__$1=this;return cljs.core.key(entry)};cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.comp};
cljs.core.PersistentTreeMap.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"tree","tree",1444219499,null),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"mutable","mutable",875778266),true],null))],null)};cljs.core.PersistentTreeMap.cljs$lang$type=true;cljs.core.PersistentTreeMap.cljs$lang$ctorStr="cljs.core/PersistentTreeMap";cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentTreeMap")};
cljs.core.__GT_PersistentTreeMap=function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){return new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash)};cljs.core.PersistentTreeMap.EMPTY=new cljs.core.PersistentTreeMap(cljs.core.compare,null,0,null,cljs.core.empty_unordered_hash);var G__12246_12249=cljs.core.PersistentTreeMap.prototype;var G__12247_12250=cljs.core.ITER_SYMBOL;
var G__12248_12251=function(G__12246_12249,G__12247_12250){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12246_12249,G__12247_12250);goog.object.set(G__12246_12249,G__12247_12250,G__12248_12251);
cljs.core.hash_map=function cljs$core$hash_map(var_args){var args__9117__auto__=[];var len__9107__auto___12253=arguments.length;var i__9108__auto___12254=0;while(true){if(i__9108__auto___12254<len__9107__auto___12253){args__9117__auto__.push(arguments[i__9108__auto___12254]);var G__12255=i__9108__auto___12254+1;i__9108__auto___12254=G__12255;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic=function(keyvals){var in$=cljs.core.seq(keyvals);var out=cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);while(true){if(in$){var G__12256=cljs.core.nnext(in$);var G__12257=cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));in$=G__12256;out=G__12257;continue}else return cljs.core.persistent_BANG_(out);break}};cljs.core.hash_map.cljs$lang$maxFixedArity=0;
cljs.core.hash_map.cljs$lang$applyTo=function(seq12252){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12252))};
cljs.core.array_map=function cljs$core$array_map(var_args){var args__9117__auto__=[];var len__9107__auto___12259=arguments.length;var i__9108__auto___12260=0;while(true){if(i__9108__auto___12260<len__9107__auto___12259){args__9117__auto__.push(arguments[i__9108__auto___12260]);var G__12261=i__9108__auto___12260+1;i__9108__auto___12260=G__12261;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic=function(keyvals){var arr=keyvals instanceof cljs.core.IndexedSeq&&keyvals.i===0?keyvals.arr:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr)};cljs.core.array_map.cljs$lang$maxFixedArity=0;cljs.core.array_map.cljs$lang$applyTo=function(seq12258){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12258))};
cljs.core.obj_map=function cljs$core$obj_map(var_args){var args__9117__auto__=[];var len__9107__auto___12268=arguments.length;var i__9108__auto___12269=0;while(true){if(i__9108__auto___12269<len__9107__auto___12268){args__9117__auto__.push(arguments[i__9108__auto___12269]);var G__12270=i__9108__auto___12269+1;i__9108__auto___12269=G__12270;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic=function(keyvals){var ks=[];var obj={};var kvs=cljs.core.seq(keyvals);while(true){if(kvs){ks.push(cljs.core.first(kvs));var G__12265_12271=obj;var G__12266_12272=cljs.core.first(kvs);var G__12267_12273=cljs.core.second(kvs);goog.object.set(G__12265_12271,G__12266_12272,G__12267_12273);var G__12274=cljs.core.nnext(kvs);kvs=G__12274;continue}else return cljs.core.ObjMap.fromObject(ks,obj);break}};cljs.core.obj_map.cljs$lang$maxFixedArity=0;
cljs.core.obj_map.cljs$lang$applyTo=function(seq12262){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12262))};
cljs.core.sorted_map=function cljs$core$sorted_map(var_args){var args__9117__auto__=[];var len__9107__auto___12276=arguments.length;var i__9108__auto___12277=0;while(true){if(i__9108__auto___12277<len__9107__auto___12276){args__9117__auto__.push(arguments[i__9108__auto___12277]);var G__12278=i__9108__auto___12277+1;i__9108__auto___12277=G__12278;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic=function(keyvals){var in$=cljs.core.seq(keyvals);var out=cljs.core.PersistentTreeMap.EMPTY;while(true){if(in$){var G__12279=cljs.core.nnext(in$);var G__12280=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));in$=G__12279;out=G__12280;continue}else return out;break}};cljs.core.sorted_map.cljs$lang$maxFixedArity=0;
cljs.core.sorted_map.cljs$lang$applyTo=function(seq12275){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12275))};
cljs.core.sorted_map_by=function cljs$core$sorted_map_by(var_args){var args__9117__auto__=[];var len__9107__auto___12283=arguments.length;var i__9108__auto___12284=0;while(true){if(i__9108__auto___12284<len__9107__auto___12283){args__9117__auto__.push(arguments[i__9108__auto___12284]);var G__12285=i__9108__auto___12284+1;i__9108__auto___12284=G__12285;continue}else;break}var argseq__9118__auto__=1<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(1),0,null):null;return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
argseq__9118__auto__)};cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic=function(comparator,keyvals){var in$=cljs.core.seq(keyvals);var out=new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,0,null,0);while(true){if(in$){var G__12286=cljs.core.nnext(in$);var G__12287=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));in$=G__12286;out=G__12287;continue}else return out;break}};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity=1;cljs.core.sorted_map_by.cljs$lang$applyTo=function(seq12281){var G__12282=cljs.core.first(seq12281);var seq12281__$1=cljs.core.next(seq12281);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12282,seq12281__$1)};cljs.core.KeySeq=function(mseq,_meta){this.mseq=mseq;this._meta=_meta;this.cljs$lang$protocol_mask$partition0$=32374988;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.KeySeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.KeySeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.KeySeq.prototype.indexOf=function(){var G__12290=null;var G__12290__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12290__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12290=function(x,start){switch(arguments.length){case 1:return G__12290__1.call(this,x);case 2:return G__12290__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__12290.cljs$core$IFn$_invoke$arity$1=G__12290__1;G__12290.cljs$core$IFn$_invoke$arity$2=G__12290__2;return G__12290}();
cljs.core.KeySeq.prototype.lastIndexOf=function(){var G__12291=null;var G__12291__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12291__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12291=function(x,start){switch(arguments.length){case 1:return G__12291__1.call(this,x);case 2:return G__12291__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12291.cljs$core$IFn$_invoke$arity$1=G__12291__1;G__12291.cljs$core$IFn$_invoke$arity$2=G__12291__2;return G__12291}();cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__._meta};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;var nseq=(!(self__.mseq==null)?self__.mseq.cljs$lang$protocol_mask$partition0$&128||cljs.core.PROTOCOL_SENTINEL===self__.mseq.cljs$core$INext$?true:!self__.mseq.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false:cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq);
if(nseq==null)return null;else return new cljs.core.KeySeq(nseq,null)};cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll(coll__$1)};cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;var me=self__.mseq.cljs$core$ISeq$_first$arity$1(null);return me.cljs$core$IMapEntry$_key$arity$1(null)};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;var nseq=(!(self__.mseq==null)?self__.mseq.cljs$lang$protocol_mask$partition0$&128||cljs.core.PROTOCOL_SENTINEL===self__.mseq.cljs$core$INext$?true:!self__.mseq.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false:cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq);
if(!(nseq==null))return new cljs.core.KeySeq(nseq,null);else return cljs.core.List.EMPTY};cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__._meta)return coll__$1;else return new cljs.core.KeySeq(self__.mseq,new_meta)};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.KeySeq.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"mseq","mseq",1602647196,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"not-native","not-native",-236392494,null)],null)),new cljs.core.Symbol(null,"_meta","_meta",-1716892533,null)],null)};cljs.core.KeySeq.cljs$lang$type=true;
cljs.core.KeySeq.cljs$lang$ctorStr="cljs.core/KeySeq";cljs.core.KeySeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/KeySeq")};cljs.core.__GT_KeySeq=function cljs$core$__GT_KeySeq(mseq,_meta){return new cljs.core.KeySeq(mseq,_meta)};var G__12292_12295=cljs.core.KeySeq.prototype;var G__12293_12296=cljs.core.ITER_SYMBOL;
var G__12294_12297=function(G__12292_12295,G__12293_12296){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12292_12295,G__12293_12296);goog.object.set(G__12292_12295,G__12293_12296,G__12294_12297);cljs.core.keys=function cljs$core$keys(map){var temp__4657__auto__=cljs.core.seq(map);if(temp__4657__auto__){var mseq=temp__4657__auto__;return new cljs.core.KeySeq(mseq,null)}else return null};cljs.core.key=function cljs$core$key(map_entry){return cljs.core._key(map_entry)};
cljs.core.ValSeq=function(mseq,_meta){this.mseq=mseq;this._meta=_meta;this.cljs$lang$protocol_mask$partition0$=32374988;this.cljs$lang$protocol_mask$partition1$=0};cljs.core.ValSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.ValSeq.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.ValSeq.prototype.indexOf=function(){var G__12300=null;var G__12300__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12300__2=function(x,start){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12300=function(x,start){switch(arguments.length){case 1:return G__12300__1.call(this,x);case 2:return G__12300__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__12300.cljs$core$IFn$_invoke$arity$1=G__12300__1;G__12300.cljs$core$IFn$_invoke$arity$2=G__12300__2;return G__12300}();
cljs.core.ValSeq.prototype.lastIndexOf=function(){var G__12301=null;var G__12301__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12301__2=function(x,start){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start)};G__12301=function(x,start){switch(arguments.length){case 1:return G__12301__1.call(this,x);case 2:return G__12301__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12301.cljs$core$IFn$_invoke$arity$1=G__12301__1;G__12301.cljs$core$IFn$_invoke$arity$2=G__12301__2;return G__12301}();cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__._meta};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1=function(coll){var self__=this;var coll__$1=this;var nseq=(!(self__.mseq==null)?self__.mseq.cljs$lang$protocol_mask$partition0$&128||cljs.core.PROTOCOL_SENTINEL===self__.mseq.cljs$core$INext$?true:!self__.mseq.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false:cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq);
if(nseq==null)return null;else return new cljs.core.ValSeq(nseq,null)};cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll(coll__$1)};cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_sequential(coll__$1,other)};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.List.EMPTY};cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1)};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1)};cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;var me=self__.mseq.cljs$core$ISeq$_first$arity$1(null);return me.cljs$core$IMapEntry$_val$arity$1(null)};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(coll){var self__=this;var coll__$1=this;var nseq=(!(self__.mseq==null)?self__.mseq.cljs$lang$protocol_mask$partition0$&128||cljs.core.PROTOCOL_SENTINEL===self__.mseq.cljs$core$INext$?true:!self__.mseq.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false:cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq);
if(!(nseq==null))return new cljs.core.ValSeq(nseq,null);else return cljs.core.List.EMPTY};cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return coll__$1};cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__._meta)return coll__$1;else return new cljs.core.ValSeq(self__.mseq,new_meta)};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons(o,coll__$1)};
cljs.core.ValSeq.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"mseq","mseq",1602647196,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"not-native","not-native",-236392494,null)],null)),new cljs.core.Symbol(null,"_meta","_meta",-1716892533,null)],null)};cljs.core.ValSeq.cljs$lang$type=true;
cljs.core.ValSeq.cljs$lang$ctorStr="cljs.core/ValSeq";cljs.core.ValSeq.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ValSeq")};cljs.core.__GT_ValSeq=function cljs$core$__GT_ValSeq(mseq,_meta){return new cljs.core.ValSeq(mseq,_meta)};var G__12302_12305=cljs.core.ValSeq.prototype;var G__12303_12306=cljs.core.ITER_SYMBOL;
var G__12304_12307=function(G__12302_12305,G__12303_12306){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12302_12305,G__12303_12306);goog.object.set(G__12302_12305,G__12303_12306,G__12304_12307);cljs.core.vals=function cljs$core$vals(map){var temp__4657__auto__=cljs.core.seq(map);if(temp__4657__auto__){var mseq=temp__4657__auto__;return new cljs.core.ValSeq(mseq,null)}else return null};cljs.core.val=function cljs$core$val(map_entry){return cljs.core._val(map_entry)};
cljs.core.merge=function cljs$core$merge(var_args){var args__9117__auto__=[];var len__9107__auto___12311=arguments.length;var i__9108__auto___12312=0;while(true){if(i__9108__auto___12312<len__9107__auto___12311){args__9117__auto__.push(arguments[i__9108__auto___12312]);var G__12313=i__9108__auto___12312+1;i__9108__auto___12312=G__12313;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic=function(maps){if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps)))return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__12308_SHARP_,p2__12309_SHARP_){return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function(){var or__7908__auto__=p1__12308_SHARP_;if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.PersistentArrayMap.EMPTY}(),p2__12309_SHARP_)},maps);else return null};
cljs.core.merge.cljs$lang$maxFixedArity=0;cljs.core.merge.cljs$lang$applyTo=function(seq12310){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12310))};
cljs.core.merge_with=function cljs$core$merge_with(var_args){var args__9117__auto__=[];var len__9107__auto___12318=arguments.length;var i__9108__auto___12319=0;while(true){if(i__9108__auto___12319<len__9107__auto___12318){args__9117__auto__.push(arguments[i__9108__auto___12319]);var G__12320=i__9108__auto___12319+1;i__9108__auto___12319=G__12320;continue}else;break}var argseq__9118__auto__=1<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(1),0,null):null;return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
argseq__9118__auto__)};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic=function(f,maps){if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){var merge_entry=function(m,e){var k=cljs.core.key(e);var v=cljs.core.val(e);if(cljs.core.contains_QMARK_(m,k))return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,function(){var G__12316=cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);var G__12317=v;return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__12316,G__12317):f.call(null,G__12316,
G__12317)}());else return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v)};var merge2=function(merge_entry){return function(m1,m2){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,function(){var or__7908__auto__=m1;if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.PersistentArrayMap.EMPTY}(),cljs.core.seq(m2))}}(merge_entry);return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps)}else return null};
cljs.core.merge_with.cljs$lang$maxFixedArity=1;cljs.core.merge_with.cljs$lang$applyTo=function(seq12314){var G__12315=cljs.core.first(seq12314);var seq12314__$1=cljs.core.next(seq12314);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12315,seq12314__$1)};
cljs.core.select_keys=function cljs$core$select_keys(map,keyseq){var ret=cljs.core.PersistentArrayMap.EMPTY;var keys=cljs.core.seq(keyseq);while(true){if(keys){var key=cljs.core.first(keys);var entry=cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));var G__12321=cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,
key,entry):ret;var G__12322=cljs.core.next(keys);ret=G__12321;keys=G__12322;continue}else return cljs.core._with_meta(ret,cljs.core.meta(map));break}};cljs.core.HashSetIter=function(iter){this.iter=iter};cljs.core.HashSetIter.prototype.hasNext=function(){var self__=this;var _=this;return self__.iter.hasNext()};cljs.core.HashSetIter.prototype.next=function(){var self__=this;var _=this;if(self__.iter.hasNext())return self__.iter.next().key;else throw new Error("No such element");};
cljs.core.HashSetIter.prototype.remove=function(){var self__=this;var _=this;return new Error("Unsupported operation")};cljs.core.HashSetIter.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"iter","iter",-1346195486,null)],null)};cljs.core.HashSetIter.cljs$lang$type=true;cljs.core.HashSetIter.cljs$lang$ctorStr="cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/HashSetIter")};cljs.core.__GT_HashSetIter=function cljs$core$__GT_HashSetIter(iter){return new cljs.core.HashSetIter(iter)};cljs.core.PersistentHashSet=function(meta,hash_map,__hash){this.meta=meta;this.hash_map=hash_map;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=15077647;this.cljs$lang$protocol_mask$partition1$=139268};
cljs.core.PersistentHashSet.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.PersistentHashSet.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};cljs.core.PersistentHashSet.prototype.keys=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.seq(coll))};cljs.core.PersistentHashSet.prototype.entries=function(){var self__=this;var coll=this;return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll))};
cljs.core.PersistentHashSet.prototype.values=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.seq(coll))};cljs.core.PersistentHashSet.prototype.has=function(k){var self__=this;var coll=this;return cljs.core.contains_QMARK_(coll,k)};
cljs.core.PersistentHashSet.prototype.forEach=function(f){var self__=this;var coll=this;var seq__12326=cljs.core.seq(coll);var chunk__12327=null;var count__12328=0;var i__12329=0;while(true){if(i__12329<count__12328){var vec__12336=chunk__12327.cljs$core$IIndexed$_nth$arity$2(null,i__12329);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12336,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12336,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,
v,k);var G__12345=seq__12326;var G__12346=chunk__12327;var G__12347=count__12328;var G__12348=i__12329+1;seq__12326=G__12345;chunk__12327=G__12346;count__12328=G__12347;i__12329=G__12348;continue}else{var temp__4657__auto__=cljs.core.seq(seq__12326);if(temp__4657__auto__){var seq__12326__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__12326__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__12326__$1);var G__12349=cljs.core.chunk_rest(seq__12326__$1);var G__12350=c__8771__auto__;var G__12351=
cljs.core.count(c__8771__auto__);var G__12352=0;seq__12326=G__12349;chunk__12327=G__12350;count__12328=G__12351;i__12329=G__12352;continue}else{var vec__12339=cljs.core.first(seq__12326__$1);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12339,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12339,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,v,k);var G__12353=cljs.core.next(seq__12326__$1);var G__12354=null;var G__12355=0;var G__12356=
0;seq__12326=G__12353;chunk__12327=G__12354;count__12328=G__12355;i__12329=G__12356;continue}}else return null}break}};cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,v){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null)};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,v,not_found){var self__=this;var coll__$1=this;var temp__4655__auto__=cljs.core._find(self__.hash_map,v);if(cljs.core.truth_(temp__4655__auto__)){var entry=temp__4655__auto__;return cljs.core.key(entry)}else return not_found};cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map))};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash)};cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._count(self__.hash_map)};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_unordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;var and__7893__auto__=cljs.core.set_QMARK_(other);if(and__7893__auto__){var and__7893__auto____$1=cljs.core.count(coll__$1)===cljs.core.count(other);if(and__7893__auto____$1)try{return cljs.core.reduce_kv(function(and__7893__auto____$1,and__7893__auto__,coll__$1){return function(p1__12324_SHARP_,p2__12323_SHARP_){var or__7908__auto__=cljs.core.contains_QMARK_(other,p2__12323_SHARP_);
if(or__7908__auto__)return or__7908__auto__;else return cljs.core.reduced(false)}}(and__7893__auto____$1,and__7893__auto__,coll__$1),true,self__.hash_map)}catch(e12344){if(e12344 instanceof Error){var ex=e12344;return false}else throw e12344;}else return and__7893__auto____$1}else return and__7893__auto__};cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map))};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta)};cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2=function(coll,v){var self__=this;var coll__$1=this;return new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null)};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.keys(self__.hash_map)};cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentHashSet(new_meta,self__.hash_map,self__.__hash)};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null)};
cljs.core.PersistentHashSet.prototype.call=function(){var G__12357=null;var G__12357__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__12357__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__12357=function(self__,k,not_found){switch(arguments.length){case 2:return G__12357__2.call(this,self__,k);case 3:return G__12357__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12357.cljs$core$IFn$_invoke$arity$2=G__12357__2;G__12357.cljs$core$IFn$_invoke$arity$3=G__12357__3;return G__12357}();cljs.core.PersistentHashSet.prototype.apply=function(self__,args12325){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12325)))};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentHashSet.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"hash-map","hash-map",-439030950,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.PersistentHashSet.cljs$lang$type=true;cljs.core.PersistentHashSet.cljs$lang$ctorStr="cljs.core/PersistentHashSet";cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentHashSet")};cljs.core.__GT_PersistentHashSet=function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){return new cljs.core.PersistentHashSet(meta,hash_map,__hash)};
cljs.core.PersistentHashSet.EMPTY=new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray=function(items,no_clone){var len=items.length;if(len<=cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD){var arr=no_clone?items:cljs.core.aclone(items);var i=0;var out=cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);while(true){if(i<len){var G__12358=i+1;var G__12359=cljs.core._assoc_BANG_(out,items[i],null);i=G__12358;out=G__12359;continue}else return new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null);break}}else{var i=0;var out=
cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);while(true){if(i<len){var G__12360=i+1;var G__12361=cljs.core._conj_BANG_(out,items[i]);i=G__12360;out=G__12361;continue}else return cljs.core._persistent_BANG_(out);break}}};
cljs.core.PersistentHashSet.createWithCheck=function(items){var len=items.length;var t=cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);var n__8876__auto___12362=len;var i_12363=0;while(true){if(i_12363<n__8876__auto___12362){cljs.core._conj_BANG_(t,items[i_12363]);if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t),i_12363+1));else throw new Error(["Duplicate key: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_12363])].join(""));var G__12364=i_12363+1;i_12363=G__12364;
continue}else;break}return cljs.core._persistent_BANG_(t)};cljs.core.PersistentHashSet.createAsIfByAssoc=function(items){var len=items.length;var t=cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);var n__8876__auto___12365=len;var i_12366=0;while(true){if(i_12366<n__8876__auto___12365){cljs.core._conj_BANG_(t,items[i_12366]);var G__12367=i_12366+1;i_12366=G__12367;continue}else;break}return cljs.core._persistent_BANG_(t)};var G__12368_12371=cljs.core.PersistentHashSet.prototype;
var G__12369_12372=cljs.core.ITER_SYMBOL;var G__12370_12373=function(G__12368_12371,G__12369_12372){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12368_12371,G__12369_12372);goog.object.set(G__12368_12371,G__12369_12372,G__12370_12373);cljs.core.TransientHashSet=function(transient_map){this.transient_map=transient_map;this.cljs$lang$protocol_mask$partition1$=136;this.cljs$lang$protocol_mask$partition0$=259};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2=function(tcoll,o){var self__=this;var tcoll__$1=this;self__.transient_map=cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);return tcoll__$1};cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;return new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null)};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2=function(tcoll,v){var self__=this;var tcoll__$1=this;self__.transient_map=cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);return tcoll__$1};cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;return cljs.core.count(self__.transient_map)};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2=function(tcoll,v){var self__=this;var tcoll__$1=this;return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null)};cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3=function(tcoll,v,not_found){var self__=this;var tcoll__$1=this;if(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel)===cljs.core.lookup_sentinel)return not_found;else return v};
cljs.core.TransientHashSet.prototype.call=function(){var G__12375=null;var G__12375__2=function(self__,k){var self__=this;var self____$1=this;var tcoll=self____$1;if(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel)===cljs.core.lookup_sentinel)return null;else return k};var G__12375__3=function(self__,k,not_found){var self__=this;var self____$1=this;var tcoll=self____$1;if(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel)===
cljs.core.lookup_sentinel)return not_found;else return k};G__12375=function(self__,k,not_found){switch(arguments.length){case 2:return G__12375__2.call(this,self__,k);case 3:return G__12375__3.call(this,self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12375.cljs$core$IFn$_invoke$arity$2=G__12375__2;G__12375.cljs$core$IFn$_invoke$arity$3=G__12375__3;return G__12375}();
cljs.core.TransientHashSet.prototype.apply=function(self__,args12374){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12374)))};cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var tcoll=this;if(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel)===cljs.core.lookup_sentinel)return null;else return k};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var tcoll=this;if(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel)===cljs.core.lookup_sentinel)return not_found;else return k};
cljs.core.TransientHashSet.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"transient-map","transient-map",351764893,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.TransientHashSet.cljs$lang$type=true;cljs.core.TransientHashSet.cljs$lang$ctorStr="cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/TransientHashSet")};cljs.core.__GT_TransientHashSet=function cljs$core$__GT_TransientHashSet(transient_map){return new cljs.core.TransientHashSet(transient_map)};
cljs.core.PersistentTreeSet=function(meta,tree_map,__hash){this.meta=meta;this.tree_map=tree_map;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=417730831;this.cljs$lang$protocol_mask$partition1$=8192};cljs.core.PersistentTreeSet.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.PersistentTreeSet.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.PersistentTreeSet.prototype.keys=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.seq(coll))};cljs.core.PersistentTreeSet.prototype.entries=function(){var self__=this;var coll=this;return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll))};cljs.core.PersistentTreeSet.prototype.values=function(){var self__=this;var coll=this;return cljs.core.es6_iterator(cljs.core.seq(coll))};
cljs.core.PersistentTreeSet.prototype.has=function(k){var self__=this;var coll=this;return cljs.core.contains_QMARK_(coll,k)};
cljs.core.PersistentTreeSet.prototype.forEach=function(f){var self__=this;var coll=this;var seq__12379=cljs.core.seq(coll);var chunk__12380=null;var count__12381=0;var i__12382=0;while(true){if(i__12382<count__12381){var vec__12389=chunk__12380.cljs$core$IIndexed$_nth$arity$2(null,i__12382);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12389,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12389,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,
v,k);var G__12398=seq__12379;var G__12399=chunk__12380;var G__12400=count__12381;var G__12401=i__12382+1;seq__12379=G__12398;chunk__12380=G__12399;count__12381=G__12400;i__12382=G__12401;continue}else{var temp__4657__auto__=cljs.core.seq(seq__12379);if(temp__4657__auto__){var seq__12379__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__12379__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__12379__$1);var G__12402=cljs.core.chunk_rest(seq__12379__$1);var G__12403=c__8771__auto__;var G__12404=
cljs.core.count(c__8771__auto__);var G__12405=0;seq__12379=G__12402;chunk__12380=G__12403;count__12381=G__12404;i__12382=G__12405;continue}else{var vec__12392=cljs.core.first(seq__12379__$1);var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12392,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12392,1,null);f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(v,k):f.call(null,v,k);var G__12406=cljs.core.next(seq__12379__$1);var G__12407=null;var G__12408=0;var G__12409=
0;seq__12379=G__12406;chunk__12380=G__12407;count__12381=G__12408;i__12382=G__12409;continue}}else return null}break}};cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,v){var self__=this;var coll__$1=this;return coll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null)};cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,v,not_found){var self__=this;var coll__$1=this;var n=self__.tree_map.entry_at(v);if(!(n==null))return n.key;else return not_found};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash)};cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.count(self__.tree_map)};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1=function(coll){var self__=this;var coll__$1=this;if(cljs.core.count(self__.tree_map)>0)return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));else return null};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_unordered_coll(coll__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;var and__7893__auto__=cljs.core.set_QMARK_(other);if(and__7893__auto__){var and__7893__auto____$1=cljs.core.count(coll__$1)===cljs.core.count(other);if(and__7893__auto____$1)try{return cljs.core.reduce_kv(function(and__7893__auto____$1,and__7893__auto__,coll__$1){return function(p1__12377_SHARP_,p2__12376_SHARP_){var or__7908__auto__=cljs.core.contains_QMARK_(other,p2__12376_SHARP_);
if(or__7908__auto__)return or__7908__auto__;else return cljs.core.reduced(false)}}(and__7893__auto____$1,and__7893__auto__,coll__$1),true,self__.tree_map)}catch(e12397){if(e12397 instanceof Error){var ex=e12397;return false}else throw e12397;}else return and__7893__auto____$1}else return and__7893__auto__};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),0)};cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2=function(coll,v){var self__=this;var coll__$1=this;return new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null)};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.keys(self__.tree_map)};cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs.core.PersistentTreeSet(new_meta,self__.tree_map,self__.__hash)};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null)};
cljs.core.PersistentTreeSet.prototype.call=function(){var G__12410=null;var G__12410__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};var G__12410__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};G__12410=function(self__,k,not_found){switch(arguments.length){case 2:return G__12410__2.call(this,self__,k);case 3:return G__12410__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__12410.cljs$core$IFn$_invoke$arity$2=G__12410__2;G__12410.cljs$core$IFn$_invoke$arity$3=G__12410__3;return G__12410}();cljs.core.PersistentTreeSet.prototype.apply=function(self__,args12378){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12378)))};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$2(null,k)};cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found)};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2=function(coll,ascending_QMARK_){var self__=this;var coll__$1=this;return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_))};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3=function(coll,k,ascending_QMARK_){var self__=this;var coll__$1=this;return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_))};cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2=function(coll,entry){var self__=this;var coll__$1=this;return entry};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core._comparator(self__.tree_map)};
cljs.core.PersistentTreeSet.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"tree-map","tree-map",1373073049,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.PersistentTreeSet.cljs$lang$type=true;cljs.core.PersistentTreeSet.cljs$lang$ctorStr="cljs.core/PersistentTreeSet";cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/PersistentTreeSet")};cljs.core.__GT_PersistentTreeSet=function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){return new cljs.core.PersistentTreeSet(meta,tree_map,__hash)};
cljs.core.PersistentTreeSet.EMPTY=new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash);var G__12411_12414=cljs.core.PersistentTreeSet.prototype;var G__12412_12415=cljs.core.ITER_SYMBOL;var G__12413_12416=function(G__12411_12414,G__12412_12415){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12411_12414,G__12412_12415);goog.object.set(G__12411_12414,G__12412_12415,G__12413_12416);
cljs.core.set_from_indexed_seq=function cljs$core$set_from_indexed_seq(iseq){var arr=iseq.arr;var ret=function(){var a__8869__auto__=arr;var l__8870__auto__=a__8869__auto__.length;var i=0;var res=cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);while(true){if(i<l__8870__auto__){var G__12417=i+1;var G__12418=cljs.core._conj_BANG_(res,arr[i]);i=G__12417;res=G__12418;continue}else return res;break}}();return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null)};
cljs.core.set=function cljs$core$set(coll){if(cljs.core.set_QMARK_(coll))return cljs.core.with_meta(coll,null);else{var in$=cljs.core.seq(coll);if(in$==null)return cljs.core.PersistentHashSet.EMPTY;else if(in$ instanceof cljs.core.IndexedSeq&&in$.i===0)return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);else{var in$__$1=in$;var out=cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);while(true){if(!(in$__$1==null)){var G__12419=cljs.core.next(in$__$1);var G__12420=cljs.core._conj_BANG_(out,
cljs.core._first(in$__$1));in$__$1=G__12419;out=G__12420;continue}else return cljs.core.persistent_BANG_(out);break}}}};
cljs.core.hash_set=function cljs$core$hash_set(var_args){var G__12423=arguments.length;switch(G__12423){case 0:return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();break;default:var args_arr__9132__auto__=[];var len__9107__auto___12425=arguments.length;var i__9108__auto___12426=0;while(true){if(i__9108__auto___12426<len__9107__auto___12425){args_arr__9132__auto__.push(arguments[i__9108__auto___12426]);var G__12427=i__9108__auto___12426+1;i__9108__auto___12426=G__12427;continue}else;break}var argseq__9133__auto__=
new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(0),0,null);return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__9133__auto__)}};cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.PersistentHashSet.EMPTY};cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic=function(keys){return cljs.core.set(keys)};cljs.core.hash_set.cljs$lang$applyTo=function(seq12422){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12422))};
cljs.core.hash_set.cljs$lang$maxFixedArity=0;
cljs.core.sorted_set=function cljs$core$sorted_set(var_args){var args__9117__auto__=[];var len__9107__auto___12429=arguments.length;var i__9108__auto___12430=0;while(true){if(i__9108__auto___12430<len__9107__auto___12429){args__9117__auto__.push(arguments[i__9108__auto___12430]);var G__12431=i__9108__auto___12430+1;i__9108__auto___12430=G__12431;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic=function(keys){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys)};cljs.core.sorted_set.cljs$lang$maxFixedArity=0;cljs.core.sorted_set.cljs$lang$applyTo=function(seq12428){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12428))};
cljs.core.sorted_set_by=function cljs$core$sorted_set_by(var_args){var args__9117__auto__=[];var len__9107__auto___12434=arguments.length;var i__9108__auto___12435=0;while(true){if(i__9108__auto___12435<len__9107__auto___12434){args__9117__auto__.push(arguments[i__9108__auto___12435]);var G__12436=i__9108__auto___12435+1;i__9108__auto___12435=G__12436;continue}else;break}var argseq__9118__auto__=1<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(1),0,null):null;return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
argseq__9118__auto__)};cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic=function(comparator,keys){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),0),keys)};cljs.core.sorted_set_by.cljs$lang$maxFixedArity=1;
cljs.core.sorted_set_by.cljs$lang$applyTo=function(seq12432){var G__12433=cljs.core.first(seq12432);var seq12432__$1=cljs.core.next(seq12432);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12433,seq12432__$1)};
cljs.core.replace=function cljs$core$replace(var_args){var G__12440=arguments.length;switch(G__12440){case 1:return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1=function(smap){return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__12437_SHARP_){var temp__4655__auto__=cljs.core.find(smap,p1__12437_SHARP_);if(cljs.core.truth_(temp__4655__auto__)){var e=temp__4655__auto__;return cljs.core.val(e)}else return p1__12437_SHARP_})};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2=function(smap,coll){if(cljs.core.vector_QMARK_(coll)){var n=cljs.core.count(coll);return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n){return function(v,i){var temp__4655__auto__=cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));if(cljs.core.truth_(temp__4655__auto__)){var e=temp__4655__auto__;return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e))}else return v}}(n),coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,
cljs.core.iterate(cljs.core.inc,0)))}else return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__12438_SHARP_){var temp__4655__auto__=cljs.core.find(smap,p1__12438_SHARP_);if(cljs.core.truth_(temp__4655__auto__)){var e=temp__4655__auto__;return cljs.core.second(e)}else return p1__12438_SHARP_},coll)};cljs.core.replace.cljs$lang$maxFixedArity=2;
cljs.core.distinct=function cljs$core$distinct(var_args){var G__12443=arguments.length;switch(G__12443){case 0:return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0=function(){return function(rf){var seen=cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);return function(seen){return function(){var G__12454=null;var G__12454__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12454__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__12454__2=function(result,input){if(cljs.core.contains_QMARK_(cljs.core.deref(seen),
input))return result;else{seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input)}};G__12454=function(result,input){switch(arguments.length){case 0:return G__12454__0.call(this);case 1:return G__12454__1.call(this,result);case 2:return G__12454__2.call(this,result,input)}throw new Error("Invalid arity: "+
arguments.length);};G__12454.cljs$core$IFn$_invoke$arity$0=G__12454__0;G__12454.cljs$core$IFn$_invoke$arity$1=G__12454__1;G__12454.cljs$core$IFn$_invoke$arity$2=G__12454__2;return G__12454}()}(seen)}};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1=function(coll){var step=function cljs$core$step(xs,seen){return new cljs.core.LazySeq(null,function(){var fexpr__12448=function(p__12449,seen__$1){while(true){var vec__12450=p__12449;var f=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12450,0,null);var xs__$1=vec__12450;var temp__4657__auto__=cljs.core.seq(xs__$1);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.contains_QMARK_(seen__$1,f)){var G__12455=cljs.core.rest(s);var G__12456=
seen__$1;p__12449=G__12455;seen__$1=G__12456;continue}else return cljs.core.cons(f,cljs$core$step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)))}else return null;break}};return fexpr__12448(xs,seen)},null,null)};return step(coll,cljs.core.PersistentHashSet.EMPTY)};cljs.core.distinct.cljs$lang$maxFixedArity=1;
cljs.core.butlast=function cljs$core$butlast(s){var ret=cljs.core.PersistentVector.EMPTY;var s__$1=s;while(true){if(cljs.core.next(s__$1)){var G__12457=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));var G__12458=cljs.core.next(s__$1);ret=G__12457;s__$1=G__12458;continue}else return cljs.core.seq(ret);break}};
cljs.core.name=function cljs$core$name(x){if(!(x==null)?x.cljs$lang$protocol_mask$partition1$&4096||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$INamed$?true:false:false)return cljs.core._name(x);else if(typeof x==="string")return x;else throw new Error(["Doesn't support name: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));};
cljs.core.zipmap=function cljs$core$zipmap(keys,vals){var map=cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);var ks=cljs.core.seq(keys);var vs=cljs.core.seq(vals);while(true){if(ks&&vs){var G__12460=cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));var G__12461=cljs.core.next(ks);var G__12462=cljs.core.next(vs);map=G__12460;ks=G__12461;vs=G__12462;continue}else return cljs.core.persistent_BANG_(map);break}};
cljs.core.max_key=function cljs$core$max_key(var_args){var G__12470=arguments.length;switch(G__12470){case 2:return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___12472=arguments.length;var i__9108__auto___12473=0;while(true){if(i__9108__auto___12473<len__9107__auto___12472){args_arr__9132__auto__.push(arguments[i__9108__auto___12473]);
var G__12474=i__9108__auto___12473+1;i__9108__auto___12473=G__12474;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};cljs.core.max_key.cljs$core$IFn$_invoke$arity$2=function(k,x){return x};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3=function(k,x,y){if((k.cljs$core$IFn$_invoke$arity$1?k.cljs$core$IFn$_invoke$arity$1(x):k.call(null,x))>(k.cljs$core$IFn$_invoke$arity$1?k.cljs$core$IFn$_invoke$arity$1(y):k.call(null,y)))return x;else return y};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic=function(k,x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12463_SHARP_,p2__12464_SHARP_){return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,p1__12463_SHARP_,p2__12464_SHARP_)},cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more)};
cljs.core.max_key.cljs$lang$applyTo=function(seq12466){var G__12467=cljs.core.first(seq12466);var seq12466__$1=cljs.core.next(seq12466);var G__12468=cljs.core.first(seq12466__$1);var seq12466__$2=cljs.core.next(seq12466__$1);var G__12469=cljs.core.first(seq12466__$2);var seq12466__$3=cljs.core.next(seq12466__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12467,G__12468,G__12469,seq12466__$3)};cljs.core.max_key.cljs$lang$maxFixedArity=3;
cljs.core.min_key=function cljs$core$min_key(var_args){var G__12482=arguments.length;switch(G__12482){case 2:return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___12484=arguments.length;var i__9108__auto___12485=0;while(true){if(i__9108__auto___12485<len__9107__auto___12484){args_arr__9132__auto__.push(arguments[i__9108__auto___12485]);
var G__12486=i__9108__auto___12485+1;i__9108__auto___12485=G__12486;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};cljs.core.min_key.cljs$core$IFn$_invoke$arity$2=function(k,x){return x};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3=function(k,x,y){if((k.cljs$core$IFn$_invoke$arity$1?k.cljs$core$IFn$_invoke$arity$1(x):k.call(null,x))<(k.cljs$core$IFn$_invoke$arity$1?k.cljs$core$IFn$_invoke$arity$1(y):k.call(null,y)))return x;else return y};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic=function(k,x,y,more){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12475_SHARP_,p2__12476_SHARP_){return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,p1__12475_SHARP_,p2__12476_SHARP_)},cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more)};
cljs.core.min_key.cljs$lang$applyTo=function(seq12478){var G__12479=cljs.core.first(seq12478);var seq12478__$1=cljs.core.next(seq12478);var G__12480=cljs.core.first(seq12478__$1);var seq12478__$2=cljs.core.next(seq12478__$1);var G__12481=cljs.core.first(seq12478__$2);var seq12478__$3=cljs.core.next(seq12478__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12479,G__12480,G__12481,seq12478__$3)};cljs.core.min_key.cljs$lang$maxFixedArity=3;
cljs.core.ArrayList=function(arr){this.arr=arr};cljs.core.ArrayList.prototype.add=function(x){var self__=this;var _=this;return self__.arr.push(x)};cljs.core.ArrayList.prototype.size=function(){var self__=this;var _=this;return self__.arr.length};cljs.core.ArrayList.prototype.clear=function(){var self__=this;var _=this;return self__.arr=[]};cljs.core.ArrayList.prototype.isEmpty=function(){var self__=this;var _=this;return self__.arr.length===0};
cljs.core.ArrayList.prototype.toArray=function(){var self__=this;var _=this;return self__.arr};cljs.core.ArrayList.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.ArrayList.cljs$lang$type=true;cljs.core.ArrayList.cljs$lang$ctorStr="cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/ArrayList")};cljs.core.__GT_ArrayList=function cljs$core$__GT_ArrayList(arr){return new cljs.core.ArrayList(arr)};cljs.core.array_list=function cljs$core$array_list(){return new cljs.core.ArrayList([])};
cljs.core.partition_all=function cljs$core$partition_all(var_args){var G__12488=arguments.length;switch(G__12488){case 1:return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1=function(n){return function(rf){var a=cljs.core.array_list();return function(a){return function(){var G__12490=null;var G__12490__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12490__1=function(result){var result__$1=cljs.core.truth_(a.isEmpty())?result:function(){var v=cljs.core.vec(a.toArray());a.clear();return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,v):
rf.call(null,result,v))}();return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result__$1):rf.call(null,result__$1)};var G__12490__2=function(result,input){a.add(input);if(n===a.size()){var v=cljs.core.vec(a.toArray());a.clear();return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,v):rf.call(null,result,v)}else return result};G__12490=function(result,input){switch(arguments.length){case 0:return G__12490__0.call(this);case 1:return G__12490__1.call(this,
result);case 2:return G__12490__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__12490.cljs$core$IFn$_invoke$arity$0=G__12490__0;G__12490.cljs$core$IFn$_invoke$arity$1=G__12490__1;G__12490.cljs$core$IFn$_invoke$arity$2=G__12490__2;return G__12490}()}(a)}};cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2=function(n,coll){return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll)};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3=function(n,step,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)))}else return null},null,null)};cljs.core.partition_all.cljs$lang$maxFixedArity=3;
cljs.core.take_while=function cljs$core$take_while(var_args){var G__12492=arguments.length;switch(G__12492){case 1:return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1=function(pred){return function(rf){return function(){var G__12495=null;var G__12495__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12495__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__12495__2=function(result,input){if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(input):
pred.call(null,input)))return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input);else return cljs.core.reduced(result)};G__12495=function(result,input){switch(arguments.length){case 0:return G__12495__0.call(this);case 1:return G__12495__1.call(this,result);case 2:return G__12495__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__12495.cljs$core$IFn$_invoke$arity$0=G__12495__0;G__12495.cljs$core$IFn$_invoke$arity$1=
G__12495__1;G__12495.cljs$core$IFn$_invoke$arity$2=G__12495__2;return G__12495}()}};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2=function(pred,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;if(cljs.core.truth_(function(){var G__12493=cljs.core.first(s);return pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(G__12493):pred.call(null,G__12493)}()))return cljs.core.cons(cljs.core.first(s),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
else return null}else return null},null,null)};cljs.core.take_while.cljs$lang$maxFixedArity=2;
cljs.core.mk_bound_fn=function cljs$core$mk_bound_fn(sc,test,key){return function(e){var comp=cljs.core._comparator(sc);var G__12496=function(){var G__12498=cljs.core._entry_key(sc,e);var G__12499=key;return comp.cljs$core$IFn$_invoke$arity$2?comp.cljs$core$IFn$_invoke$arity$2(G__12498,G__12499):comp.call(null,G__12498,G__12499)}();var G__12497=0;return test.cljs$core$IFn$_invoke$arity$2?test.cljs$core$IFn$_invoke$arity$2(G__12496,G__12497):test.call(null,G__12496,G__12497)}};
cljs.core.subseq=function cljs$core$subseq(var_args){var G__12501=arguments.length;switch(G__12501){case 3:return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 5:return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3=function(sc,test,key){var include=cljs.core.mk_bound_fn(sc,test,key);if(cljs.core.truth_(function(){var fexpr__12502=cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_,cljs.core._GT__EQ_]);return fexpr__12502.cljs$core$IFn$_invoke$arity$1?fexpr__12502.cljs$core$IFn$_invoke$arity$1(test):fexpr__12502.call(null,test)}())){var temp__4657__auto__=cljs.core._sorted_seq_from(sc,key,true);if(cljs.core.truth_(temp__4657__auto__)){var vec__12503=temp__4657__auto__;
var e=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12503,0,null);var s=vec__12503;if(cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1?include.cljs$core$IFn$_invoke$arity$1(e):include.call(null,e)))return s;else return cljs.core.next(s)}else return null}else return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true))};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5=function(sc,start_test,start_key,end_test,end_key){var temp__4657__auto__=cljs.core._sorted_seq_from(sc,start_key,true);if(cljs.core.truth_(temp__4657__auto__)){var vec__12506=temp__4657__auto__;var e=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12506,0,null);var s=vec__12506;return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),cljs.core.truth_(function(){var fexpr__12509=cljs.core.mk_bound_fn(sc,start_test,
start_key);return fexpr__12509.cljs$core$IFn$_invoke$arity$1?fexpr__12509.cljs$core$IFn$_invoke$arity$1(e):fexpr__12509.call(null,e)}())?s:cljs.core.next(s))}else return null};cljs.core.subseq.cljs$lang$maxFixedArity=5;
cljs.core.rsubseq=function cljs$core$rsubseq(var_args){var G__12512=arguments.length;switch(G__12512){case 3:return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 5:return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3=function(sc,test,key){var include=cljs.core.mk_bound_fn(sc,test,key);if(cljs.core.truth_(function(){var fexpr__12513=cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_,cljs.core._LT__EQ_]);return fexpr__12513.cljs$core$IFn$_invoke$arity$1?fexpr__12513.cljs$core$IFn$_invoke$arity$1(test):fexpr__12513.call(null,test)}())){var temp__4657__auto__=cljs.core._sorted_seq_from(sc,key,false);if(cljs.core.truth_(temp__4657__auto__)){var vec__12514=
temp__4657__auto__;var e=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12514,0,null);var s=vec__12514;if(cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1?include.cljs$core$IFn$_invoke$arity$1(e):include.call(null,e)))return s;else return cljs.core.next(s)}else return null}else return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false))};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5=function(sc,start_test,start_key,end_test,end_key){var temp__4657__auto__=cljs.core._sorted_seq_from(sc,end_key,false);if(cljs.core.truth_(temp__4657__auto__)){var vec__12517=temp__4657__auto__;var e=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12517,0,null);var s=vec__12517;return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),cljs.core.truth_(function(){var fexpr__12520=cljs.core.mk_bound_fn(sc,
end_test,end_key);return fexpr__12520.cljs$core$IFn$_invoke$arity$1?fexpr__12520.cljs$core$IFn$_invoke$arity$1(e):fexpr__12520.call(null,e)}())?s:cljs.core.next(s))}else return null};cljs.core.rsubseq.cljs$lang$maxFixedArity=5;cljs.core.RangeChunk=function(start,step,count){this.start=start;this.step=step;this.count=count;this.cljs$lang$protocol_mask$partition0$=82;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.count};cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.start};cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,i){var self__=this;var coll__$1=this;return self__.start+i*self__.step};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,i,not_found){var self__=this;var coll__$1=this;if(i>=0&&i<self__.count)return self__.start+i*self__.step;else return not_found};cljs.core.RangeChunk.prototype.cljs$core$IChunk$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.count<=1)throw new Error("-drop-first of empty chunk");else return new cljs.core.RangeChunk(self__.start+self__.step,self__.step,self__.count-1)};
cljs.core.RangeChunk.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"step","step",-1365547645,null),new cljs.core.Symbol(null,"count","count",-514511684,null)],null)};cljs.core.RangeChunk.cljs$lang$type=true;cljs.core.RangeChunk.cljs$lang$ctorStr="cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/RangeChunk")};cljs.core.__GT_RangeChunk=function cljs$core$__GT_RangeChunk(start,step,count){return new cljs.core.RangeChunk(start,step,count)};cljs.core.RangeIterator=function(i,end,step){this.i=i;this.end=end;this.step=step};
cljs.core.RangeIterator.prototype.hasNext=function(){var self__=this;var _=this;if(self__.step>0)return self__.i<self__.end;else return self__.i>self__.end};cljs.core.RangeIterator.prototype.next=function(){var self__=this;var _=this;var ret=self__.i;self__.i=self__.i+self__.step;return ret};
cljs.core.RangeIterator.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"end","end",1372345569,null),new cljs.core.Symbol(null,"step","step",-1365547645,null)],null)};cljs.core.RangeIterator.cljs$lang$type=true;
cljs.core.RangeIterator.cljs$lang$ctorStr="cljs.core/RangeIterator";cljs.core.RangeIterator.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/RangeIterator")};cljs.core.__GT_RangeIterator=function cljs$core$__GT_RangeIterator(i,end,step){return new cljs.core.RangeIterator(i,end,step)};
cljs.core.Range=function(meta,start,end,step,chunk,chunk_next,__hash){this.meta=meta;this.start=start;this.end=end;this.step=step;this.chunk=chunk;this.chunk_next=chunk_next;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=32375006;this.cljs$lang$protocol_mask$partition1$=140800};cljs.core.Range.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};
cljs.core.Range.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.Range.prototype.indexOf=function(){var G__12523=null;var G__12523__1=function(x){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,0)};var G__12523__2=function(x,start__$1){var self__=this;var coll=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1)};G__12523=function(x,start__$1){switch(arguments.length){case 1:return G__12523__1.call(this,x);case 2:return G__12523__2.call(this,x,start__$1)}throw new Error("Invalid arity: "+
arguments.length);};G__12523.cljs$core$IFn$_invoke$arity$1=G__12523__1;G__12523.cljs$core$IFn$_invoke$arity$2=G__12523__2;return G__12523}();
cljs.core.Range.prototype.lastIndexOf=function(){var G__12524=null;var G__12524__1=function(x){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll))};var G__12524__2=function(x,start__$1){var self__=this;var coll=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1)};G__12524=function(x,start__$1){switch(arguments.length){case 1:return G__12524__1.call(this,x);case 2:return G__12524__2.call(this,x,start__$1)}throw new Error("Invalid arity: "+
arguments.length);};G__12524.cljs$core$IFn$_invoke$arity$1=G__12524__1;G__12524.cljs$core$IFn$_invoke$arity$2=G__12524__2;return G__12524}();
cljs.core.Range.prototype.forceChunk=function(){var self__=this;var coll=this;if(self__.chunk==null){var count=coll.cljs$core$ICounted$_count$arity$1(null);if(count>32){self__.chunk_next=new cljs.core.Range(null,self__.start+self__.step*32,self__.end,self__.step,null,null,null);return self__.chunk=new cljs.core.RangeChunk(self__.start,self__.step,32)}else return self__.chunk=new cljs.core.RangeChunk(self__.start,self__.step,count)}else return null};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2=function(rng,n){var self__=this;var rng__$1=this;if(0<=n&&n<rng__$1.cljs$core$ICounted$_count$arity$1(null))return self__.start+n*self__.step;else if(0<=n&&self__.start>self__.end&&self__.step===0)return self__.start;else throw new Error("Index out of bounds");};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3=function(rng,n,not_found){var self__=this;var rng__$1=this;if(0<=n&&n<rng__$1.cljs$core$ICounted$_count$arity$1(null))return self__.start+n*self__.step;else if(0<=n&&self__.start>self__.end&&self__.step===0)return self__.start;else return not_found};cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.RangeIterator(self__.start,self__.end,self__.step)};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1=function(rng){var self__=this;var rng__$1=this;return self__.meta};cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash)};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1=function(rng){var self__=this;var rng__$1=this;if(self__.step>0)if(self__.start+self__.step<self__.end)return new cljs.core.Range(null,self__.start+self__.step,self__.end,self__.step,null,null,null);else return null;else if(self__.start+self__.step>self__.end)return new cljs.core.Range(null,self__.start+self__.step,self__.end,self__.step,null,null,null);else return null};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1=function(rng){var self__=this;var rng__$1=this;var G__12522=(self__.end-self__.start)/self__.step;return Math.ceil(G__12522)};cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1=function(rng){var self__=this;var rng__$1=this;var h__8368__auto__=self__.__hash;if(!(h__8368__auto__==null))return h__8368__auto__;else{var h__8368__auto____$1=cljs.core.hash_ordered_coll(rng__$1);self__.__hash=h__8368__auto____$1;return h__8368__auto____$1}};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2=function(rng,other){var self__=this;var rng__$1=this;return cljs.core.equiv_sequential(rng__$1,other)};cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(rng){var self__=this;var rng__$1=this;return cljs.core.List.EMPTY};cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2=function(rng,f){var self__=this;var rng__$1=this;return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f)};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3=function(rng,f,init){var self__=this;var rng__$1=this;var i=self__.start;var ret=init;while(true){if(self__.step>0?i<self__.end:i>self__.end){var ret__$1=f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(ret,i):f.call(null,ret,i);if(cljs.core.reduced_QMARK_(ret__$1))return cljs.core.deref(ret__$1);else{var G__12525=i+self__.step;var G__12526=ret__$1;i=G__12525;ret=G__12526;continue}}else return ret;break}};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1=function(rng){var self__=this;var rng__$1=this;return self__.start};cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1=function(rng){var self__=this;var rng__$1=this;var s=rng__$1.cljs$core$INext$_next$arity$1(null);if(s==null)return cljs.core.List.EMPTY;else return s};cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1=function(rng){var self__=this;var rng__$1=this;return rng__$1};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1=function(rng){var self__=this;var rng__$1=this;rng__$1.forceChunk();return self__.chunk};cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1=function(rng){var self__=this;var rng__$1=this;rng__$1.forceChunk();if(self__.chunk_next==null)return cljs.core.List.EMPTY;else return self__.chunk_next};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(rng,new_meta){var self__=this;var rng__$1=this;if(new_meta===self__.meta)return rng__$1;else return new cljs.core.Range(new_meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash)};cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2=function(rng,o){var self__=this;var rng__$1=this;return cljs.core.cons(o,rng__$1)};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1=function(rng){var self__=this;var rng__$1=this;return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null))};
cljs.core.Range.getBasis=function(){return new cljs.core.PersistentVector(null,7,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"end","end",1372345569,null),new cljs.core.Symbol(null,"step","step",-1365547645,null),cljs.core.with_meta(new cljs.core.Symbol(null,"chunk","chunk",449371907,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable",
"mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"chunk-next","chunk-next",-547810434,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.Range.cljs$lang$type=true;
cljs.core.Range.cljs$lang$ctorStr="cljs.core/Range";cljs.core.Range.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Range")};cljs.core.__GT_Range=function cljs$core$__GT_Range(meta,start,end,step,chunk,chunk_next,__hash){return new cljs.core.Range(meta,start,end,step,chunk,chunk_next,__hash)};var G__12527_12530=cljs.core.Range.prototype;var G__12528_12531=cljs.core.ITER_SYMBOL;
var G__12529_12532=function(G__12527_12530,G__12528_12531){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12527_12530,G__12528_12531);goog.object.set(G__12527_12530,G__12528_12531,G__12529_12532);
cljs.core.range=function cljs$core$range(var_args){var G__12534=arguments.length;switch(G__12534){case 0:return cljs.core.range.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.core.range.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0,Number.MAX_VALUE,1)};cljs.core.range.cljs$core$IFn$_invoke$arity$1=function(end){return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0,end,1)};cljs.core.range.cljs$core$IFn$_invoke$arity$2=function(start,end){return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start,end,1)};
cljs.core.range.cljs$core$IFn$_invoke$arity$3=function(start,end,step){if(step>0)if(end<=start)return cljs.core.List.EMPTY;else return new cljs.core.Range(null,start,end,step,null,null,null);else if(step<0)if(end>=start)return cljs.core.List.EMPTY;else return new cljs.core.Range(null,start,end,step,null,null,null);else if(end===start)return cljs.core.List.EMPTY;else return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start)};cljs.core.range.cljs$lang$maxFixedArity=3;
cljs.core.take_nth=function cljs$core$take_nth(var_args){var G__12537=arguments.length;switch(G__12537){case 1:return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1=function(n){if(typeof n==="number");else throw new Error("Assert failed: (number? n)");return function(rf){var ia=cljs.core.volatile_BANG_(-1);return function(ia){return function(){var G__12539=null;var G__12539__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12539__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};
var G__12539__2=function(result,input){var i=ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,ia.cljs$core$IDeref$_deref$arity$1(null)+1);if(cljs.core.rem(i,n)===0)return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input);else return result};G__12539=function(result,input){switch(arguments.length){case 0:return G__12539__0.call(this);case 1:return G__12539__1.call(this,result);case 2:return G__12539__2.call(this,result,input)}throw new Error("Invalid arity: "+
arguments.length);};G__12539.cljs$core$IFn$_invoke$arity$0=G__12539__0;G__12539.cljs$core$IFn$_invoke$arity$1=G__12539__1;G__12539.cljs$core$IFn$_invoke$arity$2=G__12539__2;return G__12539}()}(ia)}};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2=function(n,coll){if(typeof n==="number");else throw new Error("Assert failed: (number? n)");return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;return cljs.core.cons(cljs.core.first(s),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)))}else return null},null,null)};cljs.core.take_nth.cljs$lang$maxFixedArity=2;
cljs.core.split_with=function cljs$core$split_with(pred,coll){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)],null)};
cljs.core.partition_by=function cljs$core$partition_by(var_args){var G__12542=arguments.length;switch(G__12542){case 1:return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1=function(f){return function(rf){var a=cljs.core.array_list();var pa=cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));return function(a,pa){return function(){var G__12544=null;var G__12544__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12544__1=function(result){var result__$1=cljs.core.truth_(a.isEmpty())?result:function(){var v=cljs.core.vec(a.toArray());
a.clear();return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,v):rf.call(null,result,v))}();return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result__$1):rf.call(null,result__$1)};var G__12544__2=function(result,input){var pval=cljs.core.deref(pa);var val=f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(input):f.call(null,input);cljs.core.vreset_BANG_(pa,val);if(cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core",
"none","cljs.core/none",926646439))||cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval)){a.add(input);return result}else{var v=cljs.core.vec(a.toArray());a.clear();var ret=rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,v):rf.call(null,result,v);if(cljs.core.reduced_QMARK_(ret));else a.add(input);return ret}};G__12544=function(result,input){switch(arguments.length){case 0:return G__12544__0.call(this);case 1:return G__12544__1.call(this,result);case 2:return G__12544__2.call(this,
result,input)}throw new Error("Invalid arity: "+arguments.length);};G__12544.cljs$core$IFn$_invoke$arity$0=G__12544__0;G__12544.cljs$core$IFn$_invoke$arity$1=G__12544__1;G__12544.cljs$core$IFn$_invoke$arity$2=G__12544__2;return G__12544}()}(a,pa)}};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2=function(f,coll){return new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;var fst=cljs.core.first(s);var fv=f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(fst):f.call(null,fst);var run=cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst,fv,s,temp__4657__auto__){return function(p1__12540_SHARP_){return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,
f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(p1__12540_SHARP_):f.call(null,p1__12540_SHARP_))}}(fst,fv,s,temp__4657__auto__),cljs.core.next(s)));return cljs.core.cons(run,cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f,new cljs.core.LazySeq(null,function(fst,fv,run,s,temp__4657__auto__){return function(){return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s)}}(fst,fv,run,s,temp__4657__auto__),null,null)))}else return null},null,null)};
cljs.core.partition_by.cljs$lang$maxFixedArity=2;cljs.core.frequencies=function cljs$core$frequencies(coll){return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts,x){return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,0)+1)},cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll))};
cljs.core.reductions=function cljs$core$reductions(var_args){var G__12546=arguments.length;switch(G__12546){case 2:return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2=function(f,coll){return new cljs.core.LazySeq(null,function(){var temp__4655__auto__=cljs.core.seq(coll);if(temp__4655__auto__){var s=temp__4655__auto__;return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s))}else return new cljs.core.List(null,f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null),null,1,null)},null,null)};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3=function(f,init,coll){if(cljs.core.reduced_QMARK_(init))return new cljs.core.List(null,cljs.core.deref(init),null,1,null);else return cljs.core.cons(init,new cljs.core.LazySeq(null,function(){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,function(){var G__12547=init;var G__12548=cljs.core.first(s);return f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(G__12547,
G__12548):f.call(null,G__12547,G__12548)}(),cljs.core.rest(s))}else return null},null,null))};cljs.core.reductions.cljs$lang$maxFixedArity=3;
cljs.core.juxt=function cljs$core$juxt(var_args){var G__12565=arguments.length;switch(G__12565){case 1:return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___12567=arguments.length;var i__9108__auto___12568=0;while(true){if(i__9108__auto___12568<
len__9107__auto___12567){args_arr__9132__auto__.push(arguments[i__9108__auto___12568]);var G__12569=i__9108__auto___12568+1;i__9108__auto___12568=G__12569;continue}else;break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(3),0,null);return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],arguments[2],argseq__9133__auto__)}};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1=function(f){return function(){var G__12570=null;var G__12570__0=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null)],null)};var G__12570__1=function(x){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(x):f.call(null,x)],null)};var G__12570__2=
function(x,y){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(x,y):f.call(null,x,y)],null)};var G__12570__3=function(x,y,z){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(x,y,z):f.call(null,x,y,z)],null)};var G__12570__4=function(){var G__12571__delegate=function(x,y,z,args){return new cljs.core.PersistentVector(null,
1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null)};var G__12571=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__12572__i=0,G__12572__a=new Array(arguments.length-3);while(G__12572__i<G__12572__a.length){G__12572__a[G__12572__i]=arguments[G__12572__i+3];++G__12572__i}args=new cljs.core.IndexedSeq(G__12572__a,0,null)}return G__12571__delegate.call(this,x,y,z,args)};G__12571.cljs$lang$maxFixedArity=3;G__12571.cljs$lang$applyTo=
function(arglist__12573){var x=cljs.core.first(arglist__12573);arglist__12573=cljs.core.next(arglist__12573);var y=cljs.core.first(arglist__12573);arglist__12573=cljs.core.next(arglist__12573);var z=cljs.core.first(arglist__12573);var args=cljs.core.rest(arglist__12573);return G__12571__delegate(x,y,z,args)};G__12571.cljs$core$IFn$_invoke$arity$variadic=G__12571__delegate;return G__12571}();G__12570=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__12570__0.call(this);
case 1:return G__12570__1.call(this,x);case 2:return G__12570__2.call(this,x,y);case 3:return G__12570__3.call(this,x,y,z);default:var G__12574=null;if(arguments.length>3){var G__12575__i=0,G__12575__a=new Array(arguments.length-3);while(G__12575__i<G__12575__a.length){G__12575__a[G__12575__i]=arguments[G__12575__i+3];++G__12575__i}G__12574=new cljs.core.IndexedSeq(G__12575__a,0,null)}return G__12570__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__12574)}throw new Error("Invalid arity: "+arguments.length);
};G__12570.cljs$lang$maxFixedArity=3;G__12570.cljs$lang$applyTo=G__12570__4.cljs$lang$applyTo;G__12570.cljs$core$IFn$_invoke$arity$0=G__12570__0;G__12570.cljs$core$IFn$_invoke$arity$1=G__12570__1;G__12570.cljs$core$IFn$_invoke$arity$2=G__12570__2;G__12570.cljs$core$IFn$_invoke$arity$3=G__12570__3;G__12570.cljs$core$IFn$_invoke$arity$variadic=G__12570__4.cljs$core$IFn$_invoke$arity$variadic;return G__12570}()};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2=function(f,g){return function(){var G__12576=null;var G__12576__0=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null),g.cljs$core$IFn$_invoke$arity$0?g.cljs$core$IFn$_invoke$arity$0():g.call(null)],null)};var G__12576__1=function(x){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$1?
f.cljs$core$IFn$_invoke$arity$1(x):f.call(null,x),g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(x):g.call(null,x)],null)};var G__12576__2=function(x,y){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(x,y):f.call(null,x,y),g.cljs$core$IFn$_invoke$arity$2?g.cljs$core$IFn$_invoke$arity$2(x,y):g.call(null,x,y)],null)};var G__12576__3=function(x,y,z){return new cljs.core.PersistentVector(null,
2,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(x,y,z):f.call(null,x,y,z),g.cljs$core$IFn$_invoke$arity$3?g.cljs$core$IFn$_invoke$arity$3(x,y,z):g.call(null,x,y,z)],null)};var G__12576__4=function(){var G__12577__delegate=function(x,y,z,args){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,
args)],null)};var G__12577=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__12578__i=0,G__12578__a=new Array(arguments.length-3);while(G__12578__i<G__12578__a.length){G__12578__a[G__12578__i]=arguments[G__12578__i+3];++G__12578__i}args=new cljs.core.IndexedSeq(G__12578__a,0,null)}return G__12577__delegate.call(this,x,y,z,args)};G__12577.cljs$lang$maxFixedArity=3;G__12577.cljs$lang$applyTo=function(arglist__12579){var x=cljs.core.first(arglist__12579);arglist__12579=cljs.core.next(arglist__12579);
var y=cljs.core.first(arglist__12579);arglist__12579=cljs.core.next(arglist__12579);var z=cljs.core.first(arglist__12579);var args=cljs.core.rest(arglist__12579);return G__12577__delegate(x,y,z,args)};G__12577.cljs$core$IFn$_invoke$arity$variadic=G__12577__delegate;return G__12577}();G__12576=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__12576__0.call(this);case 1:return G__12576__1.call(this,x);case 2:return G__12576__2.call(this,x,y);case 3:return G__12576__3.call(this,
x,y,z);default:var G__12580=null;if(arguments.length>3){var G__12581__i=0,G__12581__a=new Array(arguments.length-3);while(G__12581__i<G__12581__a.length){G__12581__a[G__12581__i]=arguments[G__12581__i+3];++G__12581__i}G__12580=new cljs.core.IndexedSeq(G__12581__a,0,null)}return G__12576__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__12580)}throw new Error("Invalid arity: "+arguments.length);};G__12576.cljs$lang$maxFixedArity=3;G__12576.cljs$lang$applyTo=G__12576__4.cljs$lang$applyTo;G__12576.cljs$core$IFn$_invoke$arity$0=
G__12576__0;G__12576.cljs$core$IFn$_invoke$arity$1=G__12576__1;G__12576.cljs$core$IFn$_invoke$arity$2=G__12576__2;G__12576.cljs$core$IFn$_invoke$arity$3=G__12576__3;G__12576.cljs$core$IFn$_invoke$arity$variadic=G__12576__4.cljs$core$IFn$_invoke$arity$variadic;return G__12576}()};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3=function(f,g,h){return function(){var G__12582=null;var G__12582__0=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null),g.cljs$core$IFn$_invoke$arity$0?g.cljs$core$IFn$_invoke$arity$0():g.call(null),h.cljs$core$IFn$_invoke$arity$0?h.cljs$core$IFn$_invoke$arity$0():h.call(null)],null)};var G__12582__1=function(x){return new cljs.core.PersistentVector(null,
3,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(x):f.call(null,x),g.cljs$core$IFn$_invoke$arity$1?g.cljs$core$IFn$_invoke$arity$1(x):g.call(null,x),h.cljs$core$IFn$_invoke$arity$1?h.cljs$core$IFn$_invoke$arity$1(x):h.call(null,x)],null)};var G__12582__2=function(x,y){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$2?f.cljs$core$IFn$_invoke$arity$2(x,y):f.call(null,x,y),g.cljs$core$IFn$_invoke$arity$2?
g.cljs$core$IFn$_invoke$arity$2(x,y):g.call(null,x,y),h.cljs$core$IFn$_invoke$arity$2?h.cljs$core$IFn$_invoke$arity$2(x,y):h.call(null,x,y)],null)};var G__12582__3=function(x,y,z){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[f.cljs$core$IFn$_invoke$arity$3?f.cljs$core$IFn$_invoke$arity$3(x,y,z):f.call(null,x,y,z),g.cljs$core$IFn$_invoke$arity$3?g.cljs$core$IFn$_invoke$arity$3(x,y,z):g.call(null,x,y,z),h.cljs$core$IFn$_invoke$arity$3?h.cljs$core$IFn$_invoke$arity$3(x,
y,z):h.call(null,x,y,z)],null)};var G__12582__4=function(){var G__12583__delegate=function(x,y,z,args){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null)};var G__12583=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__12584__i=0,G__12584__a=new Array(arguments.length-
3);while(G__12584__i<G__12584__a.length){G__12584__a[G__12584__i]=arguments[G__12584__i+3];++G__12584__i}args=new cljs.core.IndexedSeq(G__12584__a,0,null)}return G__12583__delegate.call(this,x,y,z,args)};G__12583.cljs$lang$maxFixedArity=3;G__12583.cljs$lang$applyTo=function(arglist__12585){var x=cljs.core.first(arglist__12585);arglist__12585=cljs.core.next(arglist__12585);var y=cljs.core.first(arglist__12585);arglist__12585=cljs.core.next(arglist__12585);var z=cljs.core.first(arglist__12585);var args=
cljs.core.rest(arglist__12585);return G__12583__delegate(x,y,z,args)};G__12583.cljs$core$IFn$_invoke$arity$variadic=G__12583__delegate;return G__12583}();G__12582=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__12582__0.call(this);case 1:return G__12582__1.call(this,x);case 2:return G__12582__2.call(this,x,y);case 3:return G__12582__3.call(this,x,y,z);default:var G__12586=null;if(arguments.length>3){var G__12587__i=0,G__12587__a=new Array(arguments.length-3);while(G__12587__i<
G__12587__a.length){G__12587__a[G__12587__i]=arguments[G__12587__i+3];++G__12587__i}G__12586=new cljs.core.IndexedSeq(G__12587__a,0,null)}return G__12582__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__12586)}throw new Error("Invalid arity: "+arguments.length);};G__12582.cljs$lang$maxFixedArity=3;G__12582.cljs$lang$applyTo=G__12582__4.cljs$lang$applyTo;G__12582.cljs$core$IFn$_invoke$arity$0=G__12582__0;G__12582.cljs$core$IFn$_invoke$arity$1=G__12582__1;G__12582.cljs$core$IFn$_invoke$arity$2=G__12582__2;
G__12582.cljs$core$IFn$_invoke$arity$3=G__12582__3;G__12582.cljs$core$IFn$_invoke$arity$variadic=G__12582__4.cljs$core$IFn$_invoke$arity$variadic;return G__12582}()};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic=function(f,g,h,fs){var fs__$1=cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);return function(fs__$1){return function(){var G__12588=null;var G__12588__0=function(){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1){return function(p1__12550_SHARP_,p2__12551_SHARP_){return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12550_SHARP_,p2__12551_SHARP_.cljs$core$IFn$_invoke$arity$0?p2__12551_SHARP_.cljs$core$IFn$_invoke$arity$0():
p2__12551_SHARP_.call(null))}}(fs__$1),cljs.core.PersistentVector.EMPTY,fs__$1)};var G__12588__1=function(x){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1){return function(p1__12552_SHARP_,p2__12553_SHARP_){return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12552_SHARP_,p2__12553_SHARP_.cljs$core$IFn$_invoke$arity$1?p2__12553_SHARP_.cljs$core$IFn$_invoke$arity$1(x):p2__12553_SHARP_.call(null,x))}}(fs__$1),cljs.core.PersistentVector.EMPTY,fs__$1)};var G__12588__2=function(x,
y){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1){return function(p1__12554_SHARP_,p2__12555_SHARP_){return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12554_SHARP_,p2__12555_SHARP_.cljs$core$IFn$_invoke$arity$2?p2__12555_SHARP_.cljs$core$IFn$_invoke$arity$2(x,y):p2__12555_SHARP_.call(null,x,y))}}(fs__$1),cljs.core.PersistentVector.EMPTY,fs__$1)};var G__12588__3=function(x,y,z){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1){return function(p1__12556_SHARP_,
p2__12557_SHARP_){return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12556_SHARP_,p2__12557_SHARP_.cljs$core$IFn$_invoke$arity$3?p2__12557_SHARP_.cljs$core$IFn$_invoke$arity$3(x,y,z):p2__12557_SHARP_.call(null,x,y,z))}}(fs__$1),cljs.core.PersistentVector.EMPTY,fs__$1)};var G__12588__4=function(){var G__12589__delegate=function(x,y,z,args){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1){return function(p1__12558_SHARP_,p2__12559_SHARP_){return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12558_SHARP_,
cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__12559_SHARP_,x,y,z,args))}}(fs__$1),cljs.core.PersistentVector.EMPTY,fs__$1)};var G__12589=function(x,y,z,var_args){var args=null;if(arguments.length>3){var G__12590__i=0,G__12590__a=new Array(arguments.length-3);while(G__12590__i<G__12590__a.length){G__12590__a[G__12590__i]=arguments[G__12590__i+3];++G__12590__i}args=new cljs.core.IndexedSeq(G__12590__a,0,null)}return G__12589__delegate.call(this,x,y,z,args)};G__12589.cljs$lang$maxFixedArity=3;G__12589.cljs$lang$applyTo=
function(arglist__12591){var x=cljs.core.first(arglist__12591);arglist__12591=cljs.core.next(arglist__12591);var y=cljs.core.first(arglist__12591);arglist__12591=cljs.core.next(arglist__12591);var z=cljs.core.first(arglist__12591);var args=cljs.core.rest(arglist__12591);return G__12589__delegate(x,y,z,args)};G__12589.cljs$core$IFn$_invoke$arity$variadic=G__12589__delegate;return G__12589}();G__12588=function(x,y,z,var_args){var args=var_args;switch(arguments.length){case 0:return G__12588__0.call(this);
case 1:return G__12588__1.call(this,x);case 2:return G__12588__2.call(this,x,y);case 3:return G__12588__3.call(this,x,y,z);default:var G__12592=null;if(arguments.length>3){var G__12593__i=0,G__12593__a=new Array(arguments.length-3);while(G__12593__i<G__12593__a.length){G__12593__a[G__12593__i]=arguments[G__12593__i+3];++G__12593__i}G__12592=new cljs.core.IndexedSeq(G__12593__a,0,null)}return G__12588__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z,G__12592)}throw new Error("Invalid arity: "+arguments.length);
};G__12588.cljs$lang$maxFixedArity=3;G__12588.cljs$lang$applyTo=G__12588__4.cljs$lang$applyTo;G__12588.cljs$core$IFn$_invoke$arity$0=G__12588__0;G__12588.cljs$core$IFn$_invoke$arity$1=G__12588__1;G__12588.cljs$core$IFn$_invoke$arity$2=G__12588__2;G__12588.cljs$core$IFn$_invoke$arity$3=G__12588__3;G__12588.cljs$core$IFn$_invoke$arity$variadic=G__12588__4.cljs$core$IFn$_invoke$arity$variadic;return G__12588}()}(fs__$1)};
cljs.core.juxt.cljs$lang$applyTo=function(seq12561){var G__12562=cljs.core.first(seq12561);var seq12561__$1=cljs.core.next(seq12561);var G__12563=cljs.core.first(seq12561__$1);var seq12561__$2=cljs.core.next(seq12561__$1);var G__12564=cljs.core.first(seq12561__$2);var seq12561__$3=cljs.core.next(seq12561__$2);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12562,G__12563,G__12564,seq12561__$3)};cljs.core.juxt.cljs$lang$maxFixedArity=3;
cljs.core.dorun=function cljs$core$dorun(var_args){var G__12595=arguments.length;switch(G__12595){case 1:return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1=function(coll){while(true){var temp__4657__auto__=cljs.core.seq(coll);if(temp__4657__auto__){var s=temp__4657__auto__;var G__12597=cljs.core.next(s);coll=G__12597;continue}else return null;break}};cljs.core.dorun.cljs$core$IFn$_invoke$arity$2=function(n,coll){while(true){if(cljs.core.seq(coll)&&n>0){var G__12598=n-1;var G__12599=cljs.core.next(coll);n=G__12598;coll=G__12599;continue}else return null;break}};cljs.core.dorun.cljs$lang$maxFixedArity=2;
cljs.core.doall=function cljs$core$doall(var_args){var G__12601=arguments.length;switch(G__12601){case 1:return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1=function(coll){cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);return coll};cljs.core.doall.cljs$core$IFn$_invoke$arity$2=function(n,coll){cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);return coll};cljs.core.doall.cljs$lang$maxFixedArity=2;cljs.core.regexp_QMARK_=function cljs$core$regexp_QMARK_(x){return x instanceof RegExp};
cljs.core.re_matches=function cljs$core$re_matches(re,s){if(typeof s==="string"){var matches=re.exec(s);if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s))if(cljs.core.count(matches)===1)return cljs.core.first(matches);else return cljs.core.vec(matches);else return null}else throw new TypeError("re-matches must match against a string.");};
cljs.core.re_find=function cljs$core$re_find(re,s){if(typeof s==="string"){var matches=re.exec(s);if(matches==null)return null;else if(cljs.core.count(matches)===1)return cljs.core.first(matches);else return cljs.core.vec(matches)}else throw new TypeError("re-find must match against a string.");};
cljs.core.re_seq_STAR_=function cljs$core$re_seq_STAR_(re,s){var temp__4661__auto__=re.exec(s);if(temp__4661__auto__==null)return null;else{var matches=temp__4661__auto__;var match_str=matches[0];var match_vals=matches.length===1?match_str:cljs.core.vec(matches);return cljs.core.cons(match_vals,new cljs.core.LazySeq(null,function(match_str,match_vals,matches,temp__4661__auto__){return function(){var post_idx=matches.index+function(){var x__8264__auto__=1;var y__8265__auto__=match_str.length;return x__8264__auto__>
y__8265__auto__?x__8264__auto__:y__8265__auto__}();if(post_idx<=s.length){var G__12603=re;var G__12604=cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,post_idx);return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2?cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__12603,G__12604):cljs.core.re_seq_STAR_.call(null,G__12603,G__12604)}else return null}}(match_str,match_vals,matches,temp__4661__auto__),null,null))}};
cljs.core.re_seq=function cljs$core$re_seq(re,s){if(typeof s==="string")return cljs.core.re_seq_STAR_(re,s);else throw new TypeError("re-seq must match against a string.");};
cljs.core.re_pattern=function cljs$core$re_pattern(s){if(s instanceof RegExp)return s;else{var vec__12605=cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);var prefix=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12605,0,null);var flags=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12605,1,null);var pattern=cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));return new RegExp(pattern,function(){var or__7908__auto__=flags;if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;
else return""}())}};
cljs.core.pr_sequential_writer=function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){var _STAR_print_level_STAR__orig_val__12608=cljs.core._STAR_print_level_STAR_;var _STAR_print_level_STAR__temp_val__12609=cljs.core._STAR_print_level_STAR_==null?null:cljs.core._STAR_print_level_STAR_-1;cljs.core._STAR_print_level_STAR_=_STAR_print_level_STAR__temp_val__12609;try{if(!(cljs.core._STAR_print_level_STAR_==null)&&cljs.core._STAR_print_level_STAR_<0)return cljs.core._write(writer,"#");
else{cljs.core._write(writer,begin);if((new cljs.core.Keyword(null,"print-length","print-length",1931866356)).cljs$core$IFn$_invoke$arity$1(opts)===0)if(cljs.core.seq(coll))cljs.core._write(writer,function(){var or__7908__auto__=(new cljs.core.Keyword(null,"more-marker","more-marker",-14717935)).cljs$core$IFn$_invoke$arity$1(opts);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return"..."}());else;else{if(cljs.core.seq(coll)){var G__12610_12616=cljs.core.first(coll);var G__12611_12617=
writer;var G__12612_12618=opts;print_one.cljs$core$IFn$_invoke$arity$3?print_one.cljs$core$IFn$_invoke$arity$3(G__12610_12616,G__12611_12617,G__12612_12618):print_one.call(null,G__12610_12616,G__12611_12617,G__12612_12618)}else;var coll_12619__$1=cljs.core.next(coll);var n_12620=(new cljs.core.Keyword(null,"print-length","print-length",1931866356)).cljs$core$IFn$_invoke$arity$1(opts)-1;while(true){if(coll_12619__$1&&(n_12620==null||!(n_12620===0))){cljs.core._write(writer,sep);var G__12613_12621=
cljs.core.first(coll_12619__$1);var G__12614_12622=writer;var G__12615_12623=opts;print_one.cljs$core$IFn$_invoke$arity$3?print_one.cljs$core$IFn$_invoke$arity$3(G__12613_12621,G__12614_12622,G__12615_12623):print_one.call(null,G__12613_12621,G__12614_12622,G__12615_12623);var G__12624=cljs.core.next(coll_12619__$1);var G__12625=n_12620-1;coll_12619__$1=G__12624;n_12620=G__12625;continue}else if(cljs.core.seq(coll_12619__$1)&&n_12620===0){cljs.core._write(writer,sep);cljs.core._write(writer,function(){var or__7908__auto__=
(new cljs.core.Keyword(null,"more-marker","more-marker",-14717935)).cljs$core$IFn$_invoke$arity$1(opts);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return"..."}())}else;break}}return cljs.core._write(writer,end)}}finally{cljs.core._STAR_print_level_STAR_=_STAR_print_level_STAR__orig_val__12608}};
cljs.core.write_all=function cljs$core$write_all(var_args){var args__9117__auto__=[];var len__9107__auto___12632=arguments.length;var i__9108__auto___12633=0;while(true){if(i__9108__auto___12633<len__9107__auto___12632){args__9117__auto__.push(arguments[i__9108__auto___12633]);var G__12634=i__9108__auto___12633+1;i__9108__auto___12633=G__12634;continue}else;break}var argseq__9118__auto__=1<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(1),0,null):null;return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
argseq__9118__auto__)};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic=function(writer,ss){var seq__12628=cljs.core.seq(ss);var chunk__12629=null;var count__12630=0;var i__12631=0;while(true){if(i__12631<count__12630){var s=chunk__12629.cljs$core$IIndexed$_nth$arity$2(null,i__12631);cljs.core._write(writer,s);var G__12635=seq__12628;var G__12636=chunk__12629;var G__12637=count__12630;var G__12638=i__12631+1;seq__12628=G__12635;chunk__12629=G__12636;count__12630=G__12637;i__12631=G__12638;continue}else{var temp__4657__auto__=
cljs.core.seq(seq__12628);if(temp__4657__auto__){var seq__12628__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__12628__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__12628__$1);var G__12639=cljs.core.chunk_rest(seq__12628__$1);var G__12640=c__8771__auto__;var G__12641=cljs.core.count(c__8771__auto__);var G__12642=0;seq__12628=G__12639;chunk__12629=G__12640;count__12630=G__12641;i__12631=G__12642;continue}else{var s=cljs.core.first(seq__12628__$1);cljs.core._write(writer,s);var G__12643=
cljs.core.next(seq__12628__$1);var G__12644=null;var G__12645=0;var G__12646=0;seq__12628=G__12643;chunk__12629=G__12644;count__12630=G__12645;i__12631=G__12646;continue}}else return null}break}};cljs.core.write_all.cljs$lang$maxFixedArity=1;cljs.core.write_all.cljs$lang$applyTo=function(seq12626){var G__12627=cljs.core.first(seq12626);var seq12626__$1=cljs.core.next(seq12626);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12627,seq12626__$1)};
cljs.core.string_print=function cljs$core$string_print(x){if(cljs.core._STAR_print_fn_STAR_==null)throw new Error("No *print-fn* fn set for evaluation environment");else;cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1?cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x):cljs.core._STAR_print_fn_STAR_.call(null,x);return null};cljs.core.flush=function cljs$core$flush(){return null};
cljs.core.char_escapes=function(){var obj12648={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};return obj12648}();cljs.core.quote_string=function cljs$core$quote_string(s){return['"',cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]',"g"),function(match){return cljs.core.char_escapes[match]})),'"'].join("")};
cljs.core.print_meta_QMARK_=function cljs$core$print_meta_QMARK_(opts,obj){var and__7893__auto__=cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964)));if(and__7893__auto__){var and__7893__auto____$1=!(obj==null)?obj.cljs$lang$protocol_mask$partition0$&131072||cljs.core.PROTOCOL_SENTINEL===obj.cljs$core$IMeta$?true:false:false;if(and__7893__auto____$1)return!(cljs.core.meta(obj)==null);else return and__7893__auto____$1}else return and__7893__auto__};
cljs.core.pr_writer_impl=function cljs$core$pr_writer_impl(obj,writer,opts){if(obj==null)return cljs.core._write(writer,"nil");else{if(cljs.core.print_meta_QMARK_(opts,obj)){cljs.core._write(writer,"^");cljs.core.pr_writer(cljs.core.meta(obj),writer,opts);cljs.core._write(writer," ")}else;if(obj.cljs$lang$type)return obj.cljs$lang$ctorPrWriter(obj,writer,opts);else if(!(obj==null)?obj.cljs$lang$protocol_mask$partition0$&2147483648||cljs.core.PROTOCOL_SENTINEL===obj.cljs$core$IPrintWithWriter$?true:
!obj.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,obj):false:cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,obj))return cljs.core._pr_writer(obj,writer,opts);else if(obj===true||obj===false)return cljs.core._write(writer,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));else if(typeof obj==="number")return cljs.core._write(writer,isNaN(obj)?"##NaN":obj===Number.POSITIVE_INFINITY?"##Inf":obj===Number.NEGATIVE_INFINITY?"##-Inf":cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
else if(cljs.core.object_QMARK_(obj)){cljs.core._write(writer,"#js ");return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k){return new cljs.core.MapEntry(function(){var G__12653=k;if(!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/,k)==null))return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__12653);else return G__12653}(),obj[k],null)},cljs.core.js_keys(obj)),cljs.core.pr_writer,writer,opts)}else if(cljs.core.array_QMARK_(obj))return cljs.core.pr_sequential_writer(writer,
cljs.core.pr_writer,"#js ["," ","]",opts,obj);else if(goog.isString(obj))if(cljs.core.truth_((new cljs.core.Keyword(null,"readably","readably",1129599760)).cljs$core$IFn$_invoke$arity$1(opts)))return cljs.core._write(writer,cljs.core.quote_string(obj));else return cljs.core._write(writer,obj);else if(goog.isFunction(obj)){var name=obj.name;var name__$1=cljs.core.truth_(function(){var or__7908__auto__=name==null;if(or__7908__auto__)return or__7908__auto__;else return goog.string.isEmpty(name)}())?
"Function":name;return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[",name__$1,cljs.core._STAR_print_fn_bodies_STAR_?[' "',cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),'"'].join(""):"","]"],0))}else if(obj instanceof Date){var normalize=function(n,len){var ns=cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);while(true){if(cljs.core.count(ns)<len){var G__12656=["0",ns].join("");ns=G__12656;continue}else return ns;break}};
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "',cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()),"-",normalize(obj.getUTCMonth()+1,2),"-",normalize(obj.getUTCDate(),2),"T",normalize(obj.getUTCHours(),2),":",normalize(obj.getUTCMinutes(),2),":",normalize(obj.getUTCSeconds(),2),".",normalize(obj.getUTCMilliseconds(),3),"-",'00:00"'],0))}else if(cljs.core.regexp_QMARK_(obj))return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"',obj.source,'"'],0));else if(cljs.core.truth_(function(){var G__12654=obj;var G__12654__$1=G__12654==null?null:G__12654.constructor;if(G__12654__$1==null)return null;else return G__12654__$1.cljs$lang$ctorStr}()))return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[",obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/","g"),"."),"]"],0));else{var name=function(){var G__12655=
obj;var G__12655__$1=G__12655==null?null:G__12655.constructor;if(G__12655__$1==null)return null;else return G__12655__$1.name}();var name__$1=cljs.core.truth_(function(){var or__7908__auto__=name==null;if(or__7908__auto__)return or__7908__auto__;else return goog.string.isEmpty(name)}())?"Object":name;if(obj.constructor==null)return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[",name__$1,"]"],0));else return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[",name__$1," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),"]"],0))}}};
cljs.core.pr_writer=function cljs$core$pr_writer(obj,writer,opts){var temp__4655__auto__=(new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595)).cljs$core$IFn$_invoke$arity$1(opts);if(cljs.core.truth_(temp__4655__auto__)){var alt_impl=temp__4655__auto__;var G__12657=obj;var G__12658=writer;var G__12659=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);return alt_impl.cljs$core$IFn$_invoke$arity$3?
alt_impl.cljs$core$IFn$_invoke$arity$3(G__12657,G__12658,G__12659):alt_impl.call(null,G__12657,G__12658,G__12659)}else return cljs.core.pr_writer_impl(obj,writer,opts)};
cljs.core.pr_seq_writer=function cljs$core$pr_seq_writer(objs,writer,opts){cljs.core.pr_writer(cljs.core.first(objs),writer,opts);var seq__12660=cljs.core.seq(cljs.core.next(objs));var chunk__12661=null;var count__12662=0;var i__12663=0;while(true){if(i__12663<count__12662){var obj=chunk__12661.cljs$core$IIndexed$_nth$arity$2(null,i__12663);cljs.core._write(writer," ");cljs.core.pr_writer(obj,writer,opts);var G__12664=seq__12660;var G__12665=chunk__12661;var G__12666=count__12662;var G__12667=i__12663+
1;seq__12660=G__12664;chunk__12661=G__12665;count__12662=G__12666;i__12663=G__12667;continue}else{var temp__4657__auto__=cljs.core.seq(seq__12660);if(temp__4657__auto__){var seq__12660__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__12660__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__12660__$1);var G__12668=cljs.core.chunk_rest(seq__12660__$1);var G__12669=c__8771__auto__;var G__12670=cljs.core.count(c__8771__auto__);var G__12671=0;seq__12660=G__12668;chunk__12661=G__12669;count__12662=
G__12670;i__12663=G__12671;continue}else{var obj=cljs.core.first(seq__12660__$1);cljs.core._write(writer," ");cljs.core.pr_writer(obj,writer,opts);var G__12672=cljs.core.next(seq__12660__$1);var G__12673=null;var G__12674=0;var G__12675=0;seq__12660=G__12672;chunk__12661=G__12673;count__12662=G__12674;i__12663=G__12675;continue}}else return null}break}};
cljs.core.pr_sb_with_opts=function cljs$core$pr_sb_with_opts(objs,opts){var sb=new goog.string.StringBuffer;var writer=new cljs.core.StringBufferWriter(sb);cljs.core.pr_seq_writer(objs,writer,opts);writer.cljs$core$IWriter$_flush$arity$1(null);return sb};cljs.core.pr_str_with_opts=function cljs$core$pr_str_with_opts(objs,opts){if(cljs.core.empty_QMARK_(objs))return"";else return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs,opts))};
cljs.core.prn_str_with_opts=function cljs$core$prn_str_with_opts(objs,opts){if(cljs.core.empty_QMARK_(objs))return"\n";else{var sb=cljs.core.pr_sb_with_opts(objs,opts);sb.append("\n");return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)}};cljs.core.pr_with_opts=function cljs$core$pr_with_opts(objs,opts){return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts))};
cljs.core.newline=function cljs$core$newline(var_args){var G__12677=arguments.length;switch(G__12677){case 0:return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.newline.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null)};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1=function(opts){cljs.core.string_print("\n");if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939))))return cljs.core.flush();else return null};cljs.core.newline.cljs$lang$maxFixedArity=1;
cljs.core.pr_str=function cljs$core$pr_str(var_args){var args__9117__auto__=[];var len__9107__auto___12680=arguments.length;var i__9108__auto___12681=0;while(true){if(i__9108__auto___12681<len__9107__auto___12680){args__9117__auto__.push(arguments[i__9108__auto___12681]);var G__12682=i__9108__auto___12681+1;i__9108__auto___12681=G__12682;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic=function(objs){return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts())};cljs.core.pr_str.cljs$lang$maxFixedArity=0;cljs.core.pr_str.cljs$lang$applyTo=function(seq12679){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12679))};
cljs.core.prn_str=function cljs$core$prn_str(var_args){var args__9117__auto__=[];var len__9107__auto___12684=arguments.length;var i__9108__auto___12685=0;while(true){if(i__9108__auto___12685<len__9107__auto___12684){args__9117__auto__.push(arguments[i__9108__auto___12685]);var G__12686=i__9108__auto___12685+1;i__9108__auto___12685=G__12686;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic=function(objs){return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts())};cljs.core.prn_str.cljs$lang$maxFixedArity=0;cljs.core.prn_str.cljs$lang$applyTo=function(seq12683){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12683))};
cljs.core.pr=function cljs$core$pr(var_args){var args__9117__auto__=[];var len__9107__auto___12688=arguments.length;var i__9108__auto___12689=0;while(true){if(i__9108__auto___12689<len__9107__auto___12688){args__9117__auto__.push(arguments[i__9108__auto___12689]);var G__12690=i__9108__auto___12689+1;i__9108__auto___12689=G__12690;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic=function(objs){return cljs.core.pr_with_opts(objs,cljs.core.pr_opts())};cljs.core.pr.cljs$lang$maxFixedArity=0;cljs.core.pr.cljs$lang$applyTo=function(seq12687){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12687))};
cljs.core.print=function(){var cljs$core$cljs_core_print__delegate=function(objs){return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false))};var cljs$core$cljs_core_print=function(var_args){var objs=null;if(arguments.length>0){var G__12691__i=0,G__12691__a=new Array(arguments.length-0);while(G__12691__i<G__12691__a.length){G__12691__a[G__12691__i]=arguments[G__12691__i+0];++G__12691__i}objs=
new cljs.core.IndexedSeq(G__12691__a,0,null)}return cljs$core$cljs_core_print__delegate.call(this,objs)};cljs$core$cljs_core_print.cljs$lang$maxFixedArity=0;cljs$core$cljs_core_print.cljs$lang$applyTo=function(arglist__12692){var objs=cljs.core.seq(arglist__12692);return cljs$core$cljs_core_print__delegate(objs)};cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic=cljs$core$cljs_core_print__delegate;return cljs$core$cljs_core_print}();
cljs.core.print_str=function cljs$core$print_str(var_args){var args__9117__auto__=[];var len__9107__auto___12694=arguments.length;var i__9108__auto___12695=0;while(true){if(i__9108__auto___12695<len__9107__auto___12694){args__9117__auto__.push(arguments[i__9108__auto___12695]);var G__12696=i__9108__auto___12695+1;i__9108__auto___12695=G__12696;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic=function(objs){return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false))};cljs.core.print_str.cljs$lang$maxFixedArity=0;cljs.core.print_str.cljs$lang$applyTo=function(seq12693){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12693))};
cljs.core.println=function cljs$core$println(var_args){var args__9117__auto__=[];var len__9107__auto___12698=arguments.length;var i__9108__auto___12699=0;while(true){if(i__9108__auto___12699<len__9107__auto___12698){args__9117__auto__.push(arguments[i__9108__auto___12699]);var G__12700=i__9108__auto___12699+1;i__9108__auto___12699=G__12700;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic=function(objs){cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));if(cljs.core._STAR_print_newline_STAR_)return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());else return null};cljs.core.println.cljs$lang$maxFixedArity=0;cljs.core.println.cljs$lang$applyTo=function(seq12697){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12697))};
cljs.core.println_str=function cljs$core$println_str(var_args){var args__9117__auto__=[];var len__9107__auto___12702=arguments.length;var i__9108__auto___12703=0;while(true){if(i__9108__auto___12703<len__9107__auto___12702){args__9117__auto__.push(arguments[i__9108__auto___12703]);var G__12704=i__9108__auto___12703+1;i__9108__auto___12703=G__12704;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic=function(objs){return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false))};cljs.core.println_str.cljs$lang$maxFixedArity=0;cljs.core.println_str.cljs$lang$applyTo=function(seq12701){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12701))};
cljs.core.prn=function cljs$core$prn(var_args){var args__9117__auto__=[];var len__9107__auto___12706=arguments.length;var i__9108__auto___12707=0;while(true){if(i__9108__auto___12707<len__9107__auto___12706){args__9117__auto__.push(arguments[i__9108__auto___12707]);var G__12708=i__9108__auto___12707+1;i__9108__auto___12707=G__12708;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic=function(objs){cljs.core.pr_with_opts(objs,cljs.core.pr_opts());if(cljs.core._STAR_print_newline_STAR_)return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());else return null};cljs.core.prn.cljs$lang$maxFixedArity=0;cljs.core.prn.cljs$lang$applyTo=function(seq12705){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12705))};
cljs.core.strip_ns=function cljs$core$strip_ns(named){if(named instanceof cljs.core.Symbol)return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,cljs.core.name(named));else return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null,cljs.core.name(named))};
cljs.core.lift_ns=function cljs$core$lift_ns(m){if(cljs.core._STAR_print_namespace_maps_STAR_){var ns=null;var G__12715=cljs.core.seq(m);var vec__12716=G__12715;var seq__12717=cljs.core.seq(vec__12716);var first__12718=cljs.core.first(seq__12717);var seq__12717__$1=cljs.core.next(seq__12717);var vec__12719=first__12718;var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12719,0,null);var v=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12719,1,null);var entry=vec__12719;var entries=seq__12717__$1;
var lm=cljs.core.empty(m);var ns__$1=ns;var G__12715__$1=G__12715;var lm__$1=lm;while(true){var ns__$2=ns__$1;var vec__12728=G__12715__$1;var seq__12729=cljs.core.seq(vec__12728);var first__12730=cljs.core.first(seq__12729);var seq__12729__$1=cljs.core.next(seq__12729);var vec__12731=first__12730;var k__$1=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12731,0,null);var v__$1=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12731,1,null);var entry__$1=vec__12731;var entries__$1=seq__12729__$1;var lm__$2=
lm__$1;if(cljs.core.truth_(entry__$1))if(k__$1 instanceof cljs.core.Keyword||k__$1 instanceof cljs.core.Symbol)if(cljs.core.truth_(ns__$2))if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2,cljs.core.namespace(k__$1))){var G__12734=ns__$2;var G__12735=entries__$1;var G__12736=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2,cljs.core.strip_ns(k__$1),v__$1);ns__$1=G__12734;G__12715__$1=G__12735;lm__$1=G__12736;continue}else return null;else{var temp__4657__auto__=cljs.core.namespace(k__$1);
if(cljs.core.truth_(temp__4657__auto__)){var new_ns=temp__4657__auto__;var G__12737=new_ns;var G__12738=entries__$1;var G__12739=cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2,cljs.core.strip_ns(k__$1),v__$1);ns__$1=G__12737;G__12715__$1=G__12738;lm__$1=G__12739;continue}else return null}else return null;else return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[ns__$2,lm__$2],null);break}}else return null};
cljs.core.print_prefix_map=function cljs$core$print_prefix_map(prefix,m,print_one,writer,opts){return cljs.core.pr_sequential_writer(writer,function(e,w,opts__$1){var G__12740_12746=cljs.core.key(e);var G__12741_12747=w;var G__12742_12748=opts__$1;print_one.cljs$core$IFn$_invoke$arity$3?print_one.cljs$core$IFn$_invoke$arity$3(G__12740_12746,G__12741_12747,G__12742_12748):print_one.call(null,G__12740_12746,G__12741_12747,G__12742_12748);cljs.core._write(w," ");var G__12743=cljs.core.val(e);var G__12744=
w;var G__12745=opts__$1;return print_one.cljs$core$IFn$_invoke$arity$3?print_one.cljs$core$IFn$_invoke$arity$3(G__12743,G__12744,G__12745):print_one.call(null,G__12743,G__12744,G__12745)},[cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),"{"].join(""),", ","}",opts,cljs.core.seq(m))};
cljs.core.print_map=function cljs$core$print_map(m,print_one,writer,opts){var vec__12749=cljs.core.map_QMARK_(m)?cljs.core.lift_ns(m):null;var ns=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12749,0,null);var lift_map=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12749,1,null);if(cljs.core.truth_(ns))return cljs.core.print_prefix_map(["#:",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""),lift_map,print_one,writer,opts);else return cljs.core.print_prefix_map(null,m,print_one,writer,
opts)};cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(a,writer,opts){var a__$1=this;cljs.core._write(writer,"#object[cljs.core.Volatile ");cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"val","val",128701612),a__$1.state],null),writer,opts);return cljs.core._write(writer,"]")};cljs.core.Var.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(a,writer,opts){var a__$1=this;cljs.core._write(writer,"#'");return cljs.core.pr_writer(a__$1.sym,writer,opts)};cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1)};cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1)};cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1)};cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts)};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts)};cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1)};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts)};cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1)};cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(a,writer,opts){var a__$1=this;cljs.core._write(writer,"#object[cljs.core.Atom ");cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"val","val",128701612),a__$1.state],null),writer,opts);return cljs.core._write(writer,"]")};cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1)};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1)};cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core._write(writer,"()")};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1))};cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts)};cljs.core.Range.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs.core.List.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};
cljs.core.Symbol.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(y instanceof cljs.core.Symbol)return cljs.core.compare_symbols(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};cljs.core.Keyword.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(y instanceof cljs.core.Keyword)return cljs.core.compare_keywords(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};cljs.core.Subvec.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(cljs.core.vector_QMARK_(y))return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};cljs.core.PersistentVector.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(cljs.core.vector_QMARK_(y))return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};cljs.core.MapEntry.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(cljs.core.vector_QMARK_(y))return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};cljs.core.BlackNode.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(cljs.core.vector_QMARK_(y))return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};cljs.core.RedNode.prototype.cljs$core$IComparable$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var x__$1=this;if(cljs.core.vector_QMARK_(y))return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};
cljs.core.alter_meta_BANG_=function cljs$core$alter_meta_BANG_(var_args){var args__9117__auto__=[];var len__9107__auto___12755=arguments.length;var i__9108__auto___12756=0;while(true){if(i__9108__auto___12756<len__9107__auto___12755){args__9117__auto__.push(arguments[i__9108__auto___12756]);var G__12757=i__9108__auto___12756+1;i__9108__auto___12756=G__12757;continue}else;break}var argseq__9118__auto__=2<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(2),0,null):null;return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
arguments[1],argseq__9118__auto__)};cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(iref,f,args){return iref.meta=cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args)};cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity=2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo=function(seq12752){var G__12753=cljs.core.first(seq12752);var seq12752__$1=cljs.core.next(seq12752);var G__12754=cljs.core.first(seq12752__$1);var seq12752__$2=cljs.core.next(seq12752__$1);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12753,G__12754,seq12752__$2)};cljs.core.reset_meta_BANG_=function cljs$core$reset_meta_BANG_(iref,m){return iref.meta=m};
cljs.core.add_watch=function cljs$core$add_watch(iref,key,f){cljs.core._add_watch(iref,key,f);return iref};cljs.core.remove_watch=function cljs$core$remove_watch(iref,key){cljs.core._remove_watch(iref,key);return iref};cljs.core.gensym_counter=null;
cljs.core.gensym=function cljs$core$gensym(var_args){var G__12759=arguments.length;switch(G__12759){case 0:return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.gensym.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__")};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1=function(prefix_string){if(cljs.core.gensym_counter==null)cljs.core.gensym_counter=cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);else;return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(""))};cljs.core.gensym.cljs$lang$maxFixedArity=1;
cljs.core.Delay=function(f,value){this.f=f;this.value=value;this.cljs$lang$protocol_mask$partition0$=2147516416;this.cljs$lang$protocol_mask$partition1$=1};cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1=function(_){var self__=this;var ___$1=this;if(cljs.core.truth_(self__.f)){self__.value=self__.f.cljs$core$IFn$_invoke$arity$0?self__.f.cljs$core$IFn$_invoke$arity$0():self__.f.call(null);self__.f=null}else;return self__.value};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1=function(x){var self__=this;var x__$1=this;return cljs.core.not(self__.f)};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(x,writer,opts){var self__=this;var x__$1=this;cljs.core._write(writer,"#object[cljs.core.Delay ");cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"status","status",-1997798413),self__.f==null?new cljs.core.Keyword(null,"ready","ready",1086465795):new cljs.core.Keyword(null,"pending","pending",-220036727),new cljs.core.Keyword(null,"val","val",128701612),self__.value],null),writer,
opts);return cljs.core._write(writer,"]")};
cljs.core.Delay.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.core.Delay.cljs$lang$type=true;cljs.core.Delay.cljs$lang$ctorStr="cljs.core/Delay";cljs.core.Delay.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Delay")};cljs.core.__GT_Delay=function cljs$core$__GT_Delay(f,value){return new cljs.core.Delay(f,value)};cljs.core.delay_QMARK_=function cljs$core$delay_QMARK_(x){return x instanceof cljs.core.Delay};
cljs.core.force=function cljs$core$force(x){if(cljs.core.delay_QMARK_(x))return cljs.core.deref(x);else return x};cljs.core.realized_QMARK_=function cljs$core$realized_QMARK_(x){return cljs.core._realized_QMARK_(x)};
cljs.core.preserving_reduced=function cljs$core$preserving_reduced(rf){return function(p1__12761_SHARP_,p2__12762_SHARP_){var ret=rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(p1__12761_SHARP_,p2__12762_SHARP_):rf.call(null,p1__12761_SHARP_,p2__12762_SHARP_);if(cljs.core.reduced_QMARK_(ret))return cljs.core.reduced(ret);else return ret}};
cljs.core.cat=function cljs$core$cat(rf){var rf1=cljs.core.preserving_reduced(rf);return function(rf1){return function(){var G__12763=null;var G__12763__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12763__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__12763__2=function(result,input){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input)};
G__12763=function(result,input){switch(arguments.length){case 0:return G__12763__0.call(this);case 1:return G__12763__1.call(this,result);case 2:return G__12763__2.call(this,result,input)}throw new Error("Invalid arity: "+arguments.length);};G__12763.cljs$core$IFn$_invoke$arity$0=G__12763__0;G__12763.cljs$core$IFn$_invoke$arity$1=G__12763__1;G__12763.cljs$core$IFn$_invoke$arity$2=G__12763__2;return G__12763}()}(rf1)};
cljs.core.halt_when=function cljs$core$halt_when(var_args){var G__12765=arguments.length;switch(G__12765){case 1:return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1=function(pred){return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred,null)};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2=function(pred,retf){return function(rf){return function(){var G__12769=null;var G__12769__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12769__1=function(result){if(cljs.core.map_QMARK_(result)&&cljs.core.contains_QMARK_(result,new cljs.core.Keyword("cljs.core","halt","cljs.core/halt",-1049036715)))return(new cljs.core.Keyword("cljs.core","halt","cljs.core/halt",-1049036715)).cljs$core$IFn$_invoke$arity$1(result);
else return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__12769__2=function(result,input){if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1?pred.cljs$core$IFn$_invoke$arity$1(input):pred.call(null,input)))return cljs.core.reduced(new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword("cljs.core","halt","cljs.core/halt",-1049036715),cljs.core.truth_(retf)?function(){var G__12766=rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):
rf.call(null,result);var G__12767=input;return retf.cljs$core$IFn$_invoke$arity$2?retf.cljs$core$IFn$_invoke$arity$2(G__12766,G__12767):retf.call(null,G__12766,G__12767)}():input],null));else return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input)};G__12769=function(result,input){switch(arguments.length){case 0:return G__12769__0.call(this);case 1:return G__12769__1.call(this,result);case 2:return G__12769__2.call(this,result,input)}throw new Error("Invalid arity: "+
arguments.length);};G__12769.cljs$core$IFn$_invoke$arity$0=G__12769__0;G__12769.cljs$core$IFn$_invoke$arity$1=G__12769__1;G__12769.cljs$core$IFn$_invoke$arity$2=G__12769__2;return G__12769}()}};cljs.core.halt_when.cljs$lang$maxFixedArity=2;
cljs.core.dedupe=function cljs$core$dedupe(var_args){var G__12771=arguments.length;switch(G__12771){case 0:return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0=function(){return function(rf){var pa=cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));return function(pa){return function(){var G__12773=null;var G__12773__0=function(){return rf.cljs$core$IFn$_invoke$arity$0?rf.cljs$core$IFn$_invoke$arity$0():rf.call(null)};var G__12773__1=function(result){return rf.cljs$core$IFn$_invoke$arity$1?rf.cljs$core$IFn$_invoke$arity$1(result):rf.call(null,result)};var G__12773__2=
function(result,input){var prior=cljs.core.deref(pa);cljs.core.vreset_BANG_(pa,input);if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input))return result;else return rf.cljs$core$IFn$_invoke$arity$2?rf.cljs$core$IFn$_invoke$arity$2(result,input):rf.call(null,result,input)};G__12773=function(result,input){switch(arguments.length){case 0:return G__12773__0.call(this);case 1:return G__12773__1.call(this,result);case 2:return G__12773__2.call(this,result,input)}throw new Error("Invalid arity: "+
arguments.length);};G__12773.cljs$core$IFn$_invoke$arity$0=G__12773__0;G__12773.cljs$core$IFn$_invoke$arity$1=G__12773__1;G__12773.cljs$core$IFn$_invoke$arity$2=G__12773__2;return G__12773}()}(pa)}};cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1=function(coll){return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(),coll)};cljs.core.dedupe.cljs$lang$maxFixedArity=1;
cljs.core.random_sample=function cljs$core$random_sample(var_args){var G__12775=arguments.length;switch(G__12775){case 1:return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1=function(prob){return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_){return cljs.core.rand.cljs$core$IFn$_invoke$arity$0()<prob})};cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2=function(prob,coll){return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_){return cljs.core.rand.cljs$core$IFn$_invoke$arity$0()<prob},coll)};cljs.core.random_sample.cljs$lang$maxFixedArity=2;
cljs.core.Eduction=function(xform,coll){this.xform=xform;this.coll=coll;this.cljs$lang$protocol_mask$partition0$=2173173760;this.cljs$lang$protocol_mask$partition1$=131072};
cljs.core.Eduction.prototype.indexOf=function(){var G__12777=null;var G__12777__1=function(x){var self__=this;var coll__$1=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,0)};var G__12777__2=function(x,start){var self__=this;var coll__$1=this;return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,start)};G__12777=function(x,start){switch(arguments.length){case 1:return G__12777__1.call(this,x);case 2:return G__12777__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__12777.cljs$core$IFn$_invoke$arity$1=G__12777__1;G__12777.cljs$core$IFn$_invoke$arity$2=G__12777__2;return G__12777}();
cljs.core.Eduction.prototype.lastIndexOf=function(){var G__12778=null;var G__12778__1=function(x){var self__=this;var coll__$1=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,cljs.core.count(coll__$1))};var G__12778__2=function(x,start){var self__=this;var coll__$1=this;return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,start)};G__12778=function(x,start){switch(arguments.length){case 1:return G__12778__1.call(this,x);case 2:return G__12778__2.call(this,
x,start)}throw new Error("Invalid arity: "+arguments.length);};G__12778.cljs$core$IFn$_invoke$arity$1=G__12778__1;G__12778.cljs$core$IFn$_invoke$arity$2=G__12778__2;return G__12778}();cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1=function(_){var self__=this;var ___$1=this;return cljs.core.TransformerIterator.create(self__.xform,cljs.core.iter(self__.coll))};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1=function(_){var self__=this;var ___$1=this;return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll))};cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2=function(_,f){var self__=this;var ___$1=this;return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform,cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f),self__.coll)};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3=function(_,f,init){var self__=this;var ___$1=this;return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f),init,self__.coll)};cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll__$1,writer,opts){var self__=this;var coll__$2=this;return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2)};
cljs.core.Eduction.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"xform","xform",-85179481,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)],null)};cljs.core.Eduction.cljs$lang$type=true;cljs.core.Eduction.cljs$lang$ctorStr="cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Eduction")};cljs.core.__GT_Eduction=function cljs$core$__GT_Eduction(xform,coll){return new cljs.core.Eduction(xform,coll)};var G__12779_12782=cljs.core.Eduction.prototype;var G__12780_12783=cljs.core.ITER_SYMBOL;
var G__12781_12784=function(G__12779_12782,G__12780_12783){return function(){var this__8978__auto__=this;return cljs.core.es6_iterator(this__8978__auto__)}}(G__12779_12782,G__12780_12783);goog.object.set(G__12779_12782,G__12780_12783,G__12781_12784);
cljs.core.eduction=function cljs$core$eduction(var_args){var args__9117__auto__=[];var len__9107__auto___12786=arguments.length;var i__9108__auto___12787=0;while(true){if(i__9108__auto___12787<len__9107__auto___12786){args__9117__auto__.push(arguments[i__9108__auto___12787]);var G__12788=i__9108__auto___12787+1;i__9108__auto___12787=G__12788;continue}else;break}var argseq__9118__auto__=0<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(0),0,null):null;return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__9118__auto__)};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic=function(xforms){return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp,cljs.core.butlast(xforms)),cljs.core.last(xforms))};cljs.core.eduction.cljs$lang$maxFixedArity=0;cljs.core.eduction.cljs$lang$applyTo=function(seq12785){var self__9095__auto__=this;return self__9095__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12785))};
cljs.core.run_BANG_=function cljs$core$run_BANG_(proc,coll){cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12790_SHARP_,p2__12789_SHARP_){return proc.cljs$core$IFn$_invoke$arity$1?proc.cljs$core$IFn$_invoke$arity$1(p2__12789_SHARP_):proc.call(null,p2__12789_SHARP_)},null,coll);return null};cljs.core.IEncodeJS=function(){};
cljs.core._clj__GT_js=function cljs$core$_clj__GT_js(x){if(!(x==null)&&!(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1==null))return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._clj__GT_js[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8607__auto__.call(null,x);else{var m__8604__auto__=cljs.core._clj__GT_js["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8604__auto__.call(null,x);else throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs",x);}}};
cljs.core._key__GT_js=function cljs$core$_key__GT_js(x){if(!(x==null)&&!(x.cljs$core$IEncodeJS$_key__GT_js$arity$1==null))return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._key__GT_js[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8607__auto__.call(null,x);else{var m__8604__auto__=cljs.core._key__GT_js["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(x):m__8604__auto__.call(null,x);else throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs",x);}}};
cljs.core.key__GT_js=function cljs$core$key__GT_js(var_args){var G__12792=arguments.length;switch(G__12792){case 1:return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1=function(k){return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k,cljs.core.clj__GT_js)};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2=function(k,primitive_fn){if(!(k==null)?false||cljs.core.PROTOCOL_SENTINEL===k.cljs$core$IEncodeJS$?true:!k.cljs$lang$protocol_mask$partition$?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,k):false:cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,k))return cljs.core._clj__GT_js(k);else if(typeof k==="string"||typeof k==="number"||k instanceof cljs.core.Keyword||k instanceof cljs.core.Symbol)return primitive_fn.cljs$core$IFn$_invoke$arity$1?
primitive_fn.cljs$core$IFn$_invoke$arity$1(k):primitive_fn.call(null,k);else return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k],0))};cljs.core.key__GT_js.cljs$lang$maxFixedArity=2;
cljs.core.clj__GT_js=function cljs$core$clj__GT_js(var_args){var args__9117__auto__=[];var len__9107__auto___12870=arguments.length;var i__9108__auto___12871=0;while(true){if(i__9108__auto___12871<len__9107__auto___12870){args__9117__auto__.push(arguments[i__9108__auto___12871]);var G__12872=i__9108__auto___12871+1;i__9108__auto___12871=G__12872;continue}else;break}var argseq__9118__auto__=1<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(1),0,null):null;return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0],
argseq__9118__auto__)};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic=function(x,p__12797){var map__12798=p__12797;var map__12798__$1=(!(map__12798==null)?map__12798.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__12798.cljs$core$ISeq$?true:false:false)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12798):map__12798;var options=map__12798__$1;var keyword_fn=cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__12798__$1,new cljs.core.Keyword(null,"keyword-fn","keyword-fn",
-64566675),cljs.core.name);var keyfn=function(map__12798,map__12798__$1,options,keyword_fn){return function cljs$core$keyfn(k){return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k,thisfn)}}(map__12798,map__12798__$1,options,keyword_fn);var thisfn=function(map__12798,map__12798__$1,options,keyword_fn){return function cljs$core$thisfn(x__$1){if(x__$1==null)return null;else if(!(x__$1==null)?false||cljs.core.PROTOCOL_SENTINEL===x__$1.cljs$core$IEncodeJS$?true:!x__$1.cljs$lang$protocol_mask$partition$?
cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,x__$1):false:cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,x__$1))return cljs.core._clj__GT_js(x__$1);else if(x__$1 instanceof cljs.core.Keyword)return keyword_fn.cljs$core$IFn$_invoke$arity$1?keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1):keyword_fn.call(null,x__$1);else if(x__$1 instanceof cljs.core.Symbol)return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);else if(cljs.core.map_QMARK_(x__$1)){var m={};var seq__12838_12873=cljs.core.seq(x__$1);
var chunk__12839_12874=null;var count__12840_12875=0;var i__12841_12876=0;while(true){if(i__12841_12876<count__12840_12875){var vec__12854_12877=chunk__12839_12874.cljs$core$IIndexed$_nth$arity$2(null,i__12841_12876);var k_12878=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12854_12877,0,null);var v_12879=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12854_12877,1,null);var G__12857_12880=m;var G__12858_12881=keyfn(k_12878);var G__12859_12882=cljs$core$thisfn(v_12879);goog.object.set(G__12857_12880,
G__12858_12881,G__12859_12882);var G__12883=seq__12838_12873;var G__12884=chunk__12839_12874;var G__12885=count__12840_12875;var G__12886=i__12841_12876+1;seq__12838_12873=G__12883;chunk__12839_12874=G__12884;count__12840_12875=G__12885;i__12841_12876=G__12886;continue}else{var temp__4657__auto___12887=cljs.core.seq(seq__12838_12873);if(temp__4657__auto___12887){var seq__12838_12888__$1=temp__4657__auto___12887;if(cljs.core.chunked_seq_QMARK_(seq__12838_12888__$1)){var c__8771__auto___12889=cljs.core.chunk_first(seq__12838_12888__$1);
var G__12890=cljs.core.chunk_rest(seq__12838_12888__$1);var G__12891=c__8771__auto___12889;var G__12892=cljs.core.count(c__8771__auto___12889);var G__12893=0;seq__12838_12873=G__12890;chunk__12839_12874=G__12891;count__12840_12875=G__12892;i__12841_12876=G__12893;continue}else{var vec__12860_12894=cljs.core.first(seq__12838_12888__$1);var k_12895=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12860_12894,0,null);var v_12896=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12860_12894,1,null);var G__12863_12897=
m;var G__12864_12898=keyfn(k_12895);var G__12865_12899=cljs$core$thisfn(v_12896);goog.object.set(G__12863_12897,G__12864_12898,G__12865_12899);var G__12900=cljs.core.next(seq__12838_12888__$1);var G__12901=null;var G__12902=0;var G__12903=0;seq__12838_12873=G__12900;chunk__12839_12874=G__12901;count__12840_12875=G__12902;i__12841_12876=G__12903;continue}}else;}break}return m}else if(cljs.core.coll_QMARK_(x__$1)){var arr=[];var seq__12866_12904=cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,
x__$1));var chunk__12867_12905=null;var count__12868_12906=0;var i__12869_12907=0;while(true){if(i__12869_12907<count__12868_12906){var x_12908__$2=chunk__12867_12905.cljs$core$IIndexed$_nth$arity$2(null,i__12869_12907);arr.push(x_12908__$2);var G__12909=seq__12866_12904;var G__12910=chunk__12867_12905;var G__12911=count__12868_12906;var G__12912=i__12869_12907+1;seq__12866_12904=G__12909;chunk__12867_12905=G__12910;count__12868_12906=G__12911;i__12869_12907=G__12912;continue}else{var temp__4657__auto___12913=
cljs.core.seq(seq__12866_12904);if(temp__4657__auto___12913){var seq__12866_12914__$1=temp__4657__auto___12913;if(cljs.core.chunked_seq_QMARK_(seq__12866_12914__$1)){var c__8771__auto___12915=cljs.core.chunk_first(seq__12866_12914__$1);var G__12916=cljs.core.chunk_rest(seq__12866_12914__$1);var G__12917=c__8771__auto___12915;var G__12918=cljs.core.count(c__8771__auto___12915);var G__12919=0;seq__12866_12904=G__12916;chunk__12867_12905=G__12917;count__12868_12906=G__12918;i__12869_12907=G__12919;continue}else{var x_12920__$2=
cljs.core.first(seq__12866_12914__$1);arr.push(x_12920__$2);var G__12921=cljs.core.next(seq__12866_12914__$1);var G__12922=null;var G__12923=0;var G__12924=0;seq__12866_12904=G__12921;chunk__12867_12905=G__12922;count__12868_12906=G__12923;i__12869_12907=G__12924;continue}}else;}break}return arr}else return x__$1}}(map__12798,map__12798__$1,options,keyword_fn);return thisfn(x)};cljs.core.clj__GT_js.cljs$lang$maxFixedArity=1;
cljs.core.clj__GT_js.cljs$lang$applyTo=function(seq12795){var G__12796=cljs.core.first(seq12795);var seq12795__$1=cljs.core.next(seq12795);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12796,seq12795__$1)};cljs.core.IEncodeClojure=function(){};
cljs.core._js__GT_clj=function cljs$core$_js__GT_clj(x,options){if(!(x==null)&&!(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2==null))return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);else{var x__8606__auto__=x==null?null:x;var m__8607__auto__=cljs.core._js__GT_clj[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(x,options):m__8607__auto__.call(null,x,options);else{var m__8604__auto__=
cljs.core._js__GT_clj["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(x,options):m__8604__auto__.call(null,x,options);else throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj",x);}}};
cljs.core.js__GT_clj=function cljs$core$js__GT_clj(var_args){var G__12930=arguments.length;switch(G__12930){case 1:return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___12935=arguments.length;var i__9108__auto___12936=0;while(true){if(i__9108__auto___12936<len__9107__auto___12935){args_arr__9132__auto__.push(arguments[i__9108__auto___12936]);var G__12937=i__9108__auto___12936+1;i__9108__auto___12936=G__12937;continue}else;
break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(1),0,null);return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__9133__auto__)}};cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1=function(x){return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false],0))};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic=function(x,opts){var map__12931=opts;var map__12931__$1=(!(map__12931==null)?map__12931.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__12931.cljs$core$ISeq$?true:false:false)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12931):map__12931;var keywordize_keys=cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12931__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn=cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str;var f=function(map__12931,map__12931__$1,keywordize_keys,keyfn){return function cljs$core$thisfn(x__$1){if(!(x__$1==null)?false||cljs.core.PROTOCOL_SENTINEL===x__$1.cljs$core$IEncodeClojure$?true:!x__$1.cljs$lang$protocol_mask$partition$?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,x__$1):false:cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,x__$1))return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,
opts));else if(cljs.core.seq_QMARK_(x__$1))return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));else if(cljs.core.map_entry_QMARK_(x__$1))return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)),cljs$core$thisfn(cljs.core.val(x__$1)),null);else if(cljs.core.coll_QMARK_(x__$1))return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn),x__$1);
else if(cljs.core.array_QMARK_(x__$1))return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__12931,map__12931__$1,keywordize_keys,keyfn){return function(p1__12925_SHARP_,p2__12926_SHARP_){return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__12925_SHARP_,cljs$core$thisfn(p2__12926_SHARP_))}}(map__12931,map__12931__$1,keywordize_keys,keyfn),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),x__$1));else if(cljs.core.type(x__$1)===Object)return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__12931,
map__12931__$1,keywordize_keys,keyfn){return function(r,k){return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r,keyfn.cljs$core$IFn$_invoke$arity$1?keyfn.cljs$core$IFn$_invoke$arity$1(k):keyfn.call(null,k),cljs$core$thisfn(goog.object.get(x__$1,k)))}}(map__12931,map__12931__$1,keywordize_keys,keyfn),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),cljs.core.js_keys(x__$1)));else return x__$1}}(map__12931,map__12931__$1,keywordize_keys,keyfn);return f(x)};
cljs.core.js__GT_clj.cljs$lang$applyTo=function(seq12928){var G__12929=cljs.core.first(seq12928);var seq12928__$1=cljs.core.next(seq12928);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12929,seq12928__$1)};cljs.core.js__GT_clj.cljs$lang$maxFixedArity=1;
cljs.core.memoize=function cljs$core$memoize(f){var mem=cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);return function(mem){return function(){var G__12938__delegate=function(args){var v=cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem),args,cljs.core.lookup_sentinel);if(v===cljs.core.lookup_sentinel){var ret=cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);return ret}else return v};
var G__12938=function(var_args){var args=null;if(arguments.length>0){var G__12939__i=0,G__12939__a=new Array(arguments.length-0);while(G__12939__i<G__12939__a.length){G__12939__a[G__12939__i]=arguments[G__12939__i+0];++G__12939__i}args=new cljs.core.IndexedSeq(G__12939__a,0,null)}return G__12938__delegate.call(this,args)};G__12938.cljs$lang$maxFixedArity=0;G__12938.cljs$lang$applyTo=function(arglist__12940){var args=cljs.core.seq(arglist__12940);return G__12938__delegate(args)};G__12938.cljs$core$IFn$_invoke$arity$variadic=
G__12938__delegate;return G__12938}()}(mem)};
cljs.core.trampoline=function cljs$core$trampoline(var_args){var G__12944=arguments.length;switch(G__12944){case 1:return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:var args_arr__9132__auto__=[];var len__9107__auto___12946=arguments.length;var i__9108__auto___12947=0;while(true){if(i__9108__auto___12947<len__9107__auto___12946){args_arr__9132__auto__.push(arguments[i__9108__auto___12947]);var G__12948=i__9108__auto___12947+1;i__9108__auto___12947=G__12948;continue}else;
break}var argseq__9133__auto__=new cljs.core.IndexedSeq(args_arr__9132__auto__.slice(1),0,null);return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__9133__auto__)}};cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1=function(f){while(true){var ret=f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null);if(cljs.core.fn_QMARK_(ret)){var G__12949=ret;f=G__12949;continue}else return ret;break}};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic=function(f,args){return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function(){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args)})};cljs.core.trampoline.cljs$lang$applyTo=function(seq12942){var G__12943=cljs.core.first(seq12942);var seq12942__$1=cljs.core.next(seq12942);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12943,seq12942__$1)};
cljs.core.trampoline.cljs$lang$maxFixedArity=1;cljs.core.rand=function cljs$core$rand(var_args){var G__12951=arguments.length;switch(G__12951){case 0:return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.core.rand.cljs$core$IFn$_invoke$arity$0=function(){return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1)};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1=function(n){return Math.random()*n};cljs.core.rand.cljs$lang$maxFixedArity=1;cljs.core.rand_int=function cljs$core$rand_int(n){var G__12953=Math.random()*n;return Math.floor(G__12953)};cljs.core.rand_nth=function cljs$core$rand_nth(coll){return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)))};
cljs.core.group_by=function cljs$core$group_by(f,coll){return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret,x){var k=f.cljs$core$IFn$_invoke$arity$1?f.cljs$core$IFn$_invoke$arity$1(x):f.call(null,x);return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x))},cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll))};
cljs.core.make_hierarchy=function cljs$core$make_hierarchy(){return new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY],null)};cljs.core._global_hierarchy=null;
cljs.core.get_global_hierarchy=function cljs$core$get_global_hierarchy(){if(cljs.core._global_hierarchy==null)cljs.core._global_hierarchy=cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());else;return cljs.core._global_hierarchy};
cljs.core.swap_global_hierarchy_BANG_=function cljs$core$swap_global_hierarchy_BANG_(var_args){var args__9117__auto__=[];var len__9107__auto___12956=arguments.length;var i__9108__auto___12957=0;while(true){if(i__9108__auto___12957<len__9107__auto___12956){args__9117__auto__.push(arguments[i__9108__auto___12957]);var G__12958=i__9108__auto___12957+1;i__9108__auto___12957=G__12958;continue}else;break}var argseq__9118__auto__=1<args__9117__auto__.length?new cljs.core.IndexedSeq(args__9117__auto__.slice(1),
0,null):null;return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__9118__auto__)};cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(f,args){return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args)};cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity=1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo=function(seq12954){var G__12955=cljs.core.first(seq12954);var seq12954__$1=cljs.core.next(seq12954);var self__9094__auto__=this;return self__9094__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12955,seq12954__$1)};
cljs.core.isa_QMARK_=function cljs$core$isa_QMARK_(var_args){var G__12960=arguments.length;switch(G__12960){case 2:return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2=function(child,parent){return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()),child,parent)};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3=function(h,child,parent){var or__7908__auto__=cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);if(or__7908__auto__)return or__7908__auto__;else{var or__7908__auto____$1=cljs.core.contains_QMARK_(function(){var fexpr__12963=(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424)).cljs$core$IFn$_invoke$arity$1(h);return fexpr__12963.cljs$core$IFn$_invoke$arity$1?fexpr__12963.cljs$core$IFn$_invoke$arity$1(child):fexpr__12963.call(null,
child)}(),parent);if(or__7908__auto____$1)return or__7908__auto____$1;else{var and__7893__auto__=cljs.core.vector_QMARK_(parent);if(and__7893__auto__){var and__7893__auto____$1=cljs.core.vector_QMARK_(child);if(and__7893__auto____$1){var and__7893__auto____$2=cljs.core.count(parent)===cljs.core.count(child);if(and__7893__auto____$2){var ret=true;var i=0;while(true){if(!ret||i===cljs.core.count(parent))return ret;else{var G__12965=cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,child.cljs$core$IFn$_invoke$arity$1?
child.cljs$core$IFn$_invoke$arity$1(i):child.call(null,i),parent.cljs$core$IFn$_invoke$arity$1?parent.cljs$core$IFn$_invoke$arity$1(i):parent.call(null,i));var G__12966=i+1;ret=G__12965;i=G__12966;continue}break}}else return and__7893__auto____$2}else return and__7893__auto____$1}else return and__7893__auto__}}};cljs.core.isa_QMARK_.cljs$lang$maxFixedArity=3;
cljs.core.parents=function cljs$core$parents(var_args){var G__12968=arguments.length;switch(G__12968){case 1:return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1=function(tag){return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag)};cljs.core.parents.cljs$core$IFn$_invoke$arity$2=function(h,tag){return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null,"parents","parents",-2027538891)).cljs$core$IFn$_invoke$arity$1(h),tag))};cljs.core.parents.cljs$lang$maxFixedArity=2;
cljs.core.ancestors=function cljs$core$ancestors(var_args){var G__12971=arguments.length;switch(G__12971){case 1:return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1=function(tag){return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag)};cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2=function(h,tag){return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null,"ancestors","ancestors",-776045424)).cljs$core$IFn$_invoke$arity$1(h),tag))};cljs.core.ancestors.cljs$lang$maxFixedArity=2;
cljs.core.descendants=function cljs$core$descendants(var_args){var G__12974=arguments.length;switch(G__12974){case 1:return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1=function(tag){return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag)};cljs.core.descendants.cljs$core$IFn$_invoke$arity$2=function(h,tag){return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null,"descendants","descendants",1824886031)).cljs$core$IFn$_invoke$arity$1(h),tag))};cljs.core.descendants.cljs$lang$maxFixedArity=2;
cljs.core.derive=function cljs$core$derive(var_args){var G__12977=arguments.length;switch(G__12977){case 2:return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2=function(tag,parent){if(cljs.core.truth_(cljs.core.namespace(parent)));else throw new Error("Assert failed: (namespace parent)");cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag,parent],0));return null};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3=function(h,tag,parent){if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent));else throw new Error("Assert failed: (not\x3d tag parent)");var tp=(new cljs.core.Keyword(null,"parents","parents",-2027538891)).cljs$core$IFn$_invoke$arity$1(h);var td=(new cljs.core.Keyword(null,"descendants","descendants",1824886031)).cljs$core$IFn$_invoke$arity$1(h);var ta=(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424)).cljs$core$IFn$_invoke$arity$1(h);
var tf=function(tp,td,ta){return function(m,source,sources,target,targets){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp,td,ta){return function(ret,k){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,targets.cljs$core$IFn$_invoke$arity$1?targets.cljs$core$IFn$_invoke$arity$1(target):targets.call(null,
target))))}}(tp,td,ta),m,cljs.core.cons(source,sources.cljs$core$IFn$_invoke$arity$1?sources.cljs$core$IFn$_invoke$arity$1(source):sources.call(null,source)))}}(tp,td,ta);var or__7908__auto__=cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1?tp.cljs$core$IFn$_invoke$arity$1(tag):tp.call(null,tag),parent)?null:function(){if(cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1?ta.cljs$core$IFn$_invoke$arity$1(tag):ta.call(null,tag),parent))throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),
"already has",cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent),"as ancestor"].join(""));else;if(cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1?ta.cljs$core$IFn$_invoke$arity$1(parent):ta.call(null,parent),tag))throw new Error(["Cyclic derivation:",cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent),"has",cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),"as ancestor"].join(""));else;return new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"parents","parents",-2027538891),
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null,"parents","parents",-2027538891)).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf((new cljs.core.Keyword(null,"ancestors","ancestors",-776045424)).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants",
"descendants",1824886031),tf((new cljs.core.Keyword(null,"descendants","descendants",1824886031)).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)],null)}();if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return h};cljs.core.derive.cljs$lang$maxFixedArity=3;
cljs.core.underive=function cljs$core$underive(var_args){var G__12983=arguments.length;switch(G__12983){case 2:return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2=function(tag,parent){cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag,parent],0));return null};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3=function(h,tag,parent){var parentMap=(new cljs.core.Keyword(null,"parents","parents",-2027538891)).cljs$core$IFn$_invoke$arity$1(h);var childsParents=cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1?parentMap.cljs$core$IFn$_invoke$arity$1(tag):parentMap.call(null,tag))?cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1?parentMap.cljs$core$IFn$_invoke$arity$1(tag):parentMap.call(null,tag),parent):cljs.core.PersistentHashSet.EMPTY;
var newParents=cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag);var deriv_seq=cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap,childsParents,newParents){return function(p1__12979_SHARP_){return cljs.core.cons(cljs.core.first(p1__12979_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12979_SHARP_),cljs.core.second(p1__12979_SHARP_)))}}(parentMap,
childsParents,newParents),cljs.core.seq(newParents)));if(cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1?parentMap.cljs$core$IFn$_invoke$arity$1(tag):parentMap.call(null,tag),parent))return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap,childsParents,newParents,deriv_seq){return function(p1__12980_SHARP_,p2__12981_SHARP_){return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12980_SHARP_,p2__12981_SHARP_)}}(parentMap,childsParents,newParents,
deriv_seq),cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2,deriv_seq));else return h};cljs.core.underive.cljs$lang$maxFixedArity=3;cljs.core.reset_cache=function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,function(_){return cljs.core.deref(method_table)});return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,function(_){return cljs.core.deref(hierarchy)})};
cljs.core.prefers_STAR_=function cljs$core$prefers_STAR_(x,y,prefer_table){var xprefs=function(){var fexpr__12985=cljs.core.deref(prefer_table);return fexpr__12985.cljs$core$IFn$_invoke$arity$1?fexpr__12985.cljs$core$IFn$_invoke$arity$1(x):fexpr__12985.call(null,x)}();var or__7908__auto__=cljs.core.truth_(function(){var and__7893__auto__=xprefs;if(cljs.core.truth_(and__7893__auto__))return xprefs.cljs$core$IFn$_invoke$arity$1?xprefs.cljs$core$IFn$_invoke$arity$1(y):xprefs.call(null,y);else return and__7893__auto__}())?
true:null;if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else{var or__7908__auto____$1=function(){var ps=cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);while(true){if(cljs.core.count(ps)>0){if(cljs.core.truth_(function(){var G__12989=x;var G__12990=cljs.core.first(ps);var G__12991=prefer_table;return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3?cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__12989,G__12990,G__12991):cljs.core.prefers_STAR_.call(null,G__12989,G__12990,
G__12991)}()));else;var G__12998=cljs.core.rest(ps);ps=G__12998;continue}else return null;break}}();if(cljs.core.truth_(or__7908__auto____$1))return or__7908__auto____$1;else{var or__7908__auto____$2=function(){var ps=cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);while(true){if(cljs.core.count(ps)>0){if(cljs.core.truth_(function(){var G__12995=cljs.core.first(ps);var G__12996=y;var G__12997=prefer_table;return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3?cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__12995,
G__12996,G__12997):cljs.core.prefers_STAR_.call(null,G__12995,G__12996,G__12997)}()));else;var G__12999=cljs.core.rest(ps);ps=G__12999;continue}else return null;break}}();if(cljs.core.truth_(or__7908__auto____$2))return or__7908__auto____$2;else return false}}};
cljs.core.dominates=function cljs$core$dominates(x,y,prefer_table,hierarchy){var or__7908__auto__=cljs.core.prefers_STAR_(x,y,prefer_table);if(cljs.core.truth_(or__7908__auto__))return or__7908__auto__;else return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy,x,y)};
cljs.core.find_and_cache_best_method=function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val){var best_entry=cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be,p__13000){var vec__13001=p__13000;var k=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13001,0,null);var _=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13001,1,null);var e=vec__13001;if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy),
dispatch_val,k)){var be2=be==null||cljs.core.dominates(k,cljs.core.first(be),prefer_table,cljs.core.deref(hierarchy))?e:be;if(cljs.core.dominates(cljs.core.first(be2),k,prefer_table,cljs.core.deref(hierarchy)));else throw new Error(["Multiple methods in multimethod '",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),"' match dispatch value: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)," -\x3e ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)," and ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)),
", and neither is preferred"].join(""));return be2}else return be},null,cljs.core.deref(method_table));var best_entry__$1=function(){var temp__4655__auto__=function(){var and__7893__auto__=best_entry==null;if(and__7893__auto__){var fexpr__13005=cljs.core.deref(method_table);return fexpr__13005.cljs$core$IFn$_invoke$arity$1?fexpr__13005.cljs$core$IFn$_invoke$arity$1(default_dispatch_val):fexpr__13005.call(null,default_dispatch_val)}else return and__7893__auto__}();if(cljs.core.truth_(temp__4655__auto__)){var entry=
temp__4655__auto__;return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[default_dispatch_val,entry],null)}else return best_entry}();if(cljs.core.truth_(best_entry__$1))if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy),cljs.core.deref(hierarchy))){cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry__$1));return cljs.core.second(best_entry__$1)}else{cljs.core.reset_cache(method_cache,
method_table,cached_hierarchy,hierarchy);return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8?cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val):cljs.core.find_and_cache_best_method.call(null,name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val)}else return null};cljs.core.IMultiFn=function(){};
cljs.core._reset=function cljs$core$_reset(mf){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_reset$arity$1==null))return mf.cljs$core$IMultiFn$_reset$arity$1(mf);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._reset[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8607__auto__.call(null,mf);else{var m__8604__auto__=cljs.core._reset["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?
m__8604__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8604__auto__.call(null,mf);else throw cljs.core.missing_protocol("IMultiFn.-reset",mf);}}};
cljs.core._add_method=function cljs$core$_add_method(mf,dispatch_val,method){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_add_method$arity$3==null))return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._add_method[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,method):m__8607__auto__.call(null,
mf,dispatch_val,method);else{var m__8604__auto__=cljs.core._add_method["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,method):m__8604__auto__.call(null,mf,dispatch_val,method);else throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);}}};
cljs.core._remove_method=function cljs$core$_remove_method(mf,dispatch_val){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_remove_method$arity$2==null))return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._remove_method[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val):m__8607__auto__.call(null,
mf,dispatch_val);else{var m__8604__auto__=cljs.core._remove_method["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val):m__8604__auto__.call(null,mf,dispatch_val);else throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);}}};
cljs.core._prefer_method=function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_prefer_method$arity$3==null))return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._prefer_method[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$3?m__8607__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,
dispatch_val_y):m__8607__auto__.call(null,mf,dispatch_val,dispatch_val_y);else{var m__8604__auto__=cljs.core._prefer_method["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$3?m__8604__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,dispatch_val_y):m__8604__auto__.call(null,mf,dispatch_val,dispatch_val_y);else throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);}}};
cljs.core._get_method=function cljs$core$_get_method(mf,dispatch_val){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_get_method$arity$2==null))return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._get_method[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$2?m__8607__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val):m__8607__auto__.call(null,mf,dispatch_val);
else{var m__8604__auto__=cljs.core._get_method["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$2?m__8604__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val):m__8604__auto__.call(null,mf,dispatch_val);else throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);}}};
cljs.core._methods=function cljs$core$_methods(mf){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_methods$arity$1==null))return mf.cljs$core$IMultiFn$_methods$arity$1(mf);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._methods[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8607__auto__.call(null,mf);else{var m__8604__auto__=cljs.core._methods["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8604__auto__.call(null,mf);else throw cljs.core.missing_protocol("IMultiFn.-methods",mf);}}};
cljs.core._prefers=function cljs$core$_prefers(mf){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_prefers$arity$1==null))return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._prefers[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8607__auto__.call(null,mf);else{var m__8604__auto__=cljs.core._prefers["_"];if(!(m__8604__auto__==
null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8604__auto__.call(null,mf);else throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);}}};
cljs.core._default_dispatch_val=function cljs$core$_default_dispatch_val(mf){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1==null))return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._default_dispatch_val[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8607__auto__.call(null,mf);
else{var m__8604__auto__=cljs.core._default_dispatch_val["_"];if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8604__auto__.call(null,mf);else throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val",mf);}}};
cljs.core._dispatch_fn=function cljs$core$_dispatch_fn(mf){if(!(mf==null)&&!(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1==null))return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);else{var x__8606__auto__=mf==null?null:mf;var m__8607__auto__=cljs.core._dispatch_fn[goog.typeOf(x__8606__auto__)];if(!(m__8607__auto__==null))return m__8607__auto__.cljs$core$IFn$_invoke$arity$1?m__8607__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8607__auto__.call(null,mf);else{var m__8604__auto__=cljs.core._dispatch_fn["_"];
if(!(m__8604__auto__==null))return m__8604__auto__.cljs$core$IFn$_invoke$arity$1?m__8604__auto__.cljs$core$IFn$_invoke$arity$1(mf):m__8604__auto__.call(null,mf);else throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn",mf);}}};
cljs.core.throw_no_method_error=function cljs$core$throw_no_method_error(name,dispatch_val){throw new Error(["No method in multimethod '",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),"' for dispatch value: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));};
cljs.core.MultiFn=function(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){this.name=name;this.dispatch_fn=dispatch_fn;this.default_dispatch_val=default_dispatch_val;this.hierarchy=hierarchy;this.method_table=method_table;this.prefer_table=prefer_table;this.method_cache=method_cache;this.cached_hierarchy=cached_hierarchy;this.cljs$lang$protocol_mask$partition0$=4194305;this.cljs$lang$protocol_mask$partition1$=4352};
cljs.core.MultiFn.prototype.call=function(){var G__13008=null;var G__13008__1=function(self__){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0():self__.dispatch_fn.call(null);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$0?
target_fn.cljs$core$IFn$_invoke$arity$0():target_fn.call(null)};var G__13008__2=function(self__,a){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a):self__.dispatch_fn.call(null,a);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$1?
target_fn.cljs$core$IFn$_invoke$arity$1(a):target_fn.call(null,a)};var G__13008__3=function(self__,a,b){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a,b):self__.dispatch_fn.call(null,a,b);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$2?
target_fn.cljs$core$IFn$_invoke$arity$2(a,b):target_fn.call(null,a,b)};var G__13008__4=function(self__,a,b,c){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a,b,c):self__.dispatch_fn.call(null,a,b,c);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$3?
target_fn.cljs$core$IFn$_invoke$arity$3(a,b,c):target_fn.call(null,a,b,c)};var G__13008__5=function(self__,a,b,c,d){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d):self__.dispatch_fn.call(null,a,b,c,d);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);
return target_fn.cljs$core$IFn$_invoke$arity$4?target_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d):target_fn.call(null,a,b,c,d)};var G__13008__6=function(self__,a,b,c,d,e){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e):self__.dispatch_fn.call(null,a,b,c,d,e);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$5?target_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e):target_fn.call(null,a,b,c,d,e)};var G__13008__7=function(self__,a,b,c,d,e,f){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f):self__.dispatch_fn.call(null,a,b,c,d,e,f);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));
else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$6?target_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f):target_fn.call(null,a,b,c,d,e,f)};var G__13008__8=function(self__,a,b,c,d,e,f,g){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):self__.dispatch_fn.call(null,a,b,c,d,e,f,g);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,
dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$7?target_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):target_fn.call(null,a,b,c,d,e,f,g)};var G__13008__9=function(self__,a,b,c,d,e,f,g,h){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):self__.dispatch_fn.call(null,
a,b,c,d,e,f,g,h);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$8?target_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):target_fn.call(null,a,b,c,d,e,f,g,h)};var G__13008__10=function(self__,a,b,c,d,e,f,g,h,i){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9?
self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$9?target_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):target_fn.call(null,a,b,c,d,e,f,g,h,i)};var G__13008__11=function(self__,a,b,c,d,e,f,g,h,i,j){var self__=this;
var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$10?target_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,
i,j):target_fn.call(null,a,b,c,d,e,f,g,h,i,j)};var G__13008__12=function(self__,a,b,c,d,e,f,g,h,i,j,k){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$11?target_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k)};var G__13008__13=function(self__,a,b,c,d,e,f,g,h,i,j,k,l){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,
dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$12?target_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l)};var G__13008__14=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a,
b,c,d,e,f,g,h,i,j,k,l,m):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$13?target_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m)};var G__13008__15=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){var self__=this;var self____$1=
this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$14?target_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,
i,j,k,l,m,n):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n)};var G__13008__16=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$15?target_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)};var G__13008__17=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,
i,j,k,l,m,n,o,p);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$16?target_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)};var G__13008__18=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=
self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$17?target_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):target_fn.call(null,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)};var G__13008__19=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$18?target_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)};var G__13008__20=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):self__.dispatch_fn.call(null,
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$19?target_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)};var G__13008__21=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){var self__=this;var self____$1=
this;var mf=self____$1;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$20?target_fn.cljs$core$IFn$_invoke$arity$20(a,
b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)};var G__13008__22=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){var self__=this;var self____$1=this;var mf=self____$1;var dispatch_val=cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0));var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));
else cljs.core.throw_no_method_error(self__.name,dispatch_val);return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0))};G__13008=function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){switch(arguments.length){case 1:return G__13008__1.call(this,self__);case 2:return G__13008__2.call(this,self__,a);case 3:return G__13008__3.call(this,self__,a,b);case 4:return G__13008__4.call(this,
self__,a,b,c);case 5:return G__13008__5.call(this,self__,a,b,c,d);case 6:return G__13008__6.call(this,self__,a,b,c,d,e);case 7:return G__13008__7.call(this,self__,a,b,c,d,e,f);case 8:return G__13008__8.call(this,self__,a,b,c,d,e,f,g);case 9:return G__13008__9.call(this,self__,a,b,c,d,e,f,g,h);case 10:return G__13008__10.call(this,self__,a,b,c,d,e,f,g,h,i);case 11:return G__13008__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);case 12:return G__13008__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);case 13:return G__13008__13.call(this,
self__,a,b,c,d,e,f,g,h,i,j,k,l);case 14:return G__13008__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);case 15:return G__13008__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);case 16:return G__13008__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);case 17:return G__13008__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);case 18:return G__13008__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);case 19:return G__13008__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);case 20:return G__13008__20.call(this,
self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);case 21:return G__13008__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);case 22:return G__13008__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest)}throw new Error("Invalid arity: "+(arguments.length-1));};G__13008.cljs$core$IFn$_invoke$arity$1=G__13008__1;G__13008.cljs$core$IFn$_invoke$arity$2=G__13008__2;G__13008.cljs$core$IFn$_invoke$arity$3=G__13008__3;G__13008.cljs$core$IFn$_invoke$arity$4=G__13008__4;G__13008.cljs$core$IFn$_invoke$arity$5=
G__13008__5;G__13008.cljs$core$IFn$_invoke$arity$6=G__13008__6;G__13008.cljs$core$IFn$_invoke$arity$7=G__13008__7;G__13008.cljs$core$IFn$_invoke$arity$8=G__13008__8;G__13008.cljs$core$IFn$_invoke$arity$9=G__13008__9;G__13008.cljs$core$IFn$_invoke$arity$10=G__13008__10;G__13008.cljs$core$IFn$_invoke$arity$11=G__13008__11;G__13008.cljs$core$IFn$_invoke$arity$12=G__13008__12;G__13008.cljs$core$IFn$_invoke$arity$13=G__13008__13;G__13008.cljs$core$IFn$_invoke$arity$14=G__13008__14;G__13008.cljs$core$IFn$_invoke$arity$15=
G__13008__15;G__13008.cljs$core$IFn$_invoke$arity$16=G__13008__16;G__13008.cljs$core$IFn$_invoke$arity$17=G__13008__17;G__13008.cljs$core$IFn$_invoke$arity$18=G__13008__18;G__13008.cljs$core$IFn$_invoke$arity$19=G__13008__19;G__13008.cljs$core$IFn$_invoke$arity$20=G__13008__20;G__13008.cljs$core$IFn$_invoke$arity$21=G__13008__21;G__13008.cljs$core$IFn$_invoke$arity$22=G__13008__22;return G__13008}();
cljs.core.MultiFn.prototype.apply=function(self__,args13006){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13006)))};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0=function(){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0():self__.dispatch_fn.call(null);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$0?target_fn.cljs$core$IFn$_invoke$arity$0():
target_fn.call(null)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1=function(a){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a):self__.dispatch_fn.call(null,a);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$1?target_fn.cljs$core$IFn$_invoke$arity$1(a):target_fn.call(null,
a)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2=function(a,b){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a,b):self__.dispatch_fn.call(null,a,b);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$2?target_fn.cljs$core$IFn$_invoke$arity$2(a,b):
target_fn.call(null,a,b)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3=function(a,b,c){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a,b,c):self__.dispatch_fn.call(null,a,b,c);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$3?target_fn.cljs$core$IFn$_invoke$arity$3(a,
b,c):target_fn.call(null,a,b,c)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4=function(a,b,c,d){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d):self__.dispatch_fn.call(null,a,b,c,d);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$4?target_fn.cljs$core$IFn$_invoke$arity$4(a,
b,c,d):target_fn.call(null,a,b,c,d)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5=function(a,b,c,d,e){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e):self__.dispatch_fn.call(null,a,b,c,d,e);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$5?target_fn.cljs$core$IFn$_invoke$arity$5(a,
b,c,d,e):target_fn.call(null,a,b,c,d,e)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6=function(a,b,c,d,e,f){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f):self__.dispatch_fn.call(null,a,b,c,d,e,f);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$6?target_fn.cljs$core$IFn$_invoke$arity$6(a,
b,c,d,e,f):target_fn.call(null,a,b,c,d,e,f)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7=function(a,b,c,d,e,f,g){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g):self__.dispatch_fn.call(null,a,b,c,d,e,f,g);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$7?target_fn.cljs$core$IFn$_invoke$arity$7(a,
b,c,d,e,f,g):target_fn.call(null,a,b,c,d,e,f,g)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8=function(a,b,c,d,e,f,g,h){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$8?
target_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h):target_fn.call(null,a,b,c,d,e,f,g,h)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9=function(a,b,c,d,e,f,g,h,i){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$9?
target_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i):target_fn.call(null,a,b,c,d,e,f,g,h,i)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10=function(a,b,c,d,e,f,g,h,i,j){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$10?
target_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j):target_fn.call(null,a,b,c,d,e,f,g,h,i,j)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11=function(a,b,c,d,e,f,g,h,i,j,k){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$11?
target_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12=function(a,b,c,d,e,f,g,h,i,j,k,l){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$12?
target_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13=function(a,b,c,d,e,f,g,h,i,j,k,l,m){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$13?
target_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$14?
target_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);
return target_fn.cljs$core$IFn$_invoke$arity$15?target_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);
return target_fn.cljs$core$IFn$_invoke$arity$16?target_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$17?target_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$18?target_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$19?target_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){var self__=this;var mf=this;var dispatch_val=self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20?self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,
dispatch_val);return target_fn.cljs$core$IFn$_invoke$arity$20?target_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t):target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){var self__=this;var mf=this;var dispatch_val=cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0));var target_fn=mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);if(cljs.core.truth_(target_fn));else cljs.core.throw_no_method_error(self__.name,dispatch_val);
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest],0))};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3=function(mf,dispatch_val_x,dispatch_val_y){var self__=this;var mf__$1=this;if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table)))throw new Error(["Preference conflict in multimethod '",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name),"': ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y)," is already preferred to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
else;cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,function(mf__$1){return function(old){return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y))}}(mf__$1));return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy)};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1=function(mf){var self__=this;var mf__$1=this;return self__.default_dispatch_val};cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2=function(mf,dispatch_val){var self__=this;var mf__$1=this;cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);return mf__$1};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1=function(mf){var self__=this;var mf__$1=this;return cljs.core.deref(self__.method_table)};cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1=function(mf){var self__=this;var mf__$1=this;return cljs.core.deref(self__.prefer_table)};cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1=function(mf){var self__=this;var mf__$1=this;return self__.dispatch_fn};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3=function(mf,dispatch_val,method){var self__=this;var mf__$1=this;cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);return mf__$1};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1=function(mf){var self__=this;var mf__$1=this;cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,function(mf__$1){return function(mf__$2){return cljs.core.PersistentArrayMap.EMPTY}}(mf__$1));cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,function(mf__$1){return function(mf__$2){return cljs.core.PersistentArrayMap.EMPTY}}(mf__$1));cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,
function(mf__$1){return function(mf__$2){return cljs.core.PersistentArrayMap.EMPTY}}(mf__$1));cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,function(mf__$1){return function(mf__$2){return null}}(mf__$1));return mf__$1};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2=function(mf,dispatch_val){var self__=this;var mf__$1=this;if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy),cljs.core.deref(self__.hierarchy)));else cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);var temp__4655__auto__=function(){var fexpr__13007=cljs.core.deref(self__.method_cache);return fexpr__13007.cljs$core$IFn$_invoke$arity$1?fexpr__13007.cljs$core$IFn$_invoke$arity$1(dispatch_val):
fexpr__13007.call(null,dispatch_val)}();if(cljs.core.truth_(temp__4655__auto__)){var target_fn=temp__4655__auto__;return target_fn}else return cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy,self__.default_dispatch_val)};cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1=function(this$){var self__=this;var this$__$1=this;return cljs.core._name(self__.name)};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1=function(this$){var self__=this;var this$__$1=this;return cljs.core._namespace(self__.name)};cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1=function(this$){var self__=this;var this$__$1=this;return goog.getUid(this$__$1)};
cljs.core.MultiFn.getBasis=function(){return new cljs.core.PersistentVector(null,8,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"dispatch-fn","dispatch-fn",-1401088155,null),new cljs.core.Symbol(null,"default-dispatch-val","default-dispatch-val",-1231201266,null),new cljs.core.Symbol(null,"hierarchy","hierarchy",587061186,null),new cljs.core.Symbol(null,"method-table","method-table",-1878263165,null),new cljs.core.Symbol(null,
"prefer-table","prefer-table",462168584,null),new cljs.core.Symbol(null,"method-cache","method-cache",1230193905,null),new cljs.core.Symbol(null,"cached-hierarchy","cached-hierarchy",-1085460203,null)],null)};cljs.core.MultiFn.cljs$lang$type=true;cljs.core.MultiFn.cljs$lang$ctorStr="cljs.core/MultiFn";cljs.core.MultiFn.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/MultiFn")};
cljs.core.__GT_MultiFn=function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){return new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy)};cljs.core.remove_all_methods=function cljs$core$remove_all_methods(multifn){return cljs.core._reset(multifn)};
cljs.core.remove_method=function cljs$core$remove_method(multifn,dispatch_val){return cljs.core._remove_method(multifn,dispatch_val)};cljs.core.prefer_method=function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y)};cljs.core.methods$=function cljs$core$methods(multifn){return cljs.core._methods(multifn)};
cljs.core.get_method=function cljs$core$get_method(multifn,dispatch_val){return cljs.core._get_method(multifn,dispatch_val)};cljs.core.prefers=function cljs$core$prefers(multifn){return cljs.core._prefers(multifn)};cljs.core.default_dispatch_val=function cljs$core$default_dispatch_val(multifn){return cljs.core._default_dispatch_val(multifn)};cljs.core.dispatch_fn=function cljs$core$dispatch_fn(multifn){return cljs.core._dispatch_fn(multifn)};cljs.core.IUUID=function(){};
cljs.core.UUID=function(uuid,__hash){this.uuid=uuid;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=2153775104;this.cljs$lang$protocol_mask$partition1$=2048};cljs.core.UUID.prototype.cljs$core$IUUID$=cljs.core.PROTOCOL_SENTINEL;cljs.core.UUID.prototype.toString=function(){var self__=this;var _=this;return self__.uuid};cljs.core.UUID.prototype.equiv=function(other){var self__=this;var this$=this;return this$.cljs$core$IEquiv$_equiv$arity$2(null,other)};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2=function(_,other){var self__=this;var ___$1=this;return other instanceof cljs.core.UUID&&self__.uuid===other.uuid};cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(_,writer,___$1){var self__=this;var ___$2=this;return cljs.core._write(writer,['#uuid "',cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid),'"'].join(""))};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1=function(this$){var self__=this;var this$__$1=this;if(self__.__hash==null)self__.__hash=cljs.core.hash(self__.uuid);else;return self__.__hash};cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2=function(_,other){var self__=this;var ___$1=this;var G__13009=self__.uuid;var G__13010=other.uuid;return goog.array.defaultCompare(G__13009,G__13010)};
cljs.core.UUID.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.core.UUID.cljs$lang$type=true;cljs.core.UUID.cljs$lang$ctorStr="cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/UUID")};cljs.core.__GT_UUID=function cljs$core$__GT_UUID(uuid,__hash){return new cljs.core.UUID(uuid,__hash)};cljs.core.uuid=function cljs$core$uuid(s){if(typeof s==="string");else throw new Error("Assert failed: (string? s)");return new cljs.core.UUID(s.toLowerCase(),null)};
cljs.core.random_uuid=function cljs$core$random_uuid(){var hex=function cljs$core$random_uuid_$_hex(){return cljs.core.rand_int(16).toString(16)};var rhex=(8|3&cljs.core.rand_int(16)).toString(16);return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),
cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),"-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),"-","4",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),"-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex),
cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),"-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),
cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""))};cljs.core.uuid_QMARK_=function cljs$core$uuid_QMARK_(x){if(!(x==null))if(false||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IUUID$)return true;else return false;else return false};
cljs.core.pr_writer_ex_info=function cljs$core$pr_writer_ex_info(obj,writer,opts){cljs.core._write(writer,"#error {:message ");cljs.core.pr_writer(obj.message,writer,opts);if(cljs.core.truth_(obj.data)){cljs.core._write(writer,", :data ");cljs.core.pr_writer(obj.data,writer,opts)}else;if(cljs.core.truth_(obj.cause)){cljs.core._write(writer,", :cause ");cljs.core.pr_writer(obj.cause,writer,opts)}else;return cljs.core._write(writer,"}")};
cljs.core.ExceptionInfo=function cljs$core$ExceptionInfo(message,data,cause){var e=new Error(message);var this$=this;this$.message=message;this$.data=data;this$.cause=cause;this$.name=e.name;this$.description=e.description;this$.number=e.number;this$.fileName=e.fileName;this$.lineNumber=e.lineNumber;this$.columnNumber=e.columnNumber;this$.stack=e.stack;return this$};cljs.core.ExceptionInfo.prototype.__proto__=Error.prototype;cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(obj,writer,opts){var obj__$1=this;return cljs.core.pr_writer_ex_info(obj__$1,writer,opts)};cljs.core.ExceptionInfo.prototype.toString=function(){var this$=this;return cljs.core.pr_str_STAR_(this$)};
cljs.core.ex_info=function cljs$core$ex_info(var_args){var G__13013=arguments.length;switch(G__13013){case 2:return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2=function(msg,data){return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null)};cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3=function(msg,data,cause){return new cljs.core.ExceptionInfo(msg,data,cause)};cljs.core.ex_info.cljs$lang$maxFixedArity=3;cljs.core.ex_data=function cljs$core$ex_data(ex){if(ex instanceof cljs.core.ExceptionInfo)return ex.data;else return null};
cljs.core.ex_message=function cljs$core$ex_message(ex){if(ex instanceof Error)return ex.message;else return null};cljs.core.ex_cause=function cljs$core$ex_cause(ex){if(ex instanceof cljs.core.ExceptionInfo)return ex.cause;else return null};
cljs.core.comparator=function cljs$core$comparator(pred){return function(x,y){if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2?pred.cljs$core$IFn$_invoke$arity$2(x,y):pred.call(null,x,y)))return-1;else if(cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2?pred.cljs$core$IFn$_invoke$arity$2(y,x):pred.call(null,y,x)))return 1;else return 0}};
cljs.core.special_symbol_QMARK_=function cljs$core$special_symbol_QMARK_(x){return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,24,[new cljs.core.Symbol(null,"\x26","\x26",-2144855648,null),"null",new cljs.core.Symbol(null,"case*","case*",-1938255072,null),"null",new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),"null",new cljs.core.Symbol(null,"try","try",-1273693247,null),"null",new cljs.core.Symbol(null,"ns*","ns*",1840949383,
null),"null",new cljs.core.Symbol(null,"finally","finally",-1065347064,null),"null",new cljs.core.Symbol(null,"loop*","loop*",615029416,null),"null",new cljs.core.Symbol(null,"do","do",1686842252,null),"null",new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),"null",new cljs.core.Symbol(null,"if","if",1181717262,null),"null",new cljs.core.Symbol(null,"new","new",-444906321,null),"null",new cljs.core.Symbol(null,"ns","ns",2082130287,null),"null",new cljs.core.Symbol(null,"deftype*","deftype*",
962659890,null),"null",new cljs.core.Symbol(null,"let*","let*",1920721458,null),"null",new cljs.core.Symbol(null,"js*","js*",-1134233646,null),"null",new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),"null",new cljs.core.Symbol(null,"recur","recur",1202958259,null),"null",new cljs.core.Symbol(null,"set!","set!",250714521,null),"null",new cljs.core.Symbol(null,".",".",1975675962,null),"null",new cljs.core.Symbol(null,"var","var",870848730,null),"null",new cljs.core.Symbol(null,"quote","quote",
1377916282,null),"null",new cljs.core.Symbol(null,"catch","catch",-1616370245,null),"null",new cljs.core.Symbol(null,"throw","throw",595905694,null),"null",new cljs.core.Symbol(null,"def","def",597100991,null),"null"],null),null),x)};
cljs.core.test=function cljs$core$test(v){var f=v.cljs$lang$test;if(cljs.core.truth_(f)){f.cljs$core$IFn$_invoke$arity$0?f.cljs$core$IFn$_invoke$arity$0():f.call(null);return new cljs.core.Keyword(null,"ok","ok",967785236)}else return new cljs.core.Keyword(null,"no-test","no-test",-1679482642)};cljs.core.TaggedLiteral=function(tag,form){this.tag=tag;this.form=form;this.cljs$lang$protocol_mask$partition0$=2153775360;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.TaggedLiteral.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_(coll)};cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2=function(this$,other){var self__=this;var this$__$1=this;return other instanceof cljs.core.TaggedLiteral&&cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag,other.tag)&&cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form,other.form)};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1=function(this$){var self__=this;var this$__$1=this;return 31*cljs.core.hash(self__.tag)+cljs.core.hash(self__.form)};cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2=function(this$,v){var self__=this;var this$__$1=this;return this$__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null)};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3=function(this$,v,not_found){var self__=this;var this$__$1=this;var G__13015=v;var G__13015__$1=G__13015 instanceof cljs.core.Keyword?G__13015.fqn:null;switch(G__13015__$1){case "tag":return self__.tag;break;case "form":return self__.form;break;default:return not_found}};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(o,writer,opts){var self__=this;var o__$1=this;cljs.core._write(writer,["#",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag)," "].join(""));return cljs.core.pr_writer(self__.form,writer,opts)};
cljs.core.TaggedLiteral.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"form","form",16469056,null)],null)};cljs.core.TaggedLiteral.cljs$lang$type=true;cljs.core.TaggedLiteral.cljs$lang$ctorStr="cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/TaggedLiteral")};cljs.core.__GT_TaggedLiteral=function cljs$core$__GT_TaggedLiteral(tag,form){return new cljs.core.TaggedLiteral(tag,form)};cljs.core.tagged_literal_QMARK_=function cljs$core$tagged_literal_QMARK_(value){return value instanceof cljs.core.TaggedLiteral};
cljs.core.tagged_literal=function cljs$core$tagged_literal(tag,form){if(tag instanceof cljs.core.Symbol);else throw new Error("Assert failed: (symbol? tag)");return new cljs.core.TaggedLiteral(tag,form)};
cljs.core.js_reserved_arr=["arguments","abstract","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","export","extends","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","try","typeof","var",
"void","volatile","while","with","yield","methods","null","constructor"];cljs.core.js_reserved=null;cljs.core.js_reserved_QMARK_=function cljs$core$js_reserved_QMARK_(x){if(cljs.core.js_reserved==null)cljs.core.js_reserved=cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__13017_SHARP_,p2__13018_SHARP_){goog.object.set(p1__13017_SHARP_,p2__13018_SHARP_,true);return p1__13017_SHARP_},{},cljs.core.js_reserved_arr);else;return cljs.core.js_reserved.hasOwnProperty(x)};
cljs.core.demunge_pattern=function cljs$core$demunge_pattern(){if(cljs.core.truth_(cljs.core.DEMUNGE_PATTERN));else cljs.core.DEMUNGE_PATTERN=function(){var ks=cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a,b){return b.length-a.length},cljs.core.js_keys(cljs.core.DEMUNGE_MAP));var ks__$1=ks;var ret="";while(true){if(cljs.core.seq(ks__$1)){var G__13021=cljs.core.next(ks__$1);var G__13022=[function(){var G__13020=ret;if(!(ret===""))return[G__13020,"|"].join("");else return G__13020}(),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
ks__$1=G__13021;ret=G__13022;continue}else return[ret,"|\\$"].join("");break}}();return cljs.core.DEMUNGE_PATTERN};cljs.core.munge_str=function cljs$core$munge_str(name){var sb=new goog.string.StringBuffer;var i_13023=0;while(true){if(i_13023<name.length){var c_13024=name.charAt(i_13023);var sub_13025=goog.object.get(cljs.core.CHAR_MAP,c_13024);if(!(sub_13025==null))sb.append(sub_13025);else sb.append(c_13024);var G__13026=i_13023+1;i_13023=G__13026;continue}else;break}return sb.toString()};
cljs.core.munge=function cljs$core$munge(name){var name_SINGLEQUOTE_=cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));var name_SINGLEQUOTE___$1=name_SINGLEQUOTE_===".."?"_DOT__DOT_":cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE_),"$"].join(""):name_SINGLEQUOTE_;if(name instanceof cljs.core.Symbol)return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);else return name_SINGLEQUOTE___$1};
cljs.core.demunge_str=function cljs$core$demunge_str(munged_name){var r=new RegExp(cljs.core.demunge_pattern(),"g");var munged_name__$1=cljs.core.truth_(goog.string.endsWith(munged_name,"$"))?munged_name.substring(0,munged_name.length-1):munged_name;var ret="";var last_match_end=0;while(true){var temp__4655__auto__=r.exec(munged_name__$1);if(cljs.core.truth_(temp__4655__auto__)){var match=temp__4655__auto__;var vec__13030=match;var x=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13030,0,null);
var G__13033=[ret,cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end,r.lastIndex-x.length)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(x==="$"?"/":goog.object.get(cljs.core.DEMUNGE_MAP,x))].join("");var G__13034=r.lastIndex;ret=G__13033;last_match_end=G__13034;continue}else return[ret,cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end,munged_name__$1.length))].join("");break}};
cljs.core.demunge=function cljs$core$demunge(name){var G__13036=function(){var name_SINGLEQUOTE_=cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);if(name_SINGLEQUOTE_==="_DOT__DOT_")return"..";else return cljs.core.demunge_str(name_SINGLEQUOTE_)}();var fexpr__13035=name instanceof cljs.core.Symbol?cljs.core.symbol:cljs.core.str;return fexpr__13035.cljs$core$IFn$_invoke$arity$1?fexpr__13035.cljs$core$IFn$_invoke$arity$1(G__13036):fexpr__13035.call(null,G__13036)};
if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core.tapset!=="undefined");else cljs.core.tapset=null;cljs.core.maybe_init_tapset=function cljs$core$maybe_init_tapset(){if(cljs.core.tapset==null)return cljs.core.tapset=cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);else return null};
cljs.core.add_tap=function cljs$core$add_tap(f){cljs.core.maybe_init_tapset();cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset,cljs.core.conj,f);return null};cljs.core.remove_tap=function cljs$core$remove_tap(f){cljs.core.maybe_init_tapset();cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset,cljs.core.disj,f);return null};
cljs.core.tap_GT_=function cljs$core$tap_GT_(x){cljs.core.maybe_init_tapset();return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1?cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function(){var seq__13037=cljs.core.seq(cljs.core.deref(cljs.core.tapset));var chunk__13038=null;var count__13039=0;var i__13040=0;while(true){if(i__13040<count__13039){var tap=chunk__13038.cljs$core$IIndexed$_nth$arity$2(null,i__13040);try{tap.cljs$core$IFn$_invoke$arity$1?tap.cljs$core$IFn$_invoke$arity$1(x):
tap.call(null,x)}catch(e13043){if(e13043 instanceof Error)var ex_13045=e13043;else throw e13043;}var G__13046=seq__13037;var G__13047=chunk__13038;var G__13048=count__13039;var G__13049=i__13040+1;seq__13037=G__13046;chunk__13038=G__13047;count__13039=G__13048;i__13040=G__13049;continue}else{var temp__4657__auto__=cljs.core.seq(seq__13037);if(temp__4657__auto__){var seq__13037__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__13037__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__13037__$1);
var G__13050=cljs.core.chunk_rest(seq__13037__$1);var G__13051=c__8771__auto__;var G__13052=cljs.core.count(c__8771__auto__);var G__13053=0;seq__13037=G__13050;chunk__13038=G__13051;count__13039=G__13052;i__13040=G__13053;continue}else{var tap=cljs.core.first(seq__13037__$1);try{tap.cljs$core$IFn$_invoke$arity$1?tap.cljs$core$IFn$_invoke$arity$1(x):tap.call(null,x)}catch(e13044){if(e13044 instanceof Error)var ex_13054=e13044;else throw e13044;}var G__13055=cljs.core.next(seq__13037__$1);var G__13056=
null;var G__13057=0;var G__13058=0;seq__13037=G__13055;chunk__13038=G__13056;count__13039=G__13057;i__13040=G__13058;continue}}else return null}break}}):cljs.core._STAR_exec_tap_fn_STAR_.call(null,function(){var seq__13037=cljs.core.seq(cljs.core.deref(cljs.core.tapset));var chunk__13038=null;var count__13039=0;var i__13040=0;while(true){if(i__13040<count__13039){var tap=chunk__13038.cljs$core$IIndexed$_nth$arity$2(null,i__13040);try{tap.cljs$core$IFn$_invoke$arity$1?tap.cljs$core$IFn$_invoke$arity$1(x):
tap.call(null,x)}catch(e13043){if(e13043 instanceof Error)var ex_13059=e13043;else throw e13043;}var G__13060=seq__13037;var G__13061=chunk__13038;var G__13062=count__13039;var G__13063=i__13040+1;seq__13037=G__13060;chunk__13038=G__13061;count__13039=G__13062;i__13040=G__13063;continue}else{var temp__4657__auto__=cljs.core.seq(seq__13037);if(temp__4657__auto__){var seq__13037__$1=temp__4657__auto__;if(cljs.core.chunked_seq_QMARK_(seq__13037__$1)){var c__8771__auto__=cljs.core.chunk_first(seq__13037__$1);
var G__13064=cljs.core.chunk_rest(seq__13037__$1);var G__13065=c__8771__auto__;var G__13066=cljs.core.count(c__8771__auto__);var G__13067=0;seq__13037=G__13064;chunk__13038=G__13065;count__13039=G__13066;i__13040=G__13067;continue}else{var tap=cljs.core.first(seq__13037__$1);try{tap.cljs$core$IFn$_invoke$arity$1?tap.cljs$core$IFn$_invoke$arity$1(x):tap.call(null,x)}catch(e13044){if(e13044 instanceof Error)var ex_13068=e13044;else throw e13044;}var G__13069=cljs.core.next(seq__13037__$1);var G__13070=
null;var G__13071=0;var G__13072=0;seq__13037=G__13069;chunk__13038=G__13070;count__13039=G__13071;i__13040=G__13072;continue}}else return null}break}})};cljs.core.ns_lookup=function cljs$core$ns_lookup(ns_obj,k){return function(){return goog.object.get(ns_obj,k)}};cljs.core.Namespace=function(obj,name){this.obj=obj;this.name=name;this.cljs$lang$protocol_mask$partition0$=6291456;this.cljs$lang$protocol_mask$partition1$=0};
cljs.core.Namespace.prototype.findInternedVar=function(sym){var self__=this;var this$=this;var k=cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));if(goog.object.containsKey(self__.obj,k)){var var_sym=cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));var var_meta=new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"ns","ns",441598760),this$],null);return new cljs.core.Var(cljs.core.ns_lookup(self__.obj,
k),var_sym,var_meta)}else return null};cljs.core.Namespace.prototype.getName=function(){var self__=this;var _=this;return self__.name};cljs.core.Namespace.prototype.toString=function(){var self__=this;var _=this;return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name)};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2=function(_,other){var self__=this;var ___$1=this;if(other instanceof cljs.core.Namespace)return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name,other.name);else return false};cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1=function(_){var self__=this;var ___$1=this;return cljs.core.hash(self__.name)};
cljs.core.Namespace.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"name","name",-810760592,null)],null)};cljs.core.Namespace.cljs$lang$type=true;cljs.core.Namespace.cljs$lang$ctorStr="cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter=function(this__8539__auto__,writer__8540__auto__,opt__8541__auto__){return cljs.core._write(writer__8540__auto__,"cljs.core/Namespace")};cljs.core.__GT_Namespace=function cljs$core$__GT_Namespace(obj,name){return new cljs.core.Namespace(obj,name)};cljs.core.NS_CACHE=null;
cljs.core.find_ns_obj_STAR_=function cljs$core$find_ns_obj_STAR_(ctxt,xs){while(true){if(ctxt==null)return null;else if(xs==null)return ctxt;else{var G__13075=function(){var G__13073=ctxt;var G__13074=cljs.core.first(xs);return goog.object.get(G__13073,G__13074)}();var G__13076=cljs.core.next(xs);ctxt=G__13075;xs=G__13076;continue}break}};
cljs.core.find_ns_obj=function cljs$core$find_ns_obj(ns){var munged_ns=cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));var segs=munged_ns.split(".");var G__13077=cljs.core._STAR_target_STAR_;switch(G__13077){case "nodejs":if(COMPILED)return cljs.core.find_ns_obj_STAR_(function(){try{var ctxt=eval(cljs.core.first(segs));if(cljs.core.truth_(function(){var and__7893__auto__=ctxt;if(cljs.core.truth_(and__7893__auto__))return cljs.core.object_QMARK_(ctxt);else return and__7893__auto__}()))return ctxt;
else return null}catch(e13078){if(e13078 instanceof ReferenceError){var e=e13078;return null}else throw e13078;}}(),cljs.core.next(segs));else return cljs.core.find_ns_obj_STAR_(goog.global,segs);break;case "default":case "webworker":return cljs.core.find_ns_obj_STAR_(goog.global,segs);break;default:throw new Error(["find-ns-obj not supported for target ",cljs.core._STAR_target_STAR_].join(""));}};
cljs.core.ns_interns_STAR_=function cljs$core$ns_interns_STAR_(sym){var ns_obj=cljs.core.find_ns_obj(sym);var ns=new cljs.core.Namespace(ns_obj,sym);var step=function(ns_obj,ns){return function cljs$core$ns_interns_STAR__$_step(ret,k){var var_sym=cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,var_sym,new cljs.core.Var(function(var_sym,ns_obj,ns){return function(){return goog.object.get(ns_obj,k)}}(var_sym,ns_obj,ns),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),
cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"ns","ns",441598760),ns],null)))}}(ns_obj,ns);return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,cljs.core.PersistentArrayMap.EMPTY,cljs.core.js_keys(ns_obj))};
cljs.core.create_ns=function cljs$core$create_ns(var_args){var G__13081=arguments.length;switch(G__13081){case 1:return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1=function(sym){return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym,cljs.core.find_ns_obj(sym))};cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2=function(sym,ns_obj){return new cljs.core.Namespace(ns_obj,sym)};cljs.core.create_ns.cljs$lang$maxFixedArity=2;
cljs.core.find_ns=function cljs$core$find_ns(ns){if(cljs.core.NS_CACHE==null)cljs.core.NS_CACHE=cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);else;var the_ns=cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE),ns);if(!(the_ns==null))return the_ns;else{var ns_obj=cljs.core.find_ns_obj(ns);if(ns_obj==null)return null;else{var new_ns=cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns,ns_obj);cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE,
cljs.core.assoc,ns,new_ns);return new_ns}}};
cljs.core.find_macros_ns=function cljs$core$find_macros_ns(ns){if(cljs.core.NS_CACHE==null)cljs.core.NS_CACHE=cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);else;var ns_str=cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);var ns__$1=!goog.string.contains(ns_str,"$macros")?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str,"$macros"].join("")):ns;var the_ns=cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE),ns__$1);if(!(the_ns==null))return the_ns;
else{var ns_obj=cljs.core.find_ns_obj(ns__$1);if(ns_obj==null)return null;else{var new_ns=cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1,ns_obj);cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE,cljs.core.assoc,ns__$1,new_ns);return new_ns}}};cljs.core.ns_name=function cljs$core$ns_name(ns_obj){return ns_obj.name};cljs.core.uri_QMARK_=function cljs$core$uri_QMARK_(x){return x instanceof goog.Uri};
cljs.core.maybe_enable_print_BANG_=function cljs$core$maybe_enable_print_BANG_(){if(typeof console!=="undefined")return cljs.core.enable_console_print_BANG_();else if(cljs.core._STAR_target_STAR_==="nashorn"||cljs.core._STAR_target_STAR_==="graaljs"){var system=Java.type("java.lang.System");cljs.core._STAR_print_newline_STAR_=false;cljs.core.set_print_fn_BANG_(function(system){return function(){var xs=arguments;var s=goog.array.clone(xs).join("");return system.out.println(s)}}(system));return cljs.core.set_print_err_fn_BANG_(function(system){return function(){var xs=
arguments;var s=goog.array.clone(xs).join("");return system.error.println(s)}}(system))}else return null};cljs.core.maybe_enable_print_BANG_();if(typeof cljs!=="undefined"&&typeof cljs.core!=="undefined"&&typeof cljs.core._STAR_eval_STAR_!=="undefined");else cljs.core._STAR_eval_STAR_=function cljs$core$_STAR_eval_STAR_(_){throw new Error("cljs.core/*eval* not bound");};
cljs.core.eval=function cljs$core$eval(form){return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1?cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form):cljs.core._STAR_eval_STAR_.call(null,form)};goog.provide("process.env");goog.require("cljs.core");goog.define("process.env.NODE_ENV","development");goog.provide("cljs_bean.from.cljs.core");goog.require("cljs.core");
cljs_bean.from.cljs.core._indexOf=function cljs_bean$from$cljs$core$_indexOf(var_args){var G__1546=arguments.length;switch(G__1546){case 2:return cljs_bean.from.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs_bean.from.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs_bean.from.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2=function(coll,x){return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,0)};
cljs_bean.from.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3=function(coll,x,start){var len=cljs.core.count.call(null,coll);if(start>=len)return-1;else{var idx=start>0?start:start<0?function(){var x__4219__auto__=0;var y__4220__auto__=start+len;return x__4219__auto__>y__4220__auto__?x__4219__auto__:y__4220__auto__}():start;while(true){if(idx<len)if(cljs.core._EQ_.call(null,cljs.core.nth.call(null,coll,idx),x))return idx;else{var G__1548=idx+1;idx=G__1548;continue}else return-1;break}}};
cljs_bean.from.cljs.core._indexOf.cljs$lang$maxFixedArity=3;
cljs_bean.from.cljs.core._lastIndexOf=function cljs_bean$from$cljs$core$_lastIndexOf(var_args){var G__1550=arguments.length;switch(G__1550){case 2:return cljs_bean.from.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs_bean.from.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs_bean.from.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2=function(coll,x){return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x,cljs.core.count.call(null,coll))};
cljs_bean.from.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3=function(coll,x,start){var len=cljs.core.count.call(null,coll);if(len===0)return-1;else{var idx=start>0?function(){var x__4222__auto__=len-1;var y__4223__auto__=start;return x__4222__auto__<y__4223__auto__?x__4222__auto__:y__4223__auto__}():start<0?len+start:start;while(true){if(idx>=0)if(cljs.core._EQ_.call(null,cljs.core.nth.call(null,coll,idx),x))return idx;else{var G__1552=idx-1;idx=G__1552;continue}else return-1;break}}};
cljs_bean.from.cljs.core._lastIndexOf.cljs$lang$maxFixedArity=3;
cljs_bean.from.cljs.core.compare_indexed=function cljs_bean$from$cljs$core$compare_indexed(var_args){var G__1554=arguments.length;switch(G__1554){case 2:return cljs_bean.from.cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 4:return cljs_bean.from.cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs_bean.from.cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2=function(xs,ys){var xl=cljs.core.count.call(null,xs);var yl=cljs.core.count.call(null,ys);if(xl<yl)return-1;else if(xl>yl)return 1;else if(xl===0)return 0;else return cljs_bean.from.cljs.core.compare_indexed.call(null,xs,ys,xl,0)};
cljs_bean.from.cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4=function(xs,ys,len,n){while(true){var d=cljs.core.compare.call(null,cljs.core.nth.call(null,xs,n),cljs.core.nth.call(null,ys,n));if(d===0&&n+1<len){var G__1556=xs;var G__1557=ys;var G__1558=len;var G__1559=n+1;xs=G__1556;ys=G__1557;len=G__1558;n=G__1559;continue}else return d;break}};cljs_bean.from.cljs.core.compare_indexed.cljs$lang$maxFixedArity=4;
cljs_bean.from.cljs.core.equiv_sequential=function cljs_bean$from$cljs$core$equiv_sequential(x,y){return cljs.core.boolean$.call(null,cljs.core.sequential_QMARK_.call(null,y)?cljs.core.counted_QMARK_.call(null,x)&&cljs.core.counted_QMARK_.call(null,y)&&!(cljs.core.count.call(null,x)===cljs.core.count.call(null,y))?false:function(){var xs=cljs.core.seq.call(null,x);var ys=cljs.core.seq.call(null,y);while(true){if(xs==null)return ys==null;else if(ys==null)return false;else if(cljs.core._EQ_.call(null,
cljs.core.first.call(null,xs),cljs.core.first.call(null,ys))){var G__1560=cljs.core.next.call(null,xs);var G__1561=cljs.core.next.call(null,ys);xs=G__1560;ys=G__1561;continue}else return false;break}}():null)};
cljs_bean.from.cljs.core.ci_reduce=function cljs_bean$from$cljs$core$ci_reduce(var_args){var G__1563=arguments.length;switch(G__1563){case 2:return cljs_bean.from.cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs_bean.from.cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs_bean.from.cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);
break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs_bean.from.cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2=function(cicoll,f){var cnt=cljs.core._count.call(null,cicoll);if(cnt===0)return f.call(null);else{var val=cljs.core._nth.call(null,cicoll,0);var n=1;while(true){if(n<cnt){var nval=f.call(null,val,cljs.core._nth.call(null,cicoll,n));if(cljs.core.reduced_QMARK_.call(null,nval))return cljs.core.deref.call(null,nval);else{var G__1565=nval;var G__1566=n+1;val=G__1565;n=G__1566;continue}}else return val;break}}};
cljs_bean.from.cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3=function(cicoll,f,val){var cnt=cljs.core._count.call(null,cicoll);var val__$1=val;var n=0;while(true){if(n<cnt){var nval=f.call(null,val__$1,cljs.core._nth.call(null,cicoll,n));if(cljs.core.reduced_QMARK_.call(null,nval))return cljs.core.deref.call(null,nval);else{var G__1567=nval;var G__1568=n+1;val__$1=G__1567;n=G__1568;continue}}else return val__$1;break}};
cljs_bean.from.cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4=function(cicoll,f,val,idx){var cnt=cljs.core._count.call(null,cicoll);var val__$1=val;var n=idx;while(true){if(n<cnt){var nval=f.call(null,val__$1,cljs.core._nth.call(null,cicoll,n));if(cljs.core.reduced_QMARK_.call(null,nval))return cljs.core.deref.call(null,nval);else{var G__1569=nval;var G__1570=n+1;val__$1=G__1569;n=G__1570;continue}}else return val__$1;break}};cljs_bean.from.cljs.core.ci_reduce.cljs$lang$maxFixedArity=4;
cljs_bean.from.cljs.core.TransientArrayMap_conj_BANG_=function cljs_bean$from$cljs$core$TransientArrayMap_conj_BANG_(tcoll,o,editable_QMARK_){if(cljs.core.truth_(editable_QMARK_))if(cljs.core.map_entry_QMARK_.call(null,o))return cljs.core._assoc_BANG_.call(null,tcoll,cljs.core.key.call(null,o),cljs.core.val.call(null,o));else if(cljs.core.vector_QMARK_.call(null,o))return cljs.core._assoc_BANG_.call(null,tcoll,o.call(null,0),o.call(null,1));else{var es=cljs.core.seq.call(null,o);var tcoll__$1=tcoll;
while(true){var temp__5733__auto__=cljs.core.first.call(null,es);if(cljs.core.truth_(temp__5733__auto__)){var e=temp__5733__auto__;var G__1571=cljs.core.next.call(null,es);var G__1572=cljs.core._assoc_BANG_.call(null,tcoll__$1,cljs.core.key.call(null,e),cljs.core.val.call(null,e));es=G__1571;tcoll__$1=G__1572;continue}else return tcoll__$1;break}}else throw new Error("conj! after persistent!");};
cljs_bean.from.cljs.core.PersistentArrayMap_conj=function cljs_bean$from$cljs$core$PersistentArrayMap_conj(coll,entry){if(cljs.core.vector_QMARK_.call(null,entry))return cljs.core._assoc.call(null,coll,cljs.core._nth.call(null,entry,0),cljs.core._nth.call(null,entry,1));else{var ret=coll;var es=cljs.core.seq.call(null,entry);while(true){if(es==null)return ret;else{var e=cljs.core.first.call(null,es);if(cljs.core.vector_QMARK_.call(null,e)){var G__1573=cljs.core._assoc.call(null,ret,cljs.core._nth.call(null,
e,0),cljs.core._nth.call(null,e,1));var G__1574=cljs.core.next.call(null,es);ret=G__1573;es=G__1574;continue}else throw new Error("conj on a map takes map entries or seqables of map entries");}break}}};
cljs_bean.from.cljs.core.TransientVector_assoc_BANG_=function cljs_bean$from$cljs$core$TransientVector_assoc_BANG_(tcoll,key,val,type_name){if(typeof key==="number")return cljs.core._assoc_n_BANG_.call(null,tcoll,key,val);else throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(type_name),"'s key for assoc! must be a number."].join(""));};
cljs_bean.from.cljs.core.PersistentVector_equiv=function cljs_bean$from$cljs$core$PersistentVector_equiv(coll,other,type,cnt){if(other instanceof type)if(cnt===cljs.core.count.call(null,other)){var me_iter=cljs.core._iterator.call(null,coll);var you_iter=cljs.core._iterator.call(null,other);while(true){if(me_iter.hasNext()){var x=me_iter.next();var y=you_iter.next();if(cljs.core._EQ_.call(null,x,y))continue;else return false}else return true;break}}else return false;else return cljs_bean.from.cljs.core.equiv_sequential.call(null,
coll,other)};cljs_bean.from.cljs.core.PersistentVector_lookup=function cljs_bean$from$cljs$core$PersistentVector_lookup(coll,k,not_found){if(typeof k==="number")return cljs.core._nth.call(null,coll,k,not_found);else return not_found};cljs_bean.from.cljs.core.PersistentVector_assoc=function cljs_bean$from$cljs$core$PersistentVector_assoc(coll,k,v){if(typeof k==="number")return cljs.core._assoc_n.call(null,coll,k,v);else throw new Error("Vector's key for assoc must be a number.");};
cljs_bean.from.cljs.core.PersistentVector_contains_key_QMARK_=function cljs_bean$from$cljs$core$PersistentVector_contains_key_QMARK_(coll,k,cnt){if(cljs.core.integer_QMARK_.call(null,k))return 0<=k&&k<cnt;else return false};goog.provide("cljs_bean.core");goog.require("cljs.core");goog.require("cljs_bean.from.cljs.core");goog.require("goog.object");cljs_bean.core.lookup_sentinel={};
cljs_bean.core.__GT_val=function cljs_bean$core$__GT_val(x,prop__GT_key,key__GT_prop){if(typeof x==="number")return x;else if(typeof x==="string")return x;else if(cljs.core.boolean_QMARK_.call(null,x))return x;else if(x==null)return x;else if(cljs.core.object_QMARK_.call(null,x))return new cljs_bean.core.Bean(null,x,prop__GT_key,key__GT_prop,true,null,null,null);else if(cljs.core.array_QMARK_.call(null,x))return new cljs_bean.core.ArrayVector(null,prop__GT_key,key__GT_prop,x,null);else return x};
cljs_bean.core.unwrap=function cljs_bean$core$unwrap(x){if(x instanceof cljs_bean.core.Bean)return x.obj;else if(x instanceof cljs_bean.core.ArrayVector)return x.arr;else return x};cljs_bean.core.empty_map=cljs.core.PersistentArrayMap.EMPTY;
cljs_bean.core.snapshot=function cljs_bean$core$snapshot(x,prop__GT_key,key__GT_prop,recursive_QMARK_){var result=cljs.core.volatile_BANG_.call(null,cljs.core.transient$.call(null,cljs_bean.core.empty_map));goog.object.forEach(x,function(result){return function(v,k,_){return cljs.core._vreset_BANG_.call(null,result,cljs.core.assoc_BANG_.call(null,cljs.core._deref.call(null,result),prop__GT_key.call(null,k),function(){var G__1577=v;if(cljs.core.truth_(recursive_QMARK_))return cljs_bean.core.__GT_val.call(null,
G__1577,prop__GT_key,key__GT_prop);else return G__1577}()))}}(result));return cljs.core.persistent_BANG_.call(null,cljs.core.deref.call(null,result))};cljs_bean.core.indexed_entry=function cljs_bean$core$indexed_entry(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i){var prop=arr[i];return new cljs.core.MapEntry(prop__GT_key.call(null,prop),function(){var G__1578=obj[prop];if(recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1578,prop__GT_key,key__GT_prop);else return G__1578}(),null)};
cljs_bean.core.compatible_key_QMARK_=function cljs_bean$core$compatible_key_QMARK_(k,prop__GT_key){return k instanceof cljs.core.Keyword&&prop__GT_key===cljs.core.keyword||typeof k==="string"&&prop__GT_key===cljs.core.identity};
cljs_bean.core.compatible_value_QMARK_=function cljs_bean$core$compatible_value_QMARK_(v,recursive_QMARK_){return!(cljs.core.map_QMARK_.call(null,v)&&!(v instanceof cljs_bean.core.Bean)||cljs.core.vector_QMARK_.call(null,v)&&!(v instanceof cljs_bean.core.ArrayVector))&&cljs.core.not.call(null,function(){var and__4120__auto__=recursive_QMARK_;if(cljs.core.truth_(and__4120__auto__))return cljs.core.object_QMARK_.call(null,v)||cljs.core.array_QMARK_.call(null,v);else return and__4120__auto__}())};
cljs_bean.core.snapshot_QMARK_=function cljs_bean$core$snapshot_QMARK_(k,v,prop__GT_key,recursive_QMARK_){return!(cljs_bean.core.compatible_key_QMARK_.call(null,k,prop__GT_key)&&cljs_bean.core.compatible_value_QMARK_.call(null,v,recursive_QMARK_))};
cljs_bean.core.TransientBean=function(editable_QMARK_,obj,prop__GT_key,key__GT_prop,recursive_QMARK_,__cnt){this.editable_QMARK_=editable_QMARK_;this.obj=obj;this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.recursive_QMARK_=recursive_QMARK_;this.__cnt=__cnt;this.cljs$lang$protocol_mask$partition0$=259;this.cljs$lang$protocol_mask$partition1$=56};
cljs_bean.core.TransientBean.prototype.cljs$core$ILookup$_lookup$arity$2=function(_,k){var self__=this;var ___$1=this;if(self__.editable_QMARK_){var G__1580=self__.obj[self__.key__GT_prop.call(null,k)];if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1580,self__.prop__GT_key,self__.key__GT_prop);else return G__1580}else throw new Error("lookup after persistent!");};
cljs_bean.core.TransientBean.prototype.cljs$core$ILookup$_lookup$arity$3=function(_,k,not_found){var self__=this;var ___$1=this;if(self__.editable_QMARK_){var ret=goog.object.get(self__.obj,self__.key__GT_prop.call(null,k),not_found);var G__1581=ret;if(self__.recursive_QMARK_&&!(ret===not_found))return cljs_bean.core.__GT_val.call(null,G__1581,self__.prop__GT_key,self__.key__GT_prop);else return G__1581}else throw new Error("lookup after persistent!");};
cljs_bean.core.TransientBean.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;if(self__.__cnt==null)return self__.__cnt=cljs.core.count.call(null,cljs.core.js_keys.call(null,self__.obj));else return self__.__cnt};cljs_bean.core.TransientBean.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2=function(tcoll,o){var self__=this;var tcoll__$1=this;return cljs_bean.from.cljs.core.TransientArrayMap_conj_BANG_.call(null,tcoll__$1,o,self__.editable_QMARK_)};
cljs_bean.core.TransientBean.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;if(self__.editable_QMARK_){self__.editable_QMARK_=false;return new cljs_bean.core.Bean(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,null,self__.__cnt,null)}else throw new Error("persistent! called twice");};
cljs_bean.core.TransientBean.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3=function(tcoll,k,v){var self__=this;var tcoll__$1=this;if(self__.editable_QMARK_)if(cljs_bean.core.snapshot_QMARK_.call(null,k,v,self__.prop__GT_key,self__.recursive_QMARK_))return cljs.core._assoc_BANG_.call(null,cljs.core.transient$.call(null,cljs_bean.core.snapshot.call(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_)),k,v);else{self__.obj[self__.key__GT_prop.call(null,k)]=
function(){var G__1582=v;if(self__.recursive_QMARK_)return cljs_bean.core.unwrap.call(null,G__1582);else return G__1582}();self__.__cnt=null;return tcoll__$1}else throw new Error("assoc! after persistent!");};
cljs_bean.core.TransientBean.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2=function(tcoll,k){var self__=this;var tcoll__$1=this;if(self__.editable_QMARK_){delete self__.obj[self__.key__GT_prop.call(null,k)];self__.__cnt=null;return tcoll__$1}else throw new Error("dissoc! after persistent!");};
cljs_bean.core.TransientBean.prototype.call=function(){var G__1587=null;var G__1587__2=function(self__,k){var self__=this;var self____$1=this;var _=self____$1;if(self__.editable_QMARK_){var G__1583=self__.obj[self__.key__GT_prop.call(null,k)];if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1583,self__.prop__GT_key,self__.key__GT_prop);else return G__1583}else throw new Error("lookup after persistent!");};var G__1587__3=function(self__,k,not_found){var self__=this;var self____$1=
this;var _=self____$1;if(self__.editable_QMARK_){var ret=goog.object.get(self__.obj,self__.key__GT_prop.call(null,k),not_found);var G__1584=ret;if(self__.recursive_QMARK_&&!(ret===not_found))return cljs_bean.core.__GT_val.call(null,G__1584,self__.prop__GT_key,self__.key__GT_prop);else return G__1584}else throw new Error("lookup after persistent!");};G__1587=function(self__,k,not_found){switch(arguments.length){case 2:return G__1587__2.call(this,self__,k);case 3:return G__1587__3.call(this,self__,
k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__1587.cljs$core$IFn$_invoke$arity$2=G__1587__2;G__1587.cljs$core$IFn$_invoke$arity$3=G__1587__3;return G__1587}();cljs_bean.core.TransientBean.prototype.apply=function(self__,args1579){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone.call(null,args1579)))};
cljs_bean.core.TransientBean.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var _=this;if(self__.editable_QMARK_){var G__1585=self__.obj[self__.key__GT_prop.call(null,k)];if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1585,self__.prop__GT_key,self__.key__GT_prop);else return G__1585}else throw new Error("lookup after persistent!");};
cljs_bean.core.TransientBean.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var _=this;if(self__.editable_QMARK_){var ret=goog.object.get(self__.obj,self__.key__GT_prop.call(null,k),not_found);var G__1586=ret;if(self__.recursive_QMARK_&&!(ret===not_found))return cljs_bean.core.__GT_val.call(null,G__1586,self__.prop__GT_key,self__.key__GT_prop);else return G__1586}else throw new Error("lookup after persistent!");};
cljs_bean.core.TransientBean.getBasis=function(){return new cljs.core.PersistentVector(null,6,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"editable?","editable?",-164945806,null),new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"obj","obj",-1672671807,null),
new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),cljs.core.with_meta(new cljs.core.Symbol(null,"recursive?","recursive?",-1314360525,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"__cnt","__cnt",1833584904,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs_bean.core.TransientBean.cljs$lang$type=true;cljs_bean.core.TransientBean.cljs$lang$ctorStr="cljs-bean.core/TransientBean";cljs_bean.core.TransientBean.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/TransientBean")};
cljs_bean.core.__GT_TransientBean=function cljs_bean$core$__GT_TransientBean(editable_QMARK_,obj,prop__GT_key,key__GT_prop,recursive_QMARK_,__cnt){return new cljs_bean.core.TransientBean(editable_QMARK_,obj,prop__GT_key,key__GT_prop,recursive_QMARK_,__cnt)};cljs_bean.core.BeanIterator=function(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i,cnt){this.obj=obj;this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.recursive_QMARK_=recursive_QMARK_;this.arr=arr;this.i=i;this.cnt=cnt};
cljs_bean.core.BeanIterator.prototype.hasNext=function(){var self__=this;var _=this;return self__.i<self__.cnt};cljs_bean.core.BeanIterator.prototype.next=function(){var self__=this;var _=this;var ret=cljs_bean.core.indexed_entry.call(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,self__.i);self__.i=self__.i+1;return ret};
cljs_bean.core.BeanIterator.getBasis=function(){return new cljs.core.PersistentVector(null,7,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),cljs.core.with_meta(new cljs.core.Symbol(null,"recursive?","recursive?",-1314360525,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",
-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)],null)),new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null)],null)};cljs_bean.core.BeanIterator.cljs$lang$type=true;cljs_bean.core.BeanIterator.cljs$lang$ctorStr="cljs-bean.core/BeanIterator";
cljs_bean.core.BeanIterator.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/BeanIterator")};cljs_bean.core.__GT_BeanIterator=function cljs_bean$core$__GT_BeanIterator(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i,cnt){return new cljs_bean.core.BeanIterator(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i,cnt)};
cljs_bean.core.BeanSeq=function(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i,meta){this.obj=obj;this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.recursive_QMARK_=recursive_QMARK_;this.arr=arr;this.i=i;this.meta=meta;this.cljs$lang$protocol_mask$partition0$=2179858686;this.cljs$lang$protocol_mask$partition1$=8192};cljs_bean.core.BeanSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_.call(null,coll)};
cljs_bean.core.BeanSeq.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};
cljs_bean.core.BeanSeq.prototype.indexOf=function(){var G__1588=null;var G__1588__1=function(x){var self__=this;var coll=this;return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,0)};var G__1588__2=function(x,start){var self__=this;var coll=this;return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,start)};G__1588=function(x,start){switch(arguments.length){case 1:return G__1588__1.call(this,x);case 2:return G__1588__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__1588.cljs$core$IFn$_invoke$arity$1=G__1588__1;G__1588.cljs$core$IFn$_invoke$arity$2=G__1588__2;return G__1588}();
cljs_bean.core.BeanSeq.prototype.lastIndexOf=function(){var G__1589=null;var G__1589__1=function(x){var self__=this;var coll=this;return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x,cljs.core.count.call(null,coll))};var G__1589__2=function(x,start){var self__=this;var coll=this;return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x,start)};G__1589=function(x,start){switch(arguments.length){case 1:return G__1589__1.call(this,x);case 2:return G__1589__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__1589.cljs$core$IFn$_invoke$arity$1=G__1589__1;G__1589.cljs$core$IFn$_invoke$arity$2=G__1589__2;return G__1589}();cljs_bean.core.BeanSeq.prototype.cljs$core$IIndexed$_nth$arity$2=function(_,n){var self__=this;var ___$1=this;var i__$1=n+self__.i;if(0<=i__$1&&i__$1<self__.arr.length)return cljs_bean.core.indexed_entry.call(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,i__$1);else throw new Error("Index out of bounds");};
cljs_bean.core.BeanSeq.prototype.cljs$core$IIndexed$_nth$arity$3=function(_,n,not_found){var self__=this;var ___$1=this;var i__$1=n+self__.i;if(0<=i__$1&&i__$1<self__.arr.length)return cljs_bean.core.indexed_entry.call(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,i__$1);else return not_found};
cljs_bean.core.BeanSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var self__=this;var coll__$1=this;return cljs.core.pr_sequential_writer.call(null,writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs_bean.core.BeanSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__.meta};
cljs_bean.core.BeanSeq.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.BeanSeq(self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,self__.i,self__.meta)};
cljs_bean.core.BeanSeq.prototype.cljs$core$INext$_next$arity$1=function(_){var self__=this;var ___$1=this;if(self__.i+1<self__.arr.length)return new cljs_bean.core.BeanSeq(self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,self__.i+1,null);else return null};
cljs_bean.core.BeanSeq.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;var x__4219__auto__=0;var y__4220__auto__=self__.arr.length-self__.i;return x__4219__auto__>y__4220__auto__?x__4219__auto__:y__4220__auto__};cljs_bean.core.BeanSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll.call(null,coll__$1)};
cljs_bean.core.BeanSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.equiv_sequential.call(null,coll__$1,other)};cljs_bean.core.BeanSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(_){var self__=this;var ___$1=this;return cljs.core.List.EMPTY};
cljs_bean.core.BeanSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.ci_reduce.call(null,coll__$1,f)};cljs_bean.core.BeanSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.ci_reduce.call(null,coll__$1,f,start)};
cljs_bean.core.BeanSeq.prototype.cljs$core$ISeq$_first$arity$1=function(_){var self__=this;var ___$1=this;return cljs_bean.core.indexed_entry.call(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,self__.i)};
cljs_bean.core.BeanSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(_){var self__=this;var ___$1=this;if(self__.i+1<self__.arr.length)return new cljs_bean.core.BeanSeq(self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,self__.i+1,null);else return cljs.core.List.EMPTY};cljs_bean.core.BeanSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;return this$__$1};
cljs_bean.core.BeanSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs_bean.core.BeanSeq(self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.arr,self__.i,new_meta)};cljs_bean.core.BeanSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons.call(null,o,coll__$1)};
cljs_bean.core.BeanSeq.getBasis=function(){return new cljs.core.PersistentVector(null,7,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),cljs.core.with_meta(new cljs.core.Symbol(null,"recursive?","recursive?",-1314360525,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),
new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)],null)),new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)],null)};cljs_bean.core.BeanSeq.cljs$lang$type=true;cljs_bean.core.BeanSeq.cljs$lang$ctorStr="cljs-bean.core/BeanSeq";
cljs_bean.core.BeanSeq.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/BeanSeq")};cljs_bean.core.__GT_BeanSeq=function cljs_bean$core$__GT_BeanSeq(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i,meta){return new cljs_bean.core.BeanSeq(obj,prop__GT_key,key__GT_prop,recursive_QMARK_,arr,i,meta)};
cljs_bean.core.Bean=function(meta,obj,prop__GT_key,key__GT_prop,recursive_QMARK_,__arr,__cnt,__hash){this.meta=meta;this.obj=obj;this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.recursive_QMARK_=recursive_QMARK_;this.__arr=__arr;this.__cnt=__cnt;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=2164131599;this.cljs$lang$protocol_mask$partition1$=139268};cljs_bean.core.Bean.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs_bean.core.Bean.prototype.cljs$core$IFind$_find$arity$2=function(_,k){var self__=this;var ___$1=this;var v=goog.object.get(self__.obj,self__.key__GT_prop.call(null,k),cljs_bean.core.lookup_sentinel);if(v===cljs_bean.core.lookup_sentinel)return null;else return new cljs.core.MapEntry(k,function(){var G__1591=v;if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1591,self__.prop__GT_key,self__.key__GT_prop);else return G__1591}(),null)};
cljs_bean.core.Bean.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_.call(null,coll)};cljs_bean.core.Bean.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};cljs_bean.core.Bean.prototype.keys=function(){var self__=this;var coll=this;return cljs.core.es6_iterator.call(null,cljs.core.keys.call(null,coll))};
cljs_bean.core.Bean.prototype.entries=function(){var self__=this;var coll=this;return cljs.core.es6_entries_iterator.call(null,cljs.core.seq.call(null,coll))};cljs_bean.core.Bean.prototype.values=function(){var self__=this;var coll=this;return cljs.core.es6_iterator.call(null,cljs.core.vals.call(null,coll))};cljs_bean.core.Bean.prototype.has=function(k){var self__=this;var coll=this;return cljs.core.contains_QMARK_.call(null,coll,k)};
cljs_bean.core.Bean.prototype.get=function(k,not_found){var self__=this;var coll=this;return cljs.core._lookup.call(null,coll,k,not_found)};
cljs_bean.core.Bean.prototype.forEach=function(f){var self__=this;var coll=this;var seq__1592=cljs.core.seq.call(null,coll);var chunk__1593=null;var count__1594=0;var i__1595=0;while(true){if(i__1595<count__1594){var vec__1602=cljs.core._nth.call(null,chunk__1593,i__1595);var k=cljs.core.nth.call(null,vec__1602,0,null);var v=cljs.core.nth.call(null,vec__1602,1,null);f.call(null,v,k);var G__1619=seq__1592;var G__1620=chunk__1593;var G__1621=count__1594;var G__1622=i__1595+1;seq__1592=G__1619;chunk__1593=
G__1620;count__1594=G__1621;i__1595=G__1622;continue}else{var temp__5735__auto__=cljs.core.seq.call(null,seq__1592);if(temp__5735__auto__){var seq__1592__$1=temp__5735__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__1592__$1)){var c__4550__auto__=cljs.core.chunk_first.call(null,seq__1592__$1);var G__1623=cljs.core.chunk_rest.call(null,seq__1592__$1);var G__1624=c__4550__auto__;var G__1625=cljs.core.count.call(null,c__4550__auto__);var G__1626=0;seq__1592=G__1623;chunk__1593=G__1624;count__1594=
G__1625;i__1595=G__1626;continue}else{var vec__1605=cljs.core.first.call(null,seq__1592__$1);var k=cljs.core.nth.call(null,vec__1605,0,null);var v=cljs.core.nth.call(null,vec__1605,1,null);f.call(null,v,k);var G__1627=cljs.core.next.call(null,seq__1592__$1);var G__1628=null;var G__1629=0;var G__1630=0;seq__1592=G__1627;chunk__1593=G__1628;count__1594=G__1629;i__1595=G__1630;continue}}else return null}break}};
cljs_bean.core.Bean.prototype.cljs$core$ILookup$_lookup$arity$2=function(_,k){var self__=this;var ___$1=this;var G__1608=self__.obj[self__.key__GT_prop.call(null,k)];if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1608,self__.prop__GT_key,self__.key__GT_prop);else return G__1608};
cljs_bean.core.Bean.prototype.cljs$core$ILookup$_lookup$arity$3=function(_,k,not_found){var self__=this;var ___$1=this;var ret=goog.object.get(self__.obj,self__.key__GT_prop.call(null,k),not_found);var G__1609=ret;if(self__.recursive_QMARK_&&!(ret===not_found))return cljs_bean.core.__GT_val.call(null,G__1609,self__.prop__GT_key,self__.key__GT_prop);else return G__1609};
cljs_bean.core.Bean.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(_,f,init){var self__=this;var ___$1=this;try{var result=cljs.core.volatile_BANG_.call(null,init);goog.object.forEach(self__.obj,function(result,___$1){return function(v,k,___$2){var r=cljs.core._vreset_BANG_.call(null,result,f.call(null,cljs.core._deref.call(null,result),self__.prop__GT_key.call(null,k),function(){var G__1611=v;if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1611,self__.prop__GT_key,
self__.key__GT_prop);else return G__1611}()));if(cljs.core.reduced_QMARK_.call(null,r))throw r;else return null}}(result,___$1));return cljs.core.deref.call(null,result)}catch(e1610){var x=e1610;if(cljs.core.reduced_QMARK_.call(null,x))return cljs.core.deref.call(null,x);else throw x;}};cljs_bean.core.Bean.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var self__=this;var coll__$1=this;return cljs.core.print_map.call(null,coll__$1,cljs.core.pr_writer,writer,opts)};
cljs_bean.core.Bean.prototype.cljs$core$IIterable$_iterator$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.__arr==null)self__.__arr=cljs.core.js_keys.call(null,self__.obj);else;return new cljs_bean.core.BeanIterator(self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.__arr,0,cljs.core._count.call(null,coll__$1))};cljs_bean.core.Bean.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__.meta};
cljs_bean.core.Bean.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.Bean(self__.meta,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.__arr,self__.__cnt,self__.__hash)};cljs_bean.core.Bean.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;if(self__.__cnt==null){if(self__.__arr==null)self__.__arr=cljs.core.js_keys.call(null,self__.obj);else;return self__.__cnt=self__.__arr.length}else return self__.__cnt};
cljs_bean.core.Bean.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__4243__auto__=self__.__hash;if(!(h__4243__auto__==null))return h__4243__auto__;else{var h__4243__auto____$1=cljs.core.hash_unordered_coll.call(null,coll__$1);self__.__hash=h__4243__auto____$1;return h__4243__auto____$1}};cljs_bean.core.Bean.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs.core.equiv_map.call(null,coll__$1,other)};
cljs_bean.core.Bean.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.TransientBean(true,goog.object.clone(self__.obj),self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.__cnt)};
cljs_bean.core.Bean.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.Bean(self__.meta,{},self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,[],0,null)};cljs_bean.core.Bean.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs.core._reduce.call(null,cljs.core._seq.call(null,coll__$1),f)};
cljs_bean.core.Bean.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs.core._kv_reduce.call(null,coll__$1,function(coll__$1){return function(r,k,v){return f.call(null,r,new cljs.core.MapEntry(k,v,null))}}(coll__$1),start)};
cljs_bean.core.Bean.prototype.cljs$core$IMap$_dissoc$arity$2=function(_,k){var self__=this;var ___$1=this;return new cljs_bean.core.Bean(self__.meta,function(){var G__1612=goog.object.clone(self__.obj);delete G__1612[self__.key__GT_prop.call(null,k)];return G__1612}(),self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,null,null,null)};
cljs_bean.core.Bean.prototype.cljs$core$IAssociative$_assoc$arity$3=function(_,k,v){var self__=this;var ___$1=this;if(cljs_bean.core.snapshot_QMARK_.call(null,k,v,self__.prop__GT_key,self__.recursive_QMARK_))return cljs.core._assoc.call(null,cljs.core.with_meta.call(null,cljs_bean.core.snapshot.call(null,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_),self__.meta),k,v);else return new cljs_bean.core.Bean(self__.meta,function(){var G__1613=goog.object.clone(self__.obj);
G__1613[self__.key__GT_prop.call(null,k)]=function(){var G__1614=v;if(self__.recursive_QMARK_)return cljs_bean.core.unwrap.call(null,G__1614);else return G__1614}();return G__1613}(),self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,null,null,null)};cljs_bean.core.Bean.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;return cljs.core.contains_QMARK_.call(null,coll__$1,k)};
cljs_bean.core.Bean.prototype.cljs$core$ISeqable$_seq$arity$1=function(_){var self__=this;var ___$1=this;if(self__.__arr==null)self__.__arr=cljs.core.js_keys.call(null,self__.obj);else;if(self__.__arr.length>0)return new cljs_bean.core.BeanSeq(self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.__arr,0,null);else return null};
cljs_bean.core.Bean.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs_bean.core.Bean(new_meta,self__.obj,self__.prop__GT_key,self__.key__GT_prop,self__.recursive_QMARK_,self__.__arr,self__.__cnt,self__.__hash)};
cljs_bean.core.Bean.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,entry){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.PersistentArrayMap_conj.call(null,coll__$1,entry)};
cljs_bean.core.Bean.prototype.call=function(){var G__1631=null;var G__1631__2=function(self__,k){var self__=this;var self____$1=this;var _=self____$1;var G__1615=self__.obj[self__.key__GT_prop.call(null,k)];if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1615,self__.prop__GT_key,self__.key__GT_prop);else return G__1615};var G__1631__3=function(self__,k,not_found){var self__=this;var self____$1=this;var _=self____$1;var ret=goog.object.get(self__.obj,self__.key__GT_prop.call(null,
k),not_found);var G__1616=ret;if(self__.recursive_QMARK_&&!(ret===not_found))return cljs_bean.core.__GT_val.call(null,G__1616,self__.prop__GT_key,self__.key__GT_prop);else return G__1616};G__1631=function(self__,k,not_found){switch(arguments.length){case 2:return G__1631__2.call(this,self__,k);case 3:return G__1631__3.call(this,self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__1631.cljs$core$IFn$_invoke$arity$2=G__1631__2;G__1631.cljs$core$IFn$_invoke$arity$3=G__1631__3;
return G__1631}();cljs_bean.core.Bean.prototype.apply=function(self__,args1590){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone.call(null,args1590)))};cljs_bean.core.Bean.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var _=this;var G__1617=self__.obj[self__.key__GT_prop.call(null,k)];if(self__.recursive_QMARK_)return cljs_bean.core.__GT_val.call(null,G__1617,self__.prop__GT_key,self__.key__GT_prop);else return G__1617};
cljs_bean.core.Bean.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var _=this;var ret=goog.object.get(self__.obj,self__.key__GT_prop.call(null,k),not_found);var G__1618=ret;if(self__.recursive_QMARK_&&!(ret===not_found))return cljs_bean.core.__GT_val.call(null,G__1618,self__.prop__GT_key,self__.key__GT_prop);else return G__1618};
cljs_bean.core.Bean.getBasis=function(){return new cljs.core.PersistentVector(null,8,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),cljs.core.with_meta(new cljs.core.Symbol(null,"recursive?","recursive?",-1314360525,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"__arr","__arr",2056204649,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"__cnt","__cnt",1833584904,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],
null)),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs_bean.core.Bean.cljs$lang$type=true;cljs_bean.core.Bean.cljs$lang$ctorStr="cljs-bean.core/Bean";cljs_bean.core.Bean.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/Bean")};
cljs_bean.core.__GT_Bean=function cljs_bean$core$__GT_Bean(meta,obj,prop__GT_key,key__GT_prop,recursive_QMARK_,__arr,__cnt,__hash){return new cljs_bean.core.Bean(meta,obj,prop__GT_key,key__GT_prop,recursive_QMARK_,__arr,__cnt,__hash)};
cljs_bean.core.TransientArrayVector=function(editable_QMARK_,arr,prop__GT_key,key__GT_prop){this.editable_QMARK_=editable_QMARK_;this.arr=arr;this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.cljs$lang$protocol_mask$partition1$=88;this.cljs$lang$protocol_mask$partition0$=275};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2=function(tcoll,o){var self__=this;var tcoll__$1=this;if(self__.editable_QMARK_)if(!cljs_bean.core.compatible_value_QMARK_.call(null,o,true))return cljs.core._conj_BANG_.call(null,cljs.core.transient$.call(null,cljs.core.vec.call(null,self__.arr)),o);else{self__.arr.push(cljs_bean.core.unwrap.call(null,o));return tcoll__$1}else throw new Error("conj! after persistent!");};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1=function(_){var self__=this;var ___$1=this;if(self__.editable_QMARK_){self__.editable_QMARK_=false;return new cljs_bean.core.ArrayVector(null,self__.prop__GT_key,self__.key__GT_prop,self__.arr,null)}else throw new Error("persistent! called twice");};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3=function(tcoll,key,val){var self__=this;var tcoll__$1=this;return cljs_bean.from.cljs.core.TransientVector_assoc_BANG_.call(null,tcoll__$1,key,val,"TransientArrayVector")};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3=function(tcoll,n,val){var self__=this;var tcoll__$1=this;if(self__.editable_QMARK_)if(!cljs_bean.core.compatible_value_QMARK_.call(null,val,true))return cljs.core._assoc_n_BANG_.call(null,cljs.core.transient$.call(null,cljs.core.vec.call(null,self__.arr)),n,val);else if(0<=n&&n<self__.arr.length){self__.arr[n]=cljs_bean.core.unwrap.call(null,val);return tcoll__$1}else if(n===self__.arr.length)return cljs.core._conj_BANG_.call(null,
tcoll__$1,val);else throw new Error(["Index ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," out of bounds for TransientArrayVector of length",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.arr.length)].join(""));else throw new Error("assoc! after persistent!");};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1=function(tcoll){var self__=this;var tcoll__$1=this;if(self__.editable_QMARK_)if(self__.arr.length===0)throw new Error("Can't pop empty vector");else{self__.arr=self__.arr.slice(0,self__.arr.length-1);return tcoll__$1}else throw new Error("pop! after persistent!");};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;if(self__.editable_QMARK_)return self__.arr.length;else throw new Error("count after persistent!");};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$IIndexed$_nth$arity$2=function(_,n){var self__=this;var ___$1=this;if(self__.editable_QMARK_)return cljs_bean.core.__GT_val.call(null,self__.arr[n],self__.prop__GT_key,self__.key__GT_prop);else throw new Error("nth after persistent!");};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,n,not_found){var self__=this;var coll__$1=this;if(0<=n&&n<self__.arr.length)return cljs.core._nth.call(null,coll__$1,n);else return not_found};cljs_bean.core.TransientArrayVector.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return cljs.core._lookup.call(null,coll__$1,k,null)};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;if(typeof k==="number")return cljs.core._nth.call(null,coll__$1,k,not_found);else return not_found};
cljs_bean.core.TransientArrayVector.prototype.call=function(){var G__1633=null;var G__1633__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return cljs.core._lookup.call(null,coll,k)};var G__1633__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return cljs.core._lookup.call(null,coll,k,not_found)};G__1633=function(self__,k,not_found){switch(arguments.length){case 2:return G__1633__2.call(this,self__,k);case 3:return G__1633__3.call(this,
self__,k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__1633.cljs$core$IFn$_invoke$arity$2=G__1633__2;G__1633.cljs$core$IFn$_invoke$arity$3=G__1633__3;return G__1633}();cljs_bean.core.TransientArrayVector.prototype.apply=function(self__,args1632){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone.call(null,args1632)))};
cljs_bean.core.TransientArrayVector.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return cljs.core._lookup.call(null,coll,k)};cljs_bean.core.TransientArrayVector.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return cljs.core._lookup.call(null,coll,k,not_found)};
cljs_bean.core.TransientArrayVector.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"editable?","editable?",-164945806,null),new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,
"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null)],null)};cljs_bean.core.TransientArrayVector.cljs$lang$type=true;cljs_bean.core.TransientArrayVector.cljs$lang$ctorStr="cljs-bean.core/TransientArrayVector";
cljs_bean.core.TransientArrayVector.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/TransientArrayVector")};cljs_bean.core.__GT_TransientArrayVector=function cljs_bean$core$__GT_TransientArrayVector(editable_QMARK_,arr,prop__GT_key,key__GT_prop){return new cljs_bean.core.TransientArrayVector(editable_QMARK_,arr,prop__GT_key,key__GT_prop)};
cljs_bean.core.ArrayVectorIterator=function(prop__GT_key,key__GT_prop,arr,i,cnt){this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.arr=arr;this.i=i;this.cnt=cnt};cljs_bean.core.ArrayVectorIterator.prototype.hasNext=function(){var self__=this;var _=this;return self__.i<self__.cnt};
cljs_bean.core.ArrayVectorIterator.prototype.next=function(){var self__=this;var _=this;var ret=cljs_bean.core.__GT_val.call(null,self__.arr[self__.i],self__.prop__GT_key,self__.key__GT_prop);self__.i=self__.i+1;return ret};
cljs_bean.core.ArrayVectorIterator.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),
true],null)),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null)],null)};cljs_bean.core.ArrayVectorIterator.cljs$lang$type=true;cljs_bean.core.ArrayVectorIterator.cljs$lang$ctorStr="cljs-bean.core/ArrayVectorIterator";cljs_bean.core.ArrayVectorIterator.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/ArrayVectorIterator")};
cljs_bean.core.__GT_ArrayVectorIterator=function cljs_bean$core$__GT_ArrayVectorIterator(prop__GT_key,key__GT_prop,arr,i,cnt){return new cljs_bean.core.ArrayVectorIterator(prop__GT_key,key__GT_prop,arr,i,cnt)};cljs_bean.core.ArrayVectorSeq=function(prop__GT_key,key__GT_prop,arr,i,meta){this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.arr=arr;this.i=i;this.meta=meta;this.cljs$lang$protocol_mask$partition0$=2179858686;this.cljs$lang$protocol_mask$partition1$=8192};
cljs_bean.core.ArrayVectorSeq.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_.call(null,coll)};cljs_bean.core.ArrayVectorSeq.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};
cljs_bean.core.ArrayVectorSeq.prototype.indexOf=function(){var G__1634=null;var G__1634__1=function(x){var self__=this;var coll=this;return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,0)};var G__1634__2=function(x,start){var self__=this;var coll=this;return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,start)};G__1634=function(x,start){switch(arguments.length){case 1:return G__1634__1.call(this,x);case 2:return G__1634__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__1634.cljs$core$IFn$_invoke$arity$1=G__1634__1;G__1634.cljs$core$IFn$_invoke$arity$2=G__1634__2;return G__1634}();
cljs_bean.core.ArrayVectorSeq.prototype.lastIndexOf=function(){var G__1635=null;var G__1635__1=function(x){var self__=this;var coll=this;return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x,cljs.core.count.call(null,coll))};var G__1635__2=function(x,start){var self__=this;var coll=this;return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x,start)};G__1635=function(x,start){switch(arguments.length){case 1:return G__1635__1.call(this,x);case 2:return G__1635__2.call(this,x,start)}throw new Error("Invalid arity: "+
arguments.length);};G__1635.cljs$core$IFn$_invoke$arity$1=G__1635__1;G__1635.cljs$core$IFn$_invoke$arity$2=G__1635__2;return G__1635}();cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IIndexed$_nth$arity$2=function(_,n){var self__=this;var ___$1=this;var i__$1=n+self__.i;if(0<=i__$1&&i__$1<self__.arr.length)return cljs_bean.core.__GT_val.call(null,self__.arr[i__$1],self__.prop__GT_key,self__.key__GT_prop);else throw new Error("Index out of bounds");};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IIndexed$_nth$arity$3=function(_,n,not_found){var self__=this;var ___$1=this;var i__$1=n+self__.i;if(0<=i__$1&&i__$1<self__.arr.length)return cljs_bean.core.__GT_val.call(null,self__.arr[i__$1],self__.prop__GT_key,self__.key__GT_prop);else return not_found};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var self__=this;var coll__$1=this;return cljs.core.pr_sequential_writer.call(null,writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1)};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IMeta$_meta$arity$1=function(_){var self__=this;var ___$1=this;return self__.meta};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.ArrayVectorSeq(self__.prop__GT_key,self__.key__GT_prop,self__.arr,self__.i,self__.meta)};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$INext$_next$arity$1=function(_){var self__=this;var ___$1=this;if(self__.i+1<self__.arr.length)return new cljs_bean.core.ArrayVectorSeq(self__.prop__GT_key,self__.key__GT_prop,self__.arr,self__.i+1,null);else return null};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$ICounted$_count$arity$1=function(_){var self__=this;var ___$1=this;var x__4219__auto__=0;var y__4220__auto__=self__.arr.length-self__.i;return x__4219__auto__>y__4220__auto__?x__4219__auto__:y__4220__auto__};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;return cljs.core.hash_ordered_coll.call(null,coll__$1)};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.equiv_sequential.call(null,coll__$1,other)};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(_){var self__=this;var ___$1=this;return cljs.core.List.EMPTY};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IReduce$_reduce$arity$2=function(coll,f){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.ci_reduce.call(null,coll__$1,f)};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IReduce$_reduce$arity$3=function(coll,f,start){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.ci_reduce.call(null,coll__$1,f,start)};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$ISeq$_first$arity$1=function(_){var self__=this;var ___$1=this;return cljs_bean.core.__GT_val.call(null,self__.arr[self__.i],self__.prop__GT_key,self__.key__GT_prop)};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$ISeq$_rest$arity$1=function(_){var self__=this;var ___$1=this;if(self__.i+1<self__.arr.length)return new cljs_bean.core.ArrayVectorSeq(self__.prop__GT_key,self__.key__GT_prop,self__.arr,self__.i+1,null);else return cljs.core.List.EMPTY};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$ISeqable$_seq$arity$1=function(this$){var self__=this;var this$__$1=this;return this$__$1};cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs_bean.core.ArrayVectorSeq(self__.prop__GT_key,self__.key__GT_prop,self__.arr,self__.i,new_meta)};
cljs_bean.core.ArrayVectorSeq.prototype.cljs$core$ICollection$_conj$arity$2=function(coll,o){var self__=this;var coll__$1=this;return cljs.core.cons.call(null,o,coll__$1)};
cljs_bean.core.ArrayVectorSeq.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)],null)};cljs_bean.core.ArrayVectorSeq.cljs$lang$type=true;
cljs_bean.core.ArrayVectorSeq.cljs$lang$ctorStr="cljs-bean.core/ArrayVectorSeq";cljs_bean.core.ArrayVectorSeq.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/ArrayVectorSeq")};cljs_bean.core.__GT_ArrayVectorSeq=function cljs_bean$core$__GT_ArrayVectorSeq(prop__GT_key,key__GT_prop,arr,i,meta){return new cljs_bean.core.ArrayVectorSeq(prop__GT_key,key__GT_prop,arr,i,meta)};
cljs_bean.core.ArrayVector=function(meta,prop__GT_key,key__GT_prop,arr,__hash){this.meta=meta;this.prop__GT_key=prop__GT_key;this.key__GT_prop=key__GT_prop;this.arr=arr;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=2315150111;this.cljs$lang$protocol_mask$partition1$=141316};cljs_bean.core.ArrayVector.prototype.cljs$core$IFind$=cljs.core.PROTOCOL_SENTINEL;
cljs_bean.core.ArrayVector.prototype.cljs$core$IFind$_find$arity$2=function(coll,n){var self__=this;var coll__$1=this;if(0<=n&&n<self__.arr.length)return new cljs.core.MapEntry(n,cljs_bean.core.__GT_val.call(null,self__.arr[n],self__.prop__GT_key,self__.key__GT_prop),null);else return null};cljs_bean.core.ArrayVector.prototype.toString=function(){var self__=this;var coll=this;return cljs.core.pr_str_STAR_.call(null,coll)};
cljs_bean.core.ArrayVector.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};
cljs_bean.core.ArrayVector.prototype.indexOf=function(){var G__1637=null;var G__1637__1=function(x){var self__=this;var coll=this;return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,0)};var G__1637__2=function(x,start){var self__=this;var coll=this;return cljs_bean.from.cljs.core._indexOf.call(null,coll,x,start)};G__1637=function(x,start){switch(arguments.length){case 1:return G__1637__1.call(this,x);case 2:return G__1637__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__1637.cljs$core$IFn$_invoke$arity$1=G__1637__1;G__1637.cljs$core$IFn$_invoke$arity$2=G__1637__2;return G__1637}();
cljs_bean.core.ArrayVector.prototype.lastIndexOf=function(){var G__1638=null;var G__1638__1=function(x){var self__=this;var coll=this;return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x)};var G__1638__2=function(x,start){var self__=this;var coll=this;return cljs_bean.from.cljs.core._lastIndexOf.call(null,coll,x,start)};G__1638=function(x,start){switch(arguments.length){case 1:return G__1638__1.call(this,x);case 2:return G__1638__2.call(this,x,start)}throw new Error("Invalid arity: "+arguments.length);
};G__1638.cljs$core$IFn$_invoke$arity$1=G__1638__1;G__1638.cljs$core$IFn$_invoke$arity$2=G__1638__2;return G__1638}();cljs_bean.core.ArrayVector.prototype.cljs$core$ILookup$_lookup$arity$2=function(coll,k){var self__=this;var coll__$1=this;return cljs.core._lookup.call(null,coll__$1,k,null)};
cljs_bean.core.ArrayVector.prototype.cljs$core$ILookup$_lookup$arity$3=function(coll,k,not_found){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.PersistentVector_lookup.call(null,coll__$1,k,not_found)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(v,f,init){var self__=this;var v__$1=this;var i=0;var init__$1=init;while(true){if(i<self__.arr.length){var len=self__.arr.length;var init__$2=function(){var j=0;var init__$2=init__$1;while(true){if(j<len){var init__$3=f.call(null,init__$2,j+i,cljs_bean.core.__GT_val.call(null,self__.arr[j],self__.prop__GT_key,self__.key__GT_prop));if(cljs.core.reduced_QMARK_.call(null,init__$3))return init__$3;else{var G__1639=j+
1;var G__1640=init__$3;j=G__1639;init__$2=G__1640;continue}}else return init__$2;break}}();if(cljs.core.reduced_QMARK_.call(null,init__$2))return cljs.core.deref.call(null,init__$2);else{var G__1641=i+len;var G__1642=init__$2;i=G__1641;init__$1=G__1642;continue}}else return init__$1;break}};
cljs_bean.core.ArrayVector.prototype.cljs$core$IIndexed$_nth$arity$2=function(coll,n){var self__=this;var coll__$1=this;if(0<=n&&n<self__.arr.length)return cljs_bean.core.__GT_val.call(null,self__.arr[n],self__.prop__GT_key,self__.key__GT_prop);else throw new Error(["No item ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," in vector of length ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.arr.length)].join(""));};
cljs_bean.core.ArrayVector.prototype.cljs$core$IIndexed$_nth$arity$3=function(coll,n,not_found){var self__=this;var coll__$1=this;if(0<=n&&n<self__.arr.length)return cljs_bean.core.__GT_val.call(null,self__.arr[n],self__.prop__GT_key,self__.key__GT_prop);else return not_found};
cljs_bean.core.ArrayVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var self__=this;var coll__$1=this;return cljs.core.pr_sequential_writer.call(null,writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IVector$_assoc_n$arity$3=function(coll,n,val){var self__=this;var coll__$1=this;if(0<=n&&n<self__.arr.length)if(!cljs_bean.core.compatible_value_QMARK_.call(null,val,true))return cljs.core._assoc_n.call(null,cljs.core.vec.call(null,self__.arr),n,val);else{var new_arr=cljs.core.aclone.call(null,self__.arr);new_arr[n]=cljs_bean.core.unwrap.call(null,val);return new cljs_bean.core.ArrayVector(self__.meta,self__.prop__GT_key,self__.key__GT_prop,new_arr,null)}else if(n===
self__.arr.length)return cljs.core._conj.call(null,coll__$1,val);else throw new Error(["Index ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," out of bounds  [0,",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.arr.length),"]"].join(""));};cljs_bean.core.ArrayVector.prototype.cljs$core$IIterable$_iterator$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.ArrayVectorIterator(self__.prop__GT_key,self__.key__GT_prop,self__.arr,0,self__.arr.length)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IMeta$_meta$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.meta};cljs_bean.core.ArrayVector.prototype.cljs$core$ICloneable$_clone$arity$1=function(_){var self__=this;var ___$1=this;return new cljs_bean.core.ArrayVector(self__.meta,self__.prop__GT_key,self__.key__GT_prop,self__.arr,self__.__hash)};cljs_bean.core.ArrayVector.prototype.cljs$core$ICounted$_count$arity$1=function(coll){var self__=this;var coll__$1=this;return self__.arr.length};
cljs_bean.core.ArrayVector.prototype.cljs$core$IStack$_peek$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.arr.length>0)return cljs.core._nth.call(null,coll__$1,self__.arr.length-1);else return null};
cljs_bean.core.ArrayVector.prototype.cljs$core$IStack$_pop$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.arr.length===0)throw new Error("Can't pop empty vector");else if(1===self__.arr.length)return cljs.core._empty.call(null,coll__$1);else{var new_arr=cljs.core.aclone.call(null,self__.arr);return new cljs_bean.core.ArrayVector(self__.meta,self__.prop__GT_key,self__.key__GT_prop,new_arr.slice(0,new_arr.length-1),null)}};
cljs_bean.core.ArrayVector.prototype.cljs$core$IReversible$_rseq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.arr.length>0)return new cljs.core.RSeq(coll__$1,self__.arr.length-1,null);else return null};
cljs_bean.core.ArrayVector.prototype.cljs$core$IHash$_hash$arity$1=function(coll){var self__=this;var coll__$1=this;var h__4243__auto__=self__.__hash;if(!(h__4243__auto__==null))return h__4243__auto__;else{var h__4243__auto____$1=cljs.core.hash_ordered_coll.call(null,coll__$1);self__.__hash=h__4243__auto____$1;return h__4243__auto____$1}};
cljs_bean.core.ArrayVector.prototype.cljs$core$IEquiv$_equiv$arity$2=function(coll,other){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.PersistentVector_equiv.call(null,coll__$1,other,cljs_bean.core.ArrayVector,self__.arr.length)};cljs_bean.core.ArrayVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs_bean.core.TransientArrayVector(true,cljs.core.aclone.call(null,self__.arr),self__.prop__GT_key,self__.key__GT_prop)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1=function(coll){var self__=this;var coll__$1=this;return new cljs_bean.core.ArrayVector(self__.meta,self__.prop__GT_key,self__.key__GT_prop,[],null)};cljs_bean.core.ArrayVector.prototype.cljs$core$IReduce$_reduce$arity$2=function(v,f){var self__=this;var v__$1=this;return cljs_bean.from.cljs.core.ci_reduce.call(null,v__$1,f)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IReduce$_reduce$arity$3=function(v,f,init){var self__=this;var v__$1=this;return cljs_bean.from.cljs.core.ci_reduce.call(null,v__$1,f,init)};cljs_bean.core.ArrayVector.prototype.cljs$core$IAssociative$_assoc$arity$3=function(coll,k,v){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.PersistentVector_assoc.call(null,coll__$1,k,v)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2=function(coll,k){var self__=this;var coll__$1=this;return cljs_bean.from.cljs.core.PersistentVector_contains_key_QMARK_.call(null,coll__$1,k,self__.arr.length)};cljs_bean.core.ArrayVector.prototype.cljs$core$ISeqable$_seq$arity$1=function(coll){var self__=this;var coll__$1=this;if(self__.arr.length>0)return new cljs_bean.core.ArrayVectorSeq(self__.prop__GT_key,self__.key__GT_prop,self__.arr,0,null);else return null};
cljs_bean.core.ArrayVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(coll,new_meta){var self__=this;var coll__$1=this;if(new_meta===self__.meta)return coll__$1;else return new cljs_bean.core.ArrayVector(new_meta,self__.prop__GT_key,self__.key__GT_prop,self__.arr,self__.__hash)};
cljs_bean.core.ArrayVector.prototype.cljs$core$ICollection$_conj$arity$2=function(_,o){var self__=this;var ___$1=this;if(!cljs_bean.core.compatible_value_QMARK_.call(null,o,true))return cljs.core._conj.call(null,cljs.core.vec.call(null,self__.arr),o);else{var new_arr=cljs.core.aclone.call(null,self__.arr);new_arr[new_arr.length]=cljs_bean.core.unwrap.call(null,o);return new cljs_bean.core.ArrayVector(self__.meta,self__.prop__GT_key,self__.key__GT_prop,new_arr,null)}};
cljs_bean.core.ArrayVector.prototype.call=function(){var G__1643=null;var G__1643__2=function(self__,k){var self__=this;var self____$1=this;var coll=self____$1;return cljs.core._nth.call(null,coll,k)};var G__1643__3=function(self__,k,not_found){var self__=this;var self____$1=this;var coll=self____$1;return cljs.core._nth.call(null,coll,k,not_found)};G__1643=function(self__,k,not_found){switch(arguments.length){case 2:return G__1643__2.call(this,self__,k);case 3:return G__1643__3.call(this,self__,
k,not_found)}throw new Error("Invalid arity: "+(arguments.length-1));};G__1643.cljs$core$IFn$_invoke$arity$2=G__1643__2;G__1643.cljs$core$IFn$_invoke$arity$3=G__1643__3;return G__1643}();cljs_bean.core.ArrayVector.prototype.apply=function(self__,args1636){var self__=this;var self____$1=this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone.call(null,args1636)))};
cljs_bean.core.ArrayVector.prototype.cljs$core$IFn$_invoke$arity$1=function(k){var self__=this;var coll=this;return cljs.core._nth.call(null,coll,k)};cljs_bean.core.ArrayVector.prototype.cljs$core$IFn$_invoke$arity$2=function(k,not_found){var self__=this;var coll=this;return cljs.core._nth.call(null,coll,k,not_found)};
cljs_bean.core.ArrayVector.prototype.cljs$core$IComparable$_compare$arity$2=function(x,y){var self__=this;var x__$1=this;if(cljs.core.vector_QMARK_.call(null,y))return cljs_bean.from.cljs.core.compare_indexed.call(null,x__$1,y);else throw new Error(["Cannot compare ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)," to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));};
cljs_bean.core.ArrayVector.getBasis=function(){return new cljs.core.PersistentVector(null,5,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Symbol(null,"prop-\x3ekey","prop-\x3ekey",342816281,null),new cljs.core.Symbol(null,"key-\x3eprop","key-\x3eprop",612078996,null),new cljs.core.Symbol(null,"arr","arr",2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"__hash","__hash",-1328796629,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs_bean.core.ArrayVector.cljs$lang$type=true;cljs_bean.core.ArrayVector.cljs$lang$ctorStr="cljs-bean.core/ArrayVector";cljs_bean.core.ArrayVector.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs-bean.core/ArrayVector")};
cljs_bean.core.__GT_ArrayVector=function cljs_bean$core$__GT_ArrayVector(meta,prop__GT_key,key__GT_prop,arr,__hash){return new cljs_bean.core.ArrayVector(meta,prop__GT_key,key__GT_prop,arr,__hash)};cljs_bean.core.default_key__GT_prop=function cljs_bean$core$default_key__GT_prop(x){if(x instanceof cljs.core.Keyword)return x.fqn;else return null};
cljs_bean.core.bean=function cljs_bean$core$bean(var_args){var G__1647=arguments.length;switch(G__1647){case 0:return cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$0();break;case 1:return cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:var args_arr__4751__auto__=[];var len__4730__auto___1651=arguments.length;var i__4731__auto___1652=0;while(true){if(i__4731__auto___1652<len__4730__auto___1651){args_arr__4751__auto__.push(arguments[i__4731__auto___1652]);var G__1653=
i__4731__auto___1652+1;i__4731__auto___1652=G__1653;continue}else;break}var argseq__4752__auto__=new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1),0,null);return cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__4752__auto__)}};cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$0=function(){return new cljs_bean.core.Bean(null,{},cljs.core.keyword,cljs_bean.core.default_key__GT_prop,false,[],0,null)};
cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$1=function(x){return new cljs_bean.core.Bean(null,x,cljs.core.keyword,cljs_bean.core.default_key__GT_prop,false,null,null,null)};
cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$variadic=function(x,opts){var map__1648=opts;var map__1648__$1=(!(map__1648==null)?map__1648.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__1648.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__1648):map__1648;var keywordize_keys=cljs.core.get.call(null,map__1648__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));var prop__GT_key=cljs.core.get.call(null,map__1648__$1,
new cljs.core.Keyword(null,"prop-\x3ekey","prop-\x3ekey",-1297715246));var key__GT_prop=cljs.core.get.call(null,map__1648__$1,new cljs.core.Keyword(null,"key-\x3eprop","key-\x3eprop",-1028452531));var recursive=cljs.core.get.call(null,map__1648__$1,new cljs.core.Keyword(null,"recursive","recursive",718885872));if(keywordize_keys===false)return new cljs_bean.core.Bean(null,x,cljs.core.identity,cljs.core.identity,cljs.core.boolean$.call(null,recursive),null,null,null);else if(!(prop__GT_key==null)&&
!(key__GT_prop==null))return new cljs_bean.core.Bean(null,x,prop__GT_key,key__GT_prop,cljs.core.boolean$.call(null,recursive),null,null,null);else return new cljs_bean.core.Bean(null,x,cljs.core.keyword,cljs_bean.core.default_key__GT_prop,cljs.core.boolean$.call(null,recursive),null,null,null)};
cljs_bean.core.bean.cljs$lang$applyTo=function(seq1645){var G__1646=cljs.core.first.call(null,seq1645);var seq1645__$1=cljs.core.next.call(null,seq1645);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1646,seq1645__$1)};cljs_bean.core.bean.cljs$lang$maxFixedArity=1;cljs_bean.core.bean_QMARK_=function cljs_bean$core$bean_QMARK_(x){return x instanceof cljs_bean.core.Bean};cljs_bean.core.object=function cljs_bean$core$object(b){return b.obj};
cljs_bean.core.__GT_clj=function cljs_bean$core$__GT_clj(x){return cljs_bean.core.__GT_val.call(null,x,cljs.core.keyword,cljs_bean.core.default_key__GT_prop)};cljs_bean.core.__GT_js=function cljs_bean$core$__GT_js(x){if(x instanceof cljs_bean.core.Bean)return x.obj;else if(x instanceof cljs_bean.core.ArrayVector)return x.arr;else return cljs.core.clj__GT_js.call(null,x,new cljs.core.Keyword(null,"keyword-fn","keyword-fn",-64566675),cljs_bean.core.default_key__GT_prop)};
cljs_bean.core.set_empty_colls_BANG_=function cljs_bean$core$set_empty_colls_BANG_(){cljs.core.PersistentArrayMap.EMPTY=cljs_bean.core.__GT_clj.call(null,{});cljs.core.PersistentVector.EMPTY=cljs_bean.core.__GT_clj.call(null,[]);return null};goog.provide("uix.hooks.alpha");goog.require("cljs.core");goog.require("goog.object");uix.hooks.alpha.global$module$react=goog.global["React"];uix.hooks.alpha.StateHook=function(value,set_value){this.value=value;this.set_value=set_value;this.cljs$lang$protocol_mask$partition0$=2151710720;this.cljs$lang$protocol_mask$partition1$=98304};uix.hooks.alpha.StateHook.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};
uix.hooks.alpha.StateHook.prototype.cljs$core$IHash$_hash$arity$1=function(o){var self__=this;var o__$1=this;return goog.getUid(o__$1)};uix.hooks.alpha.StateHook.prototype.cljs$core$IDeref$_deref$arity$1=function(o){var self__=this;var o__$1=this;return self__.value};uix.hooks.alpha.StateHook.prototype.cljs$core$IReset$_reset_BANG_$arity$2=function(o,new_value){var self__=this;var o__$1=this;return self__.set_value.call(null,new_value)};
uix.hooks.alpha.StateHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$2=function(o,f){var self__=this;var o__$1=this;return self__.set_value.call(null,f)};uix.hooks.alpha.StateHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$3=function(o,f,a){var self__=this;var o__$1=this;return self__.set_value.call(null,function(o__$1){return function(p1__1737_SHARP_){return f.call(null,p1__1737_SHARP_,a)}}(o__$1))};
uix.hooks.alpha.StateHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$4=function(o,f,a,b){var self__=this;var o__$1=this;return self__.set_value.call(null,function(o__$1){return function(p1__1738_SHARP_){return f.call(null,p1__1738_SHARP_,a,b)}}(o__$1))};
uix.hooks.alpha.StateHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$5=function(o,f,a,b,xs){var self__=this;var o__$1=this;return self__.set_value.call(null,function(o__$1){return function(p1__1739_SHARP_){return cljs.core.apply.call(null,f,p1__1739_SHARP_,a,b,xs)}}(o__$1))};
uix.hooks.alpha.StateHook.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(o,writer,opts){var self__=this;var o__$1=this;cljs.core._write.call(null,writer,"#object [uix.hooks.alpha.StateHook ");cljs.core.pr_writer.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"val","val",128701612),self__.value],null),writer,opts);return cljs.core._write.call(null,writer,"]")};
uix.hooks.alpha.StateHook.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"set-value","set-value",2085758879,null)],null)};uix.hooks.alpha.StateHook.cljs$lang$type=true;uix.hooks.alpha.StateHook.cljs$lang$ctorStr="uix.hooks.alpha/StateHook";
uix.hooks.alpha.StateHook.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"uix.hooks.alpha/StateHook")};uix.hooks.alpha.__GT_StateHook=function uix$hooks$alpha$__GT_StateHook(value,set_value){return new uix.hooks.alpha.StateHook(value,set_value)};
uix.hooks.alpha.state=function uix$hooks$alpha$state(value){var vec__1740=uix.hooks.alpha.global$module$react.useState.call(null,value);var value__$1=cljs.core.nth.call(null,vec__1740,0,null);var set_value=cljs.core.nth.call(null,vec__1740,1,null);var sh=uix.hooks.alpha.global$module$react.useMemo.call(null,function(vec__1740,value__$1,set_value){return function(){return new uix.hooks.alpha.StateHook(value__$1,set_value)}}(vec__1740,value__$1,set_value),[]);return uix.hooks.alpha.global$module$react.useMemo.call(null,
function(vec__1740,value__$1,set_value,sh){return function(){sh.value=value__$1;sh.set_value=set_value;return sh}}(vec__1740,value__$1,set_value,sh),[value__$1,set_value])};uix.hooks.alpha.IRef=function(){};
uix.hooks.alpha.unwrap=function uix$hooks$alpha$unwrap(this$){if(!(this$==null)&&!(this$.uix$hooks$alpha$IRef$unwrap$arity$1==null))return this$.uix$hooks$alpha$IRef$unwrap$arity$1(this$);else{var x__4433__auto__=this$==null?null:this$;var m__4434__auto__=uix.hooks.alpha.unwrap[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,this$);else{var m__4431__auto__=uix.hooks.alpha.unwrap["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,this$);else throw cljs.core.missing_protocol.call(null,
"IRef.unwrap",this$);}}};uix.hooks.alpha.RefHook=function(rref){this.rref=rref;this.cljs$lang$protocol_mask$partition0$=2151710720;this.cljs$lang$protocol_mask$partition1$=98304};uix.hooks.alpha.RefHook.prototype.uix$hooks$alpha$IRef$=cljs.core.PROTOCOL_SENTINEL;uix.hooks.alpha.RefHook.prototype.uix$hooks$alpha$IRef$unwrap$arity$1=function(this$){var self__=this;var this$__$1=this;return self__.rref};
uix.hooks.alpha.RefHook.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};uix.hooks.alpha.RefHook.prototype.cljs$core$IHash$_hash$arity$1=function(o){var self__=this;var o__$1=this;return goog.getUid(o__$1)};uix.hooks.alpha.RefHook.prototype.cljs$core$IDeref$_deref$arity$1=function(o){var self__=this;var o__$1=this;return goog.object.get(self__.rref,"current")};
uix.hooks.alpha.RefHook.prototype.cljs$core$IReset$_reset_BANG_$arity$2=function(o,new_value){var self__=this;var o__$1=this;goog.object.set(self__.rref,"current",new_value);return new_value};uix.hooks.alpha.RefHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$2=function(o,f){var self__=this;var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,f.call(null,cljs.core._deref.call(null,o__$1)))};
uix.hooks.alpha.RefHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$3=function(o,f,a){var self__=this;var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,f.call(null,cljs.core._deref.call(null,o__$1),a))};uix.hooks.alpha.RefHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$4=function(o,f,a,b){var self__=this;var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,f.call(null,cljs.core._deref.call(null,o__$1),a,b))};
uix.hooks.alpha.RefHook.prototype.cljs$core$ISwap$_swap_BANG_$arity$5=function(o,f,a,b,xs){var self__=this;var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,cljs.core.apply.call(null,f,cljs.core._deref.call(null,o__$1),a,b,xs))};
uix.hooks.alpha.RefHook.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(o,writer,opts){var self__=this;var o__$1=this;cljs.core._write.call(null,writer,"#object [uix.hooks.alpha.RefHook ");cljs.core.pr_writer.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"val","val",128701612),cljs.core._deref.call(null,o__$1)],null),writer,opts);return cljs.core._write.call(null,writer,"]")};
uix.hooks.alpha.RefHook.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"rref","rref",1363435641,null)],null)};uix.hooks.alpha.RefHook.cljs$lang$type=true;uix.hooks.alpha.RefHook.cljs$lang$ctorStr="uix.hooks.alpha/RefHook";uix.hooks.alpha.RefHook.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"uix.hooks.alpha/RefHook")};
uix.hooks.alpha.__GT_RefHook=function uix$hooks$alpha$__GT_RefHook(rref){return new uix.hooks.alpha.RefHook(rref)};uix.hooks.alpha.ref=function uix$hooks$alpha$ref(value){var vref=uix.hooks.alpha.global$module$react.useRef.call(null,value);return uix.hooks.alpha.global$module$react.useMemo.call(null,function(vref){return function(){return new uix.hooks.alpha.RefHook(vref)}}(vref),[])};
uix.hooks.alpha.effect_BANG_=function uix$hooks$alpha$effect_BANG_(setup_fn,deps){var prev_deps_STAR_=uix.hooks.alpha.ref.call(null,deps);if(cljs.core.not_EQ_.call(null,cljs.core.deref.call(null,prev_deps_STAR_),deps))cljs.core.reset_BANG_.call(null,prev_deps_STAR_,deps);else;return uix.hooks.alpha.global$module$react.useEffect.call(null,function(prev_deps_STAR_){return function(){cljs.core.reset_BANG_.call(null,prev_deps_STAR_,deps);var ret=setup_fn.call(null);if(cljs.core.fn_QMARK_.call(null,ret))return ret;
else return undefined}}(prev_deps_STAR_),cljs.core.truth_(cljs.core.deref.call(null,prev_deps_STAR_))?cljs.core.into_array.call(null,cljs.core.deref.call(null,prev_deps_STAR_)):undefined)};
uix.hooks.alpha.layout_effect_BANG_=function uix$hooks$alpha$layout_effect_BANG_(setup_fn,deps){var prev_deps_STAR_=uix.hooks.alpha.ref.call(null,deps);if(cljs.core.not_EQ_.call(null,cljs.core.deref.call(null,prev_deps_STAR_),deps))cljs.core.reset_BANG_.call(null,prev_deps_STAR_,deps);else;return uix.hooks.alpha.global$module$react.useLayoutEffect.call(null,function(prev_deps_STAR_){return function(){cljs.core.reset_BANG_.call(null,prev_deps_STAR_,deps);var ret=setup_fn.call(null);if(cljs.core.fn_QMARK_.call(null,
ret))return ret;else return undefined}}(prev_deps_STAR_),cljs.core.truth_(cljs.core.deref.call(null,prev_deps_STAR_))?cljs.core.into_array.call(null,cljs.core.deref.call(null,prev_deps_STAR_)):undefined)};
uix.hooks.alpha.callback=function uix$hooks$alpha$callback(f,deps){var prev_deps_STAR_=uix.hooks.alpha.ref.call(null,deps);if(cljs.core.not_EQ_.call(null,cljs.core.deref.call(null,prev_deps_STAR_),deps))cljs.core.reset_BANG_.call(null,prev_deps_STAR_,deps);else;return uix.hooks.alpha.global$module$react.useCallback.call(null,f,cljs.core.truth_(cljs.core.deref.call(null,prev_deps_STAR_))?cljs.core.into_array.call(null,cljs.core.deref.call(null,prev_deps_STAR_)):undefined)};
uix.hooks.alpha.memo=function uix$hooks$alpha$memo(f,deps){var prev_deps_STAR_=uix.hooks.alpha.ref.call(null,deps);if(cljs.core.not_EQ_.call(null,cljs.core.deref.call(null,prev_deps_STAR_),deps))cljs.core.reset_BANG_.call(null,prev_deps_STAR_,deps);else;return uix.hooks.alpha.global$module$react.useMemo.call(null,f,cljs.core.truth_(cljs.core.deref.call(null,prev_deps_STAR_))?cljs.core.into_array.call(null,cljs.core.deref.call(null,prev_deps_STAR_)):undefined)};
uix.hooks.alpha.batched_update=typeof ReactDOM!=="undefined"?ReactDOM.unstable_batchedUpdates:function(f){return f.call(null)};
uix.hooks.alpha.subscribe=function uix$hooks$alpha$subscribe(p__1744){var map__1745=p__1744;var map__1745__$1=(!(map__1745==null)?map__1745.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__1745.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__1745):map__1745;var get_current_value=cljs.core.get.call(null,map__1745__$1,new cljs.core.Keyword(null,"get-current-value","get-current-value",-1706578691));var subscribe=cljs.core.get.call(null,map__1745__$1,
new cljs.core.Keyword(null,"subscribe","subscribe",416253756));var get_initial_state=function(map__1745,map__1745__$1,get_current_value,subscribe){return function(){return new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"get-current-value","get-current-value",-1706578691),get_current_value,new cljs.core.Keyword(null,"subscribe","subscribe",416253756),subscribe,new cljs.core.Keyword(null,"value","value",305978217),get_current_value.call(null)],null)}}(map__1745,map__1745__$1,get_current_value,
subscribe);var vec__1747=uix.hooks.alpha.global$module$react.useState.call(null,get_initial_state);var state=cljs.core.nth.call(null,vec__1747,0,null);var set_state=cljs.core.nth.call(null,vec__1747,1,null);var ret_value=cljs.core.not_EQ_.call(null,(new cljs.core.Keyword(null,"get-current-value","get-current-value",-1706578691)).cljs$core$IFn$_invoke$arity$1(state),get_current_value)||cljs.core.not_EQ_.call(null,(new cljs.core.Keyword(null,"subscribe","subscribe",416253756)).cljs$core$IFn$_invoke$arity$1(state),
subscribe)?function(){var ret_val=get_current_value.call(null);set_state.call(null,new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"get-current-value","get-current-value",-1706578691),get_current_value,new cljs.core.Keyword(null,"subscribe","subscribe",416253756),subscribe,new cljs.core.Keyword(null,"value","value",305978217),ret_val],null));return ret_val}():(new cljs.core.Keyword(null,"value","value",305978217)).cljs$core$IFn$_invoke$arity$1(state);uix.hooks.alpha.global$module$react.useDebugValue.call(null,
ret_value);uix.hooks.alpha.global$module$react.useEffect.call(null,function(get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe){return function(){var did_unsubscribe_QMARK_=cljs.core.volatile_BANG_.call(null,false);var check_for_updates=function(did_unsubscribe_QMARK_,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe){return function(){if(cljs.core.truth_(cljs.core.deref.call(null,did_unsubscribe_QMARK_)))return null;
else{var value=get_current_value.call(null);return uix.hooks.alpha.batched_update.call(null,function(value,did_unsubscribe_QMARK_,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe){return function(){return set_state.call(null,function(value,did_unsubscribe_QMARK_,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe){return function(p1__1743_SHARP_){if(cljs.core.not_EQ_.call(null,(new cljs.core.Keyword(null,
"get-current-value","get-current-value",-1706578691)).cljs$core$IFn$_invoke$arity$1(p1__1743_SHARP_),get_current_value)||cljs.core.not_EQ_.call(null,(new cljs.core.Keyword(null,"subscribe","subscribe",416253756)).cljs$core$IFn$_invoke$arity$1(p1__1743_SHARP_),subscribe)||cljs.core._EQ_.call(null,(new cljs.core.Keyword(null,"value","value",305978217)).cljs$core$IFn$_invoke$arity$1(p1__1743_SHARP_),value))return p1__1743_SHARP_;else return cljs.core.assoc.call(null,p1__1743_SHARP_,new cljs.core.Keyword(null,
"value","value",305978217),value)}}(value,did_unsubscribe_QMARK_,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe))}}(value,did_unsubscribe_QMARK_,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe))}}}(did_unsubscribe_QMARK_,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe);var unsubscribe=subscribe.call(null,check_for_updates);check_for_updates.call(null);
return function(did_unsubscribe_QMARK_,check_for_updates,unsubscribe,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe){return function(){cljs.core.vreset_BANG_.call(null,did_unsubscribe_QMARK_,true);return unsubscribe.call(null)}}(did_unsubscribe_QMARK_,check_for_updates,unsubscribe,get_initial_state,vec__1747,state,set_state,ret_value,map__1745,map__1745__$1,get_current_value,subscribe)}}(get_initial_state,vec__1747,state,set_state,ret_value,
map__1745,map__1745__$1,get_current_value,subscribe),[get_current_value,subscribe]);return ret_value};goog.provide("clojure.string");goog.require("cljs.core");goog.require("goog.string");goog.require("goog.string.StringBuffer");clojure.string.seq_reverse=function clojure$string$seq_reverse(coll){return cljs.core.reduce.call(null,cljs.core.conj,cljs.core.List.EMPTY,coll)};clojure.string.re_surrogate_pair=new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])","g");clojure.string.reverse=function clojure$string$reverse(s){return s.replace(clojure.string.re_surrogate_pair,"$2$1").split("").reverse().join("")};
clojure.string.replace_all=function clojure$string$replace_all(s,re,replacement){var r=new RegExp(re.source,function(){var G__7994="g";var G__7994__$1=cljs.core.truth_(re.ignoreCase)?[G__7994,"i"].join(""):G__7994;var G__7994__$2=cljs.core.truth_(re.multiline)?[G__7994__$1,"m"].join(""):G__7994__$1;if(cljs.core.truth_(re.unicode))return[G__7994__$2,"u"].join("");else return G__7994__$2}());return s.replace(r,replacement)};
clojure.string.replace_with=function clojure$string$replace_with(f){return function(){var G__7995__delegate=function(args){var matches=cljs.core.drop_last.call(null,2,args);if(cljs.core._EQ_.call(null,cljs.core.count.call(null,matches),1))return f.call(null,cljs.core.first.call(null,matches));else return f.call(null,cljs.core.vec.call(null,matches))};var G__7995=function(var_args){var args=null;if(arguments.length>0){var G__7996__i=0,G__7996__a=new Array(arguments.length-0);while(G__7996__i<G__7996__a.length){G__7996__a[G__7996__i]=
arguments[G__7996__i+0];++G__7996__i}args=new cljs.core.IndexedSeq(G__7996__a,0,null)}return G__7995__delegate.call(this,args)};G__7995.cljs$lang$maxFixedArity=0;G__7995.cljs$lang$applyTo=function(arglist__7997){var args=cljs.core.seq(arglist__7997);return G__7995__delegate(args)};G__7995.cljs$core$IFn$_invoke$arity$variadic=G__7995__delegate;return G__7995}()};
clojure.string.replace=function clojure$string$replace(s,match,replacement){if(typeof match==="string")return s.replace(new RegExp(goog.string.regExpEscape(match),"g"),replacement);else if(match instanceof RegExp)if(typeof replacement==="string")return clojure.string.replace_all.call(null,s,match,replacement);else return clojure.string.replace_all.call(null,s,match,clojure.string.replace_with.call(null,replacement));else throw["Invalid match arg: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
};clojure.string.replace_first=function clojure$string$replace_first(s,match,replacement){return s.replace(match,replacement)};
clojure.string.join=function clojure$string$join(var_args){var G__7999=arguments.length;switch(G__7999){case 1:return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
clojure.string.join.cljs$core$IFn$_invoke$arity$1=function(coll){var sb=new goog.string.StringBuffer;var coll__$1=cljs.core.seq.call(null,coll);while(true){if(!(coll__$1==null)){var G__8001=sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null,coll__$1)));var G__8002=cljs.core.next.call(null,coll__$1);sb=G__8001;coll__$1=G__8002;continue}else return sb.toString();break}};
clojure.string.join.cljs$core$IFn$_invoke$arity$2=function(separator,coll){var sb=new goog.string.StringBuffer;var coll__$1=cljs.core.seq.call(null,coll);while(true){if(!(coll__$1==null)){sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null,coll__$1)));var coll__$2=cljs.core.next.call(null,coll__$1);if(coll__$2==null);else sb.append(separator);var G__8003=sb;var G__8004=coll__$2;sb=G__8003;coll__$1=G__8004;continue}else return sb.toString();break}};
clojure.string.join.cljs$lang$maxFixedArity=2;clojure.string.upper_case=function clojure$string$upper_case(s){return s.toUpperCase()};clojure.string.lower_case=function clojure$string$lower_case(s){return s.toLowerCase()};clojure.string.capitalize=function clojure$string$capitalize(s){return goog.string.capitalize(s)};
clojure.string.pop_last_while_empty=function clojure$string$pop_last_while_empty(v){var v__$1=v;while(true){if(""===cljs.core.peek.call(null,v__$1)){var G__8005=cljs.core.pop.call(null,v__$1);v__$1=G__8005;continue}else return v__$1;break}};clojure.string.discard_trailing_if_needed=function clojure$string$discard_trailing_if_needed(limit,v){if(0===limit&&1<cljs.core.count.call(null,v))return clojure.string.pop_last_while_empty.call(null,v);else return v};
clojure.string.split_with_empty_regex=function clojure$string$split_with_empty_regex(s,limit){if(limit<=0||limit>=2+cljs.core.count.call(null,s))return cljs.core.conj.call(null,cljs.core.vec.call(null,cljs.core.cons.call(null,"",cljs.core.map.call(null,cljs.core.str,cljs.core.seq.call(null,s)))),"");else{var pred__8006=cljs.core._EQ__EQ_;var expr__8007=limit;if(cljs.core.truth_(pred__8006.call(null,1,expr__8007)))return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,
[s],null);else if(cljs.core.truth_(pred__8006.call(null,2,expr__8007)))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,["",s],null);else{var c=limit-2;return cljs.core.conj.call(null,cljs.core.vec.call(null,cljs.core.cons.call(null,"",cljs.core.subvec.call(null,cljs.core.vec.call(null,cljs.core.map.call(null,cljs.core.str,cljs.core.seq.call(null,s))),0,c))),cljs.core.subs.call(null,s,c))}}};
clojure.string.split=function clojure$string$split(var_args){var G__8010=arguments.length;switch(G__8010){case 2:return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
clojure.string.split.cljs$core$IFn$_invoke$arity$2=function(s,re){return clojure.string.split.call(null,s,re,0)};
clojure.string.split.cljs$core$IFn$_invoke$arity$3=function(s,re,limit){return clojure.string.discard_trailing_if_needed.call(null,limit,"/(?:)/"===cljs.core.str.cljs$core$IFn$_invoke$arity$1(re)?clojure.string.split_with_empty_regex.call(null,s,limit):limit<1?cljs.core.vec.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)):function(){var s__$1=s;var limit__$1=limit;var parts=cljs.core.PersistentVector.EMPTY;while(true){if(1===limit__$1)return cljs.core.conj.call(null,parts,s__$1);
else{var m=cljs.core.re_find.call(null,re,s__$1);if(!(m==null)){var index=s__$1.indexOf(m);var G__8012=s__$1.substring(index+cljs.core.count.call(null,m));var G__8013=limit__$1-1;var G__8014=cljs.core.conj.call(null,parts,s__$1.substring(0,index));s__$1=G__8012;limit__$1=G__8013;parts=G__8014;continue}else return cljs.core.conj.call(null,parts,s__$1)}break}}())};clojure.string.split.cljs$lang$maxFixedArity=3;
clojure.string.split_lines=function clojure$string$split_lines(s){return clojure.string.split.call(null,s,/\n|\r\n/)};clojure.string.trim=function clojure$string$trim(s){return goog.string.trim(s)};clojure.string.triml=function clojure$string$triml(s){return goog.string.trimLeft(s)};clojure.string.trimr=function clojure$string$trimr(s){return goog.string.trimRight(s)};
clojure.string.trim_newline=function clojure$string$trim_newline(s){var index=s.length;while(true){if(index===0)return"";else{var ch=cljs.core.get.call(null,s,index-1);if("\n"===ch||"\r"===ch){var G__8015=index-1;index=G__8015;continue}else return s.substring(0,index)}break}};clojure.string.blank_QMARK_=function clojure$string$blank_QMARK_(s){return goog.string.isEmptySafe(s)};
clojure.string.escape=function clojure$string$escape(s,cmap){var buffer=new goog.string.StringBuffer;var length=s.length;var index=0;while(true){if(length===index)return buffer.toString();else{var ch=s.charAt(index);var replacement=cljs.core.get.call(null,cmap,ch);if(!(replacement==null))buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));else buffer.append(ch);var G__8016=index+1;index=G__8016;continue}break}};
clojure.string.index_of=function clojure$string$index_of(var_args){var G__8018=arguments.length;switch(G__8018){case 2:return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2=function(s,value){var result=s.indexOf(value);if(result<0)return null;else return result};clojure.string.index_of.cljs$core$IFn$_invoke$arity$3=function(s,value,from_index){var result=s.indexOf(value,from_index);if(result<0)return null;else return result};clojure.string.index_of.cljs$lang$maxFixedArity=3;
clojure.string.last_index_of=function clojure$string$last_index_of(var_args){var G__8021=arguments.length;switch(G__8021){case 2:return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2=function(s,value){var result=s.lastIndexOf(value);if(result<0)return null;else return result};clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3=function(s,value,from_index){var result=s.lastIndexOf(value,from_index);if(result<0)return null;else return result};clojure.string.last_index_of.cljs$lang$maxFixedArity=3;
clojure.string.starts_with_QMARK_=function clojure$string$starts_with_QMARK_(s,substr){return goog.string.startsWith(s,substr)};clojure.string.ends_with_QMARK_=function clojure$string$ends_with_QMARK_(s,substr){return goog.string.endsWith(s,substr)};clojure.string.includes_QMARK_=function clojure$string$includes_QMARK_(s,substr){return goog.string.contains(s,substr)};goog.provide("uix.compiler.alpha");goog.require("cljs.core");goog.require("goog.object");goog.require("uix.hooks.alpha");goog.require("clojure.string");goog.require("cljs_bean.core");uix.compiler.alpha.global$module$react=goog.global["React"];uix.compiler.alpha._STAR_default_compare_args_STAR_=function uix$compiler$alpha$_STAR_default_compare_args_STAR_(p1__1764_SHARP_,p2__1765_SHARP_){return cljs.core._EQ_.call(null,p1__1764_SHARP_.argv,p2__1765_SHARP_.argv)};
uix.compiler.alpha.unwrap_ref=function uix$compiler$alpha$unwrap_ref(_ref){if(!(_ref==null)?false||cljs.core.PROTOCOL_SENTINEL===_ref.uix$hooks$alpha$IRef$?true:false:false)return uix.hooks.alpha.unwrap.call(null,_ref);else return _ref};uix.compiler.alpha.js_val_QMARK_=function uix$compiler$alpha$js_val_QMARK_(x){return!("object"===goog.typeOf(x))};uix.compiler.alpha.named_QMARK_=function uix$compiler$alpha$named_QMARK_(x){return x instanceof cljs.core.Keyword};
uix.compiler.alpha.hiccup_tag_QMARK_=function uix$compiler$alpha$hiccup_tag_QMARK_(x){return x instanceof cljs.core.Keyword};uix.compiler.alpha.prop_name_cache={"class":"className","for":"htmlFor","charset":"charSet"};uix.compiler.alpha.custom_prop_name_cache={};uix.compiler.alpha.tag_name_cache={};uix.compiler.alpha.transform_fns=cljs.core.atom.call(null,cljs.core.PersistentHashSet.EMPTY);
uix.compiler.alpha.add_transform_fn=function uix$compiler$alpha$add_transform_fn(f){return cljs.core.swap_BANG_.call(null,uix.compiler.alpha.transform_fns,cljs.core.conj,f)};uix.compiler.alpha.capitalize=function uix$compiler$alpha$capitalize(s){if(s.length<2)return clojure.string.upper_case.call(null,s);else return[clojure.string.upper_case.call(null,cljs.core.subs.call(null,s,0,1)),cljs.core.subs.call(null,s,1)].join("")};
uix.compiler.alpha.dash_to_camel=function uix$compiler$alpha$dash_to_camel(dashed){var name_str=cljs.core._name.call(null,dashed);var parts=name_str.split(/-/);var start=parts[0];var parts__$1=parts.slice(1);if(cljs.core._EQ_.call(null,start,"aria")||cljs.core._EQ_.call(null,start,"data"))return name_str;else return[start,cljs.core.array_reduce.call(null,parts__$1,function(name_str,parts,start,parts__$1){return function(a,p){a.push(uix.compiler.alpha.capitalize.call(null,p));return a}}(name_str,parts,
start,parts__$1),[]).join("")].join("")};uix.compiler.alpha.cached_prop_name=function uix$compiler$alpha$cached_prop_name(k){if(uix.compiler.alpha.named_QMARK_.call(null,k)){var temp__5737__auto__=uix.compiler.alpha.prop_name_cache[cljs.core._name.call(null,k)];if(temp__5737__auto__==null){var v=uix.compiler.alpha.dash_to_camel.call(null,k);goog.object.set(uix.compiler.alpha.prop_name_cache,cljs.core._name.call(null,k),v);return v}else{var k_SINGLEQUOTE_=temp__5737__auto__;return k_SINGLEQUOTE_}}else return k};
uix.compiler.alpha.cached_custom_prop_name=function uix$compiler$alpha$cached_custom_prop_name(k){if(uix.compiler.alpha.named_QMARK_.call(null,k)){var temp__5737__auto__=uix.compiler.alpha.custom_prop_name_cache[cljs.core._name.call(null,k)];if(temp__5737__auto__==null){var v=uix.compiler.alpha.dash_to_camel.call(null,k);goog.object.set(uix.compiler.alpha.custom_prop_name_cache,cljs.core._name.call(null,k),v);return v}else{var k_SINGLEQUOTE_=temp__5737__auto__;return k_SINGLEQUOTE_}}else return k};
uix.compiler.alpha.convert_interop_prop_value=function uix$compiler$alpha$convert_interop_prop_value(k,v){if(cljs.core._EQ_.call(null,k,new cljs.core.Keyword(null,"style","style",-496642736)))if(cljs.core.vector_QMARK_.call(null,v))return cljs.core._reduce.call(null,v,function(a,v__$1){a.push(uix.compiler.alpha.convert_prop_value_shallow.call(null,v__$1));return a},[]);else return uix.compiler.alpha.convert_prop_value_shallow.call(null,v);else if(uix.compiler.alpha.named_QMARK_.call(null,v))return cljs.core._name.call(null,
v);else return v};uix.compiler.alpha.kv_conv=function uix$compiler$alpha$kv_conv(o,k,v){goog.object.set(o,uix.compiler.alpha.cached_prop_name.call(null,k),uix.compiler.alpha.convert_prop_value.call(null,v));return o};uix.compiler.alpha.kv_conv_shallow=function uix$compiler$alpha$kv_conv_shallow(o,k,v){goog.object.set(o,uix.compiler.alpha.cached_prop_name.call(null,k),uix.compiler.alpha.convert_interop_prop_value.call(null,k,v));return o};
uix.compiler.alpha.custom_kv_conv=function uix$compiler$alpha$custom_kv_conv(o,k,v){goog.object.set(o,uix.compiler.alpha.cached_custom_prop_name.call(null,k),uix.compiler.alpha.convert_prop_value.call(null,v));return o};uix.compiler.alpha.try_get_key=function uix$compiler$alpha$try_get_key(x){try{return cljs.core.get.call(null,x,new cljs.core.Keyword(null,"key","key",-1516042587))}catch(e1767){var e=e1767;return null}};
uix.compiler.alpha.get_key=function uix$compiler$alpha$get_key(x){if(cljs.core.map_QMARK_.call(null,x))return uix.compiler.alpha.try_get_key.call(null,x);else return null};
uix.compiler.alpha.convert_prop_value=function uix$compiler$alpha$convert_prop_value(x){if(uix.compiler.alpha.js_val_QMARK_.call(null,x))return x;else if(uix.compiler.alpha.named_QMARK_.call(null,x))return cljs.core._name.call(null,x);else if(cljs.core.map_QMARK_.call(null,x))return cljs.core.reduce_kv.call(null,uix.compiler.alpha.kv_conv,{},x);else if(cljs.core.coll_QMARK_.call(null,x))return cljs.core.clj__GT_js.call(null,x);else if(cljs.core.ifn_QMARK_.call(null,x))return function(){var G__1769__delegate=
function(rest__1768_SHARP_){return cljs.core.apply.call(null,x,rest__1768_SHARP_)};var G__1769=function(var_args){var rest__1768_SHARP_=null;if(arguments.length>0){var G__1770__i=0,G__1770__a=new Array(arguments.length-0);while(G__1770__i<G__1770__a.length){G__1770__a[G__1770__i]=arguments[G__1770__i+0];++G__1770__i}rest__1768_SHARP_=new cljs.core.IndexedSeq(G__1770__a,0,null)}return G__1769__delegate.call(this,rest__1768_SHARP_)};G__1769.cljs$lang$maxFixedArity=0;G__1769.cljs$lang$applyTo=function(arglist__1771){var rest__1768_SHARP_=
cljs.core.seq(arglist__1771);return G__1769__delegate(rest__1768_SHARP_)};G__1769.cljs$core$IFn$_invoke$arity$variadic=G__1769__delegate;return G__1769}();else return cljs.core.clj__GT_js.call(null,x)};uix.compiler.alpha.convert_prop_value_shallow=function uix$compiler$alpha$convert_prop_value_shallow(x){if(cljs.core.map_QMARK_.call(null,x))return cljs.core.reduce_kv.call(null,uix.compiler.alpha.kv_conv_shallow,{},x);else return x};
uix.compiler.alpha.convert_custom_prop_value=function uix$compiler$alpha$convert_custom_prop_value(x){if(uix.compiler.alpha.js_val_QMARK_.call(null,x))return x;else if(uix.compiler.alpha.named_QMARK_.call(null,x))return cljs.core._name.call(null,x);else if(cljs.core.map_QMARK_.call(null,x))return cljs.core.reduce_kv.call(null,uix.compiler.alpha.custom_kv_conv,{},x);else if(cljs.core.coll_QMARK_.call(null,x))return cljs.core.clj__GT_js.call(null,x);else if(cljs.core.ifn_QMARK_.call(null,x))return function(){var G__1773__delegate=
function(rest__1772_SHARP_){return cljs.core.apply.call(null,x,rest__1772_SHARP_)};var G__1773=function(var_args){var rest__1772_SHARP_=null;if(arguments.length>0){var G__1774__i=0,G__1774__a=new Array(arguments.length-0);while(G__1774__i<G__1774__a.length){G__1774__a[G__1774__i]=arguments[G__1774__i+0];++G__1774__i}rest__1772_SHARP_=new cljs.core.IndexedSeq(G__1774__a,0,null)}return G__1773__delegate.call(this,rest__1772_SHARP_)};G__1773.cljs$lang$maxFixedArity=0;G__1773.cljs$lang$applyTo=function(arglist__1775){var rest__1772_SHARP_=
cljs.core.seq(arglist__1775);return G__1773__delegate(rest__1772_SHARP_)};G__1773.cljs$core$IFn$_invoke$arity$variadic=G__1773__delegate;return G__1773}();else return cljs.core.clj__GT_js.call(null,x)};
uix.compiler.alpha.class_names_coll=function uix$compiler$alpha$class_names_coll(class$){var classes=cljs.core.reduce.call(null,function(a,c){if(c)a.push(uix.compiler.alpha.named_QMARK_.call(null,c)?cljs.core._name.call(null,c):c);else;return a},[],class$);if(classes.length>0)return classes.join(" ");else return null};
uix.compiler.alpha.class_names_map=function uix$compiler$alpha$class_names_map(class$){var classes=cljs.core.reduce_kv.call(null,function(a,b,c){if(c)a.push(uix.compiler.alpha.named_QMARK_.call(null,b)?cljs.core._name.call(null,b):b);else;return a},[],class$);if(classes.length>0)return classes.join(" ");else return null};
uix.compiler.alpha.class_names=function uix$compiler$alpha$class_names(var_args){var G__1780=arguments.length;switch(G__1780){case 0:return uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$0();break;case 1:return uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:var args_arr__4751__auto__=[];var len__4730__auto___1782=arguments.length;var i__4731__auto___1783=
0;while(true){if(i__4731__auto___1783<len__4730__auto___1782){args_arr__4751__auto__.push(arguments[i__4731__auto___1783]);var G__1784=i__4731__auto___1783+1;i__4731__auto___1783=G__1784;continue}else;break}var argseq__4752__auto__=new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2),0,null);return uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__4752__auto__)}};uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$0=function(){return null};
uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1=function(class$){if(cljs.core.map_QMARK_.call(null,class$))return uix.compiler.alpha.class_names_map.call(null,class$);else if(cljs.core.coll_QMARK_.call(null,class$))return uix.compiler.alpha.class_names_coll.call(null,class$);else if(uix.compiler.alpha.named_QMARK_.call(null,class$))return cljs.core._name.call(null,class$);else return class$};
uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$2=function(a,b){if(a)if(b)return[cljs.core.str.cljs$core$IFn$_invoke$arity$1(uix.compiler.alpha.class_names.call(null,a))," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(uix.compiler.alpha.class_names.call(null,b))].join("");else return uix.compiler.alpha.class_names.call(null,a);else return uix.compiler.alpha.class_names.call(null,b)};
uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$variadic=function(a,b,rst){return cljs.core.reduce.call(null,uix.compiler.alpha.class_names,uix.compiler.alpha.class_names.call(null,a,b),rst)};
uix.compiler.alpha.class_names.cljs$lang$applyTo=function(seq1777){var G__1778=cljs.core.first.call(null,seq1777);var seq1777__$1=cljs.core.next.call(null,seq1777);var G__1779=cljs.core.first.call(null,seq1777__$1);var seq1777__$2=cljs.core.next.call(null,seq1777__$1);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1778,G__1779,seq1777__$2)};uix.compiler.alpha.class_names.cljs$lang$maxFixedArity=2;
uix.compiler.alpha.set_id_class=function uix$compiler$alpha$set_id_class(props,id_class){var id=id_class[1];var classes=id_class[2];var classes__$1=classes?cljs.core.array_seq.call(null,classes):null;var G__1785=props;var G__1785__$1=!(id==null)&&cljs.core.get.call(null,props,new cljs.core.Keyword(null,"id","id",-1388402092))==null?cljs.core.assoc.call(null,G__1785,new cljs.core.Keyword(null,"id","id",-1388402092),id):G__1785;if(!(classes__$1==null))return cljs.core.assoc.call(null,G__1785__$1,new cljs.core.Keyword(null,
"class","class",-2030961996),uix.compiler.alpha.class_names.call(null,classes__$1,cljs.core.get.call(null,props,new cljs.core.Keyword(null,"class","class",-2030961996))));else return G__1785__$1};
uix.compiler.alpha.convert_props=function uix$compiler$alpha$convert_props(props,id_class,shallow_QMARK_){var class$=cljs.core.get.call(null,props,new cljs.core.Keyword(null,"class","class",-2030961996));var props__$1=uix.compiler.alpha.set_id_class.call(null,function(){var G__1786=props;if(cljs.core.truth_(class$))return cljs.core.assoc.call(null,G__1786,new cljs.core.Keyword(null,"class","class",-2030961996),uix.compiler.alpha.class_names.call(null,class$));else return G__1786}(),id_class);if(cljs.core.truth_(id_class[3]))return uix.compiler.alpha.convert_custom_prop_value.call(null,
props__$1);else if(shallow_QMARK_)return uix.compiler.alpha.convert_prop_value_shallow.call(null,props__$1);else return uix.compiler.alpha.convert_prop_value.call(null,props__$1)};uix.compiler.alpha.re_tag=/[#.]?[^#.]+/;
uix.compiler.alpha.parse_tag=function uix$compiler$alpha$parse_tag(tag){var matches=cljs.core.re_seq.call(null,uix.compiler.alpha.re_tag,tag);var tag__$1="div";var id=null;var classes=[];while(true){var val=cljs.core.first.call(null,matches);var nval=cljs.core.next.call(null,matches);if(val)if(cljs.core._EQ_.call(null,val[0],"#")){var G__1787=nval;var G__1788=tag__$1;var G__1789=val.slice(1);var G__1790=classes;matches=G__1787;tag__$1=G__1788;id=G__1789;classes=G__1790;continue}else if(cljs.core._EQ_.call(null,
val[0],".")){var G__1791=nval;var G__1792=tag__$1;var G__1793=id;var G__1794=classes.concat([val.slice(1)]);matches=G__1791;tag__$1=G__1792;id=G__1793;classes=G__1794;continue}else{var G__1795=nval;var G__1796=val;var G__1797=id;var G__1798=classes;matches=G__1795;tag__$1=G__1796;id=G__1797;classes=G__1798;continue}else return[tag__$1,id,classes,clojure.string.includes_QMARK_.call(null,tag__$1,"-")];break}};
uix.compiler.alpha.cached_parse=function uix$compiler$alpha$cached_parse(x){var temp__5737__auto__=uix.compiler.alpha.tag_name_cache[x];if(temp__5737__auto__==null){var v=uix.compiler.alpha.parse_tag.call(null,x);goog.object.set(uix.compiler.alpha.tag_name_cache,x,v);return v}else{var s=temp__5737__auto__;return s}};
uix.compiler.alpha.key_from_vec=function uix$compiler$alpha$key_from_vec(v){var temp__5737__auto__=uix.compiler.alpha.get_key.call(null,cljs.core._meta.call(null,v));if(temp__5737__auto__==null)return uix.compiler.alpha.get_key.call(null,cljs.core._nth.call(null,v,1,null));else{var k=temp__5737__auto__;return k}};
uix.compiler.alpha.native_element=function uix$compiler$alpha$native_element(parsed,argv,first_el){var component=parsed[0];var props=cljs.core._nth.call(null,argv,first_el,null);var props_QMARK_=props==null||cljs.core.map_QMARK_.call(null,props);var props__$1=props_QMARK_?cljs.core.reduce.call(null,function(component,props,props_QMARK_){return function(p,f){return f.call(null,p)}}(component,props,props_QMARK_),props,cljs.core.deref.call(null,uix.compiler.alpha.transform_fns)):props;var js_props=function(){var or__4131__auto__=
uix.compiler.alpha.convert_props.call(null,props_QMARK_?props__$1:null,parsed,false);if(or__4131__auto__)return or__4131__auto__;else return{}}();var first_child=first_el+(props_QMARK_?1:0);var temp__5739__auto___1799=uix.compiler.alpha.get_key.call(null,cljs.core._meta.call(null,argv));if(temp__5739__auto___1799==null);else{var key_1800=temp__5739__auto___1799;goog.object.set(js_props,"key",key_1800)}var temp__5739__auto___1801=uix.compiler.alpha.unwrap_ref.call(null,cljs.core.get.call(null,props__$1,
new cljs.core.Keyword(null,"ref","ref",1289896967)));if(temp__5739__auto___1801==null);else{var _ref_1802=temp__5739__auto___1801;goog.object.set(js_props,"ref",_ref_1802)}var temp__5739__auto___1803=uix.compiler.alpha.unwrap_ref.call(null,cljs.core.get.call(null,cljs.core._meta.call(null,argv),new cljs.core.Keyword(null,"ref","ref",1289896967)));if(temp__5739__auto___1803==null);else{var _ref_1804=temp__5739__auto___1803;goog.object.set(js_props,"ref",_ref_1804)}return uix.compiler.alpha.make_element.call(null,
argv,component,js_props,first_child)};
uix.compiler.alpha.fragment_element=function uix$compiler$alpha$fragment_element(argv){var props=cljs.core._nth.call(null,argv,1,null);var props_QMARK_=props==null||cljs.core.map_QMARK_.call(null,props);var js_props=function(){var or__4131__auto__=uix.compiler.alpha.convert_prop_value.call(null,props_QMARK_?props:null);if(or__4131__auto__)return or__4131__auto__;else return{}}();var first_child=1+(props_QMARK_?1:0);var temp__5739__auto___1805=uix.compiler.alpha.key_from_vec.call(null,argv);if(temp__5739__auto___1805==
null);else{var key_1806=temp__5739__auto___1805;goog.object.set(js_props,"key",key_1806)}return uix.compiler.alpha.make_element.call(null,argv,uix.compiler.alpha.global$module$react.Fragment,js_props,first_child)};
uix.compiler.alpha.suspense_element=function uix$compiler$alpha$suspense_element(argv){var props=cljs.core._nth.call(null,argv,1,null);var props_QMARK_=props==null||cljs.core.map_QMARK_.call(null,props);var vec__1807=props_QMARK_?new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[uix.compiler.alpha.as_element.call(null,cljs.core.get.call(null,props,new cljs.core.Keyword(null,"fallback","fallback",761637929))),cljs.core.dissoc.call(null,props,new cljs.core.Keyword(null,
"fallback","fallback",761637929))],null):new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[null,props],null);var fallback=cljs.core.nth.call(null,vec__1807,0,null);var props__$1=cljs.core.nth.call(null,vec__1807,1,null);var js_props=function(){var or__4131__auto__=uix.compiler.alpha.convert_prop_value.call(null,props_QMARK_?props__$1:null);if(or__4131__auto__)return or__4131__auto__;else return{}}();var first_child=1+(props_QMARK_?1:0);if(fallback)goog.object.set(js_props,
"fallback",fallback);else;var temp__5739__auto___1810=uix.compiler.alpha.key_from_vec.call(null,argv);if(temp__5739__auto___1810==null);else{var key_1811=temp__5739__auto___1810;goog.object.set(js_props,"key",key_1811)}return uix.compiler.alpha.make_element.call(null,argv,uix.compiler.alpha.global$module$react.Suspense,js_props,first_child)};
uix.compiler.alpha.portal_element=function uix$compiler$alpha$portal_element(argv){console.warn("React portal Hiccup syntax :-\x3e is deprecated, use uix.dom.alpha/create-portal instead");var child=cljs.core._nth.call(null,argv,1,null);var target=cljs.core._nth.call(null,argv,2,null);var node=typeof target==="string"||target instanceof cljs.core.Keyword?document.querySelector(cljs.core.name.call(null,target)):target;return ReactDOM.createPortal(uix.compiler.alpha.as_element.call(null,child),node)};
uix.compiler.alpha.interop_element=function uix$compiler$alpha$interop_element(argv){var tag=cljs.core._nth.call(null,argv,1,null);var parsed=[tag,null,null];var first_el=2;var props=cljs.core._nth.call(null,argv,first_el,null);var props_QMARK_=props==null||cljs.core.map_QMARK_.call(null,props);var props__$1=props_QMARK_?cljs.core.reduce.call(null,function(tag,parsed,first_el,props,props_QMARK_){return function(p,f){return f.call(null,p)}}(tag,parsed,first_el,props,props_QMARK_),props,cljs.core.deref.call(null,
uix.compiler.alpha.transform_fns)):props;var js_props=function(){var or__4131__auto__=uix.compiler.alpha.convert_props.call(null,props_QMARK_?props__$1:null,parsed,true);if(or__4131__auto__)return or__4131__auto__;else return{}}();var first_child=first_el+(props_QMARK_?1:0);var temp__5739__auto___1812=uix.compiler.alpha.get_key.call(null,cljs.core._meta.call(null,argv));if(temp__5739__auto___1812==null);else{var key_1813=temp__5739__auto___1812;goog.object.set(js_props,"key",key_1813)}var temp__5739__auto___1814=
uix.compiler.alpha.unwrap_ref.call(null,cljs.core.get.call(null,props__$1,new cljs.core.Keyword(null,"ref","ref",1289896967)));if(temp__5739__auto___1814==null);else{var _ref_1815=temp__5739__auto___1814;goog.object.set(js_props,"ref",_ref_1815)}var temp__5739__auto___1816=uix.compiler.alpha.unwrap_ref.call(null,cljs.core.get.call(null,cljs.core._meta.call(null,argv),new cljs.core.Keyword(null,"ref","ref",1289896967)));if(temp__5739__auto___1816==null);else{var _ref_1817=temp__5739__auto___1816;goog.object.set(js_props,
"ref",_ref_1817)}return uix.compiler.alpha.make_element.call(null,argv,tag,js_props,first_child)};uix.compiler.alpha.cached_react_fn=function uix$compiler$alpha$cached_react_fn(f){return f.cljsReact};uix.compiler.alpha.cache_react_fn=function uix$compiler$alpha$cache_react_fn(f,rf){return f.cljsReact=rf};uix.compiler.alpha.symbol_for=function uix$compiler$alpha$symbol_for(s){return cljs.core.js_invoke.call(null,Symbol,"for",s)};uix.compiler.alpha.lazy_sym=uix.compiler.alpha.symbol_for.call(null,"react.lazy");
uix.compiler.alpha.memo_sym=uix.compiler.alpha.symbol_for.call(null,"react.memo");uix.compiler.alpha.lazy_QMARK_=function uix$compiler$alpha$lazy_QMARK_(t){return uix.compiler.alpha.lazy_sym===t["$$typeof"]};uix.compiler.alpha.memo_QMARK_=function uix$compiler$alpha$memo_QMARK_(t){return uix.compiler.alpha.memo_sym===t["$$typeof"]};
uix.compiler.alpha.react_type_QMARK_=function uix$compiler$alpha$react_type_QMARK_(t){return uix.compiler.alpha.lazy_QMARK_.call(null,t)||uix.compiler.alpha.memo_QMARK_.call(null,t)};uix.compiler.alpha.fmt_dash_regex=new RegExp("_","g");uix.compiler.alpha.fmt_qmark_regex=new RegExp("_QMARK_","g");uix.compiler.alpha.fmt_bang_regex=new RegExp("_BANG_","g");uix.compiler.alpha.fmt_star_regex=new RegExp("_STAR_","g");
uix.compiler.alpha.demunge_name=function uix$compiler$alpha$demunge_name(s){return s.replace(uix.compiler.alpha.fmt_qmark_regex,"?").replace(uix.compiler.alpha.fmt_bang_regex,"!").replace(uix.compiler.alpha.fmt_star_regex,"*").replace(uix.compiler.alpha.fmt_dash_regex,"-")};
uix.compiler.alpha.format_display_name=function uix$compiler$alpha$format_display_name(s){var parts=s.split(/\$/);var last_idx=parts.length-1;var name_part=parts[last_idx];if(1===parts.length)return uix.compiler.alpha.demunge_name.call(null,name_part);else return uix.compiler.alpha.demunge_name.call(null,[parts.slice(0,last_idx).join("."),"/",name_part].join(""))};
uix.compiler.alpha.with_name=function uix$compiler$alpha$with_name(f,rf,rf_memo){if(typeof f.name==="string"){var display_name=uix.compiler.alpha.format_display_name.call(null,f.name);rf.displayName=display_name;return rf_memo.displayName=["memo(",display_name,")"].join("")}else return null};
uix.compiler.alpha.fn_to_react_fn=function uix$compiler$alpha$fn_to_react_fn(f){if(uix.compiler.alpha.react_type_QMARK_.call(null,f))return f;else{var rf=function(p1__1818_SHARP_){var argv=p1__1818_SHARP_.argv;var tag=cljs.core._nth.call(null,argv,0);var args=cljs.core.subvec.call(null,argv,1);return uix.compiler.alpha.as_element.call(null,cljs.core.apply.call(null,tag,args))};var rf_memo=uix.compiler.alpha.global$module$react.memo.call(null,rf,uix.compiler.alpha._STAR_default_compare_args_STAR_);
if(goog.DEBUG&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=="undefined")rf.uixf=f;else;if(goog.DEBUG)uix.compiler.alpha.with_name.call(null,f,rf,rf_memo);else;uix.compiler.alpha.cache_react_fn.call(null,f,rf_memo);return rf_memo}};
uix.compiler.alpha.as_lazy_component=function uix$compiler$alpha$as_lazy_component(f){var temp__5737__auto__=uix.compiler.alpha.cached_react_fn.call(null,f);if(temp__5737__auto__==null){var rf=function(temp__5737__auto__){return function(p1__1819_SHARP_){return uix.compiler.alpha.as_element.call(null,cljs.core.apply.call(null,f,cljs.core.subvec.call(null,p1__1819_SHARP_.argv,1)))}}(temp__5737__auto__);var rf_memo=uix.compiler.alpha.global$module$react.memo.call(null,rf,uix.compiler.alpha._STAR_default_compare_args_STAR_);
if(goog.DEBUG&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=="undefined")rf.uixf=f;else;if(goog.DEBUG)uix.compiler.alpha.with_name.call(null,f,rf,rf_memo);else;uix.compiler.alpha.cache_react_fn.call(null,f,rf_memo);return rf_memo}else{var cached_fn=temp__5737__auto__;return cached_fn}};
uix.compiler.alpha.as_component=function uix$compiler$alpha$as_component(tag){var temp__5737__auto__=uix.compiler.alpha.cached_react_fn.call(null,tag);if(temp__5737__auto__==null)return uix.compiler.alpha.fn_to_react_fn.call(null,tag);else{var cached_fn=temp__5737__auto__;return cached_fn}};uix.compiler.alpha.as_react=function uix$compiler$alpha$as_react(f){return function(p1__1820_SHARP_){return uix.compiler.alpha.as_element.call(null,f.call(null,cljs_bean.core.bean.call(null,p1__1820_SHARP_)))}};
uix.compiler.alpha.component_element=function uix$compiler$alpha$component_element(tag,v){var js_props={};var el=uix.compiler.alpha.as_component.call(null,tag);js_props.argv=v;var temp__5739__auto___1821=uix.compiler.alpha.key_from_vec.call(null,v);if(temp__5739__auto___1821==null);else{var key_1822=temp__5739__auto___1821;goog.object.set(js_props,"key",key_1822)}var temp__5739__auto___1823=uix.compiler.alpha.unwrap_ref.call(null,cljs.core.get.call(null,cljs.core._meta.call(null,v),new cljs.core.Keyword(null,
"ref","ref",1289896967)));if(temp__5739__auto___1823==null);else{var _ref_1824=temp__5739__auto___1823;goog.object.set(js_props,"ref",_ref_1824)}return uix.compiler.alpha.global$module$react.createElement.call(null,el,js_props)};
uix.compiler.alpha.vec_to_elem=function uix$compiler$alpha$vec_to_elem(v){var tag=cljs.core._nth.call(null,v,0,null);if(cljs.core.keyword_identical_QMARK_.call(null,new cljs.core.Keyword(null,"\x3c\x3e","\x3c\x3e",1280186386),tag))return uix.compiler.alpha.fragment_element.call(null,v);else if(cljs.core.keyword_identical_QMARK_.call(null,new cljs.core.Keyword(null,"#","#",-275793773),tag))return uix.compiler.alpha.suspense_element.call(null,v);else if(cljs.core.keyword_identical_QMARK_.call(null,
new cljs.core.Keyword(null,"-\x3e","-\x3e",514830339),tag))return uix.compiler.alpha.portal_element.call(null,v);else if(cljs.core.keyword_identical_QMARK_.call(null,new cljs.core.Keyword(null,"\x3e","\x3e",-555517146),tag))return uix.compiler.alpha.interop_element.call(null,v);else if(uix.compiler.alpha.hiccup_tag_QMARK_.call(null,tag))return uix.compiler.alpha.native_element.call(null,uix.compiler.alpha.cached_parse.call(null,cljs.core.name.call(null,tag)),v,1);else return uix.compiler.alpha.component_element.call(null,
tag,v)};
uix.compiler.alpha.as_element=function uix$compiler$alpha$as_element(x){if(uix.compiler.alpha.js_val_QMARK_.call(null,x))return x;else if(cljs.core.vector_QMARK_.call(null,x))return uix.compiler.alpha.vec_to_elem.call(null,x);else if(cljs.core.seq_QMARK_.call(null,x))return uix.compiler.alpha.expand_seq.call(null,x);else if(uix.compiler.alpha.named_QMARK_.call(null,x))return cljs.core._name.call(null,x);else if(!(x==null)?x.cljs$lang$protocol_mask$partition0$&2147483648||cljs.core.PROTOCOL_SENTINEL===x.cljs$core$IPrintWithWriter$?
true:!x.cljs$lang$protocol_mask$partition0$?cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IPrintWithWriter,x):false:cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IPrintWithWriter,x))return cljs.core.pr_str.call(null,x);else return x};uix.compiler.alpha.expand_seq=function uix$compiler$alpha$expand_seq(s){return cljs.core.reduce.call(null,function(ret,e){ret.push(uix.compiler.alpha.as_element.call(null,e));return ret},[],s)};
uix.compiler.alpha.make_element=function uix$compiler$alpha$make_element(argv,component,js_props,first_child){var G__1826=cljs.core._count.call(null,argv)-first_child;switch(G__1826){case 0:return uix.compiler.alpha.global$module$react.createElement.call(null,component,js_props);break;case 1:return uix.compiler.alpha.global$module$react.createElement.call(null,component,js_props,uix.compiler.alpha.as_element.call(null,cljs.core._nth.call(null,argv,first_child,null)));break;default:return uix.compiler.alpha.global$module$react.createElement.apply(null,
cljs.core.reduce_kv.call(null,function(G__1826){return function(a,k,v){if(k>=first_child)a.push(uix.compiler.alpha.as_element.call(null,v));else;return a}}(G__1826),[component,js_props],argv))}};goog.provide("uix.compiler.aot");goog.require("cljs.core");goog.require("uix.compiler.alpha");uix.compiler.aot.global$module$react=goog.global["React"];uix.compiler.aot._GT_el=uix.compiler.aot.global$module$react.createElement;uix.compiler.aot.suspense=uix.compiler.aot.global$module$react.Suspense;uix.compiler.aot.fragment=uix.compiler.aot.global$module$react.Fragment;
uix.compiler.aot.debug_warn=function uix$compiler$aot$debug_warn(c){return console.error(["Only pre-compiled Hiccup should be used in pre-compiled components. Check ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(c.displayName)," component."].join(""))};
uix.compiler.aot.fn_to_react_fn=function uix$compiler$aot$fn_to_react_fn(f){var rf=function uix$compiler$aot$fn_to_react_fn_$__rf(props){var ret=cljs.core.apply.call(null,f,props.argv);if(goog.DEBUG){uix.compiler.aot.debug_warn.call(null,uix$compiler$aot$fn_to_react_fn_$__rf);return uix.compiler.alpha.as_element.call(null,ret)}else return ret};var rf_memo=uix.compiler.aot.global$module$react.memo.call(null,rf,uix.compiler.alpha._STAR_default_compare_args_STAR_);if(goog.DEBUG&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!==
"undefined")rf.uixf=f;else;if(goog.DEBUG)uix.compiler.alpha.with_name.call(null,f,rf,rf_memo);else;uix.compiler.alpha.cache_react_fn.call(null,f,rf_memo);return rf_memo};uix.compiler.aot.as_component=function uix$compiler$aot$as_component(tag){var temp__5737__auto__=uix.compiler.alpha.cached_react_fn.call(null,tag);if(temp__5737__auto__==null)return uix.compiler.aot.fn_to_react_fn.call(null,tag);else{var cached_fn=temp__5737__auto__;return cached_fn}};
uix.compiler.aot.component_element=function uix$compiler$aot$component_element(tag,attrs,args){var js_props=function(){var or__4131__auto__=attrs;if(or__4131__auto__)return or__4131__auto__;else return{}}();var el=uix.compiler.aot.as_component.call(null,tag);js_props.argv=args;return uix.compiler.aot._GT_el.call(null,el,js_props)};goog.provide("uix.core.alpha");goog.require("cljs.core");goog.require("uix.compiler.alpha");goog.require("uix.compiler.aot");goog.require("uix.hooks.alpha");uix.core.alpha.global$module$react=goog.global["React"];
if(goog.DEBUG&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=="undefined")if(typeof uix!=="undefined"&&typeof uix.core!=="undefined"&&typeof uix.core.alpha!=="undefined"&&typeof uix.core.alpha.__devtools_hook!=="undefined");else uix.core.alpha.__devtools_hook=function(){var value=cljs.core.volatile_BANG_.call(null,null);var react_type_setter=function(value){return function(v){return cljs.core.vreset_BANG_.call(null,value,v)}}(value);var react_type_getter=function(value,react_type_setter){return function(){var temp__5733__auto__=
cljs.core.deref.call(null,value).uixf;if(cljs.core.truth_(temp__5733__auto__)){var uixf=temp__5733__auto__;return uixf}else return cljs.core.deref.call(null,value)}}(value,react_type_setter);var config={"get":react_type_getter,"set":react_type_setter};return Object.defineProperty(window,"$type",config)}();else;
uix.core.alpha.strict_mode=function uix$core$alpha$strict_mode(child){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"\x3e","\x3e",-555517146),uix.core.alpha.global$module$react.StrictMode,child],null)};
uix.core.alpha.create_class=function uix$core$alpha$create_class(p__1832){var map__1833=p__1832;var map__1833__$1=(!(map__1833==null)?map__1833.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__1833.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__1833):map__1833;var constructor$=cljs.core.get.call(null,map__1833__$1,new cljs.core.Keyword(null,"constructor","constructor",-1953928811));var static$=cljs.core.get.call(null,map__1833__$1,new cljs.core.Keyword(null,
"static","static",1214358571));var prototype=cljs.core.get.call(null,map__1833__$1,new cljs.core.Keyword(null,"prototype","prototype",-1121365005));var ctor=function(map__1833,map__1833__$1,constructor$,static$,prototype){return function(props){var this_1867=this;uix.core.alpha.global$module$react.Component.apply(this_1867,arguments);if(cljs.core.truth_(constructor$))constructor$.call(null,this_1867,props);else;return null}}(map__1833,map__1833__$1,constructor$,static$,prototype);ctor.prototype=Object.create(uix.core.alpha.global$module$react.Component.prototype);
var seq__1835_1868=cljs.core.seq.call(null,static$);var chunk__1836_1869=null;var count__1837_1870=0;var i__1838_1871=0;while(true){if(i__1838_1871<count__1837_1870){var vec__1845_1872=cljs.core._nth.call(null,chunk__1836_1869,i__1838_1871);var k_1873=cljs.core.nth.call(null,vec__1845_1872,0,null);var v_1874=cljs.core.nth.call(null,vec__1845_1872,1,null);ctor[cljs.core.name.call(null,k_1873)]=v_1874;var G__1875=seq__1835_1868;var G__1876=chunk__1836_1869;var G__1877=count__1837_1870;var G__1878=i__1838_1871+
1;seq__1835_1868=G__1875;chunk__1836_1869=G__1876;count__1837_1870=G__1877;i__1838_1871=G__1878;continue}else{var temp__5735__auto___1879=cljs.core.seq.call(null,seq__1835_1868);if(temp__5735__auto___1879){var seq__1835_1880__$1=temp__5735__auto___1879;if(cljs.core.chunked_seq_QMARK_.call(null,seq__1835_1880__$1)){var c__4550__auto___1881=cljs.core.chunk_first.call(null,seq__1835_1880__$1);var G__1882=cljs.core.chunk_rest.call(null,seq__1835_1880__$1);var G__1883=c__4550__auto___1881;var G__1884=
cljs.core.count.call(null,c__4550__auto___1881);var G__1885=0;seq__1835_1868=G__1882;chunk__1836_1869=G__1883;count__1837_1870=G__1884;i__1838_1871=G__1885;continue}else{var vec__1848_1886=cljs.core.first.call(null,seq__1835_1880__$1);var k_1887=cljs.core.nth.call(null,vec__1848_1886,0,null);var v_1888=cljs.core.nth.call(null,vec__1848_1886,1,null);ctor[cljs.core.name.call(null,k_1887)]=v_1888;var G__1889=cljs.core.next.call(null,seq__1835_1880__$1);var G__1890=null;var G__1891=0;var G__1892=0;seq__1835_1868=
G__1889;chunk__1836_1869=G__1890;count__1837_1870=G__1891;i__1838_1871=G__1892;continue}}else;}break}var seq__1851_1893=cljs.core.seq.call(null,prototype);var chunk__1852_1894=null;var count__1853_1895=0;var i__1854_1896=0;while(true){if(i__1854_1896<count__1853_1895){var vec__1861_1897=cljs.core._nth.call(null,chunk__1852_1894,i__1854_1896);var k_1898=cljs.core.nth.call(null,vec__1861_1897,0,null);var v_1899=cljs.core.nth.call(null,vec__1861_1897,1,null);ctor.prototype[cljs.core.name.call(null,k_1898)]=
v_1899;var G__1900=seq__1851_1893;var G__1901=chunk__1852_1894;var G__1902=count__1853_1895;var G__1903=i__1854_1896+1;seq__1851_1893=G__1900;chunk__1852_1894=G__1901;count__1853_1895=G__1902;i__1854_1896=G__1903;continue}else{var temp__5735__auto___1904=cljs.core.seq.call(null,seq__1851_1893);if(temp__5735__auto___1904){var seq__1851_1905__$1=temp__5735__auto___1904;if(cljs.core.chunked_seq_QMARK_.call(null,seq__1851_1905__$1)){var c__4550__auto___1906=cljs.core.chunk_first.call(null,seq__1851_1905__$1);
var G__1907=cljs.core.chunk_rest.call(null,seq__1851_1905__$1);var G__1908=c__4550__auto___1906;var G__1909=cljs.core.count.call(null,c__4550__auto___1906);var G__1910=0;seq__1851_1893=G__1907;chunk__1852_1894=G__1908;count__1853_1895=G__1909;i__1854_1896=G__1910;continue}else{var vec__1864_1911=cljs.core.first.call(null,seq__1851_1905__$1);var k_1912=cljs.core.nth.call(null,vec__1864_1911,0,null);var v_1913=cljs.core.nth.call(null,vec__1864_1911,1,null);ctor.prototype[cljs.core.name.call(null,k_1912)]=
v_1913;var G__1914=cljs.core.next.call(null,seq__1851_1905__$1);var G__1915=null;var G__1916=0;var G__1917=0;seq__1851_1893=G__1914;chunk__1852_1894=G__1915;count__1853_1895=G__1916;i__1854_1896=G__1917;continue}}else;}break}return ctor};
uix.core.alpha.create_error_boundary=function uix$core$alpha$create_error_boundary(p__1918,render_fn){var map__1919=p__1918;var map__1919__$1=(!(map__1919==null)?map__1919.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__1919.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__1919):map__1919;var display_name=cljs.core.get.call(null,map__1919__$1,new cljs.core.Keyword(null,"display-name","display-name",694513143),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.call(null,
"error-boundary")));var error__GT_state=cljs.core.get.call(null,map__1919__$1,new cljs.core.Keyword(null,"error-\x3estate","error-\x3estate",-2041213326));var handle_catch=cljs.core.get.call(null,map__1919__$1,new cljs.core.Keyword(null,"handle-catch","handle-catch",194751791));var constructor$=function(map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(this$,_){this$.state={"argv":null};var x1921=this$.state;x1921.cljs$core$IDeref$=cljs.core.PROTOCOL_SENTINEL;x1921.cljs$core$IDeref$_deref$arity$1=
function(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(o){var o__$1=this;return this$.state.argv}}(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);x1921.cljs$core$IReset$=cljs.core.PROTOCOL_SENTINEL;x1921.cljs$core$IReset$_reset_BANG_$arity$2=function(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(o,new_value){var o__$1=this;this$.setState({"argv":new_value});return new_value}}(x1921,map__1919,
map__1919__$1,display_name,error__GT_state,handle_catch);x1921.cljs$core$ISwap$=cljs.core.PROTOCOL_SENTINEL;x1921.cljs$core$ISwap$_swap_BANG_$arity$2=function(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(o,f){var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,f.call(null,cljs.core._deref.call(null,o__$1)))}}(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);x1921.cljs$core$ISwap$_swap_BANG_$arity$3=function(x1921,map__1919,
map__1919__$1,display_name,error__GT_state,handle_catch){return function(o,f,a){var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,f.call(null,cljs.core._deref.call(null,o__$1),a))}}(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);x1921.cljs$core$ISwap$_swap_BANG_$arity$4=function(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(o,f,a,b){var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,f.call(null,cljs.core._deref.call(null,
o__$1),a,b))}}(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);x1921.cljs$core$ISwap$_swap_BANG_$arity$5=function(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(o,f,a,b,xs){var o__$1=this;return cljs.core._reset_BANG_.call(null,o__$1,cljs.core.apply.call(null,f,cljs.core._deref.call(null,o__$1),a,b,xs))}}(x1921,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);return x1921}}(map__1919,map__1919__$1,display_name,error__GT_state,
handle_catch);var derive_state=function(constructor$,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(error){return{"argv":error__GT_state.call(null,error)}}}(constructor$,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);var render=function(constructor$,derive_state,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(){var this$=this;var args=this$.props.argv;var state=this$.state;return uix.core.alpha.as_element.call(null,
render_fn.call(null,state,args))}}(constructor$,derive_state,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch);var klass=uix.core.alpha.create_class.call(null,new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"constructor","constructor",-1953928811),constructor$,new cljs.core.Keyword(null,"static","static",1214358571),new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"displayName","displayName",-809144601),display_name,new cljs.core.Keyword(null,
"getDerivedStateFromError","getDerivedStateFromError",166658477),derive_state],null),new cljs.core.Keyword(null,"prototype","prototype",-1121365005),new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"componentDidCatch","componentDidCatch",821717733),handle_catch,new cljs.core.Keyword(null,"render","render",-1408033454),render],null)],null));return function(constructor$,derive_state,render,klass,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch){return function(){var G__1922__delegate=
function(args){return uix.core.alpha.global$module$react.createElement.call(null,klass,{"argv":args})};var G__1922=function(var_args){var args=null;if(arguments.length>0){var G__1923__i=0,G__1923__a=new Array(arguments.length-0);while(G__1923__i<G__1923__a.length){G__1923__a[G__1923__i]=arguments[G__1923__i+0];++G__1923__i}args=new cljs.core.IndexedSeq(G__1923__a,0,null)}return G__1922__delegate.call(this,args)};G__1922.cljs$lang$maxFixedArity=0;G__1922.cljs$lang$applyTo=function(arglist__1924){var args=
cljs.core.seq(arglist__1924);return G__1922__delegate(args)};G__1922.cljs$core$IFn$_invoke$arity$variadic=G__1922__delegate;return G__1922}()}(constructor$,derive_state,render,klass,map__1919,map__1919__$1,display_name,error__GT_state,handle_catch)};uix.core.alpha.ReactRef=function(current){this.current=current;this.cljs$lang$protocol_mask$partition0$=2151710720;this.cljs$lang$protocol_mask$partition1$=0};
uix.core.alpha.ReactRef.prototype.equiv=function(other){var self__=this;var this$=this;return cljs.core._equiv.call(null,this$,other)};uix.core.alpha.ReactRef.prototype.cljs$core$IHash$_hash$arity$1=function(o){var self__=this;var o__$1=this;return goog.getUid(o__$1)};uix.core.alpha.ReactRef.prototype.cljs$core$IDeref$_deref$arity$1=function(o){var self__=this;var o__$1=this;return self__.current};
uix.core.alpha.ReactRef.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(o,writer,opts){var self__=this;var o__$1=this;cljs.core._write.call(null,writer,"#object [uix.core.alpha.ReactRef ");cljs.core.pr_writer.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"val","val",128701612),cljs.core._deref.call(null,o__$1)],null),writer,opts);return cljs.core._write.call(null,writer,"]")};
uix.core.alpha.ReactRef.getBasis=function(){return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"current","current",552492924,null)],null)};uix.core.alpha.ReactRef.cljs$lang$type=true;uix.core.alpha.ReactRef.cljs$lang$ctorStr="uix.core.alpha/ReactRef";uix.core.alpha.ReactRef.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"uix.core.alpha/ReactRef")};
uix.core.alpha.__GT_ReactRef=function uix$core$alpha$__GT_ReactRef(current){return new uix.core.alpha.ReactRef(current)};
uix.core.alpha.create_ref=function uix$core$alpha$create_ref(var_args){var G__1926=arguments.length;switch(G__1926){case 0:return uix.core.alpha.create_ref.cljs$core$IFn$_invoke$arity$0();break;case 1:return uix.core.alpha.create_ref.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
uix.core.alpha.create_ref.cljs$core$IFn$_invoke$arity$0=function(){return uix.core.alpha.create_ref.call(null,null)};uix.core.alpha.create_ref.cljs$core$IFn$_invoke$arity$1=function(v){return new uix.core.alpha.ReactRef(v)};uix.core.alpha.create_ref.cljs$lang$maxFixedArity=1;
uix.core.alpha.memoize=function uix$core$alpha$memoize(var_args){var G__1930=arguments.length;switch(G__1930){case 1:return uix.core.alpha.memoize.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return uix.core.alpha.memoize.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
uix.core.alpha.memoize.cljs$core$IFn$_invoke$arity$1=function(f){return uix.core.alpha.memoize.call(null,f,uix.compiler.alpha._STAR_default_compare_args_STAR_)};uix.core.alpha.memoize.cljs$core$IFn$_invoke$arity$2=function(f,should_update_QMARK_){return uix.core.alpha.global$module$react.memo.call(null,function(p1__1928_SHARP_){return uix.compiler.alpha.as_element.call(null,cljs.core.apply.call(null,f,cljs.core.next.call(null,p1__1928_SHARP_.argv)))},should_update_QMARK_)};
uix.core.alpha.memoize.cljs$lang$maxFixedArity=2;uix.core.alpha.state=function uix$core$alpha$state(value){return uix.hooks.alpha.state.call(null,value)};
uix.core.alpha.effect_BANG_=function uix$core$alpha$effect_BANG_(var_args){var G__1933=arguments.length;switch(G__1933){case 1:return uix.core.alpha.effect_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return uix.core.alpha.effect_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
uix.core.alpha.effect_BANG_.cljs$core$IFn$_invoke$arity$1=function(setup_fn){return uix.core.alpha.effect_BANG_.call(null,setup_fn,undefined)};uix.core.alpha.effect_BANG_.cljs$core$IFn$_invoke$arity$2=function(setup_fn,deps){return uix.hooks.alpha.effect_BANG_.call(null,setup_fn,deps)};uix.core.alpha.effect_BANG_.cljs$lang$maxFixedArity=2;
uix.core.alpha.layout_effect_BANG_=function uix$core$alpha$layout_effect_BANG_(var_args){var G__1936=arguments.length;switch(G__1936){case 1:return uix.core.alpha.layout_effect_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return uix.core.alpha.layout_effect_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
uix.core.alpha.layout_effect_BANG_.cljs$core$IFn$_invoke$arity$1=function(setup_fn){return uix.core.alpha.layout_effect_BANG_.call(null,setup_fn,undefined)};uix.core.alpha.layout_effect_BANG_.cljs$core$IFn$_invoke$arity$2=function(setup_fn,deps){return uix.hooks.alpha.layout_effect_BANG_.call(null,setup_fn,deps)};uix.core.alpha.layout_effect_BANG_.cljs$lang$maxFixedArity=2;
uix.core.alpha.memo=function uix$core$alpha$memo(var_args){var G__1939=arguments.length;switch(G__1939){case 1:return uix.core.alpha.memo.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return uix.core.alpha.memo.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
uix.core.alpha.memo.cljs$core$IFn$_invoke$arity$1=function(f){return uix.core.alpha.memo.call(null,f,null)};uix.core.alpha.memo.cljs$core$IFn$_invoke$arity$2=function(f,deps){return uix.hooks.alpha.memo.call(null,f,deps)};uix.core.alpha.memo.cljs$lang$maxFixedArity=2;
uix.core.alpha.ref=function uix$core$alpha$ref(var_args){var G__1942=arguments.length;switch(G__1942){case 0:return uix.core.alpha.ref.cljs$core$IFn$_invoke$arity$0();break;case 1:return uix.core.alpha.ref.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};uix.core.alpha.ref.cljs$core$IFn$_invoke$arity$0=function(){return uix.core.alpha.ref.call(null,null)};
uix.core.alpha.ref.cljs$core$IFn$_invoke$arity$1=function(value){return uix.hooks.alpha.ref.call(null,value)};uix.core.alpha.ref.cljs$lang$maxFixedArity=1;
uix.core.alpha.callback=function uix$core$alpha$callback(var_args){var G__1945=arguments.length;switch(G__1945){case 1:return uix.core.alpha.callback.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return uix.core.alpha.callback.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
uix.core.alpha.callback.cljs$core$IFn$_invoke$arity$1=function(f){return uix.core.alpha.callback.call(null,f,null)};uix.core.alpha.callback.cljs$core$IFn$_invoke$arity$2=function(f,deps){return uix.hooks.alpha.callback.call(null,f,deps)};uix.core.alpha.callback.cljs$lang$maxFixedArity=2;
uix.core.alpha.subscribe=function uix$core$alpha$subscribe(p__1947){var map__1948=p__1947;var map__1948__$1=(!(map__1948==null)?map__1948.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__1948.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__1948):map__1948;var subscription=map__1948__$1;var get_current_value=cljs.core.get.call(null,map__1948__$1,new cljs.core.Keyword(null,"get-current-value","get-current-value",-1706578691));var subscribe=
cljs.core.get.call(null,map__1948__$1,new cljs.core.Keyword(null,"subscribe","subscribe",416253756));return uix.hooks.alpha.subscribe.call(null,subscription)};uix.core.alpha.as_element=function uix$core$alpha$as_element(x){return uix.compiler.alpha.as_element.call(null,x)};uix.core.alpha.as_react=function uix$core$alpha$as_react(f){return uix.compiler.alpha.as_react.call(null,f)};
uix.core.alpha.add_transform_fn=function uix$core$alpha$add_transform_fn(f){return uix.compiler.alpha.add_transform_fn.call(null,f)};goog.provide("uix.dom.alpha");goog.require("cljs.core");goog.require("uix.compiler.alpha");uix.dom.alpha.global$module$react_dom=goog.global["ReactDOM"];uix.dom.alpha.render=function uix$dom$alpha$render(element,node){return uix.dom.alpha.global$module$react_dom.render.call(null,uix.compiler.alpha.as_element.call(null,element),node)};uix.dom.alpha.create_root=function uix$dom$alpha$create_root(node){return uix.dom.alpha.global$module$react_dom.unstable_createRoot.call(null,node)};
uix.dom.alpha.render_root=function uix$dom$alpha$render_root(element,root){return root.render(uix.compiler.alpha.as_element.call(null,element))};uix.dom.alpha.hydrate=function uix$dom$alpha$hydrate(element,node){return uix.dom.alpha.global$module$react_dom.hydrate.call(null,uix.compiler.alpha.as_element.call(null,element),node)};uix.dom.alpha.flush_sync_BANG_=function uix$dom$alpha$flush_sync_BANG_(cb){return uix.dom.alpha.global$module$react_dom.flushSync.call(null,cb)};
uix.dom.alpha.flush_controlled_BANG_=function uix$dom$alpha$flush_controlled_BANG_(cb){return uix.dom.alpha.global$module$react_dom.unstable_flushControlled.call(null,cb)};uix.dom.alpha.unmount_at_node=function uix$dom$alpha$unmount_at_node(node){return uix.dom.alpha.global$module$react_dom.unmountComponentAtNode.call(null,node)};uix.dom.alpha.find_dom_node=function uix$dom$alpha$find_dom_node(component){return uix.dom.alpha.global$module$react_dom.findDOMNode.call(null,component)};
uix.dom.alpha.create_portal=function uix$dom$alpha$create_portal(child,node){return uix.dom.alpha.global$module$react_dom.createPortal.call(null,uix.compiler.alpha.as_element.call(null,child),node)};uix.dom.alpha.render_to_string=function uix$dom$alpha$render_to_string(element){return ReactDOMServer.renderToString(uix.compiler.alpha.as_element.call(null,element))};
uix.dom.alpha.render_to_static_markup=function uix$dom$alpha$render_to_static_markup(element){return ReactDOMServer.renderToStaticMarkup(uix.compiler.alpha.as_element.call(null,element))};uix.dom.alpha.render_to_stream=function uix$dom$alpha$render_to_stream(element){return ReactDOMServer.renderToNodeStream(uix.compiler.alpha.as_element.call(null,element))};
uix.dom.alpha.render_to_static_stream=function uix$dom$alpha$render_to_static_stream(element){return ReactDOMServer.renderToStaticNodeStream(uix.compiler.alpha.as_element.call(null,element))};goog.provide("cljs.tools.reader.impl.utils");goog.require("cljs.core");goog.require("clojure.string");goog.require("goog.string");cljs.tools.reader.impl.utils.char$=function cljs$tools$reader$impl$utils$char(x){if(x==null)return null;else return cljs.core.char$.call(null,x)};cljs.tools.reader.impl.utils.ex_info_QMARK_=function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex){return ex instanceof cljs.core.ExceptionInfo};
cljs.tools.reader.impl.utils.ReaderConditional=function(splicing_QMARK_,form,__meta,__extmap,__hash){this.splicing_QMARK_=splicing_QMARK_;this.form=form;this.__meta=__meta;this.__extmap=__extmap;this.__hash=__hash;this.cljs$lang$protocol_mask$partition0$=2230716170;this.cljs$lang$protocol_mask$partition1$=139264};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2=function(this__4385__auto__,k__4386__auto__){var self__=this;var this__4385__auto____$1=this;return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3=function(this__4387__auto__,k2081,else__4388__auto__){var self__=this;var this__4387__auto____$1=this;var G__2085=k2081;var G__2085__$1=G__2085 instanceof cljs.core.Keyword?G__2085.fqn:null;switch(G__2085__$1){case "splicing?":return self__.splicing_QMARK_;break;case "form":return self__.form;break;default:return cljs.core.get.call(null,self__.__extmap,k2081,else__4388__auto__)}};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3=function(this__4404__auto__,f__4405__auto__,init__4406__auto__){var self__=this;var this__4404__auto____$1=this;return cljs.core.reduce.call(null,function(this__4404__auto____$1){return function(ret__4407__auto__,p__2086){var vec__2087=p__2086;var k__4408__auto__=cljs.core.nth.call(null,vec__2087,0,null);var v__4409__auto__=cljs.core.nth.call(null,vec__2087,1,null);return f__4405__auto__.call(null,ret__4407__auto__,
k__4408__auto__,v__4409__auto__)}}(this__4404__auto____$1),init__4406__auto__,this__4404__auto____$1)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(this__4399__auto__,writer__4400__auto__,opts__4401__auto__){var self__=this;var this__4399__auto____$1=this;var pr_pair__4402__auto__=function(this__4399__auto____$1){return function(keyval__4403__auto__){return cljs.core.pr_sequential_writer.call(null,writer__4400__auto__,cljs.core.pr_writer,""," ","",opts__4401__auto__,keyval__4403__auto__)}}(this__4399__auto____$1);return cljs.core.pr_sequential_writer.call(null,
writer__4400__auto__,pr_pair__4402__auto__,"#cljs.tools.reader.impl.utils.ReaderConditional{",", ","}",opts__4401__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"splicing?","splicing?",-428596366),self__.splicing_QMARK_],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,
"form","form",-1624062471),self__.form],null)],null),self__.__extmap))};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1=function(G__2080){var self__=this;var G__2080__$1=this;return new cljs.core.RecordIter(0,G__2080__$1,2,new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"splicing?","splicing?",-428596366),new cljs.core.Keyword(null,"form","form",-1624062471)],null),cljs.core.truth_(self__.__extmap)?cljs.core._iterator.call(null,self__.__extmap):cljs.core.nil_iter.call(null))};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1=function(this__4383__auto__){var self__=this;var this__4383__auto____$1=this;return self__.__meta};cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1=function(this__4380__auto__){var self__=this;var this__4380__auto____$1=this;return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,self__.__extmap,self__.__hash)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1=function(this__4389__auto__){var self__=this;var this__4389__auto____$1=this;return 2+cljs.core.count.call(null,self__.__extmap)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1=function(this__4381__auto__){var self__=this;var this__4381__auto____$1=this;var h__4243__auto__=self__.__hash;if(!(h__4243__auto__==null))return h__4243__auto__;else{var h__4243__auto____$1=function(h__4243__auto__,this__4381__auto____$1){return function(coll__4382__auto__){return-209062840^cljs.core.hash_unordered_coll.call(null,coll__4382__auto__)}}(h__4243__auto__,this__4381__auto____$1).call(null,this__4381__auto____$1);
self__.__hash=h__4243__auto____$1;return h__4243__auto____$1}};cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2=function(this2082,other2083){var self__=this;var this2082__$1=this;return!(other2083==null)&&this2082__$1.constructor===other2083.constructor&&cljs.core._EQ_.call(null,this2082__$1.splicing_QMARK_,other2083.splicing_QMARK_)&&cljs.core._EQ_.call(null,this2082__$1.form,other2083.form)&&cljs.core._EQ_.call(null,this2082__$1.__extmap,other2083.__extmap)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2=function(this__4394__auto__,k__4395__auto__){var self__=this;var this__4394__auto____$1=this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"splicing?","splicing?",-428596366),null,new cljs.core.Keyword(null,"form","form",-1624062471),null],null),null),k__4395__auto__))return cljs.core.dissoc.call(null,cljs.core._with_meta.call(null,
cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);else return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__4395__auto__)),null)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3=function(this__4392__auto__,k__4393__auto__,G__2080){var self__=this;var this__4392__auto____$1=this;var pred__2090=cljs.core.keyword_identical_QMARK_;var expr__2091=k__4393__auto__;if(cljs.core.truth_(pred__2090.call(null,new cljs.core.Keyword(null,"splicing?","splicing?",-428596366),expr__2091)))return new cljs.tools.reader.impl.utils.ReaderConditional(G__2080,self__.form,self__.__meta,self__.__extmap,
null);else if(cljs.core.truth_(pred__2090.call(null,new cljs.core.Keyword(null,"form","form",-1624062471),expr__2091)))return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,G__2080,self__.__meta,self__.__extmap,null);else return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__4393__auto__,G__2080),null)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1=function(this__4397__auto__){var self__=this;var this__4397__auto____$1=this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.MapEntry(new cljs.core.Keyword(null,"splicing?","splicing?",-428596366),self__.splicing_QMARK_,null),new cljs.core.MapEntry(new cljs.core.Keyword(null,"form","form",-1624062471),self__.form,
null)],null),self__.__extmap))};cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(this__4384__auto__,G__2080){var self__=this;var this__4384__auto____$1=this;return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,G__2080,self__.__extmap,self__.__hash)};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2=function(this__4390__auto__,entry__4391__auto__){var self__=this;var this__4390__auto____$1=this;if(cljs.core.vector_QMARK_.call(null,entry__4391__auto__))return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.call(null,entry__4391__auto__,0),cljs.core._nth.call(null,entry__4391__auto__,1));else return cljs.core.reduce.call(null,cljs.core._conj,this__4390__auto____$1,entry__4391__auto__)};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"splicing?","splicing?",1211935161,null),new cljs.core.Symbol(null,"form","form",16469056,null)],null)};cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type=true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq=function(this__4428__auto__){return new cljs.core.List(null,"cljs.tools.reader.impl.utils/ReaderConditional",null,1,null)};cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter=function(this__4428__auto__,writer__4429__auto__){return cljs.core._write.call(null,writer__4429__auto__,"cljs.tools.reader.impl.utils/ReaderConditional")};
cljs.tools.reader.impl.utils.__GT_ReaderConditional=function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_,form){return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_,form,null,null,null)};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional=function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__2084){var extmap__4424__auto__=function(){var G__2093=cljs.core.dissoc.call(null,G__2084,new cljs.core.Keyword(null,"splicing?","splicing?",-428596366),new cljs.core.Keyword(null,"form","form",-1624062471));if(cljs.core.record_QMARK_.call(null,G__2084))return cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,G__2093);else return G__2093}();return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null,
"splicing?","splicing?",-428596366)).cljs$core$IFn$_invoke$arity$1(G__2084),(new cljs.core.Keyword(null,"form","form",-1624062471)).cljs$core$IFn$_invoke$arity$1(G__2084),null,cljs.core.not_empty.call(null,extmap__4424__auto__),null)};cljs.tools.reader.impl.utils.reader_conditional_QMARK_=function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value){return value instanceof cljs.tools.reader.impl.utils.ReaderConditional};
cljs.tools.reader.impl.utils.reader_conditional=function cljs$tools$reader$impl$utils$reader_conditional(form,splicing_QMARK_){return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_,form,null,null,null)};cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(coll,writer,opts){var coll__$1=this;cljs.core._write.call(null,writer,["#?",cljs.core.truth_((new cljs.core.Keyword(null,"splicing?","splicing?",-428596366)).cljs$core$IFn$_invoke$arity$1(coll__$1))?"@":null].join(""));return cljs.core.pr_writer.call(null,(new cljs.core.Keyword(null,"form","form",-1624062471)).cljs$core$IFn$_invoke$arity$1(coll__$1),writer,opts)};
cljs.tools.reader.impl.utils.ws_rx=/[\s]/;cljs.tools.reader.impl.utils.whitespace_QMARK_=function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch){if(ch==null)return null;else if(ch===",")return true;else return cljs.tools.reader.impl.utils.ws_rx.test(ch)};cljs.tools.reader.impl.utils.numeric_QMARK_=function cljs$tools$reader$impl$utils$numeric_QMARK_(ch){if(ch==null)return null;else return goog.string.isNumeric(ch)};
cljs.tools.reader.impl.utils.newline_QMARK_=function cljs$tools$reader$impl$utils$newline_QMARK_(c){return"\n"===c||"\n"===c||c==null};
cljs.tools.reader.impl.utils.desugar_meta=function cljs$tools$reader$impl$utils$desugar_meta(f){if(f instanceof cljs.core.Keyword)return cljs.core.PersistentArrayMap.createAsIfByAssoc([f,true]);else if(f instanceof cljs.core.Symbol)return new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),f],null);else if(typeof f==="string")return new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),f],null);else return f};
cljs.tools.reader.impl.utils.last_id=cljs.core.atom.call(null,0);cljs.tools.reader.impl.utils.next_id=function cljs$tools$reader$impl$utils$next_id(){return cljs.core.swap_BANG_.call(null,cljs.tools.reader.impl.utils.last_id,cljs.core.inc)};
cljs.tools.reader.impl.utils.namespace_keys=function cljs$tools$reader$impl$utils$namespace_keys(ns,keys){var iter__4523__auto__=function cljs$tools$reader$impl$utils$namespace_keys_$_iter__2095(s__2096){return new cljs.core.LazySeq(null,function(){var s__2096__$1=s__2096;while(true){var temp__5735__auto__=cljs.core.seq.call(null,s__2096__$1);if(temp__5735__auto__){var s__2096__$2=temp__5735__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__2096__$2)){var c__4521__auto__=cljs.core.chunk_first.call(null,
s__2096__$2);var size__4522__auto__=cljs.core.count.call(null,c__4521__auto__);var b__2098=cljs.core.chunk_buffer.call(null,size__4522__auto__);if(function(){var i__2097=0;while(true){if(i__2097<size__4522__auto__){var key=cljs.core._nth.call(null,c__4521__auto__,i__2097);cljs.core.chunk_append.call(null,b__2098,key instanceof cljs.core.Symbol||key instanceof cljs.core.Keyword?function(){var vec__2099=cljs.core.juxt.call(null,cljs.core.namespace,cljs.core.name).call(null,key);var key_ns=cljs.core.nth.call(null,
vec__2099,0,null);var key_name=cljs.core.nth.call(null,vec__2099,1,null);var __GT_key=key instanceof cljs.core.Symbol?cljs.core.symbol:cljs.core.keyword;if(key_ns==null)return __GT_key.call(null,ns,key_name);else if(cljs.core._EQ_.call(null,"_",key_ns))return __GT_key.call(null,key_name);else return key}():key);var G__2105=i__2097+1;i__2097=G__2105;continue}else return true;break}}())return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__2098),cljs$tools$reader$impl$utils$namespace_keys_$_iter__2095.call(null,
cljs.core.chunk_rest.call(null,s__2096__$2)));else return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__2098),null)}else{var key=cljs.core.first.call(null,s__2096__$2);return cljs.core.cons.call(null,key instanceof cljs.core.Symbol||key instanceof cljs.core.Keyword?function(){var vec__2102=cljs.core.juxt.call(null,cljs.core.namespace,cljs.core.name).call(null,key);var key_ns=cljs.core.nth.call(null,vec__2102,0,null);var key_name=cljs.core.nth.call(null,vec__2102,1,null);var __GT_key=
key instanceof cljs.core.Symbol?cljs.core.symbol:cljs.core.keyword;if(key_ns==null)return __GT_key.call(null,ns,key_name);else if(cljs.core._EQ_.call(null,"_",key_ns))return __GT_key.call(null,key_name);else return key}():key,cljs$tools$reader$impl$utils$namespace_keys_$_iter__2095.call(null,cljs.core.rest.call(null,s__2096__$2)))}}else return null;break}},null,null)};return iter__4523__auto__.call(null,keys)};
cljs.tools.reader.impl.utils.second_SINGLEQUOTE_=function cljs$tools$reader$impl$utils$second_SINGLEQUOTE_(p__2106){var vec__2107=p__2106;var a=cljs.core.nth.call(null,vec__2107,0,null);var b=cljs.core.nth.call(null,vec__2107,1,null);if(cljs.core.truth_(a))return null;else return b};cljs.tools.reader.impl.utils.char_code=function cljs$tools$reader$impl$utils$char_code(ch,base){var code=parseInt(ch,base);if(cljs.core.truth_(isNaN(code)))return-1;else return code};goog.provide("cljs.tools.reader.reader_types");goog.require("cljs.core");goog.require("cljs.tools.reader.impl.utils");goog.require("goog.string");goog.require("goog.string.StringBuffer");cljs.tools.reader.reader_types.Reader=function(){};
cljs.tools.reader.reader_types.read_char=function cljs$tools$reader$reader_types$read_char(reader){if(!(reader==null)&&!(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1==null))return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);else{var x__4433__auto__=reader==null?null:reader;var m__4434__auto__=cljs.tools.reader.reader_types.read_char[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,reader);else{var m__4431__auto__=
cljs.tools.reader.reader_types.read_char["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,reader);else throw cljs.core.missing_protocol.call(null,"Reader.read-char",reader);}}};
cljs.tools.reader.reader_types.peek_char=function cljs$tools$reader$reader_types$peek_char(reader){if(!(reader==null)&&!(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1==null))return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);else{var x__4433__auto__=reader==null?null:reader;var m__4434__auto__=cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,reader);else{var m__4431__auto__=
cljs.tools.reader.reader_types.peek_char["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,reader);else throw cljs.core.missing_protocol.call(null,"Reader.peek-char",reader);}}};cljs.tools.reader.reader_types.IPushbackReader=function(){};
cljs.tools.reader.reader_types.unread=function cljs$tools$reader$reader_types$unread(reader,ch){if(!(reader==null)&&!(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2==null))return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader,ch);else{var x__4433__auto__=reader==null?null:reader;var m__4434__auto__=cljs.tools.reader.reader_types.unread[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,reader,ch);else{var m__4431__auto__=
cljs.tools.reader.reader_types.unread["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,reader,ch);else throw cljs.core.missing_protocol.call(null,"IPushbackReader.unread",reader);}}};cljs.tools.reader.reader_types.IndexingReader=function(){};
cljs.tools.reader.reader_types.get_line_number=function cljs$tools$reader$reader_types$get_line_number(reader){if(!(reader==null)&&!(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1==null))return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);else{var x__4433__auto__=reader==null?null:reader;var m__4434__auto__=cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,
reader);else{var m__4431__auto__=cljs.tools.reader.reader_types.get_line_number["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,reader);else throw cljs.core.missing_protocol.call(null,"IndexingReader.get-line-number",reader);}}};
cljs.tools.reader.reader_types.get_column_number=function cljs$tools$reader$reader_types$get_column_number(reader){if(!(reader==null)&&!(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1==null))return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);else{var x__4433__auto__=reader==null?null:reader;var m__4434__auto__=cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,
reader);else{var m__4431__auto__=cljs.tools.reader.reader_types.get_column_number["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,reader);else throw cljs.core.missing_protocol.call(null,"IndexingReader.get-column-number",reader);}}};
cljs.tools.reader.reader_types.get_file_name=function cljs$tools$reader$reader_types$get_file_name(reader){if(!(reader==null)&&!(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1==null))return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);else{var x__4433__auto__=reader==null?null:reader;var m__4434__auto__=cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__4433__auto__)];if(!(m__4434__auto__==null))return m__4434__auto__.call(null,
reader);else{var m__4431__auto__=cljs.tools.reader.reader_types.get_file_name["_"];if(!(m__4431__auto__==null))return m__4431__auto__.call(null,reader);else throw cljs.core.missing_protocol.call(null,"IndexingReader.get-file-name",reader);}}};cljs.tools.reader.reader_types.StringReader=function(s,s_len,s_pos){this.s=s;this.s_len=s_len;this.s_pos=s_pos};cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1=function(reader){var self__=this;var reader__$1=this;if(self__.s_len>self__.s_pos){var r=self__.s.charAt(self__.s_pos);self__.s_pos=self__.s_pos+1;return r}else return null};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1=function(reader){var self__=this;var reader__$1=this;if(self__.s_len>self__.s_pos)return self__.s.charAt(self__.s_pos);else return null};
cljs.tools.reader.reader_types.StringReader.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"s-len","s-len",1869978331,null),cljs.core.with_meta(new cljs.core.Symbol(null,"s-pos","s-pos",-540562492,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type=true;cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr="cljs.tools.reader.reader-types/StringReader";cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs.tools.reader.reader-types/StringReader")};
cljs.tools.reader.reader_types.__GT_StringReader=function cljs$tools$reader$reader_types$__GT_StringReader(s,s_len,s_pos){return new cljs.tools.reader.reader_types.StringReader(s,s_len,s_pos)};cljs.tools.reader.reader_types.NodeReadableReader=function(readable,buf){this.readable=readable;this.buf=buf};cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1=function(reader){var self__=this;var reader__$1=this;if(cljs.core.truth_(self__.buf)){var c=self__.buf[0];self__.buf=null;return cljs.tools.reader.impl.utils.char$.call(null,c)}else{var c=cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read(1));if(cljs.core.truth_(c))return cljs.tools.reader.impl.utils.char$.call(null,c);else return null}};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1=function(reader){var self__=this;var reader__$1=this;if(cljs.core.truth_(self__.buf));else self__.buf=cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read(1));if(cljs.core.truth_(self__.buf))return cljs.tools.reader.impl.utils.char$.call(null,self__.buf[0]);else return null};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis=function(){return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Symbol(null,"readable","readable",2113054478,null),cljs.core.with_meta(new cljs.core.Symbol(null,"buf","buf",1426618187,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type=true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr="cljs.tools.reader.reader-types/NodeReadableReader";cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs.tools.reader.reader-types/NodeReadableReader")};
cljs.tools.reader.reader_types.__GT_NodeReadableReader=function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable,buf){return new cljs.tools.reader.reader_types.NodeReadableReader(readable,buf)};cljs.tools.reader.reader_types.PushbackReader=function(rdr,buf,buf_len,buf_pos){this.rdr=rdr;this.buf=buf;this.buf_len=buf_len;this.buf_pos=buf_pos};cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1=function(reader){var self__=this;var reader__$1=this;var c=self__.buf_pos<self__.buf_len?self__.buf[self__.buf_pos]:cljs.tools.reader.reader_types.read_char.call(null,self__.rdr);if(self__.buf_pos<self__.buf_len)self__.buf_pos=self__.buf_pos+1;else;return cljs.tools.reader.impl.utils.char$.call(null,c)};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1=function(reader){var self__=this;var reader__$1=this;var c=self__.buf_pos<self__.buf_len?self__.buf[self__.buf_pos]:cljs.tools.reader.reader_types.peek_char.call(null,self__.rdr);return cljs.tools.reader.impl.utils.char$.call(null,c)};cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2=function(reader,ch){var self__=this;var reader__$1=this;if(cljs.core.truth_(ch)){if(self__.buf_pos===0)throw new Error("Pushback buffer is full");else;self__.buf_pos=self__.buf_pos-1;return self__.buf[self__.buf_pos]=ch}else return null};
cljs.tools.reader.reader_types.PushbackReader.getBasis=function(){return new cljs.core.PersistentVector(null,4,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"rdr","rdr",190007785,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"not-native","not-native",-236392494,null)],null)),new cljs.core.Symbol(null,"buf","buf",1426618187,null),new cljs.core.Symbol(null,"buf-len","buf-len",404510846,
null),cljs.core.with_meta(new cljs.core.Symbol(null,"buf-pos","buf-pos",-807229033,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null))],null)};cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type=true;cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr="cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs.tools.reader.reader-types/PushbackReader")};cljs.tools.reader.reader_types.__GT_PushbackReader=function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr,buf,buf_len,buf_pos){return new cljs.tools.reader.reader_types.PushbackReader(rdr,buf,buf_len,buf_pos)};
cljs.tools.reader.reader_types.normalize_newline=function cljs$tools$reader$reader_types$normalize_newline(rdr,ch){if("\r"===ch){var c=cljs.tools.reader.reader_types.peek_char.call(null,rdr);if("\f"===c||"\n"===c)cljs.tools.reader.reader_types.read_char.call(null,rdr);else;return"\n"}else return ch};
cljs.tools.reader.reader_types.IndexingPushbackReader=function(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name){this.rdr=rdr;this.line=line;this.column=column;this.line_start_QMARK_=line_start_QMARK_;this.prev=prev;this.prev_column=prev_column;this.file_name=file_name};cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1=function(reader){var self__=this;var reader__$1=this;var temp__5735__auto__=cljs.tools.reader.reader_types.read_char.call(null,self__.rdr);if(cljs.core.truth_(temp__5735__auto__)){var ch=temp__5735__auto__;var ch__$1=cljs.tools.reader.reader_types.normalize_newline.call(null,self__.rdr,ch);self__.prev=self__.line_start_QMARK_;self__.line_start_QMARK_=cljs.tools.reader.impl.utils.newline_QMARK_.call(null,
ch__$1);if(cljs.core.truth_(self__.line_start_QMARK_)){self__.prev_column=self__.column;self__.column=0;self__.line=self__.line+1}else;self__.column=self__.column+1;return ch__$1}else return null};cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1=function(reader){var self__=this;var reader__$1=this;return cljs.tools.reader.reader_types.peek_char.call(null,self__.rdr)};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2=function(reader,ch){var self__=this;var reader__$1=this;if(cljs.core.truth_(self__.line_start_QMARK_)){self__.line=self__.line-1;self__.column=self__.prev_column}else self__.column=self__.column-1;self__.line_start_QMARK_=self__.prev;return cljs.tools.reader.reader_types.unread.call(null,self__.rdr,ch)};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$=cljs.core.PROTOCOL_SENTINEL;cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1=function(reader){var self__=this;var reader__$1=this;return self__.line|0};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1=function(reader){var self__=this;var reader__$1=this;return self__.column|0};cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1=function(reader){var self__=this;var reader__$1=this;return self__.file_name};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis=function(){return new cljs.core.PersistentVector(null,7,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"rdr","rdr",190007785,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"not-native","not-native",-236392494,null)],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"line","line",1852876762,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"column","column",-576213674,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"line-start?","line-start?",1357012474,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,
"prev","prev",43462301,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"prev-column","prev-column",324083974,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"file-name","file-name",-13685732,null)],null)};cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type=true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr="cljs.tools.reader.reader-types/IndexingPushbackReader";cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs.tools.reader.reader-types/IndexingPushbackReader")};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader=function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name){return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name)};
cljs.tools.reader.reader_types.merge_meta=function cljs$tools$reader$reader_types$merge_meta(obj,m){var orig_meta=cljs.core.meta.call(null,obj);return cljs.core.with_meta.call(null,obj,cljs.core.merge.call(null,m,cljs.core.dissoc.call(null,orig_meta,new cljs.core.Keyword(null,"source","source",-433931539))))};
cljs.tools.reader.reader_types.peek_source_log=function cljs$tools$reader$reader_types$peek_source_log(frames){return cljs.core.subs.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null,"buffer","buffer",617295198)).cljs$core$IFn$_invoke$arity$1(frames)),cljs.core.first.call(null,(new cljs.core.Keyword(null,"offset","offset",296498311)).cljs$core$IFn$_invoke$arity$1(frames)))};
cljs.tools.reader.reader_types.log_source_char=function cljs$tools$reader$reader_types$log_source_char(frames,char$){var temp__5735__auto__=(new cljs.core.Keyword(null,"buffer","buffer",617295198)).cljs$core$IFn$_invoke$arity$1(frames);if(cljs.core.truth_(temp__5735__auto__)){var buffer=temp__5735__auto__;return buffer.append(char$)}else return null};
cljs.tools.reader.reader_types.drop_last_logged_char=function cljs$tools$reader$reader_types$drop_last_logged_char(frames){var temp__5735__auto__=(new cljs.core.Keyword(null,"buffer","buffer",617295198)).cljs$core$IFn$_invoke$arity$1(frames);if(cljs.core.truth_(temp__5735__auto__)){var buffer=temp__5735__auto__;return buffer.set(cljs.core.subs.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(buffer),0,buffer.getLength()-1))}else return null};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader=function(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name,frames){this.rdr=rdr;this.line=line;this.column=column;this.line_start_QMARK_=line_start_QMARK_;this.prev=prev;this.prev_column=prev_column;this.file_name=file_name;this.frames=frames};cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1=function(reader){var self__=this;var reader__$1=this;var temp__5735__auto__=cljs.tools.reader.reader_types.read_char.call(null,self__.rdr);if(cljs.core.truth_(temp__5735__auto__)){var ch=temp__5735__auto__;var ch__$1=cljs.tools.reader.reader_types.normalize_newline.call(null,self__.rdr,ch);self__.prev=self__.line_start_QMARK_;self__.line_start_QMARK_=cljs.tools.reader.impl.utils.newline_QMARK_.call(null,
ch__$1);if(cljs.core.truth_(self__.line_start_QMARK_)){self__.prev_column=self__.column;self__.column=0;self__.line=self__.line+1}else;self__.column=self__.column+1;cljs.tools.reader.reader_types.log_source_char.call(null,cljs.core.deref.call(null,self__.frames),ch__$1);return ch__$1}else return null};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1=function(reader){var self__=this;var reader__$1=this;return cljs.tools.reader.reader_types.peek_char.call(null,self__.rdr)};cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$=cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2=function(reader,ch){var self__=this;var reader__$1=this;if(cljs.core.truth_(self__.line_start_QMARK_)){self__.line=self__.line-1;self__.column=self__.prev_column}else self__.column=self__.column-1;self__.line_start_QMARK_=self__.prev;if(cljs.core.truth_(ch))cljs.tools.reader.reader_types.drop_last_logged_char.call(null,cljs.core.deref.call(null,self__.frames));else;return cljs.tools.reader.reader_types.unread.call(null,
self__.rdr,ch)};cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$=cljs.core.PROTOCOL_SENTINEL;cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1=function(reader){var self__=this;var reader__$1=this;return self__.line|0};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1=function(reader){var self__=this;var reader__$1=this;return self__.column|0};cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1=function(reader){var self__=this;var reader__$1=this;return self__.file_name};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis=function(){return new cljs.core.PersistentVector(null,8,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(new cljs.core.Symbol(null,"rdr","rdr",190007785,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"not-native","not-native",-236392494,null)],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"line","line",1852876762,null),new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"column","column",-576213674,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"line-start?","line-start?",1357012474,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,
"prev","prev",43462301,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),cljs.core.with_meta(new cljs.core.Symbol(null,"prev-column","prev-column",324083974,null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"mutable","mutable",875778266),true],null)),new cljs.core.Symbol(null,"file-name","file-name",-13685732,null),new cljs.core.Symbol(null,"frames","frames",-888748272,null)],null)};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type=true;cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr="cljs.tools.reader.reader-types/SourceLoggingPushbackReader";cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter=function(this__4374__auto__,writer__4375__auto__,opt__4376__auto__){return cljs.core._write.call(null,writer__4375__auto__,"cljs.tools.reader.reader-types/SourceLoggingPushbackReader")};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader=function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name,frames){return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name,frames)};
cljs.tools.reader.reader_types.indexing_reader_QMARK_=function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr){if(!(rdr==null))if(false||cljs.core.PROTOCOL_SENTINEL===rdr.cljs$tools$reader$reader_types$IndexingReader$)return true;else return false;else return false};cljs.tools.reader.reader_types.string_reader=function cljs$tools$reader$reader_types$string_reader(s){return new cljs.tools.reader.reader_types.StringReader(s,cljs.core.count.call(null,s),0)};
cljs.tools.reader.reader_types.string_push_back_reader=function cljs$tools$reader$reader_types$string_push_back_reader(var_args){var G__2114=arguments.length;switch(G__2114){case 1:return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1=function(s){return cljs.tools.reader.reader_types.string_push_back_reader.call(null,s,1)};cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2=function(s,buf_len){return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null,s),cljs.core.object_array.call(null,buf_len),buf_len,buf_len)};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity=2;cljs.tools.reader.reader_types.node_readable_push_back_reader=function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable){return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable,null),cljs.core.object_array.call(null,1),1,1)};
cljs.tools.reader.reader_types.indexing_push_back_reader=function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args){var G__2117=arguments.length;switch(G__2117){case 1:return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0],
arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1=function(s_or_rdr){return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null,s_or_rdr,1)};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2=function(s_or_rdr,buf_len){return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null,s_or_rdr,buf_len,null)};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3=function(s_or_rdr,buf_len,file_name){return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr==="string"?cljs.tools.reader.reader_types.string_push_back_reader.call(null,s_or_rdr,buf_len):s_or_rdr,1,1,true,null,0,file_name)};cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity=3;
cljs.tools.reader.reader_types.source_logging_push_back_reader=function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args){var G__2120=arguments.length;switch(G__2120){case 1:return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0],
arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1=function(s_or_rdr){return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null,s_or_rdr,1)};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2=function(s_or_rdr,buf_len){return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null,s_or_rdr,buf_len,null)};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3=function(s_or_rdr,buf_len,file_name){return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr==="string"?cljs.tools.reader.reader_types.string_push_back_reader.call(null,s_or_rdr,buf_len):s_or_rdr,1,1,true,null,0,file_name,cljs.core.atom.call(null,new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"buffer","buffer",617295198),new goog.string.StringBuffer,new cljs.core.Keyword(null,
"offset","offset",296498311),cljs.core.list(0)],null)))};cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity=3;
cljs.tools.reader.reader_types.read_line=function cljs$tools$reader$reader_types$read_line(rdr){var c=cljs.tools.reader.reader_types.read_char.call(null,rdr);var s=new goog.string.StringBuffer;while(true){if(cljs.tools.reader.impl.utils.newline_QMARK_.call(null,c))return cljs.core.str.cljs$core$IFn$_invoke$arity$1(s);else{var G__2122=cljs.tools.reader.reader_types.read_char.call(null,rdr);var G__2123=s.append(c);c=G__2122;s=G__2123;continue}break}};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_=function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr){return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader};cljs.tools.reader.reader_types.line_start_QMARK_=function cljs$tools$reader$reader_types$line_start_QMARK_(rdr){if(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,rdr))return 1===cljs.tools.reader.reader_types.get_column_number.call(null,rdr);else return null};
cljs.tools.reader.reader_types.log_source_STAR_=function cljs$tools$reader$reader_types$log_source_STAR_(reader,f){var buffer=(new cljs.core.Keyword(null,"buffer","buffer",617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,reader.frames));try{cljs.core.swap_BANG_.call(null,reader.frames,cljs.core.update_in,new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"offset","offset",296498311)],null),cljs.core.conj,buffer.getLength());
var ret=f.call(null);if(!(ret==null)?ret.cljs$lang$protocol_mask$partition0$&131072||cljs.core.PROTOCOL_SENTINEL===ret.cljs$core$IMeta$?true:false:false)return cljs.tools.reader.reader_types.merge_meta.call(null,ret,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"source","source",-433931539),cljs.tools.reader.reader_types.peek_source_log.call(null,cljs.core.deref.call(null,reader.frames))],null));else return ret}finally{cljs.core.swap_BANG_.call(null,reader.frames,cljs.core.update_in,
new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"offset","offset",296498311)],null),cljs.core.rest)}};goog.provide("cljs.tools.reader.impl.inspect");goog.require("cljs.core");
cljs.tools.reader.impl.inspect.inspect_STAR__col=function cljs$tools$reader$impl$inspect$inspect_STAR__col(truncate,col,start,end){var n=cljs.core.count.call(null,col);var l=cljs.core.truth_(truncate)?0:function(){var x__4222__auto__=10;var y__4223__auto__=n;return x__4222__auto__<y__4223__auto__?x__4222__auto__:y__4223__auto__}();var elements=cljs.core.map.call(null,cljs.core.partial.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,true),cljs.core.take.call(null,l,col));var content=cljs.core.apply.call(null,
cljs.core.str,cljs.core.interpose.call(null," ",elements));var suffix=l<n?"...":null;return[cljs.core.str.cljs$core$IFn$_invoke$arity$1(start),cljs.core.str.cljs$core$IFn$_invoke$arity$1(content),suffix,cljs.core.str.cljs$core$IFn$_invoke$arity$1(end)].join("")};
cljs.tools.reader.impl.inspect.dispatch_inspect=function cljs$tools$reader$impl$inspect$dispatch_inspect(_,x){if(x==null)return new cljs.core.Keyword(null,"nil","nil",99600501);else if(typeof x==="string")return new cljs.core.Keyword(null,"string","string",-1989541586);else if(x instanceof cljs.core.Keyword)return new cljs.core.Keyword(null,"strable","strable",1877668047);else if(typeof x==="number")return new cljs.core.Keyword(null,"strable","strable",1877668047);else if(x instanceof cljs.core.Symbol)return new cljs.core.Keyword(null,
"strable","strable",1877668047);else if(cljs.core.vector_QMARK_.call(null,x))return new cljs.core.Keyword(null,"vector","vector",1902966158);else if(cljs.core.list_QMARK_.call(null,x))return new cljs.core.Keyword(null,"list","list",765357683);else if(cljs.core.map_QMARK_.call(null,x))return new cljs.core.Keyword(null,"map","map",1371690461);else if(cljs.core.set_QMARK_.call(null,x))return new cljs.core.Keyword(null,"set","set",304602554);else if(cljs.core._EQ_.call(null,x,true))return new cljs.core.Keyword(null,
"strable","strable",1877668047);else if(cljs.core._EQ_.call(null,x,false))return new cljs.core.Keyword(null,"strable","strable",1877668047);else return cljs.core.type.call(null,x)};
if(typeof cljs!=="undefined"&&typeof cljs.tools!=="undefined"&&typeof cljs.tools.reader!=="undefined"&&typeof cljs.tools.reader.impl!=="undefined"&&typeof cljs.tools.reader.impl.inspect!=="undefined"&&typeof cljs.tools.reader.impl.inspect.inspect_STAR_!=="undefined");else cljs.tools.reader.impl.inspect.inspect_STAR_=function(){var method_table__4613__auto__=cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var prefer_table__4614__auto__=cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);
var method_cache__4615__auto__=cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var cached_hierarchy__4616__auto__=cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var hierarchy__4617__auto__=cljs.core.get.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"hierarchy","hierarchy",-1053470341),cljs.core.get_global_hierarchy.call(null));return new cljs.core.MultiFn(cljs.core.symbol.call(null,"cljs.tools.reader.impl.inspect","inspect*"),cljs.tools.reader.impl.inspect.dispatch_inspect,
new cljs.core.Keyword(null,"default","default",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__)}();
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"string","string",-1989541586),function(truncate,x){var n=cljs.core.truth_(truncate)?5:20;var suffix=x.length>n?'..."':'"';return['"',cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.substring(0,function(){var x__4222__auto__=n;var y__4223__auto__=x.length;return x__4222__auto__<y__4223__auto__?x__4222__auto__:y__4223__auto__}())),suffix].join("")});
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"strable","strable",1877668047),function(truncate,x){return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)});cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.IndexedSeq,function(truncate,x){return"\x3cindexed seq\x3e"});cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.PersistentArrayMapSeq,function(truncate,x){return"\x3cmap seq\x3e"});
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.NodeSeq,function(truncate,x){return"\x3cmap seq\x3e"});cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.Cons,function(truncate,x){return"\x3ccons\x3e"});cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,cljs.core.LazySeq,function(truncate,x){return"\x3clazy seq\x3e"});
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"nil","nil",99600501),function(_,___$1){return"nil"});cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"list","list",765357683),function(truncate,col){return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null,truncate,col,"(",")")});
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"map","map",1371690461),function(truncate,m){var len=cljs.core.count.call(null,m);var n_shown=cljs.core.truth_(truncate)?0:len;var contents=cljs.core.apply.call(null,cljs.core.concat,cljs.core.take.call(null,n_shown,m));var suffix=len>n_shown?"...}":"}";return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null,truncate,contents,"{",suffix)});
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"set","set",304602554),function(truncate,col){return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null,truncate,col,"#{","}")});cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"vector","vector",1902966158),function(truncate,col){return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null,truncate,col,"[","]")});
cljs.core._add_method.call(null,cljs.tools.reader.impl.inspect.inspect_STAR_,new cljs.core.Keyword(null,"default","default",-1987822328),function(truncate,x){return cljs.core.pr_str.call(null,cljs.core.type.call(null,x))});
cljs.tools.reader.impl.inspect.inspect=function cljs$tools$reader$impl$inspect$inspect(var_args){var G__2128=arguments.length;switch(G__2128){case 1:return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1=function(x){return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null,false,x)};cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2=function(truncate,x){return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null,truncate,x)};cljs.tools.reader.impl.inspect.inspect.cljs$lang$maxFixedArity=2;goog.provide("cljs.tools.reader.impl.errors");goog.require("cljs.core");goog.require("cljs.tools.reader.reader_types");goog.require("clojure.string");goog.require("cljs.tools.reader.impl.inspect");
cljs.tools.reader.impl.errors.ex_details=function cljs$tools$reader$impl$errors$ex_details(rdr,ex_type){var details=new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098),new cljs.core.Keyword(null,"ex-kind","ex-kind",1581199296),ex_type],null);if(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,rdr))return cljs.core.assoc.call(null,details,new cljs.core.Keyword(null,
"file","file",-1269645878),cljs.tools.reader.reader_types.get_file_name.call(null,rdr),new cljs.core.Keyword(null,"line","line",212345235),cljs.tools.reader.reader_types.get_line_number.call(null,rdr),new cljs.core.Keyword(null,"col","col",-1959363084),cljs.tools.reader.reader_types.get_column_number.call(null,rdr));else return details};
cljs.tools.reader.impl.errors.throw_ex=function cljs$tools$reader$impl$errors$throw_ex(var_args){var args__4736__auto__=[];var len__4730__auto___2135=arguments.length;var i__4731__auto___2136=0;while(true){if(i__4731__auto___2136<len__4730__auto___2135){args__4736__auto__.push(arguments[i__4731__auto___2136]);var G__2137=i__4731__auto___2136+1;i__4731__auto___2136=G__2137;continue}else;break}var argseq__4737__auto__=2<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(2),
0,null):null;return cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__4737__auto__)};
cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic=function(rdr,ex_type,msg){var details=cljs.tools.reader.impl.errors.ex_details.call(null,rdr,ex_type);var file=(new cljs.core.Keyword(null,"file","file",-1269645878)).cljs$core$IFn$_invoke$arity$1(details);var line=(new cljs.core.Keyword(null,"line","line",212345235)).cljs$core$IFn$_invoke$arity$1(details);var col=(new cljs.core.Keyword(null,"col","col",-1959363084)).cljs$core$IFn$_invoke$arity$1(details);var msg1=cljs.core.truth_(file)?
[cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)," "].join(""):null;var msg2=cljs.core.truth_(line)?["[line ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(line),", col ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(col),"]"].join(""):null;var msg3=cljs.core.truth_(function(){var or__4131__auto__=msg1;if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return msg2}())?" ":null;var full_msg=cljs.core.apply.call(null,cljs.core.str,msg1,msg2,msg3,msg);throw cljs.core.ex_info.call(null,
full_msg,details);};cljs.tools.reader.impl.errors.throw_ex.cljs$lang$maxFixedArity=2;cljs.tools.reader.impl.errors.throw_ex.cljs$lang$applyTo=function(seq2132){var G__2133=cljs.core.first.call(null,seq2132);var seq2132__$1=cljs.core.next.call(null,seq2132);var G__2134=cljs.core.first.call(null,seq2132__$1);var seq2132__$2=cljs.core.next.call(null,seq2132__$1);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2133,G__2134,seq2132__$2)};
cljs.tools.reader.impl.errors.reader_error=function cljs$tools$reader$impl$errors$reader_error(var_args){var args__4736__auto__=[];var len__4730__auto___2140=arguments.length;var i__4731__auto___2141=0;while(true){if(i__4731__auto___2141<len__4730__auto___2140){args__4736__auto__.push(arguments[i__4731__auto___2141]);var G__2142=i__4731__auto___2141+1;i__4731__auto___2141=G__2142;continue}else;break}var argseq__4737__auto__=1<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(1),
0,null):null;return cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__4737__auto__)};cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic=function(rdr,msgs){return cljs.tools.reader.impl.errors.throw_ex.call(null,rdr,new cljs.core.Keyword(null,"reader-error","reader-error",1610253121),cljs.core.apply.call(null,cljs.core.str,msgs))};cljs.tools.reader.impl.errors.reader_error.cljs$lang$maxFixedArity=1;
cljs.tools.reader.impl.errors.reader_error.cljs$lang$applyTo=function(seq2138){var G__2139=cljs.core.first.call(null,seq2138);var seq2138__$1=cljs.core.next.call(null,seq2138);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2139,seq2138__$1)};
cljs.tools.reader.impl.errors.illegal_arg_error=function cljs$tools$reader$impl$errors$illegal_arg_error(var_args){var args__4736__auto__=[];var len__4730__auto___2145=arguments.length;var i__4731__auto___2146=0;while(true){if(i__4731__auto___2146<len__4730__auto___2145){args__4736__auto__.push(arguments[i__4731__auto___2146]);var G__2147=i__4731__auto___2146+1;i__4731__auto___2146=G__2147;continue}else;break}var argseq__4737__auto__=1<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(1),
0,null):null;return cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__4737__auto__)};cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic=function(rdr,msgs){return cljs.tools.reader.impl.errors.throw_ex.call(null,rdr,new cljs.core.Keyword(null,"illegal-argument","illegal-argument",-1845493170),cljs.core.apply.call(null,cljs.core.str,msgs))};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$maxFixedArity=1;cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$applyTo=function(seq2143){var G__2144=cljs.core.first.call(null,seq2143);var seq2143__$1=cljs.core.next.call(null,seq2143);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2144,seq2143__$1)};
cljs.tools.reader.impl.errors.eof_error=function cljs$tools$reader$impl$errors$eof_error(var_args){var args__4736__auto__=[];var len__4730__auto___2150=arguments.length;var i__4731__auto___2151=0;while(true){if(i__4731__auto___2151<len__4730__auto___2150){args__4736__auto__.push(arguments[i__4731__auto___2151]);var G__2152=i__4731__auto___2151+1;i__4731__auto___2151=G__2152;continue}else;break}var argseq__4737__auto__=1<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(1),
0,null):null;return cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__4737__auto__)};cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic=function(rdr,msgs){return cljs.tools.reader.impl.errors.throw_ex.call(null,rdr,new cljs.core.Keyword(null,"eof","eof",-489063237),cljs.core.apply.call(null,cljs.core.str,msgs))};cljs.tools.reader.impl.errors.eof_error.cljs$lang$maxFixedArity=1;
cljs.tools.reader.impl.errors.eof_error.cljs$lang$applyTo=function(seq2148){var G__2149=cljs.core.first.call(null,seq2148);var seq2148__$1=cljs.core.next.call(null,seq2148);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2149,seq2148__$1)};
cljs.tools.reader.impl.errors.throw_eof_delimited=function cljs$tools$reader$impl$errors$throw_eof_delimited(var_args){var G__2154=arguments.length;switch(G__2154){case 4:return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",
cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4=function(rdr,kind,column,line){return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null,rdr,kind,line,column,null)};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5=function(rdr,kind,line,column,n){return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"Unexpected EOF while reading ",cljs.core.truth_(n)?["item ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)," of "].join(""):null,cljs.core.name.call(null,kind),cljs.core.truth_(line)?[", starting at line ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(line)," and column ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join(""):
null,".")};cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$lang$maxFixedArity=5;
cljs.tools.reader.impl.errors.throw_odd_map=function cljs$tools$reader$impl$errors$throw_odd_map(rdr,line,col,elements){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"The map literal starting with ",cljs.tools.reader.impl.inspect.inspect.call(null,cljs.core.first.call(null,elements)),cljs.core.truth_(line)?[" on line ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(line)," column ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)].join(""):null," contains ",cljs.core.count.call(null,
elements)," form(s). Map literals must contain an even number of forms.")};cljs.tools.reader.impl.errors.throw_invalid_number=function cljs$tools$reader$impl$errors$throw_invalid_number(rdr,token){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid number: ",token,".")};
cljs.tools.reader.impl.errors.throw_invalid_unicode_literal=function cljs$tools$reader$impl$errors$throw_invalid_unicode_literal(rdr,token){throw cljs.tools.reader.impl.errors.illegal_arg_error.call(null,rdr,"Invalid unicode literal: \\",token,".");};cljs.tools.reader.impl.errors.throw_invalid_unicode_escape=function cljs$tools$reader$impl$errors$throw_invalid_unicode_escape(rdr,ch){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid unicode escape: \\u",ch,".")};
cljs.tools.reader.impl.errors.throw_invalid=function cljs$tools$reader$impl$errors$throw_invalid(rdr,kind,token){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid ",cljs.core.name.call(null,kind),": ",token,".")};cljs.tools.reader.impl.errors.throw_eof_at_start=function cljs$tools$reader$impl$errors$throw_eof_at_start(rdr,kind){return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"Unexpected EOF while reading start of ",cljs.core.name.call(null,kind),".")};
cljs.tools.reader.impl.errors.throw_bad_char=function cljs$tools$reader$impl$errors$throw_bad_char(rdr,kind,ch){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid character: ",ch," found while reading ",cljs.core.name.call(null,kind),".")};cljs.tools.reader.impl.errors.throw_eof_at_dispatch=function cljs$tools$reader$impl$errors$throw_eof_at_dispatch(rdr){return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"Unexpected EOF while reading dispatch character.")};
cljs.tools.reader.impl.errors.throw_bad_dispatch=function cljs$tools$reader$impl$errors$throw_bad_dispatch(rdr,ch){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"No dispatch macro for ",ch,".")};cljs.tools.reader.impl.errors.throw_unmatch_delimiter=function cljs$tools$reader$impl$errors$throw_unmatch_delimiter(rdr,ch){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Unmatched delimiter ",ch,".")};
cljs.tools.reader.impl.errors.throw_eof_reading=function cljs$tools$reader$impl$errors$throw_eof_reading(var_args){var args__4736__auto__=[];var len__4730__auto___2160=arguments.length;var i__4731__auto___2161=0;while(true){if(i__4731__auto___2161<len__4730__auto___2160){args__4736__auto__.push(arguments[i__4731__auto___2161]);var G__2162=i__4731__auto___2161+1;i__4731__auto___2161=G__2162;continue}else;break}var argseq__4737__auto__=2<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(2),
0,null):null;return cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],argseq__4737__auto__)};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic=function(rdr,kind,start){var init=function(){var G__2159=kind;var G__2159__$1=G__2159 instanceof cljs.core.Keyword?G__2159.fqn:null;switch(G__2159__$1){case "regex":return'#"';break;case "string":return'"';break;default:throw new Error(["No matching clause: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__2159__$1)].join(""));}}();return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"Unexpected EOF reading ",
cljs.core.name.call(null,kind)," starting ",cljs.core.apply.call(null,cljs.core.str,init,start),".")};cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$maxFixedArity=2;
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$applyTo=function(seq2156){var G__2157=cljs.core.first.call(null,seq2156);var seq2156__$1=cljs.core.next.call(null,seq2156);var G__2158=cljs.core.first.call(null,seq2156__$1);var seq2156__$2=cljs.core.next.call(null,seq2156__$1);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2157,G__2158,seq2156__$2)};
cljs.tools.reader.impl.errors.throw_no_dispatch=function cljs$tools$reader$impl$errors$throw_no_dispatch(rdr,ch){return cljs.tools.reader.impl.errors.throw_bad_dispatch.call(null,rdr,ch)};cljs.tools.reader.impl.errors.throw_invalid_unicode_char=function cljs$tools$reader$impl$errors$throw_invalid_unicode_char(rdr,token){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid unicode character \\",token,".")};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token=function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit_in_token(rdr,ch,token){return cljs.tools.reader.impl.errors.illegal_arg_error.call(null,rdr,"Invalid digit ",ch," in unicode character \\",token,".")};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit=function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit(rdr,ch){return cljs.tools.reader.impl.errors.illegal_arg_error.call(null,rdr,"Invalid digit ",ch," in unicode character.")};
cljs.tools.reader.impl.errors.throw_invalid_unicode_len=function cljs$tools$reader$impl$errors$throw_invalid_unicode_len(rdr,actual,expected){return cljs.tools.reader.impl.errors.illegal_arg_error.call(null,rdr,"Invalid unicode literal. Unicode literals should be ",expected,"characters long.  ","value suppled is ",actual,"characters long.")};
cljs.tools.reader.impl.errors.throw_invalid_character_literal=function cljs$tools$reader$impl$errors$throw_invalid_character_literal(rdr,token){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid character literal \\u",token,".")};
cljs.tools.reader.impl.errors.throw_invalid_octal_len=function cljs$tools$reader$impl$errors$throw_invalid_octal_len(rdr,token){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid octal escape sequence in a character literal:",token,". Octal escape sequences must be 3 or fewer digits.")};cljs.tools.reader.impl.errors.throw_bad_octal_number=function cljs$tools$reader$impl$errors$throw_bad_octal_number(rdr){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Octal escape sequence must be in range [0, 377].")};
cljs.tools.reader.impl.errors.throw_unsupported_character=function cljs$tools$reader$impl$errors$throw_unsupported_character(rdr,token){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Unsupported character: ",token,".")};cljs.tools.reader.impl.errors.throw_eof_in_character=function cljs$tools$reader$impl$errors$throw_eof_in_character(rdr){return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"Unexpected EOF while reading character.")};
cljs.tools.reader.impl.errors.throw_bad_escape_char=function cljs$tools$reader$impl$errors$throw_bad_escape_char(rdr,ch){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Unsupported escape character: \\",ch,".")};cljs.tools.reader.impl.errors.throw_single_colon=function cljs$tools$reader$impl$errors$throw_single_colon(rdr){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"A single colon is not a valid keyword.")};
cljs.tools.reader.impl.errors.throw_bad_metadata=function cljs$tools$reader$impl$errors$throw_bad_metadata(rdr,x){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Metadata cannot be ",cljs.tools.reader.impl.inspect.inspect.call(null,x),". Metadata must be a Symbol, Keyword, String or Map.")};
cljs.tools.reader.impl.errors.throw_bad_metadata_target=function cljs$tools$reader$impl$errors$throw_bad_metadata_target(rdr,target){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Metadata can not be applied to ",cljs.tools.reader.impl.inspect.inspect.call(null,target),". ","Metadata can only be applied to IMetas.")};
cljs.tools.reader.impl.errors.throw_feature_not_keyword=function cljs$tools$reader$impl$errors$throw_feature_not_keyword(rdr,feature){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Feature cannot be ",cljs.tools.reader.impl.inspect.inspect.call(null,feature)," Features must be keywords.")};
cljs.tools.reader.impl.errors.throw_ns_map_no_map=function cljs$tools$reader$impl$errors$throw_ns_map_no_map(rdr,ns_name){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Namespaced map with namespace ",ns_name," does not specify a map.")};cljs.tools.reader.impl.errors.throw_bad_ns=function cljs$tools$reader$impl$errors$throw_bad_ns(rdr,ns_name){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid value used as namespace in namespaced map: ",ns_name,".")};
cljs.tools.reader.impl.errors.throw_bad_reader_tag=function cljs$tools$reader$impl$errors$throw_bad_reader_tag(rdr,tag){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Invalid reader tag: ",cljs.tools.reader.impl.inspect.inspect.call(null,tag),". Reader tags must be symbols.")};
cljs.tools.reader.impl.errors.throw_unknown_reader_tag=function cljs$tools$reader$impl$errors$throw_unknown_reader_tag(rdr,tag){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"No reader function for tag ",cljs.tools.reader.impl.inspect.inspect.call(null,tag),".")};
cljs.tools.reader.impl.errors.duplicate_keys_error=function cljs$tools$reader$impl$errors$duplicate_keys_error(msg,coll){var duplicates=function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates(seq){var iter__4523__auto__=function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__2174(s__2175){return new cljs.core.LazySeq(null,function(){var s__2175__$1=s__2175;while(true){var temp__5735__auto__=cljs.core.seq.call(null,s__2175__$1);if(temp__5735__auto__){var s__2175__$2=
temp__5735__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__2175__$2)){var c__4521__auto__=cljs.core.chunk_first.call(null,s__2175__$2);var size__4522__auto__=cljs.core.count.call(null,c__4521__auto__);var b__2177=cljs.core.chunk_buffer.call(null,size__4522__auto__);if(function(){var i__2176=0;while(true){if(i__2176<size__4522__auto__){var vec__2178=cljs.core._nth.call(null,c__4521__auto__,i__2176);var id=cljs.core.nth.call(null,vec__2178,0,null);var freq=cljs.core.nth.call(null,vec__2178,1,null);
if(freq>1){cljs.core.chunk_append.call(null,b__2177,id);var G__2184=i__2176+1;i__2176=G__2184;continue}else{var G__2185=i__2176+1;i__2176=G__2185;continue}}else return true;break}}())return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__2177),cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__2174.call(null,cljs.core.chunk_rest.call(null,s__2175__$2)));else return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__2177),null)}else{var vec__2181=cljs.core.first.call(null,
s__2175__$2);var id=cljs.core.nth.call(null,vec__2181,0,null);var freq=cljs.core.nth.call(null,vec__2181,1,null);if(freq>1)return cljs.core.cons.call(null,id,cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__2174.call(null,cljs.core.rest.call(null,s__2175__$2)));else{var G__2186=cljs.core.rest.call(null,s__2175__$2);s__2175__$1=G__2186;continue}}}else return null;break}},null,null)};return iter__4523__auto__.call(null,cljs.core.frequencies.call(null,seq))};var dups=duplicates.call(null,
coll);return cljs.core.apply.call(null,cljs.core.str,msg,cljs.core.count.call(null,dups)>1?"s":null,": ",cljs.core.interpose.call(null,", ",dups))};
cljs.tools.reader.impl.errors.throw_dup_keys=function cljs$tools$reader$impl$errors$throw_dup_keys(rdr,kind,ks){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,cljs.tools.reader.impl.errors.duplicate_keys_error.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.capitalize.call(null,cljs.core.name.call(null,kind)))," literal contains duplicate key"].join(""),ks))};
cljs.tools.reader.impl.errors.throw_eof_error=function cljs$tools$reader$impl$errors$throw_eof_error(rdr,line){if(cljs.core.truth_(line))return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"EOF while reading, starting at line ",line,".");else return cljs.tools.reader.impl.errors.eof_error.call(null,rdr,"EOF while reading.")};goog.provide("cljs.tools.reader.impl.commons");goog.require("cljs.core");goog.require("cljs.tools.reader.impl.errors");goog.require("cljs.tools.reader.reader_types");goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_=function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader,initch){return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null,initch)||("+"===initch||"-"===initch)&&cljs.tools.reader.impl.utils.numeric_QMARK_.call(null,cljs.tools.reader.reader_types.peek_char.call(null,reader))};
cljs.tools.reader.impl.commons.read_past=function cljs$tools$reader$impl$commons$read_past(pred,rdr){var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);while(true){if(pred.call(null,ch)){var G__2189=cljs.tools.reader.reader_types.read_char.call(null,rdr);ch=G__2189;continue}else return ch;break}};
cljs.tools.reader.impl.commons.skip_line=function cljs$tools$reader$impl$commons$skip_line(reader){while(true){if(cljs.tools.reader.impl.utils.newline_QMARK_.call(null,cljs.tools.reader.reader_types.read_char.call(null,reader)));else continue;break}return reader};cljs.tools.reader.impl.commons.int_pattern=/^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/;cljs.tools.reader.impl.commons.ratio_pattern=/([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern=/([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int=function cljs$tools$reader$impl$commons$match_int(s){var m=cljs.core.vec.call(null,cljs.core.re_find.call(null,cljs.tools.reader.impl.commons.int_pattern,s));if(!(m.call(null,2)==null))return 0;else{var negate_QMARK_="-"===m.call(null,1);var a=!(m.call(null,3)==null)?new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[m.call(null,3),10],null):!(m.call(null,4)==null)?new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,
[m.call(null,4),16],null):!(m.call(null,5)==null)?new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[m.call(null,5),8],null):!(m.call(null,7)==null)?new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[m.call(null,7),parseInt(m.call(null,6))],null):new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[null,null],null);var n=a.call(null,0);if(n==null)return null;else{var bn=parseInt(n,a.call(null,1));var bn__$1=negate_QMARK_?
-1*bn:bn;if(cljs.core.truth_(isNaN(bn__$1)))return null;else return bn__$1}}};
cljs.tools.reader.impl.commons.match_ratio=function cljs$tools$reader$impl$commons$match_ratio(s){var m=cljs.core.vec.call(null,cljs.core.re_find.call(null,cljs.tools.reader.impl.commons.ratio_pattern,s));var numerator=m.call(null,1);var denominator=m.call(null,2);var numerator__$1=cljs.core.truth_(cljs.core.re_find.call(null,/^\+/,numerator))?cljs.core.subs.call(null,numerator,1):numerator;return parseInt(numerator__$1)/parseInt(denominator)};
cljs.tools.reader.impl.commons.match_float=function cljs$tools$reader$impl$commons$match_float(s){var m=cljs.core.vec.call(null,cljs.core.re_find.call(null,cljs.tools.reader.impl.commons.float_pattern,s));if(!(m.call(null,4)==null))return parseFloat(m.call(null,1));else return parseFloat(s)};
cljs.tools.reader.impl.commons.matches_QMARK_=function cljs$tools$reader$impl$commons$matches_QMARK_(pattern,s){var vec__2190=cljs.core.re_find.call(null,pattern,s);var match=cljs.core.nth.call(null,vec__2190,0,null);return match===s};
cljs.tools.reader.impl.commons.match_number=function cljs$tools$reader$impl$commons$match_number(s){if(cljs.tools.reader.impl.commons.matches_QMARK_.call(null,cljs.tools.reader.impl.commons.int_pattern,s))return cljs.tools.reader.impl.commons.match_int.call(null,s);else if(cljs.tools.reader.impl.commons.matches_QMARK_.call(null,cljs.tools.reader.impl.commons.float_pattern,s))return cljs.tools.reader.impl.commons.match_float.call(null,s);else if(cljs.tools.reader.impl.commons.matches_QMARK_.call(null,
cljs.tools.reader.impl.commons.ratio_pattern,s))return cljs.tools.reader.impl.commons.match_ratio.call(null,s);else return null};
cljs.tools.reader.impl.commons.parse_symbol=function cljs$tools$reader$impl$commons$parse_symbol(token){if(""===token||/:$/.test(token)===true||/^::/.test(token)===true)return null;else{var ns_idx=token.indexOf("/");var ns=ns_idx>0?cljs.core.subs.call(null,token,0,ns_idx):null;if(!(ns==null)){var ns_idx__$1=ns_idx+1;if(ns_idx__$1===cljs.core.count.call(null,token))return null;else{var sym=cljs.core.subs.call(null,token,ns_idx__$1);if(!cljs.tools.reader.impl.utils.numeric_QMARK_.call(null,cljs.core.nth.call(null,
sym,0))&&!(""===sym)&&/:$/.test(ns)===false&&(sym==="/"||-1===sym.indexOf("/")))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[ns,sym],null);else return null}}else if(token==="/"||-1===token.indexOf("/"))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[null,token],null);else return null}};
cljs.tools.reader.impl.commons.read_comment=function cljs$tools$reader$impl$commons$read_comment(var_args){var args__4736__auto__=[];var len__4730__auto___2195=arguments.length;var i__4731__auto___2196=0;while(true){if(i__4731__auto___2196<len__4730__auto___2195){args__4736__auto__.push(arguments[i__4731__auto___2196]);var G__2197=i__4731__auto___2196+1;i__4731__auto___2196=G__2197;continue}else;break}var argseq__4737__auto__=1<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(1),
0,null):null;return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__4737__auto__)};cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic=function(rdr,_){return cljs.tools.reader.impl.commons.skip_line.call(null,rdr)};cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity=1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo=function(seq2193){var G__2194=cljs.core.first.call(null,seq2193);var seq2193__$1=cljs.core.next.call(null,seq2193);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2194,seq2193__$1)};
cljs.tools.reader.impl.commons.throwing_reader=function cljs$tools$reader$impl$commons$throwing_reader(msg){return function(){var G__2198__delegate=function(rdr,_){return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,msg)};var G__2198=function(rdr,var_args){var _=null;if(arguments.length>1){var G__2199__i=0,G__2199__a=new Array(arguments.length-1);while(G__2199__i<G__2199__a.length){G__2199__a[G__2199__i]=arguments[G__2199__i+1];++G__2199__i}_=new cljs.core.IndexedSeq(G__2199__a,0,null)}return G__2198__delegate.call(this,
rdr,_)};G__2198.cljs$lang$maxFixedArity=1;G__2198.cljs$lang$applyTo=function(arglist__2200){var rdr=cljs.core.first(arglist__2200);var _=cljs.core.rest(arglist__2200);return G__2198__delegate(rdr,_)};G__2198.cljs$core$IFn$_invoke$arity$variadic=G__2198__delegate;return G__2198}()};goog.provide("cljs.tools.reader");goog.require("cljs.core");goog.require("cljs.tools.reader.reader_types");goog.require("cljs.tools.reader.impl.utils");goog.require("cljs.tools.reader.impl.commons");goog.require("cljs.tools.reader.impl.errors");goog.require("goog.array");goog.require("goog.string");goog.require("goog.string.StringBuffer");
cljs.tools.reader.macro_terminating_QMARK_=function cljs$tools$reader$macro_terminating_QMARK_(ch){var G__2218=ch;switch(G__2218){case '"':case ";":case "@":case "^":case "`":case "~":case "(":case ")":case "[":case "]":case "{":case "}":case "\\":return true;break;default:return false}};cljs.tools.reader.sb=new goog.string.StringBuffer;
cljs.tools.reader.read_token=function cljs$tools$reader$read_token(rdr,kind,initch){if(initch==null)return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null,rdr,kind);else{cljs.tools.reader.sb.clear();var ch=initch;while(true){if(cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)||cljs.tools.reader.macro_terminating_QMARK_.call(null,ch)||ch==null){if(ch==null);else cljs.tools.reader.reader_types.unread.call(null,rdr,ch);return cljs.tools.reader.sb.toString()}else{cljs.tools.reader.sb.append(ch);
var G__2220=cljs.tools.reader.reader_types.read_char.call(null,rdr);ch=G__2220;continue}break}}};
cljs.tools.reader.read_dispatch=function cljs$tools$reader$read_dispatch(rdr,_,opts,pending_forms){var temp__5733__auto__=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(cljs.core.truth_(temp__5733__auto__)){var ch=temp__5733__auto__;var temp__5733__auto____$1=cljs.tools.reader.dispatch_macros.call(null,ch);if(cljs.core.truth_(temp__5733__auto____$1)){var dm=temp__5733__auto____$1;return dm.call(null,rdr,ch,opts,pending_forms)}else return cljs.tools.reader.read_tagged.call(null,function(){var G__2221=
rdr;cljs.tools.reader.reader_types.unread.call(null,G__2221,ch);return G__2221}(),ch,opts,pending_forms)}else return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null,rdr)};cljs.tools.reader.read_unmatched_delimiter=function cljs$tools$reader$read_unmatched_delimiter(rdr,ch,opts,pending_forms){return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null,rdr,ch)};
cljs.tools.reader.read_regex=function cljs$tools$reader$read_regex(rdr,ch,opts,pending_forms){var sb=new goog.string.StringBuffer;var ch__$1=cljs.tools.reader.reader_types.read_char.call(null,rdr);while(true){if('"'===ch__$1)return cljs.core.re_pattern.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));else if(ch__$1==null)return cljs.tools.reader.impl.errors.throw_eof_reading.call(null,rdr,new cljs.core.Keyword(null,"regex","regex",939488856),sb);else{sb.append(ch__$1);if("\\"===ch__$1){var ch_2222__$2=
cljs.tools.reader.reader_types.read_char.call(null,rdr);if(ch_2222__$2==null)cljs.tools.reader.impl.errors.throw_eof_reading.call(null,rdr,new cljs.core.Keyword(null,"regex","regex",939488856),sb);else;sb.append(ch_2222__$2)}else;var G__2223=cljs.tools.reader.reader_types.read_char.call(null,rdr);ch__$1=G__2223;continue}break}};
cljs.tools.reader.read_unicode_char=function cljs$tools$reader$read_unicode_char(var_args){var G__2225=arguments.length;switch(G__2225){case 4:return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4=function(token,offset,length,base){var l=offset+length;if(cljs.core.count.call(null,token)===l);else cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null,null,token);var i=offset;var uc=0;while(true){if(i===l)return String.fromCharCode(uc);else{var d=cljs.tools.reader.impl.utils.char_code.call(null,cljs.core.nth.call(null,token,i),base);if(d===-1)return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null,null,
cljs.core.nth.call(null,token,i),token);else{var G__2227=i+1;var G__2228=d+uc*base;i=G__2227;uc=G__2228;continue}}break}};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5=function(rdr,initch,base,length,exact_QMARK_){var i=1;var uc=cljs.tools.reader.impl.utils.char_code.call(null,initch,base);while(true){if(uc===-1)return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null,rdr,initch);else if(!(i===length)){var ch=cljs.tools.reader.reader_types.peek_char.call(null,rdr);if(cljs.core.truth_(function(){var or__4131__auto__=cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch);if(or__4131__auto__)return or__4131__auto__;
else{var or__4131__auto____$1=cljs.tools.reader.macros.call(null,ch);if(cljs.core.truth_(or__4131__auto____$1))return or__4131__auto____$1;else return ch==null}}()))if(cljs.core.truth_(exact_QMARK_))return cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null,rdr,i,length);else return String.fromCharCode(uc);else{var d=cljs.tools.reader.impl.utils.char_code.call(null,ch,base);cljs.tools.reader.reader_types.read_char.call(null,rdr);if(d===-1)return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null,
rdr,ch);else{var G__2229=i+1;var G__2230=d+uc*base;i=G__2229;uc=G__2230;continue}}}else return String.fromCharCode(uc);break}};cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity=5;cljs.tools.reader.upper_limit="퟿".charCodeAt(0);cljs.tools.reader.lower_limit="".charCodeAt(0);cljs.tools.reader.valid_octal_QMARK_=function cljs$tools$reader$valid_octal_QMARK_(token,base){return parseInt(token,base)<=255};
cljs.tools.reader.read_char_STAR_=function cljs$tools$reader$read_char_STAR_(rdr,backslash,opts,pending_forms){var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(!(ch==null)){var token=cljs.tools.reader.macro_terminating_QMARK_.call(null,ch)||cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)?cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch):cljs.tools.reader.read_token.call(null,rdr,new cljs.core.Keyword(null,"character","character",380652989),ch);var token_len=token.length;
if(1===token_len)return token.charAt(0);else if(cljs.core._EQ_.call(null,token,"newline"))return"\n";else if(cljs.core._EQ_.call(null,token,"space"))return" ";else if(cljs.core._EQ_.call(null,token,"tab"))return"\t";else if(cljs.core._EQ_.call(null,token,"backspace"))return"\b";else if(cljs.core._EQ_.call(null,token,"formfeed"))return"\f";else if(cljs.core._EQ_.call(null,token,"return"))return"\r";else if(cljs.core.truth_(goog.string.startsWith(token,"u"))){var c=cljs.tools.reader.read_unicode_char.call(null,
token,1,4,16);var ic=c.charCodeAt(0);if(ic>cljs.tools.reader.upper_limit&&ic<cljs.tools.reader.lower_limit)return cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null,rdr,ic.toString(16));else return c}else if(cljs.core.truth_(goog.string.startsWith(token,"o"))){var len=token_len-1;if(len>3)return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null,rdr,token);else{var offset=1;var base=8;var uc=cljs.tools.reader.read_unicode_char.call(null,token,offset,len,base);if(!cljs.tools.reader.valid_octal_QMARK_.call(null,
cljs.core.subs.call(null,token,offset),base))return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null,rdr);else return uc}}else return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null,rdr,token)}else return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null,rdr)};
cljs.tools.reader.starting_line_col_info=function cljs$tools$reader$starting_line_col_info(rdr){if(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,rdr))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.tools.reader.reader_types.get_line_number.call(null,rdr),cljs.tools.reader.reader_types.get_column_number.call(null,rdr)-1|0],null);else return null};
cljs.tools.reader.ending_line_col_info=function cljs$tools$reader$ending_line_col_info(rdr){if(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,rdr))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.tools.reader.reader_types.get_line_number.call(null,rdr),cljs.tools.reader.reader_types.get_column_number.call(null,rdr)],null);else return null};
if(typeof cljs!=="undefined"&&typeof cljs.tools!=="undefined"&&typeof cljs.tools.reader!=="undefined"&&typeof cljs.tools.reader.READ_EOF!=="undefined");else cljs.tools.reader.READ_EOF=new Object;if(typeof cljs!=="undefined"&&typeof cljs.tools!=="undefined"&&typeof cljs.tools.reader!=="undefined"&&typeof cljs.tools.reader.READ_FINISHED!=="undefined");else cljs.tools.reader.READ_FINISHED=new Object;cljs.tools.reader._STAR_read_delim_STAR_=false;
cljs.tools.reader.read_delimited_internal=function cljs$tools$reader$read_delimited_internal(kind,delim,rdr,opts,pending_forms){var vec__2231=cljs.tools.reader.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2231,0,null);var start_column=cljs.core.nth.call(null,vec__2231,1,null);var delim__$1=cljs.tools.reader.impl.utils.char$.call(null,delim);var a=cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);while(true){var form=cljs.tools.reader.read_STAR_.call(null,
rdr,false,cljs.tools.reader.READ_EOF,delim__$1,opts,pending_forms);if(form===cljs.tools.reader.READ_FINISHED)return cljs.core.persistent_BANG_.call(null,a);else if(form===cljs.tools.reader.READ_EOF)return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null,rdr,kind,start_line,start_column,cljs.core.count.call(null,a));else{var G__2234=cljs.core.conj_BANG_.call(null,a,form);a=G__2234;continue}break}};
cljs.tools.reader.read_delimited=function cljs$tools$reader$read_delimited(kind,delim,rdr,opts,pending_forms){var _STAR_read_delim_STAR__orig_val__2235=cljs.tools.reader._STAR_read_delim_STAR_;var _STAR_read_delim_STAR__temp_val__2236=true;cljs.tools.reader._STAR_read_delim_STAR_=_STAR_read_delim_STAR__temp_val__2236;try{return cljs.tools.reader.read_delimited_internal.call(null,kind,delim,rdr,opts,pending_forms)}finally{cljs.tools.reader._STAR_read_delim_STAR_=_STAR_read_delim_STAR__orig_val__2235}};
cljs.tools.reader.read_list=function cljs$tools$reader$read_list(rdr,_,opts,pending_forms){var vec__2237=cljs.tools.reader.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2237,0,null);var start_column=cljs.core.nth.call(null,vec__2237,1,null);var the_list=cljs.tools.reader.read_delimited.call(null,new cljs.core.Keyword(null,"list","list",765357683),")",rdr,opts,pending_forms);var vec__2240=cljs.tools.reader.ending_line_col_info.call(null,rdr);var end_line=cljs.core.nth.call(null,
vec__2240,0,null);var end_column=cljs.core.nth.call(null,vec__2240,1,null);return cljs.core.with_meta.call(null,cljs.core.empty_QMARK_.call(null,the_list)?cljs.core.List.EMPTY:cljs.core.apply.call(null,cljs.core.list,the_list),cljs.core.truth_(start_line)?cljs.core.merge.call(null,function(){var temp__5735__auto__=cljs.tools.reader.reader_types.get_file_name.call(null,rdr);if(cljs.core.truth_(temp__5735__auto__)){var file=temp__5735__auto__;return new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,
"file","file",-1269645878),file],null)}else return null}(),new cljs.core.PersistentArrayMap(null,4,[new cljs.core.Keyword(null,"line","line",212345235),start_line,new cljs.core.Keyword(null,"column","column",2078222095),start_column,new cljs.core.Keyword(null,"end-line","end-line",1837326455),end_line,new cljs.core.Keyword(null,"end-column","end-column",1425389514),end_column],null)):null)};
cljs.tools.reader.read_vector=function cljs$tools$reader$read_vector(rdr,_,opts,pending_forms){var vec__2243=cljs.tools.reader.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2243,0,null);var start_column=cljs.core.nth.call(null,vec__2243,1,null);var the_vector=cljs.tools.reader.read_delimited.call(null,new cljs.core.Keyword(null,"vector","vector",1902966158),"]",rdr,opts,pending_forms);var vec__2246=cljs.tools.reader.ending_line_col_info.call(null,rdr);var end_line=
cljs.core.nth.call(null,vec__2246,0,null);var end_column=cljs.core.nth.call(null,vec__2246,1,null);return cljs.core.with_meta.call(null,the_vector,cljs.core.truth_(start_line)?cljs.core.merge.call(null,function(){var temp__5735__auto__=cljs.tools.reader.reader_types.get_file_name.call(null,rdr);if(cljs.core.truth_(temp__5735__auto__)){var file=temp__5735__auto__;return new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"file","file",-1269645878),file],null)}else return null}(),new cljs.core.PersistentArrayMap(null,
4,[new cljs.core.Keyword(null,"line","line",212345235),start_line,new cljs.core.Keyword(null,"column","column",2078222095),start_column,new cljs.core.Keyword(null,"end-line","end-line",1837326455),end_line,new cljs.core.Keyword(null,"end-column","end-column",1425389514),end_column],null)):null)};
cljs.tools.reader.read_map=function cljs$tools$reader$read_map(rdr,_,opts,pending_forms){var vec__2249=cljs.tools.reader.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2249,0,null);var start_column=cljs.core.nth.call(null,vec__2249,1,null);var the_map=cljs.tools.reader.read_delimited.call(null,new cljs.core.Keyword(null,"map","map",1371690461),"}",rdr,opts,pending_forms);var map_count=cljs.core.count.call(null,the_map);var ks=cljs.core.take_nth.call(null,2,the_map);
var key_set=cljs.core.set.call(null,ks);var vec__2252=cljs.tools.reader.ending_line_col_info.call(null,rdr);var end_line=cljs.core.nth.call(null,vec__2252,0,null);var end_column=cljs.core.nth.call(null,vec__2252,1,null);if(cljs.core.odd_QMARK_.call(null,map_count))cljs.tools.reader.impl.errors.throw_odd_map.call(null,rdr,start_line,start_column,the_map);else;if(cljs.core._EQ_.call(null,cljs.core.count.call(null,key_set),cljs.core.count.call(null,ks)));else cljs.tools.reader.impl.errors.throw_dup_keys.call(null,
rdr,new cljs.core.Keyword(null,"map","map",1371690461),ks);return cljs.core.with_meta.call(null,map_count<=2*cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD?cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null,the_map),true,true):cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null,the_map),true),cljs.core.truth_(start_line)?cljs.core.merge.call(null,function(){var temp__5735__auto__=cljs.tools.reader.reader_types.get_file_name.call(null,rdr);if(cljs.core.truth_(temp__5735__auto__)){var file=
temp__5735__auto__;return new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"file","file",-1269645878),file],null)}else return null}(),new cljs.core.PersistentArrayMap(null,4,[new cljs.core.Keyword(null,"line","line",212345235),start_line,new cljs.core.Keyword(null,"column","column",2078222095),start_column,new cljs.core.Keyword(null,"end-line","end-line",1837326455),end_line,new cljs.core.Keyword(null,"end-column","end-column",1425389514),end_column],null)):null)};
cljs.tools.reader.read_number=function cljs$tools$reader$read_number(rdr,initch){var sb=function(){var G__2255=new goog.string.StringBuffer;G__2255.append(initch);return G__2255}();var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);while(true){if(cljs.core.truth_(function(){var or__4131__auto__=cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch);if(or__4131__auto__)return or__4131__auto__;else{var or__4131__auto____$1=cljs.tools.reader.macros.call(null,ch);if(cljs.core.truth_(or__4131__auto____$1))return or__4131__auto____$1;
else return ch==null}}())){var s=cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);cljs.tools.reader.reader_types.unread.call(null,rdr,ch);var or__4131__auto__=cljs.tools.reader.impl.commons.match_number.call(null,s);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.impl.errors.throw_invalid_number.call(null,rdr,s)}else{var G__2257=function(){var G__2256=sb;G__2256.append(ch);return G__2256}();var G__2258=cljs.tools.reader.reader_types.read_char.call(null,rdr);
sb=G__2257;ch=G__2258;continue}break}};
cljs.tools.reader.escape_char=function cljs$tools$reader$escape_char(sb,rdr){var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);var G__2259=ch;switch(G__2259){case "t":return"\t";break;case "r":return"\r";break;case "n":return"\n";break;case "\\":return"\\";break;case '"':return'"';break;case "b":return"\b";break;case "f":return"\f";break;case "u":var ch__$1=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(-1===parseInt(ch__$1|0,16))return cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null,rdr,
ch__$1);else return cljs.tools.reader.read_unicode_char.call(null,rdr,ch__$1,16,4,true);break;default:if(cljs.tools.reader.impl.utils.numeric_QMARK_.call(null,ch)){var ch__$1=cljs.tools.reader.read_unicode_char.call(null,rdr,ch,8,3,false);if((ch__$1|0)>255)return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null,rdr);else return ch__$1}else return cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null,rdr,ch)}};
cljs.tools.reader.read_string_STAR_=function cljs$tools$reader$read_string_STAR_(reader,_,opts,pending_forms){var sb=new goog.string.StringBuffer;var ch=cljs.tools.reader.reader_types.read_char.call(null,reader);while(true){if(ch==null)return cljs.tools.reader.impl.errors.throw_eof_reading.call(null,reader,new cljs.core.Keyword(null,"string","string",-1989541586),'"',sb);else{var G__2261=ch;switch(G__2261){case "\\":var G__2265=function(){var G__2262=sb;G__2262.append(cljs.tools.reader.escape_char.call(null,
sb,reader));return G__2262}();var G__2266=cljs.tools.reader.reader_types.read_char.call(null,reader);sb=G__2265;ch=G__2266;continue;break;case '"':return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);break;default:var G__2267=function(){var G__2263=sb;G__2263.append(ch);return G__2263}();var G__2268=cljs.tools.reader.reader_types.read_char.call(null,reader);sb=G__2267;ch=G__2268;continue}}break}};
cljs.tools.reader.loc_info=function cljs$tools$reader$loc_info(rdr,line,column){if(line==null)return null;else{var file=cljs.tools.reader.reader_types.get_file_name.call(null,rdr);var filem=file==null?null:new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"file","file",-1269645878),file],null);var vec__2269=cljs.tools.reader.ending_line_col_info.call(null,rdr);var end_line=cljs.core.nth.call(null,vec__2269,0,null);var end_column=cljs.core.nth.call(null,vec__2269,1,null);var lcm=
new cljs.core.PersistentArrayMap(null,4,[new cljs.core.Keyword(null,"line","line",212345235),line,new cljs.core.Keyword(null,"column","column",2078222095),column,new cljs.core.Keyword(null,"end-line","end-line",1837326455),end_line,new cljs.core.Keyword(null,"end-column","end-column",1425389514),end_column],null);return cljs.core.merge.call(null,filem,lcm)}};
cljs.tools.reader.read_symbol=function cljs$tools$reader$read_symbol(rdr,initch){var vec__2272=cljs.tools.reader.starting_line_col_info.call(null,rdr);var line=cljs.core.nth.call(null,vec__2272,0,null);var column=cljs.core.nth.call(null,vec__2272,1,null);var token=cljs.tools.reader.read_token.call(null,rdr,new cljs.core.Keyword(null,"symbol","symbol",-1038572696),initch);if(token==null)return null;else{var G__2275=token;switch(G__2275){case "nil":return null;break;case "true":return true;break;case "false":return false;
break;case "/":return new cljs.core.Symbol(null,"/","/",-1371932971,null);break;default:var p=cljs.tools.reader.impl.commons.parse_symbol.call(null,token);if(!(p==null)){var sym=cljs.core.symbol.call(null,cljs.core._nth.call(null,p,0),cljs.core._nth.call(null,p,1));return cljs.core._with_meta.call(null,sym,cljs.tools.reader.loc_info.call(null,rdr,line,column))}else return cljs.tools.reader.impl.errors.throw_invalid.call(null,rdr,new cljs.core.Keyword(null,"symbol","symbol",-1038572696),token)}}};
cljs.tools.reader._STAR_alias_map_STAR_=null;cljs.tools.reader.resolve_alias=function cljs$tools$reader$resolve_alias(sym){return cljs.core.get.call(null,cljs.tools.reader._STAR_alias_map_STAR_,sym)};
cljs.tools.reader.resolve_ns=function cljs$tools$reader$resolve_ns(sym){var or__4131__auto__=cljs.tools.reader.resolve_alias.call(null,sym);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else{var temp__5735__auto__=cljs.core.find_ns.call(null,sym);if(cljs.core.truth_(temp__5735__auto__)){var ns=temp__5735__auto__;return cljs.core.symbol.call(null,cljs.core.ns_name.call(null,ns))}else return null}};
cljs.tools.reader.read_keyword=function cljs$tools$reader$read_keyword(reader,initch,opts,pending_forms){var ch=cljs.tools.reader.reader_types.read_char.call(null,reader);if(!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)){var token=cljs.tools.reader.read_token.call(null,reader,new cljs.core.Keyword(null,"keyword","keyword",811389747),ch);var s=cljs.tools.reader.impl.commons.parse_symbol.call(null,token);if(!(s==null)){var ns=cljs.core._nth.call(null,s,0);var name=cljs.core._nth.call(null,
s,1);if(":"===token.charAt(0))if(!(ns==null)){var temp__5733__auto__=cljs.tools.reader.resolve_alias.call(null,cljs.core.symbol.call(null,cljs.core.subs.call(null,ns,1)));if(cljs.core.truth_(temp__5733__auto__)){var ns__$1=temp__5733__auto__;return cljs.core.keyword.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),name)}else return cljs.tools.reader.impl.errors.throw_invalid.call(null,reader,new cljs.core.Keyword(null,"keyword","keyword",811389747),[":",cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(""))}else{var temp__5733__auto__=
cljs.core._STAR_ns_STAR_;if(cljs.core.truth_(temp__5733__auto__)){var ns__$1=temp__5733__auto__;return cljs.core.keyword.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.subs.call(null,name,1))}else return cljs.tools.reader.impl.errors.reader_error.call(null,reader,"Invalid token: :",token)}else return cljs.core.keyword.call(null,ns,name)}else return cljs.tools.reader.impl.errors.throw_invalid.call(null,reader,new cljs.core.Keyword(null,"keyword","keyword",811389747),[":",cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(""))}else return cljs.tools.reader.impl.errors.throw_single_colon.call(null,
reader)};cljs.tools.reader.wrapping_reader=function cljs$tools$reader$wrapping_reader(sym){return function(rdr,_,opts,pending_forms){return new cljs.core.List(null,sym,new cljs.core.List(null,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms),null,1,null),2,null)}};
cljs.tools.reader.read_meta=function cljs$tools$reader$read_meta(rdr,_,opts,pending_forms){if(cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null,rdr)&&!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,cljs.tools.reader.reader_types.peek_char.call(null,rdr)))return cljs.tools.reader.reader_types.log_source_STAR_.call(null,rdr,function(){var vec__2277=cljs.tools.reader.starting_line_col_info.call(null,rdr);var line=cljs.core.nth.call(null,vec__2277,0,null);var column=cljs.core.nth.call(null,
vec__2277,1,null);var m=cljs.tools.reader.impl.utils.desugar_meta.call(null,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));if(cljs.core.map_QMARK_.call(null,m));else cljs.tools.reader.impl.errors.throw_bad_metadata.call(null,rdr,m);var o=cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms);if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&131072||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IMeta$?true:false:false){var m__$1=cljs.core.truth_(function(){var and__4120__auto__=
line;if(cljs.core.truth_(and__4120__auto__))return cljs.core.seq_QMARK_.call(null,o);else return and__4120__auto__}())?cljs.core.assoc.call(null,m,new cljs.core.Keyword(null,"line","line",212345235),line,new cljs.core.Keyword(null,"column","column",2078222095),column):m;if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&262144||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IWithMeta$?true:false:false)return cljs.core.with_meta.call(null,o,cljs.core.merge.call(null,cljs.core.meta.call(null,o),m__$1));
else return cljs.core.reset_meta_BANG_.call(null,o,m__$1)}else return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null,rdr,o)});else{var vec__2282=cljs.tools.reader.starting_line_col_info.call(null,rdr);var line=cljs.core.nth.call(null,vec__2282,0,null);var column=cljs.core.nth.call(null,vec__2282,1,null);var m=cljs.tools.reader.impl.utils.desugar_meta.call(null,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));if(cljs.core.map_QMARK_.call(null,m));else cljs.tools.reader.impl.errors.throw_bad_metadata.call(null,
rdr,m);var o=cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms);if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&131072||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IMeta$?true:false:false){var m__$1=cljs.core.truth_(function(){var and__4120__auto__=line;if(cljs.core.truth_(and__4120__auto__))return cljs.core.seq_QMARK_.call(null,o);else return and__4120__auto__}())?cljs.core.assoc.call(null,m,new cljs.core.Keyword(null,"line","line",212345235),line,new cljs.core.Keyword(null,
"column","column",2078222095),column):m;if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&262144||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IWithMeta$?true:false:false)return cljs.core.with_meta.call(null,o,cljs.core.merge.call(null,cljs.core.meta.call(null,o),m__$1));else return cljs.core.reset_meta_BANG_.call(null,o,m__$1)}else return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null,rdr,o)}};
cljs.tools.reader.read_set=function cljs$tools$reader$read_set(rdr,_,opts,pending_forms){var vec__2287=cljs.tools.reader.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2287,0,null);var start_column=cljs.core.nth.call(null,vec__2287,1,null);var start_column__$1=cljs.core.truth_(start_column)?start_column-1|0:null;var coll=cljs.tools.reader.read_delimited.call(null,new cljs.core.Keyword(null,"set","set",304602554),"}",rdr,opts,pending_forms);var the_set=cljs.core.set.call(null,
coll);var vec__2290=cljs.tools.reader.ending_line_col_info.call(null,rdr);var end_line=cljs.core.nth.call(null,vec__2290,0,null);var end_column=cljs.core.nth.call(null,vec__2290,1,null);if(cljs.core._EQ_.call(null,cljs.core.count.call(null,coll),cljs.core.count.call(null,the_set)));else cljs.tools.reader.impl.errors.reader_error.call(null,rdr,cljs.tools.reader.impl.errors.throw_dup_keys.call(null,rdr,new cljs.core.Keyword(null,"set","set",304602554),coll));return cljs.core.with_meta.call(null,the_set,
cljs.core.truth_(start_line)?cljs.core.merge.call(null,function(){var temp__5735__auto__=cljs.tools.reader.reader_types.get_file_name.call(null,rdr);if(cljs.core.truth_(temp__5735__auto__)){var file=temp__5735__auto__;return new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"file","file",-1269645878),file],null)}else return null}(),new cljs.core.PersistentArrayMap(null,4,[new cljs.core.Keyword(null,"line","line",212345235),start_line,new cljs.core.Keyword(null,"column","column",
2078222095),start_column__$1,new cljs.core.Keyword(null,"end-line","end-line",1837326455),end_line,new cljs.core.Keyword(null,"end-column","end-column",1425389514),end_column],null)):null)};cljs.tools.reader.read_discard=function cljs$tools$reader$read_discard(rdr,_,opts,pending_forms){var G__2293=rdr;cljs.tools.reader.read_STAR_.call(null,G__2293,true,null,opts,pending_forms);return G__2293};
cljs.tools.reader.read_symbolic_value=function cljs$tools$reader$read_symbolic_value(rdr,_,opts,pending_forms){var sym=cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms);var G__2294=sym;if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"NaN","NaN",666918153,null),G__2294))return Number.NaN;else if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"-Inf","-Inf",-2123243689,null),G__2294))return Number.NEGATIVE_INFINITY;else if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,
"Inf","Inf",647172781,null),G__2294))return Number.POSITIVE_INFINITY;else return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,["Invalid token: ##",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""))};cljs.tools.reader.RESERVED_FEATURES=new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"else","else",-1508377146),null,new cljs.core.Keyword(null,"none","none",1333468478),null],null),null);
cljs.tools.reader.has_feature_QMARK_=function cljs$tools$reader$has_feature_QMARK_(rdr,feature,opts){if(feature instanceof cljs.core.Keyword)return cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"default","default",-1987822328),feature)||cljs.core.contains_QMARK_.call(null,cljs.core.get.call(null,opts,new cljs.core.Keyword(null,"features","features",-1146962336)),feature);else return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Feature should be a keyword: ",feature)};
cljs.tools.reader.check_eof_error=function cljs$tools$reader$check_eof_error(form,rdr,first_line){if(form===cljs.tools.reader.READ_EOF)return cljs.tools.reader.impl.errors.throw_eof_error.call(null,rdr,function(){var and__4120__auto__=first_line<0;if(and__4120__auto__)return first_line;else return and__4120__auto__}());else return null};
cljs.tools.reader.check_reserved_features=function cljs$tools$reader$check_reserved_features(rdr,form){if(cljs.core.truth_(cljs.core.get.call(null,cljs.tools.reader.RESERVED_FEATURES,form)))return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Feature name ",form," is reserved");else return null};
cljs.tools.reader.check_invalid_read_cond=function cljs$tools$reader$check_invalid_read_cond(form,rdr,first_line){if(form===cljs.tools.reader.READ_FINISHED)if(first_line<0)return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"read-cond requires an even number of forms");else return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"read-cond starting on line ",first_line," requires an even number of forms");else return null};
cljs.tools.reader.read_suppress=function cljs$tools$reader$read_suppress(first_line,rdr,opts,pending_forms){var _STAR_suppress_read_STAR__orig_val__2295=cljs.tools.reader._STAR_suppress_read_STAR_;var _STAR_suppress_read_STAR__temp_val__2296=true;cljs.tools.reader._STAR_suppress_read_STAR_=_STAR_suppress_read_STAR__temp_val__2296;try{var form=cljs.tools.reader.read_STAR_.call(null,rdr,false,cljs.tools.reader.READ_EOF,")",opts,pending_forms);cljs.tools.reader.check_eof_error.call(null,form,rdr,first_line);
if(form===cljs.tools.reader.READ_FINISHED)return cljs.tools.reader.READ_FINISHED;else return null}finally{cljs.tools.reader._STAR_suppress_read_STAR_=_STAR_suppress_read_STAR__orig_val__2295}};if(typeof cljs!=="undefined"&&typeof cljs.tools!=="undefined"&&typeof cljs.tools.reader!=="undefined"&&typeof cljs.tools.reader.NO_MATCH!=="undefined");else cljs.tools.reader.NO_MATCH=new Object;
cljs.tools.reader.match_feature=function cljs$tools$reader$match_feature(first_line,rdr,opts,pending_forms){var feature=cljs.tools.reader.read_STAR_.call(null,rdr,false,cljs.tools.reader.READ_EOF,")",opts,pending_forms);cljs.tools.reader.check_eof_error.call(null,feature,rdr,first_line);if(cljs.core._EQ_.call(null,feature,cljs.tools.reader.READ_FINISHED))return cljs.tools.reader.READ_FINISHED;else{cljs.tools.reader.check_reserved_features.call(null,rdr,feature);if(cljs.tools.reader.has_feature_QMARK_.call(null,
rdr,feature,opts)){var G__2297=cljs.tools.reader.read_STAR_.call(null,rdr,false,cljs.tools.reader.READ_EOF,")",opts,pending_forms);cljs.tools.reader.check_eof_error.call(null,G__2297,rdr,first_line);cljs.tools.reader.check_invalid_read_cond.call(null,G__2297,rdr,first_line);return G__2297}else{var or__4131__auto__=cljs.tools.reader.read_suppress.call(null,first_line,rdr,opts,pending_forms);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.NO_MATCH}}};
cljs.tools.reader.read_cond_delimited=function cljs$tools$reader$read_cond_delimited(rdr,splicing,opts,pending_forms){var first_line=cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,rdr)?cljs.tools.reader.reader_types.get_line_number.call(null,rdr):-1;var result=function(){var matched=cljs.tools.reader.NO_MATCH;var finished=null;while(true){if(matched===cljs.tools.reader.NO_MATCH){var match=cljs.tools.reader.match_feature.call(null,first_line,rdr,opts,pending_forms);if(match===cljs.tools.reader.READ_FINISHED)return cljs.tools.reader.READ_FINISHED;
else{var G__2299=match;var G__2300=null;matched=G__2299;finished=G__2300;continue}}else if(!(finished===cljs.tools.reader.READ_FINISHED)){var G__2301=matched;var G__2302=cljs.tools.reader.read_suppress.call(null,first_line,rdr,opts,pending_forms);matched=G__2301;finished=G__2302;continue}else return matched;break}}();if(result===cljs.tools.reader.READ_FINISHED)return rdr;else if(cljs.core.truth_(splicing))if(!(result==null)?result.cljs$lang$protocol_mask$partition0$&16777216||cljs.core.PROTOCOL_SENTINEL===
result.cljs$core$ISequential$?true:false:false){goog.array.insertArrayAt(pending_forms,cljs.core.to_array.call(null,result),0);return rdr}else return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"Spliced form list in read-cond-splicing must implement ISequential");else return result};
cljs.tools.reader.read_cond=function cljs$tools$reader$read_cond(rdr,_,opts,pending_forms){if(cljs.core.not.call(null,function(){var and__4120__auto__=opts;if(cljs.core.truth_(and__4120__auto__))return(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[new cljs.core.Keyword(null,"preserve","preserve",1276846509),null,new cljs.core.Keyword(null,"allow","allow",-1857325745),null],null),null)).call(null,(new cljs.core.Keyword(null,"read-cond","read-cond",1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
else return and__4120__auto__}()))throw cljs.core.ex_info.call(null,"Conditional read not allowed",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"runtime-exception","runtime-exception",-1495664514)],null));else;var temp__5733__auto__=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(cljs.core.truth_(temp__5733__auto__)){var ch=temp__5733__auto__;var splicing=cljs.core._EQ_.call(null,ch,"@");var ch__$1=splicing?cljs.tools.reader.reader_types.read_char.call(null,
rdr):ch;if(splicing)if(cljs.tools.reader._STAR_read_delim_STAR_);else cljs.tools.reader.impl.errors.reader_error.call(null,rdr,"cond-splice not in list");else;var temp__5733__auto____$1=cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch__$1)?cljs.tools.reader.impl.commons.read_past.call(null,cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr):ch__$1;if(cljs.core.truth_(temp__5733__auto____$1)){var ch__$2=temp__5733__auto____$1;if(cljs.core.not_EQ_.call(null,ch__$2,"("))throw cljs.core.ex_info.call(null,
"read-cond body must be a list",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"runtime-exception","runtime-exception",-1495664514)],null));else{var _STAR_suppress_read_STAR__orig_val__2303=cljs.tools.reader._STAR_suppress_read_STAR_;var _STAR_suppress_read_STAR__temp_val__2304=function(){var or__4131__auto__=cljs.tools.reader._STAR_suppress_read_STAR_;if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.core._EQ_.call(null,
new cljs.core.Keyword(null,"preserve","preserve",1276846509),(new cljs.core.Keyword(null,"read-cond","read-cond",1056899244)).cljs$core$IFn$_invoke$arity$1(opts))}();cljs.tools.reader._STAR_suppress_read_STAR_=_STAR_suppress_read_STAR__temp_val__2304;try{if(cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_))return cljs.tools.reader.impl.utils.reader_conditional.call(null,cljs.tools.reader.read_list.call(null,rdr,ch__$2,opts,pending_forms),splicing);else return cljs.tools.reader.read_cond_delimited.call(null,
rdr,splicing,opts,pending_forms)}finally{cljs.tools.reader._STAR_suppress_read_STAR_=_STAR_suppress_read_STAR__orig_val__2303}}}else return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null,rdr)}else return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null,rdr)};cljs.tools.reader.arg_env=null;
cljs.tools.reader.garg=function cljs$tools$reader$garg(n){return cljs.core.symbol.call(null,[-1===n?"rest":["p",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""),"__",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)),"#"].join(""))};
cljs.tools.reader.read_fn=function cljs$tools$reader$read_fn(rdr,_,opts,pending_forms){if(cljs.core.truth_(cljs.tools.reader.arg_env))throw cljs.core.ex_info.call(null,"Nested #()s are not allowed",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"illegal-state","illegal-state",-1519851182)],null));else;var arg_env_orig_val__2305=cljs.tools.reader.arg_env;var arg_env_temp_val__2306=cljs.core.sorted_map.call(null);cljs.tools.reader.arg_env=
arg_env_temp_val__2306;try{var form=cljs.tools.reader.read_STAR_.call(null,function(){var G__2307=rdr;cljs.tools.reader.reader_types.unread.call(null,G__2307,"(");return G__2307}(),true,null,opts,pending_forms);var rargs=cljs.core.rseq.call(null,cljs.tools.reader.arg_env);var args=rargs?function(){var higharg=cljs.core.key.call(null,cljs.core.first.call(null,rargs));var args=function(){var i=1;var args=cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);while(true){if(i>higharg)return cljs.core.persistent_BANG_.call(null,
args);else{var G__2308=i+1;var G__2309=cljs.core.conj_BANG_.call(null,args,function(){var or__4131__auto__=cljs.core.get.call(null,cljs.tools.reader.arg_env,i);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.garg.call(null,i)}());i=G__2308;args=G__2309;continue}break}}();var args__$1=cljs.core.truth_(cljs.tools.reader.arg_env.call(null,-1))?cljs.core.conj.call(null,args,new cljs.core.Symbol(null,"\x26","\x26",-2144855648,null),cljs.tools.reader.arg_env.call(null,
-1)):args;return args__$1}():cljs.core.PersistentVector.EMPTY;return new cljs.core.List(null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),new cljs.core.List(null,args,new cljs.core.List(null,form,null,1,null),2,null),3,null)}finally{cljs.tools.reader.arg_env=arg_env_orig_val__2305}};
cljs.tools.reader.register_arg=function cljs$tools$reader$register_arg(n){if(cljs.core.truth_(cljs.tools.reader.arg_env)){var temp__5733__auto__=cljs.tools.reader.arg_env.call(null,n);if(cljs.core.truth_(temp__5733__auto__)){var ret=temp__5733__auto__;return ret}else{var g=cljs.tools.reader.garg.call(null,n);cljs.tools.reader.arg_env=cljs.core.assoc.call(null,cljs.tools.reader.arg_env,n,g);return g}}else throw cljs.core.ex_info.call(null,"Arg literal not in #()",new cljs.core.PersistentArrayMap(null,
1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"illegal-state","illegal-state",-1519851182)],null));};
cljs.tools.reader.read_arg=function cljs$tools$reader$read_arg(rdr,pct,opts,pending_forms){if(cljs.tools.reader.arg_env==null)return cljs.tools.reader.read_symbol.call(null,rdr,pct);else{var ch=cljs.tools.reader.reader_types.peek_char.call(null,rdr);if(cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)||cljs.tools.reader.macro_terminating_QMARK_.call(null,ch)||ch==null)return cljs.tools.reader.register_arg.call(null,1);else if(cljs.core._EQ_.call(null,ch,"\x26")){cljs.tools.reader.reader_types.read_char.call(null,
rdr);return cljs.tools.reader.register_arg.call(null,-1)}else{var n=cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms);if(!cljs.core.integer_QMARK_.call(null,n))throw cljs.core.ex_info.call(null,"Arg literal must be %, %\x26 or %integer",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"illegal-state","illegal-state",-1519851182)],null));else return cljs.tools.reader.register_arg.call(null,n)}}};
cljs.tools.reader.gensym_env=null;
cljs.tools.reader.read_unquote=function cljs$tools$reader$read_unquote(rdr,comma,opts,pending_forms){var temp__5733__auto__=cljs.tools.reader.reader_types.peek_char.call(null,rdr);if(cljs.core.truth_(temp__5733__auto__)){var ch=temp__5733__auto__;if(cljs.core._EQ_.call(null,"@",ch))return cljs.tools.reader.wrapping_reader.call(null,new cljs.core.Symbol("clojure.core","unquote-splicing","clojure.core/unquote-splicing",-552003150,null)).call(null,function(){var G__2310=rdr;cljs.tools.reader.reader_types.read_char.call(null,
G__2310);return G__2310}(),"@",opts,pending_forms);else return cljs.tools.reader.wrapping_reader.call(null,new cljs.core.Symbol("clojure.core","unquote","clojure.core/unquote",843087510,null)).call(null,rdr,"~",opts,pending_forms)}else return null};
cljs.tools.reader.unquote_splicing_QMARK_=function cljs$tools$reader$unquote_splicing_QMARK_(form){return cljs.core.seq_QMARK_.call(null,form)&&cljs.core._EQ_.call(null,cljs.core.first.call(null,form),new cljs.core.Symbol("clojure.core","unquote-splicing","clojure.core/unquote-splicing",-552003150,null))};
cljs.tools.reader.unquote_QMARK_=function cljs$tools$reader$unquote_QMARK_(form){return cljs.core.seq_QMARK_.call(null,form)&&cljs.core._EQ_.call(null,cljs.core.first.call(null,form),new cljs.core.Symbol("clojure.core","unquote","clojure.core/unquote",843087510,null))};
cljs.tools.reader.expand_list=function cljs$tools$reader$expand_list(s){var s__$1=cljs.core.seq.call(null,s);var r=cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);while(true){if(s__$1){var item=cljs.core.first.call(null,s__$1);var ret=cljs.core.conj_BANG_.call(null,r,cljs.tools.reader.unquote_QMARK_.call(null,item)?new cljs.core.List(null,new cljs.core.Symbol("clojure.core","list","clojure.core/list",-1119203325,null),new cljs.core.List(null,cljs.core.second.call(null,item),null,
1,null),2,null):cljs.tools.reader.unquote_splicing_QMARK_.call(null,item)?cljs.core.second.call(null,item):new cljs.core.List(null,new cljs.core.Symbol("clojure.core","list","clojure.core/list",-1119203325,null),new cljs.core.List(null,cljs.tools.reader.syntax_quote_STAR_.call(null,item),null,1,null),2,null));var G__2311=cljs.core.next.call(null,s__$1);var G__2312=ret;s__$1=G__2311;r=G__2312;continue}else return cljs.core.seq.call(null,cljs.core.persistent_BANG_.call(null,r));break}};
cljs.tools.reader.flatten_map=function cljs$tools$reader$flatten_map(form){var s=cljs.core.seq.call(null,form);var key_vals=cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);while(true){if(s){var e=cljs.core.first.call(null,s);var G__2313=cljs.core.next.call(null,s);var G__2314=cljs.core.conj_BANG_.call(null,cljs.core.conj_BANG_.call(null,key_vals,cljs.core.key.call(null,e)),cljs.core.val.call(null,e));s=G__2313;key_vals=G__2314;continue}else return cljs.core.seq.call(null,cljs.core.persistent_BANG_.call(null,
key_vals));break}};
cljs.tools.reader.register_gensym=function cljs$tools$reader$register_gensym(sym){if(cljs.core.not.call(null,cljs.tools.reader.gensym_env))throw cljs.core.ex_info.call(null,"Gensym literal not in syntax-quote",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"illegal-state","illegal-state",-1519851182)],null));else;var or__4131__auto__=cljs.core.get.call(null,cljs.tools.reader.gensym_env,sym);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else{var gs=
cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null,cljs.core.name.call(null,sym),0,cljs.core.count.call(null,cljs.core.name.call(null,sym))-1)),"__",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)),"__auto__"].join(""));cljs.tools.reader.gensym_env=cljs.core.assoc.call(null,cljs.tools.reader.gensym_env,sym,gs);return gs}};
cljs.tools.reader.add_meta=function cljs$tools$reader$add_meta(form,ret){if(function(){var and__4120__auto__=!(form==null)?form.cljs$lang$protocol_mask$partition0$&262144||cljs.core.PROTOCOL_SENTINEL===form.cljs$core$IWithMeta$?true:false:false;if(and__4120__auto__)return cljs.core.seq.call(null,cljs.core.dissoc.call(null,cljs.core.meta.call(null,form),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"end-line",
"end-line",1837326455),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"source","source",-433931539)));else return and__4120__auto__}())return new cljs.core.List(null,new cljs.core.Symbol("cljs.core","with-meta","cljs.core/with-meta",749126446,null),new cljs.core.List(null,ret,new cljs.core.List(null,cljs.tools.reader.syntax_quote_STAR_.call(null,cljs.core.meta.call(null,form)),null,1,null),2,null),3,
null);else return ret};
cljs.tools.reader.syntax_quote_coll=function cljs$tools$reader$syntax_quote_coll(type,coll){var res=new cljs.core.List(null,new cljs.core.Symbol("cljs.core","sequence","cljs.core/sequence",1908459032,null),new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol("cljs.core","concat","cljs.core/concat",-1133584918,null),cljs.tools.reader.expand_list.call(null,coll)),null,1,null),2,null);if(cljs.core.truth_(type))return new cljs.core.List(null,new cljs.core.Symbol("cljs.core","apply","cljs.core/apply",
1757277831,null),new cljs.core.List(null,type,new cljs.core.List(null,res,null,1,null),2,null),3,null);else return res};cljs.tools.reader.map_func=function cljs$tools$reader$map_func(coll){if(cljs.core.count.call(null,coll)>=16)return new cljs.core.Symbol("cljs.core","hash-map","cljs.core/hash-map",303385767,null);else return new cljs.core.Symbol("cljs.core","array-map","cljs.core/array-map",-1519210683,null)};
cljs.tools.reader.bool_QMARK_=function cljs$tools$reader$bool_QMARK_(x){return x instanceof Boolean||x===true||x===false};cljs.tools.reader.resolve_symbol=function cljs$tools$reader$resolve_symbol(s){throw cljs.core.ex_info.call(null,"resolve-symbol is not implemented",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"sym","sym",-1444860305),s],null));};
cljs.tools.reader.syntax_quote_STAR_=function cljs$tools$reader$syntax_quote_STAR_(form){return cljs.tools.reader.add_meta.call(null,form,cljs.core.special_symbol_QMARK_.call(null,form)?new cljs.core.List(null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),new cljs.core.List(null,form,null,1,null),2,null):form instanceof cljs.core.Symbol?new cljs.core.List(null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),new cljs.core.List(null,cljs.core.truth_(function(){var and__4120__auto__=
cljs.core.not.call(null,cljs.core.namespace.call(null,form));if(and__4120__auto__)return goog.string.endsWith(cljs.core.name.call(null,form),"#");else return and__4120__auto__}())?cljs.tools.reader.register_gensym.call(null,form):function(){var sym=cljs.core.str.cljs$core$IFn$_invoke$arity$1(form);if(cljs.core.truth_(goog.string.endsWith(sym,"."))){var csym=cljs.core.symbol.call(null,cljs.core.subs.call(null,sym,0,cljs.core.count.call(null,sym)-1));return cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.resolve_symbol.call(null,
csym)),"."].join(""))}else return cljs.tools.reader.resolve_symbol.call(null,form)}(),null,1,null),2,null):cljs.tools.reader.unquote_QMARK_.call(null,form)?cljs.core.second.call(null,form):cljs.tools.reader.unquote_splicing_QMARK_.call(null,form)?function(){throw cljs.core.ex_info.call(null,"unquote-splice not in list",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"illegal-state","illegal-state",-1519851182)],null));}():cljs.core.coll_QMARK_.call(null,
form)?(!(form==null)?form.cljs$lang$protocol_mask$partition0$&67108864||cljs.core.PROTOCOL_SENTINEL===form.cljs$core$IRecord$?true:false:false)?form:cljs.core.map_QMARK_.call(null,form)?cljs.tools.reader.syntax_quote_coll.call(null,cljs.tools.reader.map_func.call(null,form),cljs.tools.reader.flatten_map.call(null,form)):cljs.core.vector_QMARK_.call(null,form)?new cljs.core.List(null,new cljs.core.Symbol("cljs.core","vec","cljs.core/vec",307622519,null),new cljs.core.List(null,cljs.tools.reader.syntax_quote_coll.call(null,
null,form),null,1,null),2,null):cljs.core.set_QMARK_.call(null,form)?cljs.tools.reader.syntax_quote_coll.call(null,new cljs.core.Symbol("cljs.core","hash-set","cljs.core/hash-set",1130426749,null),form):cljs.core.seq_QMARK_.call(null,form)||cljs.core.list_QMARK_.call(null,form)?function(){var seq=cljs.core.seq.call(null,form);if(seq)return cljs.tools.reader.syntax_quote_coll.call(null,null,seq);else return cljs.core.list(new cljs.core.Symbol("cljs.core","list","cljs.core/list",-1331406371,null))}():
function(){throw cljs.core.ex_info.call(null,"Unknown Collection type",new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"unsupported-operation","unsupported-operation",1890540953)],null));}():form instanceof cljs.core.Keyword||typeof form==="number"||typeof form==="string"||form==null||cljs.tools.reader.bool_QMARK_.call(null,form)||form instanceof RegExp?form:new cljs.core.List(null,new cljs.core.Symbol(null,"quote","quote",1377916282,
null),new cljs.core.List(null,form,null,1,null),2,null))};
cljs.tools.reader.read_syntax_quote=function cljs$tools$reader$read_syntax_quote(rdr,backquote,opts,pending_forms){var gensym_env_orig_val__2318=cljs.tools.reader.gensym_env;var gensym_env_temp_val__2319=cljs.core.PersistentArrayMap.EMPTY;cljs.tools.reader.gensym_env=gensym_env_temp_val__2319;try{return cljs.tools.reader.syntax_quote_STAR_.call(null,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms))}finally{cljs.tools.reader.gensym_env=gensym_env_orig_val__2318}};
cljs.tools.reader.read_namespaced_map=function cljs$tools$reader$read_namespaced_map(rdr,_,opts,pending_forms){var token=cljs.tools.reader.read_token.call(null,rdr,new cljs.core.Keyword(null,"namespaced-map","namespaced-map",1235665380),cljs.tools.reader.reader_types.read_char.call(null,rdr));var temp__5733__auto__=cljs.core._EQ_.call(null,token,":")?cljs.core.ns_name.call(null,cljs.core._STAR_ns_STAR_):cljs.core._EQ_.call(null,":",cljs.core.first.call(null,token))?function(){var G__2320=token;var G__2320__$1=
G__2320==null?null:cljs.core.subs.call(null,G__2320,1);var G__2320__$2=G__2320__$1==null?null:cljs.tools.reader.impl.commons.parse_symbol.call(null,G__2320__$1);var G__2320__$3=G__2320__$2==null?null:cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null,G__2320__$2);var G__2320__$4=G__2320__$3==null?null:cljs.core.symbol.call(null,G__2320__$3);if(G__2320__$4==null)return null;else return cljs.tools.reader.resolve_ns.call(null,G__2320__$4)}():function(){var G__2321=token;var G__2321__$1=G__2321==
null?null:cljs.tools.reader.impl.commons.parse_symbol.call(null,G__2321);if(G__2321__$1==null)return null;else return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null,G__2321__$1)}();if(cljs.core.truth_(temp__5733__auto__)){var ns=temp__5733__auto__;var ch=cljs.tools.reader.impl.commons.read_past.call(null,cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr);if(ch==="{"){var items=cljs.tools.reader.read_delimited.call(null,new cljs.core.Keyword(null,"namespaced-map","namespaced-map",1235665380),
"}",rdr,opts,pending_forms);if(cljs.core.odd_QMARK_.call(null,cljs.core.count.call(null,items)))cljs.tools.reader.impl.errors.throw_odd_map.call(null,rdr,null,null,items);else;var keys=cljs.tools.reader.impl.utils.namespace_keys.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.take_nth.call(null,2,items));var vals=cljs.core.take_nth.call(null,2,cljs.core.rest.call(null,items));if(cljs.core._EQ_.call(null,cljs.core.count.call(null,cljs.core.set.call(null,keys)),cljs.core.count.call(null,
keys)));else cljs.tools.reader.impl.errors.throw_dup_keys.call(null,rdr,new cljs.core.Keyword(null,"namespaced-map","namespaced-map",1235665380),keys);return cljs.core.zipmap.call(null,keys,vals)}else return cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null,rdr,token)}else return cljs.tools.reader.impl.errors.throw_bad_ns.call(null,rdr,token)};
cljs.tools.reader.macros=function cljs$tools$reader$macros(ch){var G__2322=ch;switch(G__2322){case '"':return cljs.tools.reader.read_string_STAR_;break;case ":":return cljs.tools.reader.read_keyword;break;case ";":return cljs.tools.reader.impl.commons.read_comment;break;case "'":return cljs.tools.reader.wrapping_reader.call(null,new cljs.core.Symbol(null,"quote","quote",1377916282,null));break;case "@":return cljs.tools.reader.wrapping_reader.call(null,new cljs.core.Symbol("clojure.core","deref",
"clojure.core/deref",188719157,null));break;case "^":return cljs.tools.reader.read_meta;break;case "`":return cljs.tools.reader.read_syntax_quote;break;case "~":return cljs.tools.reader.read_unquote;break;case "(":return cljs.tools.reader.read_list;break;case ")":return cljs.tools.reader.read_unmatched_delimiter;break;case "[":return cljs.tools.reader.read_vector;break;case "]":return cljs.tools.reader.read_unmatched_delimiter;break;case "{":return cljs.tools.reader.read_map;break;case "}":return cljs.tools.reader.read_unmatched_delimiter;
break;case "\\":return cljs.tools.reader.read_char_STAR_;break;case "%":return cljs.tools.reader.read_arg;break;case "#":return cljs.tools.reader.read_dispatch;break;default:return null}};
cljs.tools.reader.dispatch_macros=function cljs$tools$reader$dispatch_macros(ch){var G__2324=ch;switch(G__2324){case "^":return cljs.tools.reader.read_meta;break;case "'":return cljs.tools.reader.wrapping_reader.call(null,new cljs.core.Symbol(null,"var","var",870848730,null));break;case "(":return cljs.tools.reader.read_fn;break;case "{":return cljs.tools.reader.read_set;break;case "\x3c":return cljs.tools.reader.impl.commons.throwing_reader.call(null,"Unreadable form");break;case "\x3d":return cljs.tools.reader.impl.commons.throwing_reader.call(null,
"read-eval not supported");break;case '"':return cljs.tools.reader.read_regex;break;case "!":return cljs.tools.reader.impl.commons.read_comment;break;case "_":return cljs.tools.reader.read_discard;break;case "?":return cljs.tools.reader.read_cond;break;case ":":return cljs.tools.reader.read_namespaced_map;break;case "#":return cljs.tools.reader.read_symbolic_value;break;default:return null}};
cljs.tools.reader.read_tagged=function cljs$tools$reader$read_tagged(rdr,initch,opts,pending_forms){var tag=cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms);if(!(tag instanceof cljs.core.Symbol))cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null,rdr,tag);else;if(cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_))return cljs.core.tagged_literal.call(null,tag,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));else{var temp__5733__auto__=
function(){var or__4131__auto__=cljs.tools.reader._STAR_data_readers_STAR_.call(null,tag);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.default_data_readers.call(null,tag)}();if(cljs.core.truth_(temp__5733__auto__)){var f=temp__5733__auto__;return f.call(null,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms))}else{var temp__5733__auto____$1=cljs.tools.reader._STAR_default_data_reader_fn_STAR_;if(cljs.core.truth_(temp__5733__auto____$1)){var f=
temp__5733__auto____$1;return f.call(null,tag,cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms))}else return cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null,rdr,tag)}}};cljs.tools.reader._STAR_data_readers_STAR_=cljs.core.PersistentArrayMap.EMPTY;cljs.tools.reader._STAR_default_data_reader_fn_STAR_=null;cljs.tools.reader._STAR_suppress_read_STAR_=false;cljs.tools.reader.default_data_readers=cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal=function cljs$tools$reader$read_STAR__internal(reader,eof_error_QMARK_,sentinel,return_on,opts,pending_forms){while(true){if(cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null,reader)&&!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,cljs.tools.reader.reader_types.peek_char.call(null,reader)))return cljs.tools.reader.reader_types.log_source_STAR_.call(null,reader,function(){while(true){if(!goog.array.isEmpty(pending_forms)){var form=
pending_forms[0];goog.array.removeAt(pending_forms,0);return form}else{var ch=cljs.tools.reader.reader_types.read_char.call(null,reader);if(cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch))continue;else if(ch==null)if(eof_error_QMARK_)return cljs.tools.reader.impl.errors.throw_eof_error.call(null,reader,null);else return sentinel;else if(ch===return_on)return cljs.tools.reader.READ_FINISHED;else if(cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null,reader,ch))return cljs.tools.reader.read_number.call(null,
reader,ch);else{var f=cljs.tools.reader.macros.call(null,ch);if(!(f==null)){var res=f.call(null,reader,ch,opts,pending_forms);if(res===reader)continue;else return res}else return cljs.tools.reader.read_symbol.call(null,reader,ch)}}break}});else if(!goog.array.isEmpty(pending_forms)){var form=pending_forms[0];goog.array.removeAt(pending_forms,0);return form}else{var ch=cljs.tools.reader.reader_types.read_char.call(null,reader);if(cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch))continue;
else if(ch==null)if(eof_error_QMARK_)return cljs.tools.reader.impl.errors.throw_eof_error.call(null,reader,null);else return sentinel;else if(ch===return_on)return cljs.tools.reader.READ_FINISHED;else if(cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null,reader,ch))return cljs.tools.reader.read_number.call(null,reader,ch);else{var f=cljs.tools.reader.macros.call(null,ch);if(!(f==null)){var res=f.call(null,reader,ch,opts,pending_forms);if(res===reader)continue;else return res}else return cljs.tools.reader.read_symbol.call(null,
reader,ch)}}break}};
cljs.tools.reader.read_STAR_=function cljs$tools$reader$read_STAR_(var_args){var G__2327=arguments.length;switch(G__2327){case 5:return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;case 6:return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5=function(reader,eof_error_QMARK_,sentinel,opts,pending_forms){return cljs.tools.reader.read_STAR_.call(null,reader,eof_error_QMARK_,sentinel,null,opts,pending_forms)};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6=function(reader,eof_error_QMARK_,sentinel,return_on,opts,pending_forms){try{return cljs.tools.reader.read_STAR__internal.call(null,reader,eof_error_QMARK_,sentinel,return_on,opts,pending_forms)}catch(e2328){if(e2328 instanceof Error){var e=e2328;if(cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null,e)){var d=cljs.core.ex_data.call(null,e);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098),
(new cljs.core.Keyword(null,"type","type",1174270348)).cljs$core$IFn$_invoke$arity$1(d)))throw e;else throw cljs.core.ex_info.call(null,e.message,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098)],null),d,cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,reader)?new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"line","line",
212345235),cljs.tools.reader.reader_types.get_line_number.call(null,reader),new cljs.core.Keyword(null,"column","column",2078222095),cljs.tools.reader.reader_types.get_column_number.call(null,reader),new cljs.core.Keyword(null,"file","file",-1269645878),cljs.tools.reader.reader_types.get_file_name.call(null,reader)],null):null),e);}else throw cljs.core.ex_info.call(null,e.message,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),
new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098)],null),cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,reader)?new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"line","line",212345235),cljs.tools.reader.reader_types.get_line_number.call(null,reader),new cljs.core.Keyword(null,"column","column",2078222095),cljs.tools.reader.reader_types.get_column_number.call(null,reader),new cljs.core.Keyword(null,"file","file",-1269645878),cljs.tools.reader.reader_types.get_file_name.call(null,
reader)],null):null),e);}else throw e2328;}};cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity=6;
cljs.tools.reader.read=function cljs$tools$reader$read(var_args){var G__2331=arguments.length;switch(G__2331){case 1:return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 3:return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1=function(reader){return cljs.tools.reader.read.call(null,reader,true,null)};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2=function(p__2332,reader){var map__2333=p__2332;var map__2333__$1=(!(map__2333==null)?map__2333.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__2333.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__2333):map__2333;var opts=map__2333__$1;var eof=cljs.core.get.call(null,map__2333__$1,new cljs.core.Keyword(null,"eof","eof",-489063237),new cljs.core.Keyword(null,"eofthrow","eofthrow",-334166531));
return cljs.tools.reader.read_STAR_.call(null,reader,cljs.core._EQ_.call(null,eof,new cljs.core.Keyword(null,"eofthrow","eofthrow",-334166531)),eof,null,opts,cljs.core.to_array.call(null,cljs.core.PersistentVector.EMPTY))};cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3=function(reader,eof_error_QMARK_,sentinel){return cljs.tools.reader.read_STAR_.call(null,reader,eof_error_QMARK_,sentinel,null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.to_array.call(null,cljs.core.PersistentVector.EMPTY))};
cljs.tools.reader.read.cljs$lang$maxFixedArity=3;cljs.tools.reader.read_string=function cljs$tools$reader$read_string(var_args){var G__2337=arguments.length;switch(G__2337){case 1:return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1=function(s){return cljs.tools.reader.read_string.call(null,cljs.core.PersistentArrayMap.EMPTY,s)};cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2=function(opts,s){if(cljs.core.truth_(function(){var and__4120__auto__=s;if(cljs.core.truth_(and__4120__auto__))return!(s==="");else return and__4120__auto__}()))return cljs.tools.reader.read.call(null,opts,cljs.tools.reader.reader_types.string_push_back_reader.call(null,s));else return null};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity=2;
cljs.tools.reader.read_PLUS_string=function cljs$tools$reader$read_PLUS_string(var_args){var args__4736__auto__=[];var len__4730__auto___2341=arguments.length;var i__4731__auto___2342=0;while(true){if(i__4731__auto___2342<len__4730__auto___2341){args__4736__auto__.push(arguments[i__4731__auto___2342]);var G__2343=i__4731__auto___2342+1;i__4731__auto___2342=G__2343;continue}else;break}var argseq__4737__auto__=1<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(1),0,null):
null;return cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic(arguments[0],argseq__4737__auto__)};
cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic=function(reader,args){var buf=function(reader__$1){return cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null,"buffer","buffer",617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,reader__$1.frames)))};var offset=cljs.core.count.call(null,buf.call(null,reader));var o=cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null,reader)&&!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,
cljs.tools.reader.reader_types.peek_char.call(null,reader))?cljs.tools.reader.reader_types.log_source_STAR_.call(null,reader,function(buf,offset){return function(){if(cljs.core._EQ_.call(null,1,cljs.core.count.call(null,args)))return cljs.tools.reader.read.call(null,cljs.core.first.call(null,args),reader);else return cljs.core.apply.call(null,cljs.tools.reader.read,reader,args)}}(buf,offset)):cljs.core._EQ_.call(null,1,cljs.core.count.call(null,args))?cljs.tools.reader.read.call(null,cljs.core.first.call(null,
args),reader):cljs.core.apply.call(null,cljs.tools.reader.read,reader,args);var s=cljs.core.subs.call(null,buf.call(null,reader),offset).trim();return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[o,s],null)};cljs.tools.reader.read_PLUS_string.cljs$lang$maxFixedArity=1;
cljs.tools.reader.read_PLUS_string.cljs$lang$applyTo=function(seq2339){var G__2340=cljs.core.first.call(null,seq2339);var seq2339__$1=cljs.core.next.call(null,seq2339);var self__4717__auto__=this;return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2340,seq2339__$1)};goog.provide("cljs.tools.reader.edn");goog.require("cljs.core");goog.require("cljs.tools.reader.impl.errors");goog.require("cljs.tools.reader.reader_types");goog.require("cljs.tools.reader.impl.utils");goog.require("cljs.tools.reader.impl.commons");goog.require("cljs.tools.reader");goog.require("goog.string");goog.require("goog.string.StringBuffer");
cljs.tools.reader.edn.macro_terminating_QMARK_=function cljs$tools$reader$edn$macro_terminating_QMARK_(ch){var and__4120__auto__=!("#"===ch);if(and__4120__auto__){var and__4120__auto____$1=!("'"===ch);if(and__4120__auto____$1){var and__4120__auto____$2=!(":"===ch);if(and__4120__auto____$2)return cljs.tools.reader.edn.macros.call(null,ch);else return and__4120__auto____$2}else return and__4120__auto____$1}else return and__4120__auto__};
cljs.tools.reader.edn.not_constituent_QMARK_=function cljs$tools$reader$edn$not_constituent_QMARK_(ch){return"@"===ch||"`"===ch||"~"===ch};
cljs.tools.reader.edn.read_token=function cljs$tools$reader$edn$read_token(var_args){var G__2347=arguments.length;switch(G__2347){case 3:return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);break;case 4:return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3=function(rdr,kind,initch){return cljs.tools.reader.edn.read_token.call(null,rdr,kind,initch,true)};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4=function(rdr,kind,initch,validate_leading_QMARK_){if(cljs.core.not.call(null,initch))return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null,rdr,kind);else if(cljs.core.truth_(function(){var and__4120__auto__=validate_leading_QMARK_;if(cljs.core.truth_(and__4120__auto__))return cljs.tools.reader.edn.not_constituent_QMARK_.call(null,initch);else return and__4120__auto__}()))return cljs.tools.reader.impl.errors.throw_bad_char.call(null,
rdr,kind,initch);else{var sb=new goog.string.StringBuffer;var ch=function(){cljs.tools.reader.reader_types.unread.call(null,rdr,initch);return initch}();while(true){if(cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)||cljs.tools.reader.edn.macro_terminating_QMARK_.call(null,ch)||ch==null)return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);else if(cljs.tools.reader.edn.not_constituent_QMARK_.call(null,ch))return cljs.tools.reader.impl.errors.throw_bad_char.call(null,rdr,kind,ch);else{var G__2350=
function(){var G__2348=sb;G__2348.append(cljs.tools.reader.reader_types.read_char.call(null,rdr));return G__2348}();var G__2351=cljs.tools.reader.reader_types.peek_char.call(null,rdr);sb=G__2350;ch=G__2351;continue}break}}};cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity=4;
cljs.tools.reader.edn.read_dispatch=function cljs$tools$reader$edn$read_dispatch(rdr,_,opts){var temp__5733__auto__=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(cljs.core.truth_(temp__5733__auto__)){var ch=temp__5733__auto__;var temp__5733__auto____$1=cljs.tools.reader.edn.dispatch_macros.call(null,ch);if(cljs.core.truth_(temp__5733__auto____$1)){var dm=temp__5733__auto____$1;return dm.call(null,rdr,ch,opts)}else{var temp__5733__auto____$2=cljs.tools.reader.edn.read_tagged.call(null,
function(){var G__2352=rdr;cljs.tools.reader.reader_types.unread.call(null,G__2352,ch);return G__2352}(),ch,opts);if(cljs.core.truth_(temp__5733__auto____$2)){var obj=temp__5733__auto____$2;return obj}else return cljs.tools.reader.impl.errors.throw_no_dispatch.call(null,rdr,ch)}}else return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null,rdr)};
cljs.tools.reader.edn.read_unmatched_delimiter=function cljs$tools$reader$edn$read_unmatched_delimiter(rdr,ch,opts){return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null,rdr,ch)};
cljs.tools.reader.edn.read_unicode_char=function cljs$tools$reader$edn$read_unicode_char(var_args){var G__2354=arguments.length;switch(G__2354){case 4:return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4=function(token,offset,length,base){var l=offset+length;if(cljs.core.count.call(null,token)===l);else cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null,null,token);var i=offset;var uc=0;while(true){if(i===l)return String.fromCharCode(uc);else{var d=cljs.tools.reader.impl.utils.char_code.call(null,cljs.core.nth.call(null,token,i),base);if(d===-1)return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null,null,
cljs.core.nth.call(null,token,i),token);else{var G__2356=i+1;var G__2357=d+uc*base;i=G__2356;uc=G__2357;continue}}break}};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5=function(rdr,initch,base,length,exact_QMARK_){var i=1;var uc=cljs.tools.reader.impl.utils.char_code.call(null,initch,base);while(true){if(uc===-1)return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null,rdr,initch);else if(!(i===length)){var ch=cljs.tools.reader.reader_types.peek_char.call(null,rdr);if(cljs.core.truth_(function(){var or__4131__auto__=cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch);
if(or__4131__auto__)return or__4131__auto__;else{var or__4131__auto____$1=cljs.tools.reader.edn.macros.call(null,ch);if(cljs.core.truth_(or__4131__auto____$1))return or__4131__auto____$1;else return ch==null}}()))if(cljs.core.truth_(exact_QMARK_))return cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null,rdr,i,length);else return String.fromCharCode(uc);else{var d=cljs.tools.reader.impl.utils.char_code.call(null,ch,base);cljs.tools.reader.reader_types.read_char.call(null,rdr);if(d===
-1)return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null,rdr,ch);else{var G__2358=i+1;var G__2359=d+uc*base;i=G__2358;uc=G__2359;continue}}}else return String.fromCharCode(uc);break}};cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity=5;cljs.tools.reader.edn.upper_limit="퟿".charCodeAt(0);cljs.tools.reader.edn.lower_limit="".charCodeAt(0);
cljs.tools.reader.edn.read_char_STAR_=function cljs$tools$reader$edn$read_char_STAR_(rdr,backslash,opts){var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(!(ch==null)){var token=cljs.tools.reader.edn.macro_terminating_QMARK_.call(null,ch)||cljs.tools.reader.edn.not_constituent_QMARK_.call(null,ch)||cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)?cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch):cljs.tools.reader.edn.read_token.call(null,rdr,new cljs.core.Keyword(null,"character",
"character",380652989),ch,false);var token_len=cljs.core.count.call(null,token);if(1===token_len)return cljs.core.nth.call(null,token,0);else if(token==="newline")return"\n";else if(token==="space")return" ";else if(token==="tab")return"\t";else if(token==="backspace")return"\b";else if(token==="formfeed")return"\f";else if(token==="return")return"\r";else if(cljs.core.truth_(goog.string.startsWith(token,"u"))){var c=cljs.tools.reader.edn.read_unicode_char.call(null,token,1,4,16);var ic=c.charCodeAt();
if(ic>cljs.tools.reader.edn.upper_limit&&ic<cljs.tools.reader.edn.lower_limit)return cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null,rdr,ic.toString(16));else return c}else if(cljs.core.truth_(goog.string.startsWith(token,"o"))){var len=token_len-1;if(len>3)return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null,rdr,token);else{var uc=cljs.tools.reader.edn.read_unicode_char.call(null,token,1,len,8);if((uc|0)>255)return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null,
rdr);else return uc}}else return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null,rdr,token)}else return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null,rdr)};
cljs.tools.reader.edn.starting_line_col_info=function cljs$tools$reader$edn$starting_line_col_info(rdr){if(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,rdr))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.tools.reader.reader_types.get_line_number.call(null,rdr),(cljs.tools.reader.reader_types.get_column_number.call(null,rdr)|0)-1|0],null);else return null};
cljs.tools.reader.edn.read_delimited=function cljs$tools$reader$edn$read_delimited(kind,delim,rdr,opts){var vec__2360=cljs.tools.reader.edn.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2360,0,null);var start_column=cljs.core.nth.call(null,vec__2360,1,null);var delim__$1=cljs.tools.reader.impl.utils.char$.call(null,delim);var a=cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);while(true){var ch=cljs.tools.reader.impl.commons.read_past.call(null,
cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr);if(cljs.core.truth_(ch));else cljs.tools.reader.impl.errors.throw_eof_delimited.call(null,rdr,kind,start_line,start_column,cljs.core.count.call(null,a));if(cljs.core._EQ_.call(null,delim__$1,cljs.tools.reader.impl.utils.char$.call(null,ch)))return cljs.core.persistent_BANG_.call(null,a);else{var temp__5733__auto__=cljs.tools.reader.edn.macros.call(null,ch);if(cljs.core.truth_(temp__5733__auto__)){var macrofn=temp__5733__auto__;var mret=macrofn.call(null,
rdr,ch,opts);var G__2364=!(mret===rdr)?cljs.core.conj_BANG_.call(null,a,mret):a;a=G__2364;continue}else{var o=cljs.tools.reader.edn.read.call(null,function(){var G__2363=rdr;cljs.tools.reader.reader_types.unread.call(null,G__2363,ch);return G__2363}(),true,null,opts);var G__2365=!(o===rdr)?cljs.core.conj_BANG_.call(null,a,o):a;a=G__2365;continue}}break}};
cljs.tools.reader.edn.read_list=function cljs$tools$reader$edn$read_list(rdr,_,opts){var the_list=cljs.tools.reader.edn.read_delimited.call(null,new cljs.core.Keyword(null,"list","list",765357683),")",rdr,opts);if(cljs.core.empty_QMARK_.call(null,the_list))return cljs.core.List.EMPTY;else return cljs.core.apply.call(null,cljs.core.list,the_list)};
cljs.tools.reader.edn.read_vector=function cljs$tools$reader$edn$read_vector(rdr,_,opts){return cljs.tools.reader.edn.read_delimited.call(null,new cljs.core.Keyword(null,"vector","vector",1902966158),"]",rdr,opts)};
cljs.tools.reader.edn.read_map=function cljs$tools$reader$edn$read_map(rdr,_,opts){var vec__2366=cljs.tools.reader.edn.starting_line_col_info.call(null,rdr);var start_line=cljs.core.nth.call(null,vec__2366,0,null);var start_column=cljs.core.nth.call(null,vec__2366,1,null);var the_map=cljs.tools.reader.edn.read_delimited.call(null,new cljs.core.Keyword(null,"map","map",1371690461),"}",rdr,opts);var map_count=cljs.core.count.call(null,the_map);var ks=cljs.core.take_nth.call(null,2,the_map);var key_set=
cljs.core.set.call(null,ks);if(cljs.core.odd_QMARK_.call(null,map_count))cljs.tools.reader.impl.errors.throw_odd_map.call(null,rdr,start_line,start_column,the_map);else;if(cljs.core._EQ_.call(null,cljs.core.count.call(null,key_set),cljs.core.count.call(null,ks)));else cljs.tools.reader.impl.errors.throw_dup_keys.call(null,rdr,new cljs.core.Keyword(null,"map","map",1371690461),ks);if(map_count<=2*cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)return cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null,
the_map),true,true);else return cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null,the_map),true)};
cljs.tools.reader.edn.read_number=function cljs$tools$reader$edn$read_number(rdr,initch,opts){var sb=function(){var G__2369=new goog.string.StringBuffer;G__2369.append(initch);return G__2369}();var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);while(true){if(cljs.core.truth_(function(){var or__4131__auto__=cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch);if(or__4131__auto__)return or__4131__auto__;else{var or__4131__auto____$1=cljs.tools.reader.edn.macros.call(null,ch);if(cljs.core.truth_(or__4131__auto____$1))return or__4131__auto____$1;
else return ch==null}}())){var s=cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);cljs.tools.reader.reader_types.unread.call(null,rdr,ch);var or__4131__auto__=cljs.tools.reader.impl.commons.match_number.call(null,s);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.impl.errors.throw_invalid_number.call(null,rdr,s)}else{var G__2371=function(){var G__2370=sb;G__2370.append(ch);return G__2370}();var G__2372=cljs.tools.reader.reader_types.read_char.call(null,rdr);
sb=G__2371;ch=G__2372;continue}break}};
cljs.tools.reader.edn.escape_char=function cljs$tools$reader$edn$escape_char(sb,rdr){var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);var G__2373=ch;switch(G__2373){case "t":return"\t";break;case "r":return"\r";break;case "n":return"\n";break;case "\\":return"\\";break;case '"':return'"';break;case "b":return"\b";break;case "f":return"\f";break;case "u":var ch__$1=cljs.tools.reader.reader_types.read_char.call(null,rdr);if(-1===parseInt(ch__$1|0,16))return cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null,
rdr,ch__$1);else return cljs.tools.reader.edn.read_unicode_char.call(null,rdr,ch__$1,16,4,true);break;default:if(cljs.tools.reader.impl.utils.numeric_QMARK_.call(null,ch)){var ch__$1=cljs.tools.reader.edn.read_unicode_char.call(null,rdr,ch,8,3,false);if((ch__$1|0)>255)return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null,rdr);else return ch__$1}else return cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null,rdr,ch)}};
cljs.tools.reader.edn.read_string_STAR_=function cljs$tools$reader$edn$read_string_STAR_(rdr,_,opts){var sb=new goog.string.StringBuffer;var ch=cljs.tools.reader.reader_types.read_char.call(null,rdr);while(true){var G__2375=ch;if(cljs.core._EQ_.call(null,null,G__2375))return cljs.tools.reader.impl.errors.throw_eof_reading.call(null,rdr,new cljs.core.Keyword(null,"string","string",-1989541586),'"',sb);else if(cljs.core._EQ_.call(null,"\\",G__2375)){var G__2378=function(){var G__2376=sb;G__2376.append(cljs.tools.reader.edn.escape_char.call(null,
sb,rdr));return G__2376}();var G__2379=cljs.tools.reader.reader_types.read_char.call(null,rdr);sb=G__2378;ch=G__2379;continue}else if(cljs.core._EQ_.call(null,'"',G__2375))return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);else{var G__2380=function(){var G__2377=sb;G__2377.append(ch);return G__2377}();var G__2381=cljs.tools.reader.reader_types.read_char.call(null,rdr);sb=G__2380;ch=G__2381;continue}break}};
cljs.tools.reader.edn.read_symbol=function cljs$tools$reader$edn$read_symbol(rdr,initch){var temp__5735__auto__=cljs.tools.reader.edn.read_token.call(null,rdr,new cljs.core.Keyword(null,"symbol","symbol",-1038572696),initch);if(cljs.core.truth_(temp__5735__auto__)){var token=temp__5735__auto__;var G__2382=token;switch(G__2382){case "nil":return null;break;case "true":return true;break;case "false":return false;break;case "/":return new cljs.core.Symbol(null,"/","/",-1371932971,null);break;default:var or__4131__auto__=
function(){var temp__5735__auto____$1=cljs.tools.reader.impl.commons.parse_symbol.call(null,token);if(cljs.core.truth_(temp__5735__auto____$1)){var p=temp__5735__auto____$1;return cljs.core.symbol.call(null,p.call(null,0),p.call(null,1))}else return null}();if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.impl.errors.throw_invalid.call(null,rdr,new cljs.core.Keyword(null,"symbol","symbol",-1038572696),token)}}else return null};
cljs.tools.reader.edn.read_keyword=function cljs$tools$reader$edn$read_keyword(reader,initch,opts){var ch=cljs.tools.reader.reader_types.read_char.call(null,reader);if(!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch)){var token=cljs.tools.reader.edn.read_token.call(null,reader,new cljs.core.Keyword(null,"keyword","keyword",811389747),ch);var s=cljs.tools.reader.impl.commons.parse_symbol.call(null,token);if(cljs.core.truth_(function(){var and__4120__auto__=s;if(cljs.core.truth_(and__4120__auto__))return-1===
token.indexOf("::");else return and__4120__auto__}())){var ns=s.call(null,0);var name=s.call(null,1);if(":"===cljs.core.nth.call(null,token,0))return cljs.tools.reader.impl.errors.throw_invalid.call(null,reader,new cljs.core.Keyword(null,"keyword","keyword",811389747),token);else return cljs.core.keyword.call(null,ns,name)}else return cljs.tools.reader.impl.errors.throw_invalid.call(null,reader,new cljs.core.Keyword(null,"keyword","keyword",811389747),token)}else return cljs.tools.reader.impl.errors.throw_single_colon.call(null,
reader)};cljs.tools.reader.edn.wrapping_reader=function cljs$tools$reader$edn$wrapping_reader(sym){return function(rdr,_,opts){return new cljs.core.List(null,sym,new cljs.core.List(null,cljs.tools.reader.edn.read.call(null,rdr,true,null,opts),null,1,null),2,null)}};
cljs.tools.reader.edn.read_meta=function cljs$tools$reader$edn$read_meta(rdr,_,opts){var m=cljs.tools.reader.impl.utils.desugar_meta.call(null,cljs.tools.reader.edn.read.call(null,rdr,true,null,opts));if(cljs.core.map_QMARK_.call(null,m));else cljs.tools.reader.impl.errors.throw_bad_metadata.call(null,rdr,m);var o=cljs.tools.reader.edn.read.call(null,rdr,true,null,opts);if(!(o==null)?o.cljs$lang$protocol_mask$partition0$&131072||cljs.core.PROTOCOL_SENTINEL===o.cljs$core$IMeta$?true:false:false)return cljs.core.with_meta.call(null,
o,cljs.core.merge.call(null,cljs.core.meta.call(null,o),m));else return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null,rdr,o)};
cljs.tools.reader.edn.read_set=function cljs$tools$reader$edn$read_set(rdr,_,opts){var coll=cljs.tools.reader.edn.read_delimited.call(null,new cljs.core.Keyword(null,"set","set",304602554),"}",rdr,opts);var the_set=cljs.core.set.call(null,coll);if(cljs.core._EQ_.call(null,cljs.core.count.call(null,coll),cljs.core.count.call(null,the_set)));else cljs.tools.reader.impl.errors.throw_dup_keys.call(null,rdr,new cljs.core.Keyword(null,"set","set",304602554),coll);return the_set};
cljs.tools.reader.edn.read_discard=function cljs$tools$reader$edn$read_discard(rdr,_,opts){var G__2385=rdr;cljs.tools.reader.edn.read.call(null,G__2385,true,null,true);return G__2385};
cljs.tools.reader.edn.read_namespaced_map=function cljs$tools$reader$edn$read_namespaced_map(rdr,_,opts){var token=cljs.tools.reader.edn.read_token.call(null,rdr,new cljs.core.Keyword(null,"namespaced-map","namespaced-map",1235665380),cljs.tools.reader.reader_types.read_char.call(null,rdr));var temp__5733__auto__=function(){var G__2386=token;var G__2386__$1=G__2386==null?null:cljs.tools.reader.impl.commons.parse_symbol.call(null,G__2386);if(G__2386__$1==null)return null;else return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null,
G__2386__$1)}();if(cljs.core.truth_(temp__5733__auto__)){var ns=temp__5733__auto__;var ch=cljs.tools.reader.impl.commons.read_past.call(null,cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr);if(ch==="{"){var items=cljs.tools.reader.edn.read_delimited.call(null,new cljs.core.Keyword(null,"namespaced-map","namespaced-map",1235665380),"}",rdr,opts);if(cljs.core.odd_QMARK_.call(null,cljs.core.count.call(null,items)))cljs.tools.reader.impl.errors.throw_odd_map.call(null,rdr,null,null,items);else;var keys=
cljs.tools.reader.impl.utils.namespace_keys.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.take_nth.call(null,2,items));var vals=cljs.core.take_nth.call(null,2,cljs.core.rest.call(null,items));if(cljs.core._EQ_.call(null,cljs.core.count.call(null,cljs.core.set.call(null,keys)),cljs.core.count.call(null,keys)));else cljs.tools.reader.impl.errors.throw_dup_keys.call(null,rdr,new cljs.core.Keyword(null,"namespaced-map","namespaced-map",1235665380),keys);return cljs.core.zipmap.call(null,
keys,vals)}else return cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null,rdr,token)}else return cljs.tools.reader.impl.errors.throw_bad_ns.call(null,rdr,token)};
cljs.tools.reader.edn.read_symbolic_value=function cljs$tools$reader$edn$read_symbolic_value(rdr,_,opts){var sym=cljs.tools.reader.edn.read.call(null,rdr,true,null,opts);var G__2387=sym;if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"NaN","NaN",666918153,null),G__2387))return Number.NaN;else if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"-Inf","-Inf",-2123243689,null),G__2387))return Number.NEGATIVE_INFINITY;else if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"Inf","Inf",647172781,
null),G__2387))return Number.POSITIVE_INFINITY;else return cljs.tools.reader.impl.errors.reader_error.call(null,rdr,["Invalid token: ##",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""))};
cljs.tools.reader.edn.macros=function cljs$tools$reader$edn$macros(ch){var G__2388=ch;switch(G__2388){case '"':return cljs.tools.reader.edn.read_string_STAR_;break;case ":":return cljs.tools.reader.edn.read_keyword;break;case ";":return cljs.tools.reader.impl.commons.read_comment;break;case "^":return cljs.tools.reader.edn.read_meta;break;case "(":return cljs.tools.reader.edn.read_list;break;case ")":return cljs.tools.reader.edn.read_unmatched_delimiter;break;case "[":return cljs.tools.reader.edn.read_vector;
break;case "]":return cljs.tools.reader.edn.read_unmatched_delimiter;break;case "{":return cljs.tools.reader.edn.read_map;break;case "}":return cljs.tools.reader.edn.read_unmatched_delimiter;break;case "\\":return cljs.tools.reader.edn.read_char_STAR_;break;case "#":return cljs.tools.reader.edn.read_dispatch;break;default:return null}};
cljs.tools.reader.edn.dispatch_macros=function cljs$tools$reader$edn$dispatch_macros(ch){var G__2390=ch;switch(G__2390){case "^":return cljs.tools.reader.edn.read_meta;break;case "{":return cljs.tools.reader.edn.read_set;break;case "\x3c":return cljs.tools.reader.impl.commons.throwing_reader.call(null,"Unreadable form");break;case "!":return cljs.tools.reader.impl.commons.read_comment;break;case "_":return cljs.tools.reader.edn.read_discard;break;case ":":return cljs.tools.reader.edn.read_namespaced_map;
break;case "#":return cljs.tools.reader.edn.read_symbolic_value;break;default:return null}};
cljs.tools.reader.edn.read_tagged=function cljs$tools$reader$edn$read_tagged(rdr,initch,opts){var tag=cljs.tools.reader.edn.read.call(null,rdr,true,null,opts);var object=cljs.tools.reader.edn.read.call(null,rdr,true,null,opts);if(!(tag instanceof cljs.core.Symbol))cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null,rdr,"Reader tag must be a symbol");else;var temp__5733__auto__=function(){var or__4131__auto__=cljs.core.get.call(null,(new cljs.core.Keyword(null,"readers","readers",-2118263030)).cljs$core$IFn$_invoke$arity$1(opts),
tag);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return cljs.tools.reader.default_data_readers.call(null,tag)}();if(cljs.core.truth_(temp__5733__auto__)){var f=temp__5733__auto__;return f.call(null,object)}else{var temp__5733__auto____$1=(new cljs.core.Keyword(null,"default","default",-1987822328)).cljs$core$IFn$_invoke$arity$1(opts);if(cljs.core.truth_(temp__5733__auto____$1)){var d=temp__5733__auto____$1;return d.call(null,tag,object)}else return cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null,
rdr,tag)}};
cljs.tools.reader.edn.read=function cljs$tools$reader$edn$read(var_args){var G__2393=arguments.length;switch(G__2393){case 1:return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 4:return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1=function(reader){return cljs.tools.reader.edn.read.call(null,cljs.core.PersistentArrayMap.EMPTY,reader)};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2=function(p__2394,reader){var map__2395=p__2394;var map__2395__$1=(!(map__2395==null)?map__2395.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__2395.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__2395):map__2395;var opts=map__2395__$1;var eof=cljs.core.get.call(null,map__2395__$1,new cljs.core.Keyword(null,"eof","eof",-489063237));var eof_error_QMARK_=!cljs.core.contains_QMARK_.call(null,
opts,new cljs.core.Keyword(null,"eof","eof",-489063237));return cljs.tools.reader.edn.read.call(null,reader,eof_error_QMARK_,eof,opts)};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4=function(reader,eof_error_QMARK_,eof,opts){try{while(true){var ch=cljs.tools.reader.reader_types.read_char.call(null,reader);if(cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null,ch))continue;else if(ch==null)if(cljs.core.truth_(eof_error_QMARK_))return cljs.tools.reader.impl.errors.throw_eof_error.call(null,reader,null);else return eof;else if(cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null,reader,ch))return cljs.tools.reader.edn.read_number.call(null,
reader,ch,opts);else{var f=cljs.tools.reader.edn.macros.call(null,ch);if(cljs.core.truth_(f)){var res=f.call(null,reader,ch,opts);if(res===reader)continue;else return res}else return cljs.tools.reader.edn.read_symbol.call(null,reader,ch)}break}}catch(e2397){if(e2397 instanceof Error){var e=e2397;if(cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null,e)){var d=cljs.core.ex_data.call(null,e);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098),
(new cljs.core.Keyword(null,"type","type",1174270348)).cljs$core$IFn$_invoke$arity$1(d)))throw e;else throw cljs.core.ex_info.call(null,e.message,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098)],null),d,cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,reader)?new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"line","line",
212345235),cljs.tools.reader.reader_types.get_line_number.call(null,reader),new cljs.core.Keyword(null,"column","column",2078222095),cljs.tools.reader.reader_types.get_column_number.call(null,reader),new cljs.core.Keyword(null,"file","file",-1269645878),cljs.tools.reader.reader_types.get_file_name.call(null,reader)],null):null),e);}else throw cljs.core.ex_info.call(null,e.message,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"type","type",1174270348),
new cljs.core.Keyword(null,"reader-exception","reader-exception",-1938323098)],null),cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null,reader)?new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"line","line",212345235),cljs.tools.reader.reader_types.get_line_number.call(null,reader),new cljs.core.Keyword(null,"column","column",2078222095),cljs.tools.reader.reader_types.get_column_number.call(null,reader),new cljs.core.Keyword(null,"file","file",-1269645878),cljs.tools.reader.reader_types.get_file_name.call(null,
reader)],null):null),e);}else throw e2397;}};cljs.tools.reader.edn.read.cljs$lang$maxFixedArity=4;
cljs.tools.reader.edn.read_string=function cljs$tools$reader$edn$read_string(var_args){var G__2400=arguments.length;switch(G__2400){case 1:return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1=function(s){return cljs.tools.reader.edn.read_string.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"eof","eof",-489063237),null],null),s)};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2=function(opts,s){if(cljs.core.truth_(function(){var and__4120__auto__=s;if(cljs.core.truth_(and__4120__auto__))return cljs.core.not_EQ_.call(null,s,"");else return and__4120__auto__}()))return cljs.tools.reader.edn.read.call(null,opts,cljs.tools.reader.reader_types.string_push_back_reader.call(null,s));else return null};cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity=2;goog.provide("cljs.reader");goog.require("cljs.core");goog.require("goog.object");goog.require("cljs.tools.reader");goog.require("cljs.tools.reader.edn");goog.require("goog.string.StringBuffer");
cljs.reader.zero_fill_right_and_truncate=function cljs$reader$zero_fill_right_and_truncate(s,width){if(cljs.core._EQ_.call(null,width,cljs.core.count.call(null,s)))return s;else if(width<cljs.core.count.call(null,s))return cljs.core.subs.call(null,s,0,width);else{var b=new goog.string.StringBuffer(s);while(true){if(b.getLength()<width){var G__2426=b.append("0");b=G__2426;continue}else return b.toString();break}}};
cljs.reader.divisible_QMARK_=function cljs$reader$divisible_QMARK_(num,div){return cljs.core.mod.call(null,num,div)===0};cljs.reader.indivisible_QMARK_=function cljs$reader$indivisible_QMARK_(num,div){return!cljs.reader.divisible_QMARK_.call(null,num,div)};cljs.reader.leap_year_QMARK_=function cljs$reader$leap_year_QMARK_(year){return cljs.reader.divisible_QMARK_.call(null,year,4)&&(cljs.reader.indivisible_QMARK_.call(null,year,100)||cljs.reader.divisible_QMARK_.call(null,year,400))};
cljs.reader.days_in_month=function(){var dim_norm=new cljs.core.PersistentVector(null,13,5,cljs.core.PersistentVector.EMPTY_NODE,[null,31,28,31,30,31,30,31,31,30,31,30,31],null);var dim_leap=new cljs.core.PersistentVector(null,13,5,cljs.core.PersistentVector.EMPTY_NODE,[null,31,29,31,30,31,30,31,31,30,31,30,31],null);return function(dim_norm,dim_leap){return function(month,leap_year_QMARK_){return cljs.core.get.call(null,cljs.core.truth_(leap_year_QMARK_)?dim_leap:dim_norm,month)}}(dim_norm,dim_leap)}();
cljs.reader.timestamp_regex=/(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;cljs.reader.parse_int=function cljs$reader$parse_int(s){var n=parseInt(s,10);if(cljs.core.not.call(null,isNaN(n)))return n;else return null};
cljs.reader.check=function cljs$reader$check(low,n,high,msg){if(low<=n&&n<=high);else throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg)," Failed:  ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(low),"\x3c\x3d",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),"\x3c\x3d",cljs.core.str.cljs$core$IFn$_invoke$arity$1(high)].join(""));return n};
cljs.reader.parse_and_validate_timestamp=function cljs$reader$parse_and_validate_timestamp(s){var vec__2427=cljs.core.re_matches.call(null,cljs.reader.timestamp_regex,s);var _=cljs.core.nth.call(null,vec__2427,0,null);var years=cljs.core.nth.call(null,vec__2427,1,null);var months=cljs.core.nth.call(null,vec__2427,2,null);var days=cljs.core.nth.call(null,vec__2427,3,null);var hours=cljs.core.nth.call(null,vec__2427,4,null);var minutes=cljs.core.nth.call(null,vec__2427,5,null);var seconds=cljs.core.nth.call(null,
vec__2427,6,null);var fraction=cljs.core.nth.call(null,vec__2427,7,null);var offset_sign=cljs.core.nth.call(null,vec__2427,8,null);var offset_hours=cljs.core.nth.call(null,vec__2427,9,null);var offset_minutes=cljs.core.nth.call(null,vec__2427,10,null);var v=vec__2427;if(cljs.core.not.call(null,v))throw new Error(["Unrecognized date/time syntax: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""));else{var years__$1=cljs.reader.parse_int.call(null,years);var months__$1=function(){var or__4131__auto__=
cljs.reader.parse_int.call(null,months);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 1}();var days__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,days);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 1}();var hours__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,hours);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 0}();var minutes__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,
minutes);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 0}();var seconds__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,seconds);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 0}();var fraction__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,cljs.reader.zero_fill_right_and_truncate.call(null,fraction,3));if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 0}();var offset_sign__$1=cljs.core._EQ_.call(null,
offset_sign,"-")?-1:1;var offset_hours__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,offset_hours);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 0}();var offset_minutes__$1=function(){var or__4131__auto__=cljs.reader.parse_int.call(null,offset_minutes);if(cljs.core.truth_(or__4131__auto__))return or__4131__auto__;else return 0}();var offset=offset_sign__$1*(offset_hours__$1*60+offset_minutes__$1);return new cljs.core.PersistentVector(null,8,5,cljs.core.PersistentVector.EMPTY_NODE,
[years__$1,cljs.reader.check.call(null,1,months__$1,12,"timestamp month field must be in range 1..12"),cljs.reader.check.call(null,1,days__$1,cljs.reader.days_in_month.call(null,months__$1,cljs.reader.leap_year_QMARK_.call(null,years__$1)),"timestamp day field must be in range 1..last day in month"),cljs.reader.check.call(null,0,hours__$1,23,"timestamp hour field must be in range 0..23"),cljs.reader.check.call(null,0,minutes__$1,59,"timestamp minute field must be in range 0..59"),cljs.reader.check.call(null,
0,seconds__$1,cljs.core._EQ_.call(null,minutes__$1,59)?60:59,"timestamp second field must be in range 0..60"),cljs.reader.check.call(null,0,fraction__$1,999,"timestamp millisecond field must be in range 0..999"),offset],null)}};
cljs.reader.parse_timestamp=function cljs$reader$parse_timestamp(ts){var temp__5733__auto__=cljs.reader.parse_and_validate_timestamp.call(null,ts);if(cljs.core.truth_(temp__5733__auto__)){var vec__2430=temp__5733__auto__;var years=cljs.core.nth.call(null,vec__2430,0,null);var months=cljs.core.nth.call(null,vec__2430,1,null);var days=cljs.core.nth.call(null,vec__2430,2,null);var hours=cljs.core.nth.call(null,vec__2430,3,null);var minutes=cljs.core.nth.call(null,vec__2430,4,null);var seconds=cljs.core.nth.call(null,
vec__2430,5,null);var ms=cljs.core.nth.call(null,vec__2430,6,null);var offset=cljs.core.nth.call(null,vec__2430,7,null);return new Date(Date.UTC(years,months-1,days,hours,minutes,seconds,ms)-offset*60*1E3)}else throw new Error(["Unrecognized date/time syntax: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts)].join(""));};
cljs.reader.read_date=function cljs$reader$read_date(s){if(typeof s==="string")return cljs.reader.parse_timestamp.call(null,s);else throw new Error("Instance literal expects a string for its timestamp.");};cljs.reader.read_queue=function cljs$reader$read_queue(elems){if(cljs.core.vector_QMARK_.call(null,elems))return cljs.core.into.call(null,cljs.core.PersistentQueue.EMPTY,elems);else throw new Error("Queue literal expects a vector for its elements.");};
cljs.reader.read_js=function cljs$reader$read_js(form){if(cljs.core.vector_QMARK_.call(null,form)){var arr=[];var seq__2433_2455=cljs.core.seq.call(null,form);var chunk__2434_2456=null;var count__2435_2457=0;var i__2436_2458=0;while(true){if(i__2436_2458<count__2435_2457){var x_2459=cljs.core._nth.call(null,chunk__2434_2456,i__2436_2458);arr.push(x_2459);var G__2460=seq__2433_2455;var G__2461=chunk__2434_2456;var G__2462=count__2435_2457;var G__2463=i__2436_2458+1;seq__2433_2455=G__2460;chunk__2434_2456=
G__2461;count__2435_2457=G__2462;i__2436_2458=G__2463;continue}else{var temp__5735__auto___2464=cljs.core.seq.call(null,seq__2433_2455);if(temp__5735__auto___2464){var seq__2433_2465__$1=temp__5735__auto___2464;if(cljs.core.chunked_seq_QMARK_.call(null,seq__2433_2465__$1)){var c__4550__auto___2466=cljs.core.chunk_first.call(null,seq__2433_2465__$1);var G__2467=cljs.core.chunk_rest.call(null,seq__2433_2465__$1);var G__2468=c__4550__auto___2466;var G__2469=cljs.core.count.call(null,c__4550__auto___2466);
var G__2470=0;seq__2433_2455=G__2467;chunk__2434_2456=G__2468;count__2435_2457=G__2469;i__2436_2458=G__2470;continue}else{var x_2471=cljs.core.first.call(null,seq__2433_2465__$1);arr.push(x_2471);var G__2472=cljs.core.next.call(null,seq__2433_2465__$1);var G__2473=null;var G__2474=0;var G__2475=0;seq__2433_2455=G__2472;chunk__2434_2456=G__2473;count__2435_2457=G__2474;i__2436_2458=G__2475;continue}}else;}break}return arr}else if(cljs.core.map_QMARK_.call(null,form)){var obj={};var seq__2439_2476=
cljs.core.seq.call(null,form);var chunk__2440_2477=null;var count__2441_2478=0;var i__2442_2479=0;while(true){if(i__2442_2479<count__2441_2478){var vec__2449_2480=cljs.core._nth.call(null,chunk__2440_2477,i__2442_2479);var k_2481=cljs.core.nth.call(null,vec__2449_2480,0,null);var v_2482=cljs.core.nth.call(null,vec__2449_2480,1,null);goog.object.set(obj,cljs.core.name.call(null,k_2481),v_2482);var G__2483=seq__2439_2476;var G__2484=chunk__2440_2477;var G__2485=count__2441_2478;var G__2486=i__2442_2479+
1;seq__2439_2476=G__2483;chunk__2440_2477=G__2484;count__2441_2478=G__2485;i__2442_2479=G__2486;continue}else{var temp__5735__auto___2487=cljs.core.seq.call(null,seq__2439_2476);if(temp__5735__auto___2487){var seq__2439_2488__$1=temp__5735__auto___2487;if(cljs.core.chunked_seq_QMARK_.call(null,seq__2439_2488__$1)){var c__4550__auto___2489=cljs.core.chunk_first.call(null,seq__2439_2488__$1);var G__2490=cljs.core.chunk_rest.call(null,seq__2439_2488__$1);var G__2491=c__4550__auto___2489;var G__2492=
cljs.core.count.call(null,c__4550__auto___2489);var G__2493=0;seq__2439_2476=G__2490;chunk__2440_2477=G__2491;count__2441_2478=G__2492;i__2442_2479=G__2493;continue}else{var vec__2452_2494=cljs.core.first.call(null,seq__2439_2488__$1);var k_2495=cljs.core.nth.call(null,vec__2452_2494,0,null);var v_2496=cljs.core.nth.call(null,vec__2452_2494,1,null);goog.object.set(obj,cljs.core.name.call(null,k_2495),v_2496);var G__2497=cljs.core.next.call(null,seq__2439_2488__$1);var G__2498=null;var G__2499=0;var G__2500=
0;seq__2439_2476=G__2497;chunk__2440_2477=G__2498;count__2441_2478=G__2499;i__2442_2479=G__2500;continue}}else;}break}return obj}else throw new Error(["JS literal expects a vector or map containing ","only string or unqualified keyword keys"].join(""));};cljs.reader.read_uuid=function cljs$reader$read_uuid(uuid){if(typeof uuid==="string")return cljs.core.uuid.call(null,uuid);else throw new Error("UUID literal expects a string as its representation.");};
cljs.reader._STAR_default_data_reader_fn_STAR_=cljs.core.atom.call(null,null);
cljs.reader._STAR_tag_table_STAR_=cljs.core.atom.call(null,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null,4,[new cljs.core.Symbol(null,"inst","inst",-2008473268,null),cljs.reader.read_date,new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),cljs.reader.read_uuid,new cljs.core.Symbol(null,"queue","queue",-1198599890,null),cljs.reader.read_queue,new cljs.core.Symbol(null,"js","js",-886355190,null),cljs.reader.read_js],null),cljs.core.PersistentArrayMap.EMPTY));
cljs.reader.read=function cljs$reader$read(var_args){var G__2502=arguments.length;switch(G__2502){case 1:return cljs.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;case 4:return cljs.reader.read.cljs$core$IFn$_invoke$arity$4(arguments[0],arguments[1],arguments[2],arguments[3]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
}};cljs.reader.read.cljs$core$IFn$_invoke$arity$1=function(reader){return cljs.tools.reader.edn.read.call(null,new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"readers","readers",-2118263030),cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),new cljs.core.Keyword(null,"default","default",-1987822328),cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_),new cljs.core.Keyword(null,"eof","eof",-489063237),null],null),reader)};
cljs.reader.read.cljs$core$IFn$_invoke$arity$2=function(p__2503,reader){var map__2504=p__2503;var map__2504__$1=(!(map__2504==null)?map__2504.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__2504.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__2504):map__2504;var opts=map__2504__$1;var eof=cljs.core.get.call(null,map__2504__$1,new cljs.core.Keyword(null,"eof","eof",-489063237));return cljs.tools.reader.edn.read.call(null,cljs.core.update.call(null,
cljs.core.merge.call(null,opts,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"default","default",-1987822328),cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_)],null)),new cljs.core.Keyword(null,"readers","readers",-2118263030),function(map__2504,map__2504__$1,opts,eof){return function(m){return cljs.core.merge.call(null,cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),m)}}(map__2504,map__2504__$1,opts,eof)),reader)};
cljs.reader.read.cljs$core$IFn$_invoke$arity$4=function(reader,eof_error_QMARK_,eof,opts){return cljs.tools.reader.edn.read.call(null,reader,eof_error_QMARK_,eof,cljs.core.update.call(null,cljs.core.merge.call(null,opts,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"default","default",-1987822328),cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_)],null)),new cljs.core.Keyword(null,"readers","readers",-2118263030),function(m){return cljs.core.merge.call(null,
cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),m)}))};cljs.reader.read.cljs$lang$maxFixedArity=4;
cljs.reader.read_string=function cljs$reader$read_string(var_args){var G__2508=arguments.length;switch(G__2508){case 1:return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1=function(s){return cljs.tools.reader.edn.read_string.call(null,new cljs.core.PersistentArrayMap(null,3,[new cljs.core.Keyword(null,"readers","readers",-2118263030),cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),new cljs.core.Keyword(null,"default","default",-1987822328),cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_),new cljs.core.Keyword(null,"eof","eof",-489063237),null],null),s)};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2=function(opts,s){return cljs.tools.reader.edn.read_string.call(null,cljs.core.update.call(null,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"default","default",-1987822328),cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_)],null),opts),new cljs.core.Keyword(null,"readers","readers",-2118263030),function(m){return cljs.core.merge.call(null,cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),
m)}),s)};cljs.reader.read_string.cljs$lang$maxFixedArity=2;cljs.reader.register_tag_parser_BANG_=function cljs$reader$register_tag_parser_BANG_(tag,f){var old_parser=cljs.core.get.call(null,cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),tag);cljs.core.swap_BANG_.call(null,cljs.reader._STAR_tag_table_STAR_,cljs.core.assoc,tag,f);return old_parser};
cljs.reader.deregister_tag_parser_BANG_=function cljs$reader$deregister_tag_parser_BANG_(tag){var old_parser=cljs.core.get.call(null,cljs.core.deref.call(null,cljs.reader._STAR_tag_table_STAR_),tag);cljs.core.swap_BANG_.call(null,cljs.reader._STAR_tag_table_STAR_,cljs.core.dissoc,tag);return old_parser};
cljs.reader.register_default_tag_parser_BANG_=function cljs$reader$register_default_tag_parser_BANG_(f){var old_parser=cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_);cljs.core.swap_BANG_.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_,function(old_parser){return function(_){return f}}(old_parser));return old_parser};
cljs.reader.deregister_default_tag_parser_BANG_=function cljs$reader$deregister_default_tag_parser_BANG_(){var old_parser=cljs.core.deref.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_);cljs.core.swap_BANG_.call(null,cljs.reader._STAR_default_data_reader_fn_STAR_,function(old_parser){return function(_){return null}}(old_parser));return old_parser};goog.provide("xtools.core");goog.require("cljs.core");goog.require("uix.core.alpha");goog.require("uix.dom.alpha");goog.require("cljs.reader");
if(goog.DEBUG){var fetch_update_2062=function(){return fetch("http://localhost:3000/should-reload").then(function(p1__2059_SHARP_){return p1__2059_SHARP_.text()}).then(function(p1__2060_SHARP_){if(cljs.core._EQ_.call(null,"true",p1__2060_SHARP_))return location.href=location.href;else return null}).catch(function(p1__2061_SHARP_){return console.error(p1__2061_SHARP_)})};setInterval(fetch_update_2062,5E3)}else;
xtools.core.eval_js=function xtools$core$eval_js(var_args){var G__2064=arguments.length;switch(G__2064){case 1:return xtools.core.eval_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);break;case 2:return xtools.core.eval_js.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);break;default:throw new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));}};
xtools.core.eval_js.cljs$core$IFn$_invoke$arity$1=function(s){return xtools.core.eval_js.call(null,s,null)};xtools.core.eval_js.cljs$core$IFn$_invoke$arity$2=function(s,f){return chrome.devtools.inspectedWindow.eval(s,f)};xtools.core.eval_js.cljs$lang$maxFixedArity=2;xtools.core.eval_js.call(null,"window.xframe.core.alpha.devtools_hook();");
xtools.core.state=cljs.core.atom.call(null,new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"subscriptions","subscriptions",1250949776),cljs.core.PersistentVector.EMPTY],null));
xtools.core.check_state=function xtools$core$check_state(){return xtools.core.eval_js.call(null,"window.__XTOOLS_HOOK__",function(d){cljs.core.swap_BANG_.call(null,xtools.core.state,cljs.core.assoc,new cljs.core.Keyword(null,"subscriptions","subscriptions",1250949776),cljs.reader.read_string.call(null,d.subscriptions));return cljs.core.swap_BANG_.call(null,xtools.core.state,cljs.core.assoc,new cljs.core.Keyword(null,"refs","refs",-1560051448),d.refs)})};xtools.core.check_state.call(null);
setInterval(xtools.core.check_state,5E3);xtools.core.enabled=true;goog.exportSymbol("xtools.core.enabled",xtools.core.enabled);
xtools.core.assoc_state_BANG_=function xtools$core$assoc_state_BANG_(var_args){var args__4736__auto__=[];var len__4730__auto___2067=arguments.length;var i__4731__auto___2068=0;while(true){if(i__4731__auto___2068<len__4730__auto___2067){args__4736__auto__.push(arguments[i__4731__auto___2068]);var G__2069=i__4731__auto___2068+1;i__4731__auto___2068=G__2069;continue}else;break}var argseq__4737__auto__=0<args__4736__auto__.length?new cljs.core.IndexedSeq(args__4736__auto__.slice(0),0,null):null;return xtools.core.assoc_state_BANG_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__)};
goog.exportSymbol("xtools.core.assoc_state_BANG_",xtools.core.assoc_state_BANG_);xtools.core.assoc_state_BANG_.cljs$core$IFn$_invoke$arity$variadic=function(args){return cljs.core.apply.call(null,cljs.core.swap_BANG_,xtools.core.state,cljs.core.assoc,args)};xtools.core.assoc_state_BANG_.cljs$lang$maxFixedArity=0;xtools.core.assoc_state_BANG_.cljs$lang$applyTo=function(seq2066){var self__4718__auto__=this;return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null,seq2066))};
xtools.core.section_title=function xtools$core$section_title(text){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null,4,[new cljs.core.Keyword(null,"font-size","font-size",-1847940346),"13px",new cljs.core.Keyword(null,"text-transform","text-transform",1685000676),new cljs.core.Keyword(null,
"uppercase","uppercase",2080890922),new cljs.core.Keyword(null,"font-weight","font-weight",2085804583),600,new cljs.core.Keyword(null,"margin","margin",-995903681),"8px 0"],null)],null),text],null)};
xtools.core.root=function xtools$core$root(p__2070){var map__2071=p__2070;var map__2071__$1=(!(map__2071==null)?map__2071.cljs$lang$protocol_mask$partition0$&64||cljs.core.PROTOCOL_SENTINEL===map__2071.cljs$core$ISeq$?true:false:false)?cljs.core.apply.call(null,cljs.core.hash_map,map__2071):map__2071;var subscriptions=cljs.core.get.call(null,map__2071__$1,new cljs.core.Keyword(null,"subscriptions","subscriptions",1250949776));var refs=cljs.core.get.call(null,map__2071__$1,new cljs.core.Keyword(null,
"refs","refs",-1560051448));alert(refs);return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[xtools.core.section_title,"Registered subscriptions"],null),function(){var iter__4523__auto__=function(map__2071,map__2071__$1,subscriptions,refs){return function xtools$core$root_$_iter__2073(s__2074){return new cljs.core.LazySeq(null,function(map__2071,
map__2071__$1,subscriptions,refs){return function(){var s__2074__$1=s__2074;while(true){var temp__5735__auto__=cljs.core.seq.call(null,s__2074__$1);if(temp__5735__auto__){var s__2074__$2=temp__5735__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__2074__$2)){var c__4521__auto__=cljs.core.chunk_first.call(null,s__2074__$2);var size__4522__auto__=cljs.core.count.call(null,c__4521__auto__);var b__2076=cljs.core.chunk_buffer.call(null,size__4522__auto__);if(function(){var i__2075=0;while(true){if(i__2075<
size__4522__auto__){var s=cljs.core._nth.call(null,c__4521__auto__,i__2075);cljs.core.chunk_append.call(null,b__2076,cljs.core.with_meta(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"div","div",1057191632),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)],null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"key","key",-1516042587),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)],null)));var G__2077=i__2075+1;i__2075=G__2077;
continue}else return true;break}}())return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__2076),xtools$core$root_$_iter__2073.call(null,cljs.core.chunk_rest.call(null,s__2074__$2)));else return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__2076),null)}else{var s=cljs.core.first.call(null,s__2074__$2);return cljs.core.cons.call(null,cljs.core.with_meta(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"div","div",1057191632),
cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)],null),new cljs.core.PersistentArrayMap(null,1,[new cljs.core.Keyword(null,"key","key",-1516042587),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)],null)),xtools$core$root_$_iter__2073.call(null,cljs.core.rest.call(null,s__2074__$2)))}}else return null;break}}}(map__2071,map__2071__$1,subscriptions,refs),null,null)}}(map__2071,map__2071__$1,subscriptions,refs);return iter__4523__auto__.call(null,subscriptions)}()],null)};
cljs.core.add_watch.call(null,xtools.core.state,new cljs.core.Keyword("xtools.core","state","xtools.core/state",1620961751),function(_,___$1,o,n){if(cljs.core.not_EQ_.call(null,o,n))return uix.dom.alpha.render.call(null,new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[xtools.core.root,n],null),root);else return null});
uix.dom.alpha.render.call(null,new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[xtools.core.root,cljs.core.deref.call(null,xtools.core.state)],null),root);